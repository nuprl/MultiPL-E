name: HumanEval_100_make_a_pile
language: julia
results:
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2*n]\n    else\n\
    \        return [n] .+ [1:2:2*n]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpca5nvslb.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpca5nvslb.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmpca5nvslb.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpca5nvslb.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpca5nvslb.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n < 1\n        return\
    \ []\n    end\n    if n == 1\n        return [1]\n    end\n    if n == 2\n   \
    \     return [2, 3]\n    end\n    if n == 3\n        return [3, 5, 7]\n    end\n\
    \    if n == 4\n        return [4, 6, 8, 10]\n    end\n    if n == 5\n       \
    \ return [5, 7, 9, 11, 13]\n    end\n    if n == 6\n        return [6, 8, 10,\
    \ 12, 14, 16]\n    end\n    if n == 7\n        return [7, 9, 11, 13, 15, 17, 19]\n\
    \    end\n    if n == 8\n        return [8, 10, 12, 14, 16, 18, 20, 22]\n    end\n\
    \    if n == 9\n        return [9, 11, 13, 15, 17, 19, 21, 23, 25]\n    end\n\
    \    if n == 10\n        return [10, 12, 14, 16, 18, 20, 22, 24, 26, 28]\n   \
    \ end\n    if n == 11\n        return [11, 13, 15, 17, 19, 21, 23, 25, 27, 29,\
    \ 31]\n    end\n    if n == 12\n        return [12, 14, 16, 18, 20, 22, 24, 26,\
    \ 28, 30, 32, 34]\n    end\n    if n == 13\n        return [13, 15, 17, 19, 21,\
    \ 23, 25, 27, 29, 31, 33, 35, 37]\n    end\n    if n == 14\n        return [14,\
    \ 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40]\n    end\n    if n == 15\n\
    \        return [15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43]\n\
    \    end\n    if n == 16\n        return [16, 18, 20, 22, 24, 26, 28, 30, 32,\
    \ 34, 36, 38, 40, 42, 44, 46]\n    end\n    if n == 17\n        return [17, 19,\
    \ 21, 23, 25\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdfn_xh3x.jl:68\nin expression starting at\
    \ /tmp/tmpdfn_xh3x.jl:68\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)]\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpulufs748.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpulufs748.jl:0\\\
    n   [2] make_a_pile(n::Int64) (repeats 52339 times)\\n     @ Main /tmp/tmpulufs748.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmpulufs748.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpulufs748.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpulufs748.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmpulufs748.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52338 times)\\n     @ Main /tmp/tmpulufs748.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpulufs748.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmpulufs748.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpulufs748.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n + 2)...]\n\
    \    else\n        return [n] .+ [make_a_pile(n + 1)...]\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwosdqjvs.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n  \
    \ [2] make_a_pile(n::Int64) (repeats 29074 times)\\n     @ Main /tmp/tmpwosdqjvs.jl:19\\\
    n   [3] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpwosdqjvs.jl:21\\n   [4] macro\
    \ expansion\\n     @ /tmp/tmpwosdqjvs.jl:29 [inlined]\\n   [5] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpwosdqjvs.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpwosdqjvs.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29075 times)\\n     @ Main /tmp/tmpwosdqjvs.jl:19\\n   [3] macro expansion\\\
    n     @ /tmp/tmpwosdqjvs.jl:30 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwosdqjvs.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpwosdqjvs.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29074 times)\\n     @ Main /tmp/tmpwosdqjvs.jl:19\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpwosdqjvs.jl:21\\n   [4] macro expansion\\n     @ /tmp/tmpwosdqjvs.jl:31\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpwosdqjvs.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpwosdqjvs.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] "
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)]\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8tx9kr6b.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp8tx9kr6b.jl:0\\\
    n   [2] make_a_pile(n::Int64) (repeats 52335 times)\\n     @ Main /tmp/tmp8tx9kr6b.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmp8tx9kr6b.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8tx9kr6b.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp8tx9kr6b.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmp8tx9kr6b.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52334 times)\\n     @ Main /tmp/tmp8tx9kr6b.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmp8tx9kr6b.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmp8tx9kr6b.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp8tx9kr6b.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return vcat(make_a_pile(n-1), [n+1])\n\
    \    else\n        return vcat(make_a_pile(n-1), [n+2])\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpskp6qibl.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 3, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpskp6qibl.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpskp6qibl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpskp6qibl.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 3, 5, 5] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpskp6qibl.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpskp6qibl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpskp6qibl.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 3, 5, 5, 7] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpskp6qibl.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpskp6qibl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpskp6qibl.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 3, 5, 5, 7, 7] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpskp6qibl.jl:32 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpskp6qibl.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpskp6qibl.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [1, 3, 5, 5, 7, 7, 9, 9] == [8, 10, 12, 14,\
    \ 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpskp6qibl.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpskp6qibl.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpskp6qibl.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = [n]\n    while\
    \ n > 1\n        n = n % 2 == 0 ? n - 1 : n + 1\n        push!(pile, n)\n    end\n\
    \    return pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(result, n)\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvb4xjeb3.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpvb4xjeb3.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvb4xjeb3.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvb4xjeb3.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpvb4xjeb3.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvb4xjeb3.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvb4xjeb3.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpvb4xjeb3.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvb4xjeb3.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvb4xjeb3.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpvb4xjeb3.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvb4xjeb3.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvb4xjeb3.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvb4xjeb3.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvb4xjeb3.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvb4xjeb3.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvnri9xhn.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array\
    \ at array.jl:532\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpvnri9xhn.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpvnri9xhn.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpvnri9xhn.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpvnri9xhn.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Vector{Int64}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpvnri9xhn.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpvnri9xhn.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpvnri9xhn.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpvnri9xhn.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  MethodError: Cannot `c"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] > 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3lnvgu_z.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3lnvgu_z.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3lnvgu_z.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3lnvgu_z.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3lnvgu_z.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3lnvgu_z.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3lnvgu_z.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3lnvgu_z.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3lnvgu_z.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3lnvgu_z.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp3lnvgu_z.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3lnvgu_z.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp3lnvgu_z.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3lnvgu_z.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3lnvgu_z.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3lnvgu_z.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2*n]\n    else\n\
    \        return [n] .+ [1:2:2*n]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpx9j25ag1.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpx9j25ag1.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmpx9j25ag1.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpx9j25ag1.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpx9j25ag1.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2*n]\n    else\n\
    \        return [n] .+ [1:2:2*n]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphqfss95v.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmphqfss95v.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmphqfss95v.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmphqfss95v.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmphqfss95v.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n; make_a_pile(n+1)]\n    else\n\
    \        return [n; make_a_pile(n+2)]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp21ph0h7d.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp21ph0h7d.jl:14\\\
    n   [2] make_a_pile(n::Int64) (repeats 52328 times)\\n     @ Main /tmp/tmp21ph0h7d.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmp21ph0h7d.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp21ph0h7d.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp21ph0h7d.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmp21ph0h7d.jl:14\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52327 times)\\n     @ Main /tmp/tmp21ph0h7d.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmp21ph0h7d.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmp21ph0h7d.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp21ph0h7d.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp21ph0h7d.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp21ph0h7d.jl:14\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52328 times)\\n     @ Main /tmp/tmp21ph0h7d.jl:21\\n   [3] macro expansion\\\
    n     @ /tmp/tmp21ph0h7d.jl:31 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp21ph0h7d.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = [n]\n    while\
    \ levels[end] != 1\n        if levels[end] % 2 == 0\n            push!(levels,\
    \ levels[end] - 1)\n        else\n            push!(levels, levels[end] - 2)\n\
    \        end\n    end\n    return levels\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnqs67vu0.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnqs67vu0.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnqs67vu0.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnqs67vu0.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnqs67vu0.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnqs67vu0.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnqs67vu0.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpnqs67vu0.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnqs67vu0.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnqs67vu0.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpnqs67vu0.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnqs67vu0.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpnqs67vu0.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnqs67vu0.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnqs67vu0.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnqs67vu0.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2n]\n    else\n\
    \        return [n] .+ [1:2:2n]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpc6ab138w.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpc6ab138w.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmpc6ab138w.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpc6ab138w.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpc6ab138w.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)]\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp717pvxpf.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp717pvxpf.jl:0\\\
    n   [2] make_a_pile(n::Int64) (repeats 52329 times)\\n     @ Main /tmp/tmp717pvxpf.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmp717pvxpf.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp717pvxpf.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp717pvxpf.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmp717pvxpf.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52328 times)\\n     @ Main /tmp/tmp717pvxpf.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmp717pvxpf.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmp717pvxpf.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp717pvxpf.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp717pvxpf.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp717pvxpf.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52329 times)\\n     @ Main /tmp/tmp717pvxpf.jl:21\\n   [3] macro expansion\\\
    n     @ /tmp/tmp717pvxpf.jl:31 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp717pvxpf.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n; make_a_pile(n+1)]\n    else\n\
    \        return [n; make_a_pile(n+2)]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpr20o2zz6.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64) (repeats 52339 times)\\n     @ Main\
    \ /tmp/tmpr20o2zz6.jl:21\\n   [2] macro expansion\\n     @ /tmp/tmpr20o2zz6.jl:29\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpr20o2zz6.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpr20o2zz6.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64) (repeats 52338 times)\\n     @ Main /tmp/tmpr20o2zz6.jl:21\\\
    n   [2] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpr20o2zz6.jl:19\\n   [3] macro\
    \ expansion\\n     @ /tmp/tmpr20o2zz6.jl:30 [inlined]\\n   [4] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpr20o2zz6.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] > 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzdsmi757.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzdsmi757.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzdsmi757.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpzdsmi757.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzdsmi757.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzdsmi757.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpzdsmi757.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzdsmi757.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzdsmi757.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpzdsmi757.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpzdsmi757.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzdsmi757.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpzdsmi757.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzdsmi757.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzdsmi757.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzdsmi757.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # Initialize the vector\
    \ with the first level\n    pile = [n]\n    # Loop until the last level has only\
    \ one stone\n    while pile[end] > 1\n        # If the last level has an odd number\
    \ of stones,\n        # the next level will have the next odd number of stones\n\
    \        if isodd(pile[end])\n            push!(pile, pile[end] + 2)\n       \
    \ # If the last level has an even number of stones,\n        # the next level\
    \ will have the next even number of stones\n        else\n            push!(pile,\
    \ pile[end] + 1)\n        end\n    end\n    return pile\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .* vcat(make_a_pile(n-1),\
    \ [n+2])\n    else\n        return [n] .* vcat(make_a_pile(n-1), [n+1])\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz7bk6ynd.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [6, 24, 12] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpz7bk6ynd.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz7bk6ynd.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpz7bk6ynd.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [24, 96, 48, 24] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpz7bk6ynd.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz7bk6ynd.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpz7bk6ynd.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [120, 480, 240, 120, 30] == [5, 7, 9, 11, 13]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpz7bk6ynd.jl:31 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz7bk6ynd.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpz7bk6ynd.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [720, 2880, 1440, 720, 180, 48] == [6, 8, 10, 12, 14,\
    \ 16]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz7bk6ynd.jl:32 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz7bk6ynd.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpz7bk6ynd.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [40320, 161280, 80640, 40320, 10080, 2688,\
    \ 448, 80] == [8, 10, 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpz7bk6ynd.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz7bk6ynd.jl:28\nT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz7bk6ynd.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)]\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5pkx46n2.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp5pkx46n2.jl:0\\\
    n   [2] make_a_pile(n::Int64) (repeats 52325 times)\\n     @ Main /tmp/tmp5pkx46n2.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmp5pkx46n2.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5pkx46n2.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n - 1) / 2\n        end\n        push!(stones, n)\n    end\n    return\
    \ stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvhn5i5qs.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpvhn5i5qs.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvhn5i5qs.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvhn5i5qs.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpvhn5i5qs.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvhn5i5qs.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvhn5i5qs.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpvhn5i5qs.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvhn5i5qs.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvhn5i5qs.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpvhn5i5qs.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvhn5i5qs.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvhn5i5qs.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvhn5i5qs.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvhn5i5qs.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvhn5i5qs.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(stones, n)\n    end\n    return\
    \ stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxqakj2tc.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpxqakj2tc.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxqakj2tc.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpxqakj2tc.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxqakj2tc.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxqakj2tc.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpxqakj2tc.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpxqakj2tc.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxqakj2tc.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpxqakj2tc.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpxqakj2tc.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxqakj2tc.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpxqakj2tc.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxqakj2tc.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxqakj2tc.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxqakj2tc.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] > 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjc6gxv9h.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjc6gxv9h.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjc6gxv9h.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpjc6gxv9h.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjc6gxv9h.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjc6gxv9h.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpjc6gxv9h.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjc6gxv9h.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjc6gxv9h.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpjc6gxv9h.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjc6gxv9h.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjc6gxv9h.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpjc6gxv9h.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjc6gxv9h.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjc6gxv9h.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjc6gxv9h.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n + 2)...]\n\
    \    else\n        return [n] .+ [make_a_pile(n + 1)...]\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpy6feu8wg.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n  \
    \ [2] make_a_pile(n::Int64) (repeats 29071 times)\\n     @ Main /tmp/tmpy6feu8wg.jl:19\\\
    n   [3] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpy6feu8wg.jl:21\\n   [4] macro\
    \ expansion\\n     @ /tmp/tmpy6feu8wg.jl:29 [inlined]\\n   [5] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpy6feu8wg.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpy6feu8wg.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29072 times)\\n     @ Main /tmp/tmpy6feu8wg.jl:19\\n   [3] macro expansion\\\
    n     @ /tmp/tmpy6feu8wg.jl:30 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpy6feu8wg.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpy6feu8wg.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29071 times)\\n     @ Main /tmp/tmpy6feu8wg.jl:19\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpy6feu8wg.jl:21\\n   [4] macro expansion\\n     @ /tmp/tmpy6feu8wg.jl:31\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpy6feu8wg.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] != 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfqpr9ura.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfqpr9ura.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfqpr9ura.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpfqpr9ura.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfqpr9ura.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfqpr9ura.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpfqpr9ura.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpfqpr9ura.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfqpr9ura.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpfqpr9ura.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpfqpr9ura.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfqpr9ura.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpfqpr9ura.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfqpr9ura.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfqpr9ura.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfqpr9ura.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] > 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj5b02bcy.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpj5b02bcy.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj5b02bcy.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj5b02bcy.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpj5b02bcy.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj5b02bcy.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj5b02bcy.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpj5b02bcy.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj5b02bcy.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj5b02bcy.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpj5b02bcy.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj5b02bcy.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj5b02bcy.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpj5b02bcy.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj5b02bcy.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj5b02bcy.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(stones, n)\n    end\n    return\
    \ stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptkrypf1m.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmptkrypf1m.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptkrypf1m.jl:30\ntest set: Test\
    \ Failed at /tmp/tmptkrypf1m.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmptkrypf1m.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptkrypf1m.jl:30\ntest set: Test\
    \ Failed at /tmp/tmptkrypf1m.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmptkrypf1m.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptkrypf1m.jl:30\ntest set: Test\
    \ Failed at /tmp/tmptkrypf1m.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmptkrypf1m.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptkrypf1m.jl:30\ntest set: Test\
    \ Failed at /tmp/tmptkrypf1m.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptkrypf1m.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptkrypf1m.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptkrypf1m.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)]\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8vwycqjj.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp8vwycqjj.jl:0\\\
    n   [2] make_a_pile(n::Int64) (repeats 52325 times)\\n     @ Main /tmp/tmp8vwycqjj.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmp8vwycqjj.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8vwycqjj.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp8vwycqjj.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmp8vwycqjj.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52324 times)\\n     @ Main /tmp/tmp8vwycqjj.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmp8vwycqjj.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmp8vwycqjj.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp8vwycqjj.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2*n]\n    else\n\
    \        return [n] .+ [1:2:2*n]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmptax8uzdc.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmptax8uzdc.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmptax8uzdc.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmptax8uzdc.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmptax8uzdc.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2*n]\n    else\n\
    \        return [n] .+ [1:2:2*n]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1jhfrdm2.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp1jhfrdm2.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmp1jhfrdm2.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp1jhfrdm2.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp1jhfrdm2.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(levels, n)\n    end\n    return\
    \ levels\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuavj98m5.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpuavj98m5.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuavj98m5.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpuavj98m5.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpuavj98m5.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuavj98m5.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpuavj98m5.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpuavj98m5.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuavj98m5.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpuavj98m5.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpuavj98m5.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuavj98m5.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpuavj98m5.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpuavj98m5.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuavj98m5.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuavj98m5.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ make_a_pile(n - 1)\n\
    \    else\n        return [n] .+ make_a_pile(n - 2)\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp28ab_j7w.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [4] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp28ab_j7w.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp28ab_j7w.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp28ab_j7w.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp28ab_j7w.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp28ab_j7w.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp28ab_j7w.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp28ab_j7w.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp28ab_j7w.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp28ab_j7w.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp28ab_j7w.jl:32 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp28ab_j7w.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp28ab_j7w.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [24] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp28ab_j7w.jl:33 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp28ab_j7w.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp28ab_j7w.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2*n]\n    else\n\
    \        return [n] .+ [1:2:2*n]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpewvn2li0.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpewvn2li0.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmpewvn2li0.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpewvn2li0.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpewvn2li0.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2n-2]\n    else\n\
    \        return [n] .+ [1:2:2n-1]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpruzjuebo.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpruzjuebo.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmpruzjuebo.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpruzjuebo.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpruzjuebo.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = Vector{Int64}(undef,\
    \ n)\n    levels[1] = n\n    for i in 2:n\n        if levels[i-1] % 2 == 0\n \
    \           levels[i] = levels[i-1] + 2\n        else\n            levels[i] =\
    \ levels[i-1] + 1\n        end\n    end\n    return levels\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps6k8xj0s.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmps6k8xj0s.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps6k8xj0s.jl:30\ntest set: Test\
    \ Failed at /tmp/tmps6k8xj0s.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmps6k8xj0s.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps6k8xj0s.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps6k8xj0s.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return vcat(make_a_pile(n-1), [n+1])\n\
    \    else\n        return vcat(make_a_pile(n-1), [n+2])\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjvkjui3_.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 3, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpjvkjui3_.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjvkjui3_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpjvkjui3_.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 3, 5, 5] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjvkjui3_.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjvkjui3_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpjvkjui3_.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 3, 5, 5, 7] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpjvkjui3_.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjvkjui3_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpjvkjui3_.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 3, 5, 5, 7, 7] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjvkjui3_.jl:32 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjvkjui3_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpjvkjui3_.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [1, 3, 5, 5, 7, 7, 9, 9] == [8, 10, 12, 14,\
    \ 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjvkjui3_.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjvkjui3_.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjvkjui3_.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n < 1\n        error(\"\
    n must be a positive integer\")\n    end\n    pile = [n]\n    while n > 1\n  \
    \      if n % 2 == 0\n            n = n / 2\n        else\n            n = (n\
    \ + 1) / 2\n        end\n        push!(pile, n)\n    end\n    return pile\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9wcjevhe.jl:34\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp9wcjevhe.jl:34 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9wcjevhe.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp9wcjevhe.jl:35\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9wcjevhe.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9wcjevhe.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp9wcjevhe.jl:36\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp9wcjevhe.jl:36 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9wcjevhe.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp9wcjevhe.jl:37\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp9wcjevhe.jl:37 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9wcjevhe.jl:33\ntest set: Test\
    \ Failed at /tmp/tmp9wcjevhe.jl:38\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9wcjevhe.jl:38 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9wcjevhe.jl:33\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9wcjevhe.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .* vcat(make_a_pile(n-1),\
    \ [n+2])\n    else\n        return [n] .* vcat(make_a_pile(n-1), [n+1])\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr4i60lep.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [6, 24, 12] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpr4i60lep.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr4i60lep.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpr4i60lep.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [24, 96, 48, 24] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr4i60lep.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr4i60lep.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpr4i60lep.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [120, 480, 240, 120, 30] == [5, 7, 9, 11, 13]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpr4i60lep.jl:31 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr4i60lep.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpr4i60lep.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [720, 2880, 1440, 720, 180, 48] == [6, 8, 10, 12, 14,\
    \ 16]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr4i60lep.jl:32 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr4i60lep.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpr4i60lep.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [40320, 161280, 80640, 40320, 10080, 2688,\
    \ 448, 80] == [8, 10, 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpr4i60lep.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr4i60lep.jl:28\nT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr4i60lep.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .* vcat(make_a_pile(n-1),\
    \ [n+2])\n    else\n        return [n] .* vcat(make_a_pile(n-1), [n+1])\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp79413zur.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [6, 24, 12] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp79413zur.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp79413zur.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp79413zur.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [24, 96, 48, 24] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp79413zur.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp79413zur.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp79413zur.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [120, 480, 240, 120, 30] == [5, 7, 9, 11, 13]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp79413zur.jl:31 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp79413zur.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp79413zur.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [720, 2880, 1440, 720, 180, 48] == [6, 8, 10, 12, 14,\
    \ 16]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp79413zur.jl:32 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp79413zur.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp79413zur.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [40320, 161280, 80640, 40320, 10080, 2688,\
    \ 448, 80] == [8, 10, 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp79413zur.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp79413zur.jl:28\nT"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp79413zur.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = [n]\n    while\
    \ n > 1\n        n = n % 2 == 0 ? n - 1 : n + 1\n        push!(pile, n)\n    end\n\
    \    return pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    return [n] .+ [ifelse(n % 2 == 0, 2, 1) for i in 1:n-1]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaaqgwp7b.jl:25\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [4, 4] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpaaqgwp7b.jl:25 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaaqgwp7b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpaaqgwp7b.jl:26\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [6, 6, 6] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpaaqgwp7b.jl:26 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaaqgwp7b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpaaqgwp7b.jl:27\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [6, 6, 6, 6] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpaaqgwp7b.jl:27 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaaqgwp7b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpaaqgwp7b.jl:28\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [8, 8, 8, 8, 8] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpaaqgwp7b.jl:28 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaaqgwp7b.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpaaqgwp7b.jl:29\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [10, 10, 10, 10, 10, 10, 10] == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaaqgwp7b.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaaqgwp7b.jl:24\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaaqgwp7b.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # YOUR CODE HERE\n \
    \   return [n]\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo0ge2nn9.jl:23\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpo0ge2nn9.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo0ge2nn9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpo0ge2nn9.jl:24\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo0ge2nn9.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo0ge2nn9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpo0ge2nn9.jl:25\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpo0ge2nn9.jl:25 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo0ge2nn9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpo0ge2nn9.jl:26\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpo0ge2nn9.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo0ge2nn9.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpo0ge2nn9.jl:27\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpo0ge2nn9.jl:27 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo0ge2nn9.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo0ge2nn9.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2n]\n    else\n\
    \        return [n] .+ [1:2:2n]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwnumkv_s.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpwnumkv_s.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmpwnumkv_s.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpwnumkv_s.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpwnumkv_s.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = [n]\n    while\
    \ levels[end] > 1\n        if levels[end] % 2 == 0\n            push!(levels,\
    \ levels[end] - 1)\n        else\n            push!(levels, levels[end] - 2)\n\
    \        end\n    end\n    return levels\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpad87pmi3.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpad87pmi3.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpad87pmi3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpad87pmi3.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpad87pmi3.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpad87pmi3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpad87pmi3.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpad87pmi3.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpad87pmi3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpad87pmi3.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpad87pmi3.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpad87pmi3.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpad87pmi3.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpad87pmi3.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpad87pmi3.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpad87pmi3.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # Initialize the vector\n\
    \    vec = Vector{Int64}(undef, n)\n    # Fill the vector\n    for i in 1:n\n\
    \        if i == 1\n            vec[i] = n\n        elseif i % 2 == 0\n      \
    \      vec[i] = vec[i-1] + 2\n        else\n            vec[i] = vec[i-1] + 1\n\
    \        end\n    end\n    return vec\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpamdkkla2.jl:34\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 5, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpamdkkla2.jl:34 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpamdkkla2.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpamdkkla2.jl:35\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpamdkkla2.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpamdkkla2.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpamdkkla2.jl:36\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 7, 8, 10, 11] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpamdkkla2.jl:36 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpamdkkla2.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpamdkkla2.jl:37\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 9, 11, 12, 14] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpamdkkla2.jl:37 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpamdkkla2.jl:33\ntest set: Test\
    \ Failed at /tmp/tmpamdkkla2.jl:38\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 10, 11, 13, 14, 16, 17, 19] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpamdkkla2.jl:38\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpamdkkla2.jl:33\nTest Summary:\
    \ | Fail  Total\ntest set      | "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpamdkkla2.jl:31\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ make_a_pile(n+1)\n  \
    \  else\n        return [n] .+ make_a_pile(n-1)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp42pmdo1v.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp42pmdo1v.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp42pmdo1v.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp42pmdo1v.jl:21\\n\
    \  --- the last 2 lines are repeated 16355 more times ---\\n   [32714] macro expansion\\\
    n         @ /tmp/tmp42pmdo1v.jl:29 [inlined]\\n   [32715] macro expansion\\n \
    \        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmp42pmdo1v.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp42pmdo1v.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp42pmdo1v.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp42pmdo1v.jl:19\\n\
    \  --- the last 2 lines are repeated 16355 more times ---\\n   [32714] macro expansion\\\
    n         @ /tmp/tmp42pmdo1v.jl:30 [inlined]\\n   [32715] macro expansion\\n \
    \        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmp42pmdo1v.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp42pmdo1v.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp42pmdo1v.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp42pmdo1v.jl:21\\n\
    \  --- the last 2 lines are repeated 16355 more times ---\\n   [32714] macro expansion\\\
    n         @ /tmp/tmp42pmdo1v.jl:31 [inlined]\\n   [32715] macro expansion\\n \
    \        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpe_uoa3yx.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array\
    \ at array.jl:532\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpe_uoa3yx.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpe_uoa3yx.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpe_uoa3yx.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpe_uoa3yx.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Vector{Int64}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpe_uoa3yx.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpe_uoa3yx.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpe_uoa3yx.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpe_uoa3yx.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  MethodError: Cannot `c"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(result, n)\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2oa9tsm9.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp2oa9tsm9.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2oa9tsm9.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp2oa9tsm9.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp2oa9tsm9.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2oa9tsm9.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp2oa9tsm9.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp2oa9tsm9.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2oa9tsm9.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp2oa9tsm9.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp2oa9tsm9.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2oa9tsm9.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp2oa9tsm9.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2oa9tsm9.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2oa9tsm9.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2oa9tsm9.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2n]\n    else\n\
    \        return [n] .+ [1:2:2n]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmph511z874.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmph511z874.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmph511z874.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmph511z874.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmph511z874.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n + 2)]\n\
    \    else\n        return [n] .+ [make_a_pile(n + 1)]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwuyebxzj.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpwuyebxzj.jl:0\\\
    n   [2] make_a_pile(n::Int64) (repeats 52340 times)\\n     @ Main /tmp/tmpwuyebxzj.jl:19\\\
    n   [3] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpwuyebxzj.jl:21\\n   [4] macro\
    \ expansion\\n     @ /tmp/tmpwuyebxzj.jl:29 [inlined]\\n   [5] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpwuyebxzj.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpwuyebxzj.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmpwuyebxzj.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52341 times)\\n     @ Main /tmp/tmpwuyebxzj.jl:19\\n   [3] macro expansion\\\
    n     @ /tmp/tmpwuyebxzj.jl:30 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwuyebxzj.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(stones, n)\n    end\n    return\
    \ stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw1n1i85t.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpw1n1i85t.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw1n1i85t.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpw1n1i85t.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpw1n1i85t.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw1n1i85t.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpw1n1i85t.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpw1n1i85t.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw1n1i85t.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpw1n1i85t.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpw1n1i85t.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw1n1i85t.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpw1n1i85t.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpw1n1i85t.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw1n1i85t.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw1n1i85t.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .* make_a_pile(n - 1)\n\
    \    else\n        return [n] .* make_a_pile(n - 2)\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6373fuvc.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6373fuvc.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6373fuvc.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp6373fuvc.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [12] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp6373fuvc.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6373fuvc.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp6373fuvc.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [15] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6373fuvc.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6373fuvc.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp6373fuvc.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [90] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp6373fuvc.jl:32 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6373fuvc.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp6373fuvc.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [840] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp6373fuvc.jl:33 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6373fuvc.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6373fuvc.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)...]\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)...]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgnehj3sf.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n  \
    \ [2] make_a_pile(n::Int64) (repeats 29077 times)\\n     @ Main /tmp/tmpgnehj3sf.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmpgnehj3sf.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpgnehj3sf.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpgnehj3sf.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29076 times)\\n     @ Main /tmp/tmpgnehj3sf.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpgnehj3sf.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmpgnehj3sf.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpgnehj3sf.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpgnehj3sf.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29077 times)\\n     @ Main /tmp/tmpgnehj3sf.jl:21\\n   [3] macro expansion\\\
    n     @ /tmp/tmpgnehj3sf.jl:31 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpgnehj3sf.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] != 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo1l71ja2.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpo1l71ja2.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo1l71ja2.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpo1l71ja2.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpo1l71ja2.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo1l71ja2.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpo1l71ja2.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpo1l71ja2.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo1l71ja2.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpo1l71ja2.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpo1l71ja2.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo1l71ja2.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpo1l71ja2.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpo1l71ja2.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo1l71ja2.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo1l71ja2.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ make_a_pile(n/2)\n  \
    \  else\n        return [n] .+ make_a_pile(n+1)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5zwqzmm0.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching make_a_pile(::Float64)\\n  Closest candidates are:\\n    make_a_pile(!Matched::Int64)\
    \ at /tmp/tmp5zwqzmm0.jl:14\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n\
    \     @ Main /tmp/tmp5zwqzmm0.jl:19\\n   [2] make_a_pile(n::Int64)\\n     @ Main\
    \ /tmp/tmp5zwqzmm0.jl:21\\n   [3] macro expansion\\n     @ /tmp/tmp5zwqzmm0.jl:29\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5zwqzmm0.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp5zwqzmm0.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching make_a_pile(::Float64)\\\
    n  Closest candidates are:\\n    make_a_pile(!Matched::Int64) at /tmp/tmp5zwqzmm0.jl:14\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp5zwqzmm0.jl:19\\\
    n   [2] macro expansion\\n     @ /tmp/tmp5zwqzmm0.jl:30 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5zwqzmm0.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp5zwqzmm0.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  MethodError: no method matching make_a_pile(::Float64)\\\
    n  Closest candidates are:\\n    make_a_pile(!Matched::Int64) at /tmp/tmp5zwqzmm0.jl:14\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp5zwqzmm0.jl:19\\\
    n   [2] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp5zwqzmm0.jl:21\\n   [3] macro\
    \ expansion\\n     @ /tmp/tmp5zwqzmm0.jl:31 [inlined]\\n   [4] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5zwqzmm0.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp5zwqzmm0.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = Vector{Int64}(undef,\
    \ n)\n    stones[1] = n\n    for i in 2:n\n        if stones[i-1] % 2 == 0\n \
    \           stones[i] = stones[i-1] + 1\n        else\n            stones[i] =\
    \ stones[i-1] + 2\n        end\n    end\n    return stones\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfkuh8aso.jl:32\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpfkuh8aso.jl:32 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfkuh8aso.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpfkuh8aso.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpfkuh8aso.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfkuh8aso.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpfkuh8aso.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfkuh8aso.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfkuh8aso.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfkuh8aso.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)[1:end-1]...]\n\
    \    else\n        return [n] .+ [make_a_pile(n+1)[1:end-1]...]\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpam2ilvk7.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64) (repeats 26169 times)\\n     @ Main\
    \ ./array.jl:0\\n   [2] macro expansion\\n     @ /tmp/tmpam2ilvk7.jl:29 [inlined]\\\
    n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpam2ilvk7.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpam2ilvk7.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64) (repeats 26169 times)\\n     @ Main ./array.jl:0\\n  \
    \ [2] macro expansion\\n     @ /tmp/tmpam2ilvk7.jl:30 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpam2ilvk7.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpam2ilvk7.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64) (repeats 26169 times)\\n     @ Main ./array.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmpam2ilvk7.jl:31 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpam2ilvk7.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpam2ilvk7.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64) (repeats 26169 times)\\n     @ Main ./array.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmpam2ilvk7.jl:32 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpam2ilvk7.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n - 1\n        else\n        \
    \    n = n - 2\n        end\n        push!(levels, n)\n    end\n    return levels\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph42dd6zl.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmph42dd6zl.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph42dd6zl.jl:30\ntest set: Test\
    \ Failed at /tmp/tmph42dd6zl.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmph42dd6zl.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph42dd6zl.jl:30\ntest set: Test\
    \ Failed at /tmp/tmph42dd6zl.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmph42dd6zl.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph42dd6zl.jl:30\ntest set: Test\
    \ Failed at /tmp/tmph42dd6zl.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmph42dd6zl.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph42dd6zl.jl:30\ntest set: Test\
    \ Failed at /tmp/tmph42dd6zl.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmph42dd6zl.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph42dd6zl.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph42dd6zl.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] > 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqixwb51l.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqixwb51l.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqixwb51l.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpqixwb51l.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqixwb51l.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqixwb51l.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpqixwb51l.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpqixwb51l.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqixwb51l.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpqixwb51l.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpqixwb51l.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqixwb51l.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpqixwb51l.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqixwb51l.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqixwb51l.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqixwb51l.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # Your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvdfn0uzm.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array\
    \ at array.jl:532\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpvdfn0uzm.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpvdfn0uzm.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpvdfn0uzm.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpvdfn0uzm.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Vector{Int64}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpvdfn0uzm.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpvdfn0uzm.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpvdfn0uzm.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpvdfn0uzm.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  MethodError: Cannot `c"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)...]\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)...]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp654idkxf.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n  \
    \ [2] make_a_pile(n::Int64) (repeats 29078 times)\\n     @ Main /tmp/tmp654idkxf.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmp654idkxf.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp654idkxf.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp654idkxf.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29077 times)\\n     @ Main /tmp/tmp654idkxf.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmp654idkxf.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmp654idkxf.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp654idkxf.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp654idkxf.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29078 times)\\n     @ Main /tmp/tmp654idkxf.jl:21\\n   [3] macro expansion\\\
    n     @ /tmp/tmp654idkxf.jl:31 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp654idkxf.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpa_vm2r8x.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array\
    \ at array.jl:532\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpa_vm2r8x.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpa_vm2r8x.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpa_vm2r8x.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpa_vm2r8x.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Vector{Int64}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpa_vm2r8x.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpa_vm2r8x.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpa_vm2r8x.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpa_vm2r8x.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  MethodError: Cannot `c"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2*n]\n    else\n\
    \        return [n] .+ [1:2:2*n]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp9v11kylo.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp9v11kylo.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmp9v11kylo.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp9v11kylo.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp9v11kylo.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return vcat(make_a_pile(n-1), [n+1])\n\
    \    else\n        return vcat(make_a_pile(n-1), [n+2])\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpayx7hb7_.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 3, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpayx7hb7_.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpayx7hb7_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpayx7hb7_.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 3, 5, 5] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpayx7hb7_.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpayx7hb7_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpayx7hb7_.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 3, 5, 5, 7] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpayx7hb7_.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpayx7hb7_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpayx7hb7_.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 3, 5, 5, 7, 7] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpayx7hb7_.jl:32 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpayx7hb7_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpayx7hb7_.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [1, 3, 5, 5, 7, 7, 9, 9] == [8, 10, 12, 14,\
    \ 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpayx7hb7_.jl:33\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpayx7hb7_.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpayx7hb7_.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2n]\n    else\n\
    \        return [n] .+ [1:2:2n]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmph36klb4h.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmph36klb4h.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmph36klb4h.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmph36klb4h.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmph36klb4h.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = Vector{Int64}(undef,\
    \ n)\n    stones[1] = n\n    for i in 2:n\n        if stones[i-1] % 2 == 0\n \
    \           stones[i] = stones[i-1] + 1\n        else\n            stones[i] =\
    \ stones[i-1] + 2\n        end\n    end\n    return stones\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpow7te7ti.jl:32\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpow7te7ti.jl:32 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpow7te7ti.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpow7te7ti.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpow7te7ti.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpow7te7ti.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpow7te7ti.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpow7te7ti.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpow7te7ti.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpow7te7ti.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n < 1\n        error(\"\
    n must be a positive integer\")\n    end\n    if n == 1\n        return [1]\n\
    \    end\n    if n % 2 == 0\n        return [n; make_a_pile(n+1)]\n    else\n\
    \        return [n; make_a_pile(n+2)]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2z856hdu.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp2z856hdu.jl:14\\\
    n   [2] make_a_pile(n::Int64) (repeats 52338 times)\\n     @ Main /tmp/tmp2z856hdu.jl:24\\\
    n   [3] macro expansion\\n     @ /tmp/tmp2z856hdu.jl:32 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2z856hdu.jl:31\\ntest set:\
    \ Error During Test at /tmp/tmp2z856hdu.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmp2z856hdu.jl:14\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52337 times)\\n     @ Main /tmp/tmp2z856hdu.jl:24\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmp2z856hdu.jl:22\\n   [4] macro expansion\\n     @ /tmp/tmp2z856hdu.jl:33\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp2z856hdu.jl:31\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(result, n)\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6gg4_mo8.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp6gg4_mo8.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6gg4_mo8.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6gg4_mo8.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6gg4_mo8.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6gg4_mo8.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6gg4_mo8.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp6gg4_mo8.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6gg4_mo8.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6gg4_mo8.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp6gg4_mo8.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6gg4_mo8.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp6gg4_mo8.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6gg4_mo8.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6gg4_mo8.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6gg4_mo8.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .* make_a_pile(n - 1)\n\
    \    else\n        return [n] .* make_a_pile(n - 2)\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwgelajgb.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwgelajgb.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwgelajgb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpwgelajgb.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [12] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpwgelajgb.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwgelajgb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpwgelajgb.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [15] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwgelajgb.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwgelajgb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpwgelajgb.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [90] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpwgelajgb.jl:32 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwgelajgb.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpwgelajgb.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [840] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpwgelajgb.jl:33 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwgelajgb.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwgelajgb.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = Vector{Int64}(undef,\
    \ n)\n    pile[1] = n\n    for i in 2:n\n        pile[i] = pile[i-1] + 2*(i%2)\
    \ - 1\n    end\n    return pile\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb26orasu.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpb26orasu.jl:27 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb26orasu.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpb26orasu.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 4, 3] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpb26orasu.jl:28 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb26orasu.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpb26orasu.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 4, 5, 4, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpb26orasu.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb26orasu.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpb26orasu.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 6, 5, 6, 5] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpb26orasu.jl:30 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb26orasu.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpb26orasu.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 8, 7, 8, 7, 8, 7] == [8, 10, 12, 14,\
    \ 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb26orasu.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb26orasu.jl:26\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb26orasu.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpurgn_dd8.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array\
    \ at array.jl:532\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpurgn_dd8.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpurgn_dd8.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpurgn_dd8.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpurgn_dd8.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Vector{Int64}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpurgn_dd8.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpurgn_dd8.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpurgn_dd8.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpurgn_dd8.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  MethodError: Cannot `c"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvqxml7b2.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array\
    \ at array.jl:532\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpvqxml7b2.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpvqxml7b2.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpvqxml7b2.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpvqxml7b2.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Vector{Int64}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpvqxml7b2.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpvqxml7b2.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpvqxml7b2.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpvqxml7b2.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  MethodError: Cannot `c"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(stones, n)\n    end\n    return\
    \ stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy9nealdg.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpy9nealdg.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy9nealdg.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpy9nealdg.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpy9nealdg.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy9nealdg.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpy9nealdg.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpy9nealdg.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy9nealdg.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpy9nealdg.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpy9nealdg.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy9nealdg.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpy9nealdg.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpy9nealdg.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy9nealdg.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy9nealdg.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)[i]\
    \ for i in 1:length(make_a_pile(n+1))]\n    else\n        return [n] .+ [make_a_pile(n+2)[i]\
    \ for i in 1:length(make_a_pile(n+2))]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp18c65dm5.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n  \
    \ [2] make_a_pile(n::Int64) (repeats 37376 times)\\n     @ Main /tmp/tmp18c65dm5.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmp18c65dm5.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp18c65dm5.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp18c65dm5.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 37375 times)\\n     @ Main /tmp/tmp18c65dm5.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmp18c65dm5.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmp18c65dm5.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp18c65dm5.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2*n]\n    else\n\
    \        return [n] .+ [1:2:2*n]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4f5y6r20.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp4f5y6r20.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmp4f5y6r20.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp4f5y6r20.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp4f5y6r20.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2*n]\n    else\n\
    \        return [n] .+ [1:2:2*n]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvudlag_7.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpvudlag_7.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmpvudlag_7.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpvudlag_7.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpvudlag_7.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = Vector{Int64}(undef,\
    \ n)\n    stones[1] = n\n    for i in 2:n\n        stones[i] = stones[i-1] + (stones[i-1]\
    \ % 2 == 0 ? 2 : 1)\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5p_b_cc_.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp5p_b_cc_.jl:27 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5p_b_cc_.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp5p_b_cc_.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp5p_b_cc_.jl:29 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5p_b_cc_.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5p_b_cc_.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # YOUR CODE HERE\n \
    \   return [n]\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpghoflxyb.jl:23\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpghoflxyb.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpghoflxyb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpghoflxyb.jl:24\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpghoflxyb.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpghoflxyb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpghoflxyb.jl:25\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpghoflxyb.jl:25 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpghoflxyb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpghoflxyb.jl:26\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpghoflxyb.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpghoflxyb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpghoflxyb.jl:27\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpghoflxyb.jl:27 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpghoflxyb.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpghoflxyb.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)]\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpumsbonhr.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpumsbonhr.jl:0\\\
    n   [2] make_a_pile(n::Int64) (repeats 52321 times)\\n     @ Main /tmp/tmpumsbonhr.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmpumsbonhr.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpumsbonhr.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpumsbonhr.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmpumsbonhr.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52320 times)\\n     @ Main /tmp/tmpumsbonhr.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpumsbonhr.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmpumsbonhr.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpumsbonhr.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .* vcat(make_a_pile(n-1),\
    \ make_a_pile(n+1))\n    else\n        return [n] .* vcat(make_a_pile(n-1), make_a_pile(n+1))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpi7zocag2.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64) (repeats 32704 times)\\n     @ Main\
    \ /tmp/tmpi7zocag2.jl:0\\n   [2] macro expansion\\n     @ /tmp/tmpi7zocag2.jl:29\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpi7zocag2.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpi7zocag2.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   \
    \ [1] Array\\n      @ ./boot.jl:448 [inlined]\\n    [2] Array\\n      @ ./boot.jl:457\
    \ [inlined]\\n    [3] similar\\n      @ ./abstractarray.jl:785 [inlined]\\n  \
    \  [4] similar\\n      @ ./abstractarray.jl:784 [inlined]\\n    [5] _array_for\\\
    n      @ ./array.jl:672 [inlined]\\n    [6] _array_for\\n      @ ./array.jl:670\
    \ [inlined]\\n    [7] vect\\n      @ ./array.jl:108 [inlined]\\n    [8] make_a_pile(n::Int64)\\\
    n      @ Main /tmp/tmpi7zocag2.jl:16\\n    [9] make_a_pile(n::Int64) (repeats\
    \ 32703 times)\\n      @ Main /tmp/tmpi7zocag2.jl:0\\n   [10] macro expansion\\\
    n      @ /tmp/tmpi7zocag2.jl:30 [inlined]\\n   [11] macro expansion\\n      @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [12] top-level scope\\n      @ /tmp/tmpi7zocag2.jl:28\\ntest\
    \ set: Error During Test at /tmp/tmpi7zocag2.jl:31\\n  Test threw exception\\\
    n  Expression: candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64) (repeats 32704 times)\\n     @ Main /tmp/tmpi7zocag2.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmpi7zocag2.jl:31 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpi7zocag2.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] > 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxb1puh1d.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxb1puh1d.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxb1puh1d.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxb1puh1d.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxb1puh1d.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxb1puh1d.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxb1puh1d.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpxb1puh1d.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxb1puh1d.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxb1puh1d.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpxb1puh1d.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxb1puh1d.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxb1puh1d.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxb1puh1d.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxb1puh1d.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxb1puh1d.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # YOUR CODE HERE\n \
    \   return [n]\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphz_s909r.jl:23\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphz_s909r.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphz_s909r.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphz_s909r.jl:24\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphz_s909r.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphz_s909r.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphz_s909r.jl:25\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmphz_s909r.jl:25 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphz_s909r.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphz_s909r.jl:26\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmphz_s909r.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphz_s909r.jl:22\ntest set: Test\
    \ Failed at /tmp/tmphz_s909r.jl:27\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmphz_s909r.jl:27 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphz_s909r.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphz_s909r.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)...]\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)...]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpks8xhhxx.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpks8xhhxx.jl:14\\\
    n   [2] make_a_pile(n::Int64) (repeats 29077 times)\\n     @ Main /tmp/tmpks8xhhxx.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmpks8xhhxx.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpks8xhhxx.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpks8xhhxx.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmpks8xhhxx.jl:14\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29076 times)\\n     @ Main /tmp/tmpks8xhhxx.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpks8xhhxx.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmpks8xhhxx.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpks8xhhxx.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpks8xhhxx.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpks8xhhxx.jl:14\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29077 times)\\n     @ Main /tmp/tmpks8xhhxx.jl:21\\n   [3] macro expansion\\\
    n     @ /tmp/tmpks8xhhxx.jl:31 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpks8xhhxx.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2n]\n    else\n\
    \        return [n] .+ [1:2:2n]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2lg0466x.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp2lg0466x.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmp2lg0466x.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp2lg0466x.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp2lg0466x.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2n]\n    else\n\
    \        return [n] .+ [1:2:2n]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5sm4h4t3.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp5sm4h4t3.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmp5sm4h4t3.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmp5sm4h4t3.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp5sm4h4t3.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef,\
    \ n)\n    result[1] = n\n    for i in 2:n\n        if n % 2 == 0\n           \
    \ result[i] = result[i-1] + 2\n        else\n            result[i] = result[i-1]\
    \ + 1\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprg5jbz87.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmprg5jbz87.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprg5jbz87.jl:30\ntest set: Test\
    \ Failed at /tmp/tmprg5jbz87.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 7, 8, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmprg5jbz87.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprg5jbz87.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprg5jbz87.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # YOUR CODE HERE\n \
    \   return [n]\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpol6dqler.jl:23\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpol6dqler.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpol6dqler.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpol6dqler.jl:24\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpol6dqler.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpol6dqler.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpol6dqler.jl:25\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpol6dqler.jl:25 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpol6dqler.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpol6dqler.jl:26\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpol6dqler.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpol6dqler.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpol6dqler.jl:27\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpol6dqler.jl:27 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpol6dqler.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpol6dqler.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .* vcat(make_a_pile(n+1),\
    \ make_a_pile(n-1))\n    else\n        return [n] .* vcat(make_a_pile(n-1), make_a_pile(n+1))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvudauky7.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpvudauky7.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpvudauky7.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpvudauky7.jl:21\\n\
    \  --- the last 2 lines are repeated 16352 more times ---\\n   [32708] macro expansion\\\
    n         @ /tmp/tmpvudauky7.jl:29 [inlined]\\n   [32709] macro expansion\\n \
    \        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmpvudauky7.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpvudauky7.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpvudauky7.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpvudauky7.jl:19\\n\
    \  --- the last 2 lines are repeated 16352 more times ---\\n   [32708] macro expansion\\\
    n         @ /tmp/tmpvudauky7.jl:30 [inlined]\\n   [32709] macro expansion\\n \
    \        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .* vcat(make_a_pile(n-1),\
    \ make_a_pile(n+1))\n    else\n        return [n] .* vcat(make_a_pile(n-1), make_a_pile(n+1))\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp13q7nigy.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n    [1] Array\\n      @ ./boot.jl:448 [inlined]\\n    [2] Array\\\
    n      @ ./boot.jl:457 [inlined]\\n    [3] similar\\n      @ ./abstractarray.jl:785\
    \ [inlined]\\n    [4] similar\\n      @ ./abstractarray.jl:784 [inlined]\\n  \
    \  [5] _array_for\\n      @ ./array.jl:672 [inlined]\\n    [6] _array_for\\n \
    \     @ ./array.jl:670 [inlined]\\n    [7] vect\\n      @ ./array.jl:108 [inlined]\\\
    n    [8] make_a_pile(n::Int64)\\n      @ Main /tmp/tmp13q7nigy.jl:16\\n    [9]\
    \ make_a_pile(n::Int64) (repeats 32708 times)\\n      @ Main /tmp/tmp13q7nigy.jl:0\\\
    n   [10] macro expansion\\n      @ /tmp/tmp13q7nigy.jl:29 [inlined]\\n   [11]\
    \ macro expansion\\n      @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [12] top-level scope\\n      @ /tmp/tmp13q7nigy.jl:28\\ntest\
    \ set: Error During Test at /tmp/tmp13q7nigy.jl:30\\n  Test threw exception\\\
    n  Expression: candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64) (repeats 32709 times)\\n     @ Main /tmp/tmp13q7nigy.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmp13q7nigy.jl:30 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp13q7nigy.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp13q7nigy.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n    [1] Array\\n      @ ./boot.jl:448 [inlined]\\n    [2] Array\\n      @ ./boot.jl:457\
    \ [inlined]\\n    [3] similar\\n      @ ./abstractarray.jl:785 [inlined]\\n  \
    \  [4] similar\\n      @ ./abstractarray.jl:784 [inlined]\\n    [5] _array_for\\\
    n      @ ./array.jl:672 [inlined]\\n    [6] _array_for\\n      @ ./array.jl:670\
    \ [inlined]\\n    [7] vect\\n      @ ./array.jl:108 [inlined]\\n    [8] make_a_pile(n::Int64)\\\
    n      @ Main /tmp/tmp13q7nigy.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .* make_a_pile(n/2)\n  \
    \  else\n        return [n] .* make_a_pile(n*3+1)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpywujnxko.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching make_a_pile(::Float64)\\n  Closest candidates are:\\n    make_a_pile(!Matched::Int64)\
    \ at /tmp/tmpywujnxko.jl:14\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n\
    \     @ Main /tmp/tmpywujnxko.jl:19\\n   [2] make_a_pile(n::Int64)\\n     @ Main\
    \ /tmp/tmpywujnxko.jl:21\\n   [3] macro expansion\\n     @ /tmp/tmpywujnxko.jl:29\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpywujnxko.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpywujnxko.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching make_a_pile(::Float64)\\\
    n  Closest candidates are:\\n    make_a_pile(!Matched::Int64) at /tmp/tmpywujnxko.jl:14\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpywujnxko.jl:19\\\
    n   [2] macro expansion\\n     @ /tmp/tmpywujnxko.jl:30 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpywujnxko.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpywujnxko.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  MethodError: no method matching make_a_pile(::Float64)\\\
    n  Closest candidates are:\\n    make_a_pile(!Matched::Int64) at /tmp/tmpywujnxko.jl:14\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpywujnxko.jl:19\\\
    n   [2] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpywujnxko.jl:21\\n   [3] macro\
    \ expansion\\n     @ /tmp/tmpywujnxko.jl:31 [inlined]\\n   [4] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpywujnxko.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpywujnxko.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(pile, n)\n    end\n    return\
    \ pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0fmnvgy4.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0fmnvgy4.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0fmnvgy4.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp0fmnvgy4.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0fmnvgy4.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0fmnvgy4.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp0fmnvgy4.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0fmnvgy4.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0fmnvgy4.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp0fmnvgy4.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp0fmnvgy4.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0fmnvgy4.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp0fmnvgy4.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0fmnvgy4.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0fmnvgy4.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0fmnvgy4.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    return [n, n+2, n+4]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8dn27vie.jl:23\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 6, 8] == [4, 6, 8, 10]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp8dn27vie.jl:23 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8dn27vie.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8dn27vie.jl:24\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 7, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp8dn27vie.jl:24 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8dn27vie.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8dn27vie.jl:25\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 10] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp8dn27vie.jl:25 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8dn27vie.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp8dn27vie.jl:26\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 10, 12] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8dn27vie.jl:26 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8dn27vie.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    1     4      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 4 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8dn27vie.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = [n]\n    while\
    \ n != 1\n        if n % 2 == 0\n            n = n / 2\n        else\n       \
    \     n = (n + 1) / 2\n        end\n        push!(result, n)\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps9zrc8sz.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmps9zrc8sz.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps9zrc8sz.jl:30\ntest set: Test\
    \ Failed at /tmp/tmps9zrc8sz.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmps9zrc8sz.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps9zrc8sz.jl:30\ntest set: Test\
    \ Failed at /tmp/tmps9zrc8sz.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmps9zrc8sz.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps9zrc8sz.jl:30\ntest set: Test\
    \ Failed at /tmp/tmps9zrc8sz.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmps9zrc8sz.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps9zrc8sz.jl:30\ntest set: Test\
    \ Failed at /tmp/tmps9zrc8sz.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmps9zrc8sz.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps9zrc8sz.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps9zrc8sz.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(stones, n)\n    end\n    return\
    \ stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppdwch3ok.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmppdwch3ok.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppdwch3ok.jl:30\ntest set: Test\
    \ Failed at /tmp/tmppdwch3ok.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmppdwch3ok.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppdwch3ok.jl:30\ntest set: Test\
    \ Failed at /tmp/tmppdwch3ok.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmppdwch3ok.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppdwch3ok.jl:30\ntest set: Test\
    \ Failed at /tmp/tmppdwch3ok.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmppdwch3ok.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppdwch3ok.jl:30\ntest set: Test\
    \ Failed at /tmp/tmppdwch3ok.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppdwch3ok.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppdwch3ok.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppdwch3ok.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # Initialize the vector\n\
    \    pile = Vector{Int64}(undef, n)\n    # Fill the vector\n    for i in 1:n\n\
    \        pile[i] = n + 2*i\n    end\n    return pile\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu77nn53a.jl:28\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [5, 7, 9] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpu77nn53a.jl:28 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu77nn53a.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpu77nn53a.jl:29\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [6, 8, 10, 12] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu77nn53a.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu77nn53a.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpu77nn53a.jl:30\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [7, 9, 11, 13, 15] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpu77nn53a.jl:30 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu77nn53a.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpu77nn53a.jl:31\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [8, 10, 12, 14, 16, 18] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpu77nn53a.jl:31 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu77nn53a.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpu77nn53a.jl:32\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [10, 12, 14, 16, 18, 20, 22, 24] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu77nn53a.jl:32\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu77nn53a.jl:27\nTest Summary:\
    \ | Fail  Total\ntest set  "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu77nn53a.jl:25\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .* vcat(make_a_pile(n -\
    \ 1), make_a_pile(n - 2))\n    else\n        return [n] .* vcat(make_a_pile(n\
    \ - 1), make_a_pile(n - 3))\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjt8rrf_6.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64) (repeats 32703 times)\\n     @ Main\
    \ /tmp/tmpjt8rrf_6.jl:0\\n   [2] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpjt8rrf_6.jl:19\\\
    n   [3] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpjt8rrf_6.jl:0\\n   [4] macro\
    \ expansion\\n     @ /tmp/tmpjt8rrf_6.jl:29 [inlined]\\n   [5] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpjt8rrf_6.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpjt8rrf_6.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64) (repeats 32702 times)\\n     @ Main /tmp/tmpjt8rrf_6.jl:0\\\
    n   [2] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpjt8rrf_6.jl:19\\n   [3] make_a_pile(n::Int64)\
    \ (repeats 2 times)\\n     @ Main /tmp/tmpjt8rrf_6.jl:0\\n   [4] macro expansion\\\
    n     @ /tmp/tmpjt8rrf_6.jl:30 [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpjt8rrf_6.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpjt8rrf_6.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64) (repeats 32701 times)\\n     @ Main /tmp/tmpjt8rrf_6.jl:0\\\
    n   [2] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpjt8rrf_6.jl:19\\n   [3] make_a_pile(n::Int64)\
    \ (repeats 3 times)\\n     @ Main /tmp/tmpjt8rrf_6.jl:0\\n   [4] macro expansion\\\
    n     @ /tmp/tmpjt8rrf_6.jl:31 [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpjt8rrf_6.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwgxi2nk9.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array\
    \ at array.jl:532\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpwgxi2nk9.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpwgxi2nk9.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpwgxi2nk9.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpwgxi2nk9.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Vector{Int64}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpwgxi2nk9.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpwgxi2nk9.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpwgxi2nk9.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpwgxi2nk9.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  MethodError: Cannot `c"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n < 1\n        error(\"\
    n must be a positive integer\")\n    end\n    stones = [n]\n    while stones[end]\
    \ > 1\n        if stones[end] % 2 == 0\n            stones = [stones; stones[end]\
    \ - 1]\n        else\n            stones = [stones; stones[end] - 2]\n       \
    \ end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv3qgchnz.jl:33\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpv3qgchnz.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv3qgchnz.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpv3qgchnz.jl:34\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpv3qgchnz.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv3qgchnz.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpv3qgchnz.jl:35\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpv3qgchnz.jl:35 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv3qgchnz.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpv3qgchnz.jl:36\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpv3qgchnz.jl:36 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv3qgchnz.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpv3qgchnz.jl:37\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv3qgchnz.jl:37 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv3qgchnz.jl:32\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv3qgchnz.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n/2\n        else\n          \
    \  n = (n+1)/2\n        end\n        push!(pile, n)\n    end\n    return pile\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkvishfqh.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpkvishfqh.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkvishfqh.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpkvishfqh.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkvishfqh.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkvishfqh.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpkvishfqh.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpkvishfqh.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkvishfqh.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpkvishfqh.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpkvishfqh.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkvishfqh.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpkvishfqh.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkvishfqh.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkvishfqh.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkvishfqh.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)...]\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)...]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8r6b7otl.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n  \
    \ [2] make_a_pile(n::Int64) (repeats 29067 times)\\n     @ Main /tmp/tmp8r6b7otl.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmp8r6b7otl.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8r6b7otl.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp8r6b7otl.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29066 times)\\n     @ Main /tmp/tmp8r6b7otl.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmp8r6b7otl.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmp8r6b7otl.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp8r6b7otl.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2*n]\n    else\n\
    \        return [n] .+ [1:2:2*n]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpoyaxvhet.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpoyaxvhet.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmpoyaxvhet.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpoyaxvhet.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpoyaxvhet.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2*n]\n    else\n\
    \        return [n] .+ [1:2:2*n]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplfpfhx51.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmplfpfhx51.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmplfpfhx51.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmplfpfhx51.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmplfpfhx51.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)]\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpdktmwxqh.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpdktmwxqh.jl:0\\\
    n   [2] make_a_pile(n::Int64) (repeats 52332 times)\\n     @ Main /tmp/tmpdktmwxqh.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmpdktmwxqh.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpdktmwxqh.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n - 1\n        else\n        \
    \    n = n - 2\n        end\n        push!(stones, n)\n    end\n    return stones\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3kh5hcyg.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3kh5hcyg.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3kh5hcyg.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp3kh5hcyg.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3kh5hcyg.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3kh5hcyg.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp3kh5hcyg.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3kh5hcyg.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3kh5hcyg.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp3kh5hcyg.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp3kh5hcyg.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3kh5hcyg.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp3kh5hcyg.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3kh5hcyg.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3kh5hcyg.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3kh5hcyg.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(result, n)\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwzzz3m5c.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpwzzz3m5c.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwzzz3m5c.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpwzzz3m5c.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpwzzz3m5c.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwzzz3m5c.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpwzzz3m5c.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpwzzz3m5c.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwzzz3m5c.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpwzzz3m5c.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpwzzz3m5c.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwzzz3m5c.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpwzzz3m5c.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwzzz3m5c.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwzzz3m5c.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwzzz3m5c.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = zeros(Int64,\
    \ n)\n    result[1] = n\n    for i in 2:n\n        if n % 2 == 0\n           \
    \ result[i] = result[i-1] + 2\n        else\n            result[i] = result[i-1]\
    \ + 1\n        end\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpau6ktajg.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpau6ktajg.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpau6ktajg.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpau6ktajg.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 7, 8, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpau6ktajg.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpau6ktajg.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpau6ktajg.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    \"\"\"\n    Given a\
    \ positive integer n, you have to make a pile of n levels of stones.\n    The\
    \ first level has n stones.\n    The number of stones in the next level is:\n\
    \        - the next odd number if n is odd.\n        - the next even number if\
    \ n is even.\n    Return the number of stones in each level in a list, where element\
    \ at index\n    i represents the number of stones in the level (i+1).\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpblkq4k9m.jl:1\nin expression starting at /tmp/tmpblkq4k9m.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = Vector{Int64}(undef,\
    \ n)\n    pile[1] = n\n    for i in 2:n\n        if n % 2 == 0\n            pile[i]\
    \ = pile[i-1] + 2\n        else\n            pile[i] = pile[i-1] + 1\n       \
    \ end\n    end\n    return pile\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqsvehobf.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpqsvehobf.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqsvehobf.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpqsvehobf.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 7, 8, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpqsvehobf.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqsvehobf.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqsvehobf.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2n]\n    else\n\
    \        return [n] .+ [1:2:2n]\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwk_54wj3.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpwk_54wj3.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmpwk_54wj3.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpwk_54wj3.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpwk_54wj3.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)...];\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)...];\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpa2o89kl0.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n  \
    \ [2] make_a_pile(n::Int64) (repeats 29079 times)\\n     @ Main /tmp/tmpa2o89kl0.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmpa2o89kl0.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpa2o89kl0.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpa2o89kl0.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29078 times)\\n     @ Main /tmp/tmpa2o89kl0.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpa2o89kl0.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmpa2o89kl0.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpa2o89kl0.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpa2o89kl0.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29079 times)\\n     @ Main /tmp/tmpa2o89kl0.jl:21\\n   [3] macro expansion\\\
    n     @ /tmp/tmpa2o89kl0.jl:31 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpa2o89kl0.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpa2o89kl0.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29078 times)\\n     @ Main /tmp/tmpa"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] > 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjp_b1pyy.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjp_b1pyy.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjp_b1pyy.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpjp_b1pyy.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjp_b1pyy.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjp_b1pyy.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpjp_b1pyy.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjp_b1pyy.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjp_b1pyy.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpjp_b1pyy.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjp_b1pyy.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjp_b1pyy.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpjp_b1pyy.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjp_b1pyy.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjp_b1pyy.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjp_b1pyy.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(result, n)\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpelhmm2pz.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpelhmm2pz.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpelhmm2pz.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpelhmm2pz.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpelhmm2pz.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpelhmm2pz.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpelhmm2pz.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpelhmm2pz.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpelhmm2pz.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpelhmm2pz.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpelhmm2pz.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpelhmm2pz.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpelhmm2pz.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpelhmm2pz.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpelhmm2pz.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpelhmm2pz.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        return [n] .+ [ifelse(n % 2 == 0, 2, 1) for i in 1:n-1]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp90ivzsy2.jl:26\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [4, 4] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp90ivzsy2.jl:26 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp90ivzsy2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp90ivzsy2.jl:27\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [6, 6, 6] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp90ivzsy2.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp90ivzsy2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp90ivzsy2.jl:28\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [6, 6, 6, 6] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp90ivzsy2.jl:28 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp90ivzsy2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp90ivzsy2.jl:29\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [8, 8, 8, 8, 8] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp90ivzsy2.jl:29 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp90ivzsy2.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp90ivzsy2.jl:30\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [10, 10, 10, 10, 10, 10, 10] == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp90ivzsy2.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp90ivzsy2.jl:25\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp90ivzsy2.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # your code here\n \
    \   return [n]\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk84519pe.jl:23\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk84519pe.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk84519pe.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpk84519pe.jl:24\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpk84519pe.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk84519pe.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpk84519pe.jl:25\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpk84519pe.jl:25 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk84519pe.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpk84519pe.jl:26\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpk84519pe.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk84519pe.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpk84519pe.jl:27\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpk84519pe.jl:27 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk84519pe.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk84519pe.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(stones, n)\n    end\n    return\
    \ stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp5yyu12a.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpp5yyu12a.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp5yyu12a.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpp5yyu12a.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpp5yyu12a.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp5yyu12a.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpp5yyu12a.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpp5yyu12a.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp5yyu12a.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpp5yyu12a.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpp5yyu12a.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp5yyu12a.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpp5yyu12a.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpp5yyu12a.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp5yyu12a.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp5yyu12a.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(stones, n)\n    end\n    return\
    \ stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn9t2894q.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpn9t2894q.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn9t2894q.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpn9t2894q.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpn9t2894q.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn9t2894q.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpn9t2894q.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpn9t2894q.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn9t2894q.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpn9t2894q.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpn9t2894q.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn9t2894q.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpn9t2894q.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpn9t2894q.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn9t2894q.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn9t2894q.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n; make_a_pile(n+1)]\n\
    \        else\n            return [n; make_a_pile(n+2)]\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp657okhnq.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp657okhnq.jl:14\\\
    n   [2] make_a_pile(n::Int64) (repeats 52321 times)\\n     @ Main /tmp/tmp657okhnq.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmp657okhnq.jl:30 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp657okhnq.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmp657okhnq.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmp657okhnq.jl:14\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52320 times)\\n     @ Main /tmp/tmp657okhnq.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmp657okhnq.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmp657okhnq.jl:31\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmp657okhnq.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n+1)\n\
    \        else\n            return [n] .+ make_a_pile(n-1)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpllvowk_g.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpllvowk_g.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpllvowk_g.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpllvowk_g.jl:19\\n\
    \  --- the last 2 lines are repeated 16356 more times ---\\n   [32716] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpllvowk_g.jl:21\\n   [32717] macro expansion\\n      \
    \   @ /tmp/tmpllvowk_g.jl:30 [inlined]\\n   [32718] macro expansion\\n       \
    \  @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmpllvowk_g.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpllvowk_g.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpllvowk_g.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpllvowk_g.jl:21\\n\
    \  --- the last 2 lines are repeated 16356 more times ---\\n   [32716] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpllvowk_g.jl:19\\n   [32717] macro expansion\\n      \
    \   @ /tmp/tmpllvowk_g.jl:31 [inlined]\\n   [32718] macro expansion\\n       \
    \  @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmpllvowk_g.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpllvowk_g.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpllvowk_g.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpllvowk_g.jl:19\\n\
    \  --- the last 2 lines are repeated 16356 more times ---\\n   [32716] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpllvowk_g.jl:21\\n   [32717] macro expansion\\n      \
    \   @ /tmp/tmpllvowk_g.jl:32 [inlined]"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        return [n] .+ [ifelse(n % 2 == 0, 2, 1) for i in 1:n-1]\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzoekrofu.jl:26\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [4, 4] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzoekrofu.jl:26 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzoekrofu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzoekrofu.jl:27\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [6, 6, 6] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpzoekrofu.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzoekrofu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzoekrofu.jl:28\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [6, 6, 6, 6] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpzoekrofu.jl:28 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzoekrofu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzoekrofu.jl:29\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [8, 8, 8, 8, 8] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpzoekrofu.jl:29 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzoekrofu.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzoekrofu.jl:30\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [10, 10, 10, 10, 10, 10, 10] == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzoekrofu.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzoekrofu.jl:25\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzoekrofu.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = Vector{Int64}(undef,\
    \ n)\n    stones[1] = n\n    for i in 2:n\n        if stones[i-1] % 2 == 0\n \
    \           stones[i] = stones[i-1] + 1\n        else\n            stones[i] =\
    \ stones[i-1] + 2\n        end\n    end\n    return stones\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpep5jpcgn.jl:32\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpep5jpcgn.jl:32 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpep5jpcgn.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpep5jpcgn.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpep5jpcgn.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpep5jpcgn.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpep5jpcgn.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpep5jpcgn.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpep5jpcgn.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpep5jpcgn.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] > 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj9zft17k.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpj9zft17k.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj9zft17k.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj9zft17k.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpj9zft17k.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj9zft17k.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj9zft17k.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpj9zft17k.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj9zft17k.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj9zft17k.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpj9zft17k.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj9zft17k.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpj9zft17k.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpj9zft17k.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj9zft17k.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj9zft17k.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ [make_a_pile(n+1)]\n\
    \        else\n            return [n] .+ [make_a_pile(n+2)]\n        end\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpie1mkoui.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpie1mkoui.jl:0\\\
    n   [2] make_a_pile(n::Int64) (repeats 52336 times)\\n     @ Main /tmp/tmpie1mkoui.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmpie1mkoui.jl:30 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpie1mkoui.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpie1mkoui.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmpie1mkoui.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52335 times)\\n     @ Main /tmp/tmpie1mkoui.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpie1mkoui.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmpie1mkoui.jl:31\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpie1mkoui.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n/2)\n\
    \        else\n            return [n] .+ make_a_pile(n*3+1)\n        end\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpc8r7nct3.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching make_a_pile(::Float64)\\n  Closest candidates are:\\n    make_a_pile(!Matched::Int64)\
    \ at /tmp/tmpc8r7nct3.jl:14\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n\
    \     @ Main /tmp/tmpc8r7nct3.jl:19\\n   [2] make_a_pile(n::Int64)\\n     @ Main\
    \ /tmp/tmpc8r7nct3.jl:21\\n   [3] macro expansion\\n     @ /tmp/tmpc8r7nct3.jl:30\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpc8r7nct3.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpc8r7nct3.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching make_a_pile(::Float64)\\\
    n  Closest candidates are:\\n    make_a_pile(!Matched::Int64) at /tmp/tmpc8r7nct3.jl:14\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpc8r7nct3.jl:19\\\
    n   [2] macro expansion\\n     @ /tmp/tmpc8r7nct3.jl:31 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpc8r7nct3.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpc8r7nct3.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  MethodError: no method matching make_a_pile(::Float64)\\\
    n  Closest candidates are:\\n    make_a_pile(!Matched::Int64) at /tmp/tmpc8r7nct3.jl:14\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpc8r7nct3.jl:19\\\
    n   [2] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpc8r7nct3.jl:21\\n   [3] macro\
    \ expansion\\n     @ /tmp/tmpc8r7nct3.jl:32 [inlined]\\n   [4] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpc8r7nct3.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpc8r7nct3.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n\
    \ + 1)\n        else\n            return [n] .+ make_a_pile(n + 2)\n        end\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpg6p3iu0w.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpg6p3iu0w.jl:0\\\
    n   [2] make_a_pile(n::Int64) (repeats 32714 times)\\n     @ Main /tmp/tmpg6p3iu0w.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmpg6p3iu0w.jl:30 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpg6p3iu0w.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpg6p3iu0w.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmpg6p3iu0w.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 32713 times)\\n     @ Main /tmp/tmpg6p3iu0w.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpg6p3iu0w.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmpg6p3iu0w.jl:31\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpg6p3iu0w.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpg6p3iu0w.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpg6p3iu0w.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 32714 times)\\n     @ Main /tmp/tmpg6p3iu0w.jl:21\\n   [3] macro expansion\\\
    n     @ /tmp/tmpg6p3iu0w.jl:32 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpg6p3iu0w.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    elseif n % 2 == 0\n        return [n; make_a_pile(n+1)]\n    else\n\
    \        return [n; make_a_pile(n+2)]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpaxk6m49n.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpaxk6m49n.jl:14\\\
    n   [2] make_a_pile(n::Int64) (repeats 52332 times)\\n     @ Main /tmp/tmpaxk6m49n.jl:20\\\
    n   [3] macro expansion\\n     @ /tmp/tmpaxk6m49n.jl:28 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpaxk6m49n.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpaxk6m49n.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmpaxk6m49n.jl:14\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52331 times)\\n     @ Main /tmp/tmpaxk6m49n.jl:20\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpaxk6m49n.jl:18\\n   [4] macro expansion\\n     @ /tmp/tmpaxk6m49n.jl:29\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpaxk6m49n.jl:27\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n+1)\n\
    \        else\n            return [n] .+ make_a_pile(n-1)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpiq46teb9.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpiq46teb9.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpiq46teb9.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpiq46teb9.jl:19\\n\
    \  --- the last 2 lines are repeated 16353 more times ---\\n   [32710] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpiq46teb9.jl:21\\n   [32711] macro expansion\\n      \
    \   @ /tmp/tmpiq46teb9.jl:30 [inlined]\\n   [32712] macro expansion\\n       \
    \  @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmpiq46teb9.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpiq46teb9.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpiq46teb9.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpiq46teb9.jl:21\\n\
    \  --- the last 2 lines are repeated 16353 more times ---\\n   [32710] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpiq46teb9.jl:19\\n   [32711] macro expansion\\n      \
    \   @ /tmp/tmpiq46teb9.jl:31 [inlined]\\n   [32712] macro expansion\\n       \
    \  @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        n = n % 2 == 0 ? n - 1 : n + 1\n        push!(stones, n)\n  \
    \  end\n    return stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = Vector{Int64}(undef,\
    \ n)\n    stones[1] = n\n    for i in 2:n\n        stones[i] = stones[i-1] + (stones[i-1]\
    \ % 2 == 0 ? 2 : 1)\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw1eu3_xr.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpw1eu3_xr.jl:27 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw1eu3_xr.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpw1eu3_xr.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpw1eu3_xr.jl:29 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw1eu3_xr.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw1eu3_xr.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .* make_a_pile(n-1)\n  \
    \  else\n        return [n] .* make_a_pile(n-2)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu72n4fuw.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu72n4fuw.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu72n4fuw.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpu72n4fuw.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [12] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpu72n4fuw.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu72n4fuw.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpu72n4fuw.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [15] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu72n4fuw.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu72n4fuw.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpu72n4fuw.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [90] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpu72n4fuw.jl:32 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu72n4fuw.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpu72n4fuw.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [840] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpu72n4fuw.jl:33 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu72n4fuw.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu72n4fuw.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = Int64[]\n \
    \   while n > 0\n        push!(levels, n)\n        if n % 2 == 0\n           \
    \ n = n + 1\n        else\n            n = n + 2\n        end\n    end\n    return\
    \ levels\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    res = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n -= 1\n        else\n           \
    \ n -= 2\n        end\n        push!(res, n)\n    end\n    return res\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5otwkayk.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5otwkayk.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5otwkayk.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp5otwkayk.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5otwkayk.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5otwkayk.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp5otwkayk.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5otwkayk.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5otwkayk.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp5otwkayk.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp5otwkayk.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5otwkayk.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp5otwkayk.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5otwkayk.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5otwkayk.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5otwkayk.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)[1:end-1]...]\n\
    \    else\n        return [n] .+ [make_a_pile(n+1)[1:end-1]...]\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt27zqs5q.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpt27zqs5q.jl:14\\\
    n   [2] make_a_pile(n::Int64) (repeats 26162 times)\\n     @ Main ./array.jl:0\\\
    n   [3] macro expansion\\n     @ /tmp/tmpt27zqs5q.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt27zqs5q.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpt27zqs5q.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmpt27zqs5q.jl:14\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 26162 times)\\n     @ Main ./array.jl:0\\n   [3] macro expansion\\\
    n     @ /tmp/tmpt27zqs5q.jl:30 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt27zqs5q.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpt27zqs5q.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpt27zqs5q.jl:14\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 26162 times)\\n     @ Main ./array.jl:0\\n   [3] macro expansion\\\
    n     @ /tmp/tmpt27zqs5q.jl:31 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt27zqs5q.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpt27zqs5q.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpt27zqs5q.jl:14\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 26162 times)\\n     @ Main ./array.jl:0\\n   [3] macro expansion\\\
    n     @ /tmp/tmpt27zqs5q.jl:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ make_a_pile(n+1)\n  \
    \  else\n        return [n] .+ make_a_pile(n-1)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3wq_jgjx.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp3wq_jgjx.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp3wq_jgjx.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp3wq_jgjx.jl:21\\n\
    \  --- the last 2 lines are repeated 16355 more times ---\\n   [32714] macro expansion\\\
    n         @ /tmp/tmp3wq_jgjx.jl:29 [inlined]\\n   [32715] macro expansion\\n \
    \        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmp3wq_jgjx.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp3wq_jgjx.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp3wq_jgjx.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp3wq_jgjx.jl:19\\n\
    \  --- the last 2 lines are repeated 16355 more times ---\\n   [32714] macro expansion\\\
    n         @ /tmp/tmp3wq_jgjx.jl:30 [inlined]\\n   [32715] macro expansion\\n \
    \        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmp3wq_jgjx.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp3wq_jgjx.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp3wq_jgjx.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp3wq_jgjx.jl:21\\n\
    \  --- the last 2 lines are repeated 16355 more times ---\\n   [32714] macro expansion\\\
    n         @ /tmp/tmp3wq_jgjx.jl:31 [inlined]\\n   [32715] macro expansion\\n \
    \        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = Int64[]\n \
    \   while n > 0\n        push!(result, n)\n        if n % 2 == 0\n           \
    \ n = n + 1\n        else\n            n = n + 2\n        end\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] > 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp086loon1.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp086loon1.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp086loon1.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp086loon1.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp086loon1.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp086loon1.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp086loon1.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp086loon1.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp086loon1.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp086loon1.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp086loon1.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp086loon1.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp086loon1.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp086loon1.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp086loon1.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp086loon1.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # your code here\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpj_wwwsca.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: Cannot\
    \ `convert` an object of type Nothing to an object of type Vector{Int64}\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array\
    \ at array.jl:532\\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpj_wwwsca.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpj_wwwsca.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpj_wwwsca.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpj_wwwsca.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Vector{Int64}\\n  Closest candidates are:\\\
    n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\\\
    n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\\\
    n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\\\
    n    ...\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpj_wwwsca.jl:16\\\
    n   [2] macro expansion\\n     @ /tmp/tmpj_wwwsca.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpj_wwwsca.jl:21\\ntest set:\
    \ Error During Test at /tmp/tmpj_wwwsca.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  MethodError: Cannot `c"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n; make_a_pile(n+1)]\n    else\n\
    \        return [n; make_a_pile(n+2)]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8bz9zr6h.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64) (repeats 52337 times)\\n     @ Main\
    \ /tmp/tmp8bz9zr6h.jl:21\\n   [2] macro expansion\\n     @ /tmp/tmp8bz9zr6h.jl:29\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp8bz9zr6h.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmp8bz9zr6h.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64) (repeats 52336 times)\\n     @ Main /tmp/tmp8bz9zr6h.jl:21\\\
    n   [2] make_a_pile(n::Int64)\\n     @ Main /tmp/tmp8bz9zr6h.jl:19\\n   [3] macro\
    \ expansion\\n     @ /tmp/tmp8bz9zr6h.jl:30 [inlined]\\n   [4] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp8bz9zr6h.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = Vector{Int64}(undef,\
    \ n)\n    stones[1] = n\n    for i in 2:n\n        if stones[i-1] % 2 == 0\n \
    \           stones[i] = stones[i-1] + 1\n        else\n            stones[i] =\
    \ stones[i-1] + 2\n        end\n    end\n    return stones\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgdpp2g38.jl:32\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpgdpp2g38.jl:32 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgdpp2g38.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpgdpp2g38.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpgdpp2g38.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgdpp2g38.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpgdpp2g38.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgdpp2g38.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgdpp2g38.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgdpp2g38.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = [n]\n    while\
    \ n != 1\n        if n % 2 == 0\n            n = n / 2\n        else\n       \
    \     n = (n + 1) / 2\n        end\n        push!(pile, n)\n    end\n    return\
    \ pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3w8wg9vy.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp3w8wg9vy.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3w8wg9vy.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp3w8wg9vy.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3w8wg9vy.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3w8wg9vy.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp3w8wg9vy.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp3w8wg9vy.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3w8wg9vy.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp3w8wg9vy.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp3w8wg9vy.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3w8wg9vy.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp3w8wg9vy.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3w8wg9vy.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3w8wg9vy.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3w8wg9vy.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = Vector{Int64}(undef,\
    \ n)\n    levels[1] = n\n    for i in 2:n\n        levels[i] = levels[i-1] + (i%2\
    \ == 0 ? 2 : 1)\n    end\n    return levels\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz18as285.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 5, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpz18as285.jl:27 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz18as285.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpz18as285.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpz18as285.jl:28 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz18as285.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpz18as285.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 7, 8, 10, 11] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpz18as285.jl:29 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz18as285.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpz18as285.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 9, 11, 12, 14] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpz18as285.jl:30 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz18as285.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpz18as285.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 10, 11, 13, 14, 16, 17, 19] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz18as285.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz18as285.jl:26\nTest Summary:\
    \ | Fail  Total\ntest set      | "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz18as285.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .* [1, 1] .+ [0, 2] .+ make_a_pile(n\
    \ - 1)\n    else\n        return [n] .* [1, 1] .+ [0, 1] .+ make_a_pile(n - 1)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6pbk928t.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [6, 9] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6pbk928t.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6pbk928t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp6pbk928t.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [10, 15] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6pbk928t.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6pbk928t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp6pbk928t.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [15, 21] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp6pbk928t.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6pbk928t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp6pbk928t.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [21, 29] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp6pbk928t.jl:32 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6pbk928t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp6pbk928t.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [36, 47] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp6pbk928t.jl:33 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6pbk928t.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6pbk928t.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .* make_a_pile(n/2)\n  \
    \  else\n        return [n] .* make_a_pile(n*3+1)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd70wmldc.jl:29\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpd70wmldc.jl:14\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpd70wmldc.jl:19\n\
    \   [2] make_a_pile(n::Int64)\n     @ Main /tmp/tmpd70wmldc.jl:21\n   [3] macro\
    \ expansion\n     @ /tmp/tmpd70wmldc.jl:29 [inlined]\n   [4] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd70wmldc.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpd70wmldc.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpd70wmldc.jl:14\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpd70wmldc.jl:19\n\
    \   [2] macro expansion\n     @ /tmp/tmpd70wmldc.jl:30 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpd70wmldc.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpd70wmldc.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: no method matching make_a_pile(::Float64)\n\
    \  Closest candidates are:\n    make_a_pile(!Matched::Int64) at /tmp/tmpd70wmldc.jl:14\n\
    \  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpd70wmldc.jl:19\n\
    \   [2] make_a_pile(n::Int64)\n     @ Main /tmp/tmpd70wmldc.jl:21\n   [3] macro\
    \ expansion\n     @ /tmp/tmpd70wmldc.jl:31 [inlined]\n   [4] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd70wmldc.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpd70wmldc.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\n  MethodError: no metho"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd70wmldc.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)]\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpx9iy_0ee.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpx9iy_0ee.jl:0\\\
    n   [2] make_a_pile(n::Int64) (repeats 52329 times)\\n     @ Main /tmp/tmpx9iy_0ee.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmpx9iy_0ee.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpx9iy_0ee.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpx9iy_0ee.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmpx9iy_0ee.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52328 times)\\n     @ Main /tmp/tmpx9iy_0ee.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpx9iy_0ee.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmpx9iy_0ee.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpx9iy_0ee.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpx9iy_0ee.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpx9iy_0ee.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52329 times)\\n     @ Main /tmp/tmpx9iy_0ee.jl:21\\n   [3] macro expansion\\\
    n     @ /tmp/tmpx9iy_0ee.jl:31 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpx9iy_0ee.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(stones, n)\n    end\n    stones\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu5swxih9.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpu5swxih9.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu5swxih9.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpu5swxih9.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpu5swxih9.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu5swxih9.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpu5swxih9.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpu5swxih9.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu5swxih9.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpu5swxih9.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpu5swxih9.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu5swxih9.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpu5swxih9.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu5swxih9.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu5swxih9.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu5swxih9.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2*n]\n    else\n\
    \        return [n] .+ [1:2:2*n]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbmneqn14.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpbmneqn14.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmpbmneqn14.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpbmneqn14.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpbmneqn14.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2*n]\n    else\n\
    \        return [n] .+ [1:2:2*n]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpakj425uv.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpakj425uv.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmpakj425uv.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpakj425uv.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpakj425uv.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)...]\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)...]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkdfrw9gu.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n  \
    \ [2] make_a_pile(n::Int64) (repeats 29075 times)\\n     @ Main /tmp/tmpkdfrw9gu.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmpkdfrw9gu.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkdfrw9gu.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpkdfrw9gu.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29074 times)\\n     @ Main /tmp/tmpkdfrw9gu.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpkdfrw9gu.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmpkdfrw9gu.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpkdfrw9gu.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpkdfrw9gu.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29075 times)\\n     @ Main /tmp/tmpkdfrw9gu.jl:21\\n   [3] macro expansion\\\
    n     @ /tmp/tmpkdfrw9gu.jl:31 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkdfrw9gu.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpkdfrw9gu.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29074 times)\\n     @ Main /tmp/tmpk"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)]\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpvcf5tac9.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpvcf5tac9.jl:0\\\
    n   [2] make_a_pile(n::Int64) (repeats 52338 times)\\n     @ Main /tmp/tmpvcf5tac9.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmpvcf5tac9.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvcf5tac9.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpvcf5tac9.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmpvcf5tac9.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52337 times)\\n     @ Main /tmp/tmpvcf5tac9.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpvcf5tac9.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmpvcf5tac9.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpvcf5tac9.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpvcf5tac9.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpvcf5tac9.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52338 times)\\n     @ Main /tmp/tmpvcf5tac9.jl:21\\n   [3] macro expansion\\\
    n     @ /tmp/tmpvcf5tac9.jl:31 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpvcf5tac9.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)]\n\
    \    else\n        return [n] .+ [make_a_pile(n+2)]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphju9oq5k.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmphju9oq5k.jl:0\\\
    n   [2] make_a_pile(n::Int64) (repeats 52331 times)\\n     @ Main /tmp/tmphju9oq5k.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmphju9oq5k.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmphju9oq5k.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmphju9oq5k.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmphju9oq5k.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52330 times)\\n     @ Main /tmp/tmphju9oq5k.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmphju9oq5k.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmphju9oq5k.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmphju9oq5k.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    level = n\n    stones\
    \ = [n]\n    while level > 1\n        if level % 2 == 0\n            level = level\
    \ / 2\n        else\n            level = (level + 1) / 2\n        end\n      \
    \  push!(stones, level)\n    end\n    return stones\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp03vztrb1.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp03vztrb1.jl:32 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp03vztrb1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp03vztrb1.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp03vztrb1.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp03vztrb1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp03vztrb1.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp03vztrb1.jl:34 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp03vztrb1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp03vztrb1.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp03vztrb1.jl:35 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp03vztrb1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp03vztrb1.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp03vztrb1.jl:36 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp03vztrb1.jl:31\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp03vztrb1.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = Int64[]\n \
    \   while n > 0\n        push!(levels, n)\n        if n % 2 == 0\n           \
    \ n = n - 1\n        else\n            n = n - 2\n        end\n    end\n    return\
    \ reverse(levels)\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvk0xvczf.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpvk0xvczf.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvk0xvczf.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvk0xvczf.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 3, 4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpvk0xvczf.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvk0xvczf.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvk0xvczf.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 3, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpvk0xvczf.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvk0xvczf.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvk0xvczf.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 3, 5, 6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpvk0xvczf.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvk0xvczf.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvk0xvczf.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [1, 3, 5, 7, 8] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvk0xvczf.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvk0xvczf.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvk0xvczf.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)[i]\
    \ for i in 1:length(make_a_pile(n+1))]\n    else\n        return [n] .+ [make_a_pile(n+2)[i]\
    \ for i in 1:length(make_a_pile(n+2))]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbiws3imv.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n  \
    \ [2] make_a_pile(n::Int64) (repeats 37372 times)\\n     @ Main /tmp/tmpbiws3imv.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmpbiws3imv.jl:29 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpbiws3imv.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpbiws3imv.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 37371 times)\\n     @ Main /tmp/tmpbiws3imv.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpbiws3imv.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmpbiws3imv.jl:30\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpbiws3imv.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpbiws3imv.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 37372 times)\\n     @ Main /tmp/tmpbiws3imv.jl:21\\n   [3] macro expansion\\\
    n     @ /tmp/tmpbiws3imv.jl:31 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpbiws3imv.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpbiws3imv.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 37371 times)\\n     @ Main /tmp/tmpb"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ make_a_pile(n-1)\n  \
    \  else\n        return [n] .+ make_a_pile(n-2)\n    end\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4iwhod2f.jl:29\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [4] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4iwhod2f.jl:29 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4iwhod2f.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp4iwhod2f.jl:30\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4iwhod2f.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4iwhod2f.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp4iwhod2f.jl:31\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp4iwhod2f.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4iwhod2f.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp4iwhod2f.jl:32\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp4iwhod2f.jl:32 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4iwhod2f.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp4iwhod2f.jl:33\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [24] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp4iwhod2f.jl:33 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4iwhod2f.jl:28\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4iwhod2f.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2*n]\n    else\n\
    \        return [n] .+ [1:2:2*n]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpf48otmqj.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpf48otmqj.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmpf48otmqj.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpf48otmqj.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpf48otmqj.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] != 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprgp2c0pt.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmprgp2c0pt.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprgp2c0pt.jl:29\ntest set: Test\
    \ Failed at /tmp/tmprgp2c0pt.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmprgp2c0pt.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprgp2c0pt.jl:29\ntest set: Test\
    \ Failed at /tmp/tmprgp2c0pt.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmprgp2c0pt.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprgp2c0pt.jl:29\ntest set: Test\
    \ Failed at /tmp/tmprgp2c0pt.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmprgp2c0pt.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprgp2c0pt.jl:29\ntest set: Test\
    \ Failed at /tmp/tmprgp2c0pt.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprgp2c0pt.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprgp2c0pt.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprgp2c0pt.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)...,\
    \ make_a_pile(n+2)..., make_a_pile(n+3)..., make_a_pile(n+4)..., make_a_pile(n+5)...,\
    \ make_a_pile(n+6)..., make_a_pile(n+7)..., make_a_pile(n+8)..., make_a_pile(n+9)...,\
    \ make_a_pile(n+10)..., make_a_pile(n+11)..., make_a_pile(n+12)..., make_a_pile(n+13)...,\
    \ make_a_pile(n+14)..., make_a_pile(n+15)..., make_a_pile(n+16)..., make_a_pile(n+17)...,\
    \ make_a_pile(n+18)..., make_a_pile(n+19)..., make_a_pile(n+20)..., make_a_pile(n+21)...,\
    \ make_a_pile(n+22)..., make_a_pile(n+23)..., make_a_pile(n+24)..., make_a_pile(n+25)...,\
    \ make_a_pile(n+26)..., make_a_pile(n+27)..., make_a_pile(n+28)..., make_a_pile(n+29)...,\
    \ make_a_pile(n+30)..., make_a_pile(n+31)..., make_a_pile(n+32)..., make_a_pile(n+33)...,\
    \ make_a_pile(n+34)..., make_a_pile(n+35)..., make_a_pile(n+36)..., make_a_pile(n+37)...,\
    \ make_a_pile(n+38)..., make_a_pile(n+39)..., make_a_pile(n+40)...,\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: missing separator in array expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7uiiistp.jl:22\nin expression starting at\
    \ /tmp/tmp7uiiistp.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    end\n    if n % 2 == 0\n        return [n] .+ [2:2:2*n]\n    else\n\
    \        return [n] .+ [1:2:2*n]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkkd3i9wk.jl:29\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching +(::Int64, ::StepRange{Int64, Int64})\\n  For element-wise addition,\
    \ use broadcasting with dot syntax: scalar .+ array\\n  Closest candidates are:\\\
    n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:560\\n \
    \   +(::T, !Matched::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64,\
    \ Int8}, !Matched::BigInt) at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.jl:922 [inlined]\\n   [5] materialize\\n     @ ./broadcast.jl:883\
    \ [inlined]\\n   [6] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpkkd3i9wk.jl:21\\\
    n   [7] macro expansion\\n     @ /tmp/tmpkkd3i9wk.jl:29 [inlined]\\n   [8] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [9] top-level scope\\n     @ /tmp/tmpkkd3i9wk.jl:28\\ntest set:\
    \ Error During Test at /tmp/tmpkkd3i9wk.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching +(::Int64,\
    \ ::StepRange{Int64, Int64})\\n  For element-wise addition, use broadcasting with\
    \ dot syntax: scalar .+ array\\n  Closest candidates are:\\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at operators.jl:560\\n    +(::T, !Matched::T)\
    \ where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128, UInt16, UInt32, UInt64,\
    \ UInt8} at int.jl:87\\n    +(::Union{Int16, Int32, Int64, Int8}, !Matched::BigInt)\
    \ at gmp.jl:534\\n    ...\\n  Stacktrace:\\n   [1] _broadcast_getindex_evalf\\\
    n     @ ./broadcast.jl:648 [inlined]\\n   [2] _broadcast_getindex\\n     @ ./broadcast.jl:621\
    \ [inlined]\\n   [3] getindex\\n     @ ./broadcast.jl:575 [inlined]\\n   [4] copy\\\
    n     @ ./broadcast.j"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(stones, n)\n    end\n    return\
    \ stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvqpwdd0y.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpvqpwdd0y.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvqpwdd0y.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvqpwdd0y.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpvqpwdd0y.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvqpwdd0y.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvqpwdd0y.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpvqpwdd0y.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvqpwdd0y.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvqpwdd0y.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpvqpwdd0y.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvqpwdd0y.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpvqpwdd0y.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvqpwdd0y.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvqpwdd0y.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvqpwdd0y.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # YOUR CODE HERE\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa9dv19r6.jl:22\n  Test threw exception\n\
    \  Expression: candidate(3) == [3, 5, 7]\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpa9dv19r6.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpa9dv19r6.jl:22 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpa9dv19r6.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpa9dv19r6.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at array.jl:532\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at abstractarray.jl:14\n\
    \    ...\n  Stacktrace:\n   [1] make_a_pile(n::Int64)\n     @ Main /tmp/tmpa9dv19r6.jl:16\n\
    \   [2] macro expansion\n     @ /tmp/tmpa9dv19r6.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpa9dv19r6.jl:21\ntest set:\
    \ Error During Test at /tmp/tmpa9dv19r6.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an o"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa9dv19r6.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # Initialize the vector\
    \ with the first level\n    pile = [n]\n    # Loop until the last level has only\
    \ one stone\n    while pile[end] > 1\n        # If the last level has an odd number\
    \ of stones, add the next odd number\n        if isodd(pile[end])\n          \
    \  push!(pile, pile[end] + 2)\n        # If the last level has an even number\
    \ of stones, add the next even number\n        else\n            push!(pile, pile[end]\
    \ + 1)\n        end\n    end\n    return pile\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ [make_a_pile(n+1)]\n\
    \        else\n            return [n] .+ [make_a_pile(n+2)]\n        end\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpwjefi73t.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpwjefi73t.jl:0\\\
    n   [2] make_a_pile(n::Int64) (repeats 52323 times)\\n     @ Main /tmp/tmpwjefi73t.jl:21\\\
    n   [3] macro expansion\\n     @ /tmp/tmpwjefi73t.jl:30 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwjefi73t.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpwjefi73t.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main /tmp/tmpwjefi73t.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52322 times)\\n     @ Main /tmp/tmpwjefi73t.jl:21\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpwjefi73t.jl:19\\n   [4] macro expansion\\n     @ /tmp/tmpwjefi73t.jl:31\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpwjefi73t.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpwjefi73t.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpwjefi73t.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 52323 times)\\n     @ Main /tmp/tmpwjefi73t.jl:21\\n   [3] macro expansion\\\
    n     @ /tmp/tmpwjefi73t.jl:32 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpwjefi73t.jl:29\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(stones, n)\n    end\n    return\
    \ stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjq9qu88q.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpjq9qu88q.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjq9qu88q.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpjq9qu88q.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpjq9qu88q.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjq9qu88q.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpjq9qu88q.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpjq9qu88q.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjq9qu88q.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpjq9qu88q.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpjq9qu88q.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjq9qu88q.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpjq9qu88q.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjq9qu88q.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjq9qu88q.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjq9qu88q.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    elseif n % 2 == 0\n        return [n] .+ [make_a_pile(n+1)...]\n  \
    \  else\n        return [n] .+ [make_a_pile(n+2)...]\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpu75z0q63.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n  \
    \ [2] make_a_pile(n::Int64) (repeats 29075 times)\\n     @ Main /tmp/tmpu75z0q63.jl:20\\\
    n   [3] macro expansion\\n     @ /tmp/tmpu75z0q63.jl:28 [inlined]\\n   [4] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpu75z0q63.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpu75z0q63.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29074 times)\\n     @ Main /tmp/tmpu75z0q63.jl:20\\n   [3] make_a_pile(n::Int64)\\\
    n     @ Main /tmp/tmpu75z0q63.jl:18\\n   [4] macro expansion\\n     @ /tmp/tmpu75z0q63.jl:29\
    \ [inlined]\\n   [5] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [6] top-level scope\\n     @ /tmp/tmpu75z0q63.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpu75z0q63.jl:30\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29075 times)\\n     @ Main /tmp/tmpu75z0q63.jl:20\\n   [3] macro expansion\\\
    n     @ /tmp/tmpu75z0q63.jl:30 [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpu75z0q63.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpu75z0q63.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(6) == [6, 8, 10, 12, 14, 16]\\n  StackOverflowError:\\n  Stacktrace:\\\
    n   [1] make_a_pile(n::Int64)\\n     @ Main ./array.jl:0\\n   [2] make_a_pile(n::Int64)\
    \ (repeats 29074 times)\\n     @ Main /tmp/tmpu"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # YOUR CODE HERE\n \
    \   return [n]\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmwqnsco2.jl:23\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmwqnsco2.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmwqnsco2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmwqnsco2.jl:24\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmwqnsco2.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmwqnsco2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmwqnsco2.jl:25\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpmwqnsco2.jl:25 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmwqnsco2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmwqnsco2.jl:26\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpmwqnsco2.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmwqnsco2.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmwqnsco2.jl:27\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpmwqnsco2.jl:27 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmwqnsco2.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmwqnsco2.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n+1)\n\
    \        else\n            return [n] .+ make_a_pile(n-1)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpos6oui_5.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpos6oui_5.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpos6oui_5.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpos6oui_5.jl:19\\n\
    \  --- the last 2 lines are repeated 16354 more times ---\\n   [32712] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpos6oui_5.jl:21\\n   [32713] macro expansion\\n      \
    \   @ /tmp/tmpos6oui_5.jl:30 [inlined]\\n   [32714] macro expansion\\n       \
    \  @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmpos6oui_5.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpos6oui_5.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpos6oui_5.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpos6oui_5.jl:21\\n\
    \  --- the last 2 lines are repeated 16354 more times ---\\n   [32712] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpos6oui_5.jl:19\\n   [32713] macro expansion\\n      \
    \   @ /tmp/tmpos6oui_5.jl:31 [inlined]\\n   [32714] macro expansion\\n       \
    \  @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmpos6oui_5.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpos6oui_5.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpos6oui_5.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpos6oui_5.jl:19\\n\
    \  --- the last 2 lines are repeated 16354 more times ---\\n   [32712] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpos6oui_5.jl:21\\n   [32713] macro expansion\\n      \
    \   @ /tmp/tmpos6oui_5.jl:32 [inlined]"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = Vector{Int64}(undef,\
    \ n)\n    stones[1] = n\n    for i in 2:n\n        stones[i] = stones[i-1] + (stones[i-1]\
    \ % 2 == 0 ? 2 : 1)\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq6im8esx.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpq6im8esx.jl:27 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq6im8esx.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpq6im8esx.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpq6im8esx.jl:29 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq6im8esx.jl:26\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq6im8esx.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .* make_a_pile(n\
    \ - 1)\n        else\n            return [n] .* make_a_pile(n - 2)\n        end\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpra3lsix7.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpra3lsix7.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpra3lsix7.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpra3lsix7.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [12] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpra3lsix7.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpra3lsix7.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpra3lsix7.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [15] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpra3lsix7.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpra3lsix7.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpra3lsix7.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [90] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpra3lsix7.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpra3lsix7.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpra3lsix7.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [840] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpra3lsix7.jl:34 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpra3lsix7.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpra3lsix7.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    elseif n % 2 == 0\n        return [n; make_a_pile(n+1)]\n    else\n\
    \        return [n; make_a_pile(n+2)]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphig9cgjh.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64) (repeats 52342 times)\\n     @ Main\
    \ /tmp/tmphig9cgjh.jl:20\\n   [2] macro expansion\\n     @ /tmp/tmphig9cgjh.jl:28\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmphig9cgjh.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmphig9cgjh.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64) (repeats 52341 times)\\n     @ Main /tmp/tmphig9cgjh.jl:20\\\
    n   [2] make_a_pile(n::Int64)\\n     @ Main /tmp/tmphig9cgjh.jl:18\\n   [3] macro\
    \ expansion\\n     @ /tmp/tmphig9cgjh.jl:29 [inlined]\\n   [4] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmphig9cgjh.jl:27\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n+1)\n\
    \        else\n            return [n] .+ make_a_pile(n-1)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqm2kmd00.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpqm2kmd00.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpqm2kmd00.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpqm2kmd00.jl:19\\n\
    \  --- the last 2 lines are repeated 16356 more times ---\\n   [32716] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpqm2kmd00.jl:21\\n   [32717] macro expansion\\n      \
    \   @ /tmp/tmpqm2kmd00.jl:30 [inlined]\\n   [32718] macro expansion\\n       \
    \  @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmpqm2kmd00.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpqm2kmd00.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpqm2kmd00.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpqm2kmd00.jl:21\\n\
    \  --- the last 2 lines are repeated 16356 more times ---\\n   [32716] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpqm2kmd00.jl:19\\n   [32717] macro expansion\\n      \
    \   @ /tmp/tmpqm2kmd00.jl:31 [inlined]\\n   [32718] macro expansion\\n       \
    \  @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmpqm2kmd00.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpqm2kmd00.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpqm2kmd00.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpqm2kmd00.jl:19\\n\
    \  --- the last 2 lines are repeated 16356 more times ---\\n   [32716] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpqm2kmd00.jl:21\\n   [32717] macro expansion\\n      \
    \   @ /tmp/tmpqm2kmd00.jl:32 [inlined]"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n+1)\n\
    \        else\n            return [n] .+ make_a_pile(n-1)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprf1if9s6.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmprf1if9s6.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmprf1if9s6.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmprf1if9s6.jl:19\\n\
    \  --- the last 2 lines are repeated 16355 more times ---\\n   [32714] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmprf1if9s6.jl:21\\n   [32715] macro expansion\\n      \
    \   @ /tmp/tmprf1if9s6.jl:30 [inlined]\\n   [32716] macro expansion\\n       \
    \  @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmprf1if9s6.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmprf1if9s6.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmprf1if9s6.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmprf1if9s6.jl:21\\n\
    \  --- the last 2 lines are repeated 16355 more times ---\\n   [32714] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmprf1if9s6.jl:19\\n   [32715] macro expansion\\n      \
    \   @ /tmp/tmprf1if9s6.jl:31 [inlined]\\n   [32716] macro expansion\\n       \
    \  @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmprf1if9s6.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmprf1if9s6.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmprf1if9s6.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmprf1if9s6.jl:19\\n\
    \  --- the last 2 lines are repeated 16355 more times ---\\n   [32714] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmprf1if9s6.jl:21\\n   [32715] macro expansion\\n      \
    \   @ /tmp/tmprf1if9s6.jl:32 [inlined]"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # Initialize the vector\n\
    \    v = Vector{Int64}(undef, n)\n    v[1] = n\n    # Fill the vector\n    for\
    \ i in 2:n\n        if v[i-1] % 2 == 0\n            v[i] = v[i-1] + 2\n      \
    \  else\n            v[i] = v[i-1] + 1\n        end\n    end\n    return v\nend\n\
    using Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpncc1xvmi.jl:33\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpncc1xvmi.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpncc1xvmi.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpncc1xvmi.jl:35\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8, 10, 12] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpncc1xvmi.jl:35 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpncc1xvmi.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpncc1xvmi.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] > 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsghxfyn1.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsghxfyn1.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsghxfyn1.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpsghxfyn1.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsghxfyn1.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsghxfyn1.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpsghxfyn1.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsghxfyn1.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsghxfyn1.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpsghxfyn1.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpsghxfyn1.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsghxfyn1.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpsghxfyn1.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsghxfyn1.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsghxfyn1.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsghxfyn1.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return vcat(make_a_pile(n-1),\
    \ [n+1])\n        else\n            return vcat(make_a_pile(n-1), [n+2])\n   \
    \     end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0kbnio0o.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [1, 3, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0kbnio0o.jl:30 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0kbnio0o.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp0kbnio0o.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [1, 3, 5, 5] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0kbnio0o.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0kbnio0o.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp0kbnio0o.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [1, 3, 5, 5, 7] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0kbnio0o.jl:32 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0kbnio0o.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp0kbnio0o.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [1, 3, 5, 5, 7, 7] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp0kbnio0o.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0kbnio0o.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp0kbnio0o.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [1, 3, 5, 5, 7, 7, 9, 9] == [8, 10, 12, 14,\
    \ 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0kbnio0o.jl:34\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0kbnio0o.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0kbnio0o.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n+1)\n\
    \        else\n            return [n] .+ make_a_pile(n-1)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbxlqnme6.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpbxlqnme6.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpbxlqnme6.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpbxlqnme6.jl:21\\n\
    \  --- the last 2 lines are repeated 16350 more times ---\\n   [32704] macro expansion\\\
    n         @ /tmp/tmpbxlqnme6.jl:30 [inlined]\\n   [32705] macro expansion\\n \
    \        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmpbxlqnme6.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpbxlqnme6.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpbxlqnme6.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpbxlqnme6.jl:19\\n\
    \  --- the last 2 lines are repeated 16350 more times ---\\n   [32704] macro expansion\\\
    n         @ /tmp/tmpbxlqnme6.jl:31 [inlined]\\n   [32705] macro expansion\\n \
    \        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmpbxlqnme6.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpbxlqnme6.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpbxlqnme6.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpbxlqnme6.jl:21\\n\
    \  --- the last 2 lines are repeated 16350 more times ---\\n   [32704] macro expansion\\\
    n         @ /tmp/tmpbxlqnme6.jl:32 [inlined]\\n   [32705] macro expansion\\n \
    \        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(stones, n)\n    end\n    stones\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9k8418vq.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp9k8418vq.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9k8418vq.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp9k8418vq.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp9k8418vq.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9k8418vq.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp9k8418vq.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp9k8418vq.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9k8418vq.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp9k8418vq.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp9k8418vq.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9k8418vq.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp9k8418vq.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9k8418vq.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9k8418vq.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9k8418vq.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(stones, n)\n    end\n    return\
    \ stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp928wfnb_.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp928wfnb_.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp928wfnb_.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp928wfnb_.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp928wfnb_.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp928wfnb_.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp928wfnb_.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp928wfnb_.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp928wfnb_.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp928wfnb_.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp928wfnb_.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp928wfnb_.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp928wfnb_.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp928wfnb_.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp928wfnb_.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp928wfnb_.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # Initialize the vector\
    \ of levels\n    levels = [n]\n    # Loop until the last level has only one stone\n\
    \    while levels[end] > 1\n        # If the last level has an odd number of stones\n\
    \        if levels[end] % 2 == 1\n            # Add the next odd number to the\
    \ vector\n            push!(levels, levels[end] + 2)\n        # If the last level\
    \ has an even number of stones\n        else\n            # Add the next even\
    \ number to the vector\n            push!(levels, levels[end] + 1)\n        end\n\
    \    end\n    # Return the vector of levels\n    return levels\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\
    \t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11,\
    \ 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n-1)\n\
    \        else\n            return [n] .+ make_a_pile(n-2)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp40pay2ax.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [4] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp40pay2ax.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp40pay2ax.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp40pay2ax.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp40pay2ax.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp40pay2ax.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp40pay2ax.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp40pay2ax.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp40pay2ax.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp40pay2ax.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp40pay2ax.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp40pay2ax.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp40pay2ax.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [24] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmp40pay2ax.jl:34 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp40pay2ax.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp40pay2ax.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(pile, n)\n    end\n    return\
    \ pile\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsgot487v.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpsgot487v.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsgot487v.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpsgot487v.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpsgot487v.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsgot487v.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpsgot487v.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpsgot487v.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsgot487v.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpsgot487v.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpsgot487v.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsgot487v.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpsgot487v.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpsgot487v.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsgot487v.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsgot487v.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n+1)\n\
    \        else\n            return [n] .+ make_a_pile(n-1)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl9qdrjxb.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpl9qdrjxb.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpl9qdrjxb.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpl9qdrjxb.jl:19\\n\
    \  --- the last 2 lines are repeated 16352 more times ---\\n   [32708] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpl9qdrjxb.jl:21\\n   [32709] macro expansion\\n      \
    \   @ /tmp/tmpl9qdrjxb.jl:30 [inlined]\\n   [32710] macro expansion\\n       \
    \  @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmpl9qdrjxb.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpl9qdrjxb.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpl9qdrjxb.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpl9qdrjxb.jl:21\\n\
    \  --- the last 2 lines are repeated 16352 more times ---\\n   [32708] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpl9qdrjxb.jl:19\\n   [32709] macro expansion\\n      \
    \   @ /tmp/tmpl9qdrjxb.jl:31 [inlined]\\n   [32710] macro expansion\\n       \
    \  @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmpl9qdrjxb.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpl9qdrjxb.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpl9qdrjxb.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpl9qdrjxb.jl:19\\n\
    \  --- the last 2 lines are repeated 16352 more times ---\\n   [32708] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpl9qdrjxb.jl:21\\n   [32709] macro expansion\\n      \
    \   @ /tmp/tmpl9qdrjxb.jl:32 [inlined]"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ stones[end] != 1\n        if stones[end] % 2 == 0\n            push!(stones,\
    \ stones[end] - 1)\n        else\n            push!(stones, stones[end] - 2)\n\
    \        end\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\n\
    candidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp67w0nkfj.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp67w0nkfj.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp67w0nkfj.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp67w0nkfj.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp67w0nkfj.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp67w0nkfj.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp67w0nkfj.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp67w0nkfj.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp67w0nkfj.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp67w0nkfj.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp67w0nkfj.jl:33 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp67w0nkfj.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp67w0nkfj.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp67w0nkfj.jl:34 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp67w0nkfj.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp67w0nkfj.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n / 2\n        else\n        \
    \    n = (n + 1) / 2\n        end\n        push!(stones, n)\n    end\n    return\
    \ stones\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbxohgjzc.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 1] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpbxohgjzc.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbxohgjzc.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpbxohgjzc.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 2, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpbxohgjzc.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbxohgjzc.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpbxohgjzc.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 2, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpbxohgjzc.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbxohgjzc.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpbxohgjzc.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 3, 2, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpbxohgjzc.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbxohgjzc.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpbxohgjzc.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 4, 2, 1] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbxohgjzc.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbxohgjzc.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbxohgjzc.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n < 1\n        error(\"\
    n must be a positive integer\")\n    end\n    if n == 1\n        return [1]\n\
    \    end\n    if n % 2 == 0\n        return [n, n+2, n+4]\n    else\n        return\
    \ [n, n+1, n+3]\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3ix73psv.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp3ix73psv.jl:32 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ix73psv.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp3ix73psv.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3ix73psv.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ix73psv.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp3ix73psv.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 8] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp3ix73psv.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ix73psv.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp3ix73psv.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 10] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmp3ix73psv.jl:35 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ix73psv.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp3ix73psv.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 10, 12] == [8, 10, 12, 14, 16, 18, 20,\
    \ 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3ix73psv.jl:36 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ix73psv.jl:31\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3ix73psv.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    stones = Vector{Int64}(undef,\
    \ n)\n    stones[1] = n\n    for i in 2:n\n        stones[i] = stones[i-1] + 2*(i%2)\
    \ - 1\n    end\n    return stones\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) ==\
    \ [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0x81nflh.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0x81nflh.jl:27 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0x81nflh.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0x81nflh.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 4, 3] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0x81nflh.jl:28 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0x81nflh.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0x81nflh.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 4, 5, 4, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0x81nflh.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0x81nflh.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0x81nflh.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 6, 5, 6, 5] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp0x81nflh.jl:30 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0x81nflh.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0x81nflh.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 8, 7, 8, 7, 8, 7] == [8, 10, 12, 14,\
    \ 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0x81nflh.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0x81nflh.jl:26\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0x81nflh.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    pile = Vector{Int64}(undef,\
    \ n)\n    pile[1] = n\n    for i in 2:n\n        if isodd(pile[i-1])\n       \
    \     pile[i] = pile[i-1] + 2\n        else\n            pile[i] = pile[i-1] +\
    \ 1\n        end\n    end\n    return pile\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpix2qqaon.jl:32\n  Expression: candidate(4)\
    \ == [4, 6, 8, 10]\n   Evaluated: [4, 5, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpix2qqaon.jl:32 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpix2qqaon.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpix2qqaon.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 7, 9, 11, 13, 15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpix2qqaon.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpix2qqaon.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpix2qqaon.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 9, 11, 13, 15, 17, 19, 21] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpix2qqaon.jl:35\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpix2qqaon.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpix2qqaon.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    elseif n % 2 == 0\n        return [n; make_a_pile(n+1)]\n    else\n\
    \        return [n; make_a_pile(n+2)]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkloos2ts.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64) (repeats 52327 times)\\n     @ Main\
    \ /tmp/tmpkloos2ts.jl:20\\n   [2] macro expansion\\n     @ /tmp/tmpkloos2ts.jl:28\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpkloos2ts.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmpkloos2ts.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64) (repeats 52326 times)\\n     @ Main /tmp/tmpkloos2ts.jl:20\\\
    n   [2] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpkloos2ts.jl:18\\n   [3] macro\
    \ expansion\\n     @ /tmp/tmpkloos2ts.jl:29 [inlined]\\n   [4] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkloos2ts.jl:27\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    elseif n % 2 == 0\n        return [n; make_a_pile(n+1)]\n    else\n\
    \        return [n; make_a_pile(n+2)]\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmphe7svw4u.jl:28\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64) (repeats 52335 times)\\n     @ Main\
    \ /tmp/tmphe7svw4u.jl:20\\n   [2] macro expansion\\n     @ /tmp/tmphe7svw4u.jl:28\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmphe7svw4u.jl:27\\ntest set:\
    \ Error During Test at /tmp/tmphe7svw4u.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\n  Stacktrace:\\n   [1]\
    \ make_a_pile(n::Int64) (repeats 52334 times)\\n     @ Main /tmp/tmphe7svw4u.jl:20\\\
    n   [2] make_a_pile(n::Int64)\\n     @ Main /tmp/tmphe7svw4u.jl:18\\n   [3] macro\
    \ expansion\\n     @ /tmp/tmphe7svw4u.jl:29 [inlined]\\n   [4] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmphe7svw4u.jl:27\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    # your code here\n \
    \   return [n]\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpat9qbe6w.jl:23\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpat9qbe6w.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpat9qbe6w.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpat9qbe6w.jl:24\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpat9qbe6w.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpat9qbe6w.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpat9qbe6w.jl:25\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpat9qbe6w.jl:25 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpat9qbe6w.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpat9qbe6w.jl:26\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpat9qbe6w.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpat9qbe6w.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpat9qbe6w.jl:27\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpat9qbe6w.jl:27 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpat9qbe6w.jl:22\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpat9qbe6w.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .* make_a_pile(n/2)\n\
    \        else\n            return [n] .* make_a_pile(n*3+1)\n        end\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnlzynr7_.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  MethodError: no method\
    \ matching make_a_pile(::Float64)\\n  Closest candidates are:\\n    make_a_pile(!Matched::Int64)\
    \ at /tmp/tmpnlzynr7_.jl:14\\n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n\
    \     @ Main /tmp/tmpnlzynr7_.jl:19\\n   [2] make_a_pile(n::Int64)\\n     @ Main\
    \ /tmp/tmpnlzynr7_.jl:21\\n   [3] macro expansion\\n     @ /tmp/tmpnlzynr7_.jl:30\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnlzynr7_.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpnlzynr7_.jl:31\\n  Test threw exception\\n  Expression:\
    \ candidate(4) == [4, 6, 8, 10]\\n  MethodError: no method matching make_a_pile(::Float64)\\\
    n  Closest candidates are:\\n    make_a_pile(!Matched::Int64) at /tmp/tmpnlzynr7_.jl:14\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpnlzynr7_.jl:19\\\
    n   [2] macro expansion\\n     @ /tmp/tmpnlzynr7_.jl:31 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpnlzynr7_.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpnlzynr7_.jl:32\\n  Test threw exception\\n  Expression:\
    \ candidate(5) == [5, 7, 9, 11, 13]\\n  MethodError: no method matching make_a_pile(::Float64)\\\
    n  Closest candidates are:\\n    make_a_pile(!Matched::Int64) at /tmp/tmpnlzynr7_.jl:14\\\
    n  Stacktrace:\\n   [1] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpnlzynr7_.jl:19\\\
    n   [2] make_a_pile(n::Int64)\\n     @ Main /tmp/tmpnlzynr7_.jl:21\\n   [3] macro\
    \ expansion\\n     @ /tmp/tmpnlzynr7_.jl:32 [inlined]\\n   [4] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpnlzynr7_.jl:29\\ntest set:\
    \ Error During Test at /tmp/tmpnlzynr7_.jl:33\\n  Test threw exception\\n  Expression:\
    \ candidate"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n+1)\n\
    \        else\n            return [n] .+ make_a_pile(n-1)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0sy7j7ql.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp0sy7j7ql.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp0sy7j7ql.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp0sy7j7ql.jl:21\\n\
    \  --- the last 2 lines are repeated 16351 more times ---\\n   [32706] macro expansion\\\
    n         @ /tmp/tmp0sy7j7ql.jl:30 [inlined]\\n   [32707] macro expansion\\n \
    \        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmp0sy7j7ql.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp0sy7j7ql.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp0sy7j7ql.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp0sy7j7ql.jl:19\\n\
    \  --- the last 2 lines are repeated 16351 more times ---\\n   [32706] macro expansion\\\
    n         @ /tmp/tmp0sy7j7ql.jl:31 [inlined]\\n   [32707] macro expansion\\n \
    \        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmp0sy7j7ql.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp0sy7j7ql.jl:0\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp0sy7j7ql.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmp0sy7j7ql.jl:21\\n\
    \  --- the last 2 lines are repeated 16351 more times ---\\n   [32706] macro expansion\\\
    n         @ /tmp/tmp0sy7j7ql.jl:32 [inlined]\\n   [32707] macro expansion\\n \
    \        @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmp0sy7j7ql.jl:33\\n  Test threw\
    \ exception\\"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        return [n] .* vcat(ones(Int64, n-1), [2:2:n-1; 3:2:n])\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpob4rpi7d.jl:26\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 3, 6, 9] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpob4rpi7d.jl:26 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpob4rpi7d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpob4rpi7d.jl:27\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 4, 4, 8, 12] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpob4rpi7d.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpob4rpi7d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpob4rpi7d.jl:28\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 5, 5, 5, 10, 20, 15, 25] == [5, 7, 9, 11, 13]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpob4rpi7d.jl:28 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpob4rpi7d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpob4rpi7d.jl:29\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 6, 6, 6, 6, 12, 24, 18, 30] == [6, 8, 10, 12, 14,\
    \ 16]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpob4rpi7d.jl:29 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpob4rpi7d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpob4rpi7d.jl:30\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 8, 8, 8, 8, 8, 8, 16, 32, 48, 24, 40,\
    \ 56] == [8, 10, 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpob4rpi7d.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpob4rpi7d.jl:25\nTe"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpob4rpi7d.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = Vector{Int64}(undef,\
    \ n)\n    levels[1] = n\n    for i in 2:n\n        if n % 2 == 0\n           \
    \ levels[i] = levels[i-1] + 2\n        else\n            levels[i] = levels[i-1]\
    \ + 1\n        end\n    end\n    return levels\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprqh78mkj.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 4, 5] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmprqh78mkj.jl:31 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprqh78mkj.jl:30\ntest set: Test\
    \ Failed at /tmp/tmprqh78mkj.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 6, 7, 8, 9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmprqh78mkj.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprqh78mkj.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprqh78mkj.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = Vector{Int64}(undef,\
    \ n)\n    result[1] = n\n    for i in 2:n\n        result[i] = result[i-1] + 2\
    \ * (i % 2) - 1\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = make_a_pile;\n\t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4)\
    \ == [4, 6, 8, 10])\n\t@test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6)\
    \ == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18,\
    \ 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0e9ivrx2.jl:27\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 2, 3] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0e9ivrx2.jl:27 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0e9ivrx2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0e9ivrx2.jl:28\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 4, 3] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp0e9ivrx2.jl:28 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0e9ivrx2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0e9ivrx2.jl:29\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 4, 5, 4, 5] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0e9ivrx2.jl:29 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0e9ivrx2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0e9ivrx2.jl:30\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 6, 5, 6, 5] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp0e9ivrx2.jl:30 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0e9ivrx2.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0e9ivrx2.jl:31\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 8, 7, 8, 7, 8, 7] == [8, 10, 12, 14,\
    \ 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0e9ivrx2.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0e9ivrx2.jl:26\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0e9ivrx2.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n-1)\n\
    \        else\n            return [n] .+ make_a_pile(n-2)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpolckdh4k.jl:30\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [4] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpolckdh4k.jl:30 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpolckdh4k.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpolckdh4k.jl:31\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [8] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpolckdh4k.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpolckdh4k.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpolckdh4k.jl:32\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [9] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpolckdh4k.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpolckdh4k.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpolckdh4k.jl:33\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [15] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpolckdh4k.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpolckdh4k.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpolckdh4k.jl:34\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [24] == [8, 10, 12, 14, 16, 18, 20, 22]\n\
    Stacktrace:\n [1] macro expansion\n   @ /tmp/tmpolckdh4k.jl:34 [inlined]\n [2]\
    \ macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpolckdh4k.jl:29\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpolckdh4k.jl:27\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = [n]\n    while\
    \ n > 1\n        n = n % 2 == 0 ? n - 1 : n + 1\n        push!(levels, n)\n  \
    \  end\n    return levels\nend\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\
    \t@test(candidate(3) == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t\
    @test(candidate(5) == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12,\
    \ 14, 16])\n\t@test(candidate(8) == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    levels = [n]\n    while\
    \ n > 1\n        if n % 2 == 0\n            n = n - 1\n        else\n        \
    \    n = n - 2\n        end\n        push!(levels, n)\n    end\n    return levels\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpamf3qqxs.jl:31\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 1] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpamf3qqxs.jl:31 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpamf3qqxs.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpamf3qqxs.jl:32\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 3, 1] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpamf3qqxs.jl:32 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpamf3qqxs.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpamf3qqxs.jl:33\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 3, 1] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpamf3qqxs.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpamf3qqxs.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpamf3qqxs.jl:34\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 5, 3, 1] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpamf3qqxs.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpamf3qqxs.jl:30\ntest set: Test\
    \ Failed at /tmp/tmpamf3qqxs.jl:35\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 7, 5, 3, 1] == [8, 10, 12, 14, 16, 18,\
    \ 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpamf3qqxs.jl:35 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpamf3qqxs.jl:30\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpamf3qqxs.jl:28\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        if n % 2 == 0\n            return [n] .+ make_a_pile(n+1)\n\
    \        else\n            return [n] .+ make_a_pile(n-1)\n        end\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmonuvpjm.jl:30\\n  Test threw\
    \ exception\\n  Expression: candidate(3) == [3, 5, 7]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpmonuvpjm.jl:14\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpmonuvpjm.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpmonuvpjm.jl:19\\n\
    \  --- the last 2 lines are repeated 16353 more times ---\\n   [32710] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpmonuvpjm.jl:21\\n   [32711] macro expansion\\n      \
    \   @ /tmp/tmpmonuvpjm.jl:30 [inlined]\\n   [32712] macro expansion\\n       \
    \  @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmpmonuvpjm.jl:31\\n  Test threw\
    \ exception\\n  Expression: candidate(4) == [4, 6, 8, 10]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpmonuvpjm.jl:14\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpmonuvpjm.jl:19\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpmonuvpjm.jl:21\\n\
    \  --- the last 2 lines are repeated 16353 more times ---\\n   [32710] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpmonuvpjm.jl:19\\n   [32711] macro expansion\\n      \
    \   @ /tmp/tmpmonuvpjm.jl:31 [inlined]\\n   [32712] macro expansion\\n       \
    \  @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\ntest set: Error During Test at /tmp/tmpmonuvpjm.jl:32\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == [5, 7, 9, 11, 13]\\n  StackOverflowError:\\\
    n  Stacktrace:\\n       [1] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpmonuvpjm.jl:14\\\
    n       [2] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpmonuvpjm.jl:21\\n\
    \       [3] make_a_pile(n::Int64)\\n         @ Main /tmp/tmpmonuvpjm.jl:19\\n\
    \  --- the last 2 lines are repeated 16353 more times ---\\n   [32710] make_a_pile(n::Int64)\\\
    n         @ Main /tmp/tmpmonuvpjm.jl:21\\n   [32711] macro expansion\\n      \
    \   @ /tmp/tmpmonuvpjm.jl:32 [inlin"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    if n == 1\n        return\
    \ [1]\n    else\n        return [n] .+ [2*i for i in 1:n-1]\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3) ==\
    \ [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5) ==\
    \ [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5_z_hhe5.jl:26\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [5, 7] == [3, 5, 7]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5_z_hhe5.jl:26 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5_z_hhe5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5_z_hhe5.jl:27\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [6, 8, 10] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmp5_z_hhe5.jl:27 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5_z_hhe5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5_z_hhe5.jl:28\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [7, 9, 11, 13] == [5, 7, 9, 11, 13]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp5_z_hhe5.jl:28 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5_z_hhe5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5_z_hhe5.jl:29\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [8, 10, 12, 14, 16] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmp5_z_hhe5.jl:29 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5_z_hhe5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp5_z_hhe5.jl:30\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [10, 12, 14, 16, 18, 20, 22] == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5_z_hhe5.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5_z_hhe5.jl:25\nTest Summary:\
    \ | Fail  Total\ntest set      |    5      5\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5_z_hhe5.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a positive integer n, you have to make a pile of n levels\
    \ of stones.\n    The first level has n stones.\n    The number of stones in the\
    \ next level is:\n        - the next odd number if n is odd.\n        - the next\
    \ even number if n is even.\n    Return the number of stones in each level in\
    \ a list, where element at index\n    i represents the number of stones in the\
    \ level (i+1).\n\n    Examples:\n    >>> make_a_pile(3)\n    [3, 5, 7]\n    \"\
    \"\"\nfunction make_a_pile(n::Int64)::Vector{Int64} \n    result = []\n    for\
    \ i in 1:n\n        if i == 1\n            push!(result, n)\n        elseif i\
    \ % 2 == 0\n            push!(result, result[end] + 2)\n        else\n       \
    \     push!(result, result[end] + 1)\n        end\n    end\n    return result\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = make_a_pile;\n\t@test(candidate(3)\
    \ == [3, 5, 7])\n\t@test(candidate(4) == [4, 6, 8, 10])\n\t@test(candidate(5)\
    \ == [5, 7, 9, 11, 13])\n\t@test(candidate(6) == [6, 8, 10, 12, 14, 16])\n\t@test(candidate(8)\
    \ == [8, 10, 12, 14, 16, 18, 20, 22])\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkffdvz_2.jl:32\n  Expression: candidate(3)\
    \ == [3, 5, 7]\n   Evaluated: [3, 5, 6] == [3, 5, 7]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpkffdvz_2.jl:32 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkffdvz_2.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpkffdvz_2.jl:33\n  Expression: candidate(4) == [4, 6, 8, 10]\n\
    \   Evaluated: [4, 6, 7, 9] == [4, 6, 8, 10]\nStacktrace:\n [1] macro expansion\n\
    \   @ /tmp/tmpkffdvz_2.jl:33 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkffdvz_2.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpkffdvz_2.jl:34\n  Expression: candidate(5) == [5, 7, 9, 11,\
    \ 13]\n   Evaluated: [5, 7, 8, 10, 11] == [5, 7, 9, 11, 13]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /tmp/tmpkffdvz_2.jl:34 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkffdvz_2.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpkffdvz_2.jl:35\n  Expression: candidate(6) == [6, 8, 10, 12,\
    \ 14, 16]\n   Evaluated: [6, 8, 9, 11, 12, 14] == [6, 8, 10, 12, 14, 16]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /tmp/tmpkffdvz_2.jl:35 [inlined]\n [2] macro expansion\n\
    \   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkffdvz_2.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpkffdvz_2.jl:36\n  Expression: candidate(8) == [8, 10, 12,\
    \ 14, 16, 18, 20, 22]\n   Evaluated: [8, 10, 11, 13, 14, 16, 17, 19] == [8, 10,\
    \ 12, 14, 16, 18, 20, 22]\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkffdvz_2.jl:36\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkffdvz_2.jl:31\nTest Summary:\
    \ | Fail  Total\ntest set      | "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkffdvz_2.jl:29\n"
  exit_code: 1
  status: SyntaxError

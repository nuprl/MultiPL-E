name: HumanEval_142_sum_squares
language: julia
results:
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkb07xzax.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpkb07xzax.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkb07xzax.jl:28\ntest set: Test Failed at /tmp/tmpkb07xzax.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkb07xzax.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkb07xzax.jl:28\ntest set: Test Failed at /tmp/tmpkb07xzax.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkb07xzax.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkb07xzax.jl:28\ntest set: Test Failed at /tmp/tmpkb07xzax.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpkb07xzax.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkb07xzax.jl:28\ntest set: Test Failed at /tmp/tmpkb07xzax.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpkb07xzax.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkb07xzax.jl:28\ntest set: Test Failed at /tmp/tmpkb07xzax.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkb07xzax.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkb07xzax.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkb07xzax.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx9gy6uwd.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpx9gy6uwd.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx9gy6uwd.jl:28\ntest set: Test Failed at /tmp/tmpx9gy6uwd.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpx9gy6uwd.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx9gy6uwd.jl:28\ntest set: Test Failed at /tmp/tmpx9gy6uwd.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpx9gy6uwd.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx9gy6uwd.jl:28\ntest set: Test Failed at /tmp/tmpx9gy6uwd.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpx9gy6uwd.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx9gy6uwd.jl:28\ntest set: Test Failed at /tmp/tmpx9gy6uwd.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpx9gy6uwd.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx9gy6uwd.jl:28\ntest set: Test Failed at /tmp/tmpx9gy6uwd.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpx9gy6uwd.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpx9gy6uwd.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx9gy6uwd.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    \"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\n    sum = 0\n    for\
    \ i = 1:length(lst)\n        if i % 3 == 0\n            sum += lst[i]^2\n    \
    \    elseif i % 4 == 0\n            sum += lst[i]^3\n        else\n          \
    \  sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1,\
    \ 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1, -5, 2,\
    \ -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\t@test(candidate([-1,\
    \ 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16, -9, -2, 36, 36, 26,\
    \ -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1, -3,\
    \ 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10]) ==\
    \ -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2btjz96x.jl:39\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp2btjz96x.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2btjz96x.jl:38\ntest set: Test Failed at /tmp/tmp2btjz96x.jl:40\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2btjz96x.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2btjz96x.jl:38\ntest set: Test Failed at /tmp/tmp2btjz96x.jl:45\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2btjz96x.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2btjz96x.jl:38\ntest set: Test Failed at /tmp/tmp2btjz96x.jl:46\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp2btjz96x.jl:46\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2btjz96x.jl:38\ntest set: Test Failed at /tmp/tmp2btjz96x.jl:48\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2btjz96x.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2btjz96x.jl:38\ntest set: Test Failed at /tmp/tmp2btjz96x.jl:49\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2btjz96x.jl:49\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2btjz96x.jl:38\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2btjz96x.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp4qemorle.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp4qemorle.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4qemorle.jl:28\\ntest set: Test Failed at /tmp/tmp4qemorle.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp4qemorle.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4qemorle.jl:28\\ntest set: Test Failed at /tmp/tmp4qemorle.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp4qemorle.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4qemorle.jl:28\\ntest set: Test Failed at /tmp/tmp4qemorle.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmp4qemorle.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4qemorle.jl:28\\ntest set: Test Failed at /tmp/tmp4qemorle.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp4qemorle.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4qemorle.jl:28\\ntest set: Test Failed at /tmp/tmp4qemorle.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp4qemorle.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp4qemorle.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj44rzmsw.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpj44rzmsw.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj44rzmsw.jl:28\ntest set: Test Failed at /tmp/tmpj44rzmsw.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj44rzmsw.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj44rzmsw.jl:28\ntest set: Test Failed at /tmp/tmpj44rzmsw.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj44rzmsw.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj44rzmsw.jl:28\ntest set: Test Failed at /tmp/tmpj44rzmsw.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpj44rzmsw.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj44rzmsw.jl:28\ntest set: Test Failed at /tmp/tmpj44rzmsw.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpj44rzmsw.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj44rzmsw.jl:28\ntest set: Test Failed at /tmp/tmpj44rzmsw.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj44rzmsw.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj44rzmsw.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj44rzmsw.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpno0wi7vy.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpno0wi7vy.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpno0wi7vy.jl:28\ntest set: Test Failed at /tmp/tmpno0wi7vy.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpno0wi7vy.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpno0wi7vy.jl:28\ntest set: Test Failed at /tmp/tmpno0wi7vy.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpno0wi7vy.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpno0wi7vy.jl:28\ntest set: Test Failed at /tmp/tmpno0wi7vy.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpno0wi7vy.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpno0wi7vy.jl:28\ntest set: Test Failed at /tmp/tmpno0wi7vy.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpno0wi7vy.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpno0wi7vy.jl:28\ntest set: Test Failed at /tmp/tmpno0wi7vy.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpno0wi7vy.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpno0wi7vy.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpno0wi7vy.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu2knphmx.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpu2knphmx.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu2knphmx.jl:28\ntest set: Test Failed at /tmp/tmpu2knphmx.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu2knphmx.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu2knphmx.jl:28\ntest set: Test Failed at /tmp/tmpu2knphmx.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpu2knphmx.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu2knphmx.jl:28\ntest set: Test Failed at /tmp/tmpu2knphmx.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpu2knphmx.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu2knphmx.jl:28\ntest set: Test Failed at /tmp/tmpu2knphmx.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpu2knphmx.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu2knphmx.jl:28\ntest set: Test Failed at /tmp/tmpu2knphmx.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu2knphmx.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu2knphmx.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu2knphmx.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp3es6bm0h.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp3es6bm0h.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3es6bm0h.jl:28\\ntest set: Test Failed at /tmp/tmp3es6bm0h.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3es6bm0h.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3es6bm0h.jl:28\\ntest set: Test Failed at /tmp/tmp3es6bm0h.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp3es6bm0h.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3es6bm0h.jl:28\\ntest set: Test Failed at /tmp/tmp3es6bm0h.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmp3es6bm0h.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3es6bm0h.jl:28\\ntest set: Test Failed at /tmp/tmp3es6bm0h.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 67674 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp3es6bm0h.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3es6bm0h.jl:28\\ntest set: Test Failed at /tmp/tmp3es6bm0h.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 8872 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3es6bm0h.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3es6bm0h.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n  \
    \          sum += lst[i]^3\n        else\n            sum += lst[i]\n        end\n\
    \    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1cgnt0bt.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp1cgnt0bt.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1cgnt0bt.jl:28\ntest set: Test Failed at /tmp/tmp1cgnt0bt.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1cgnt0bt.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1cgnt0bt.jl:28\ntest set: Test Failed at /tmp/tmp1cgnt0bt.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1cgnt0bt.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1cgnt0bt.jl:28\ntest set: Test Failed at /tmp/tmp1cgnt0bt.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp1cgnt0bt.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1cgnt0bt.jl:28\ntest set: Test Failed at /tmp/tmp1cgnt0bt.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 65958 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1cgnt0bt.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1cgnt0bt.jl:28\ntest set: Test Failed at /tmp/tmp1cgnt0bt.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6142 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1cgnt0bt.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1cgnt0bt.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1cgnt0bt.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg5jdkf_4.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpg5jdkf_4.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg5jdkf_4.jl:28\ntest set: Test Failed at /tmp/tmpg5jdkf_4.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg5jdkf_4.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg5jdkf_4.jl:28\ntest set: Test Failed at /tmp/tmpg5jdkf_4.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg5jdkf_4.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg5jdkf_4.jl:28\ntest set: Test Failed at /tmp/tmpg5jdkf_4.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpg5jdkf_4.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg5jdkf_4.jl:28\ntest set: Test Failed at /tmp/tmpg5jdkf_4.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg5jdkf_4.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg5jdkf_4.jl:28\ntest set: Test Failed at /tmp/tmpg5jdkf_4.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg5jdkf_4.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg5jdkf_4.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg5jdkf_4.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    \"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 3 == 0\n            sum += lst[i]^2\n   \
    \     elseif i % 4 == 0\n            sum += lst[i]^3\n        else\n         \
    \   sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1,\
    \ 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1, -5, 2,\
    \ -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\t@test(candidate([-1,\
    \ 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16, -9, -2, 36, 36, 26,\
    \ -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1, -3,\
    \ 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10]) ==\
    \ -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4iuttzb6.jl:39\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp4iuttzb6.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4iuttzb6.jl:38\ntest set: Test Failed at /tmp/tmp4iuttzb6.jl:40\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4iuttzb6.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4iuttzb6.jl:38\ntest set: Test Failed at /tmp/tmp4iuttzb6.jl:45\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp4iuttzb6.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4iuttzb6.jl:38\ntest set: Test Failed at /tmp/tmp4iuttzb6.jl:46\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp4iuttzb6.jl:46\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4iuttzb6.jl:38\ntest set: Test Failed at /tmp/tmp4iuttzb6.jl:48\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp4iuttzb6.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4iuttzb6.jl:38\ntest set: Test Failed at /tmp/tmp4iuttzb6.jl:49\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4iuttzb6.jl:49\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4iuttzb6.jl:38\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4iuttzb6.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpukletl7l.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpukletl7l.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpukletl7l.jl:28\ntest set: Test Failed at /tmp/tmpukletl7l.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpukletl7l.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpukletl7l.jl:28\ntest set: Test Failed at /tmp/tmpukletl7l.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpukletl7l.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpukletl7l.jl:28\ntest set: Test Failed at /tmp/tmpukletl7l.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpukletl7l.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpukletl7l.jl:28\ntest set: Test Failed at /tmp/tmpukletl7l.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpukletl7l.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpukletl7l.jl:28\ntest set: Test Failed at /tmp/tmpukletl7l.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpukletl7l.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpukletl7l.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpukletl7l.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmrl0wxfh.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpmrl0wxfh.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmrl0wxfh.jl:28\ntest set: Test Failed at /tmp/tmpmrl0wxfh.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmrl0wxfh.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmrl0wxfh.jl:28\ntest set: Test Failed at /tmp/tmpmrl0wxfh.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmrl0wxfh.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmrl0wxfh.jl:28\ntest set: Test Failed at /tmp/tmpmrl0wxfh.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpmrl0wxfh.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmrl0wxfh.jl:28\ntest set: Test Failed at /tmp/tmpmrl0wxfh.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpmrl0wxfh.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmrl0wxfh.jl:28\ntest set: Test Failed at /tmp/tmpmrl0wxfh.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmrl0wxfh.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmrl0wxfh.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmrl0wxfh.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp3gv34uu5.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp3gv34uu5.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3gv34uu5.jl:28\\ntest set: Test Failed at /tmp/tmp3gv34uu5.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3gv34uu5.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3gv34uu5.jl:28\\ntest set: Test Failed at /tmp/tmp3gv34uu5.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp3gv34uu5.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3gv34uu5.jl:28\\ntest set: Test Failed at /tmp/tmp3gv34uu5.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmp3gv34uu5.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3gv34uu5.jl:28\\ntest set: Test Failed at /tmp/tmp3gv34uu5.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp3gv34uu5.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3gv34uu5.jl:28\\ntest set: Test Failed at /tmp/tmp3gv34uu5.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3gv34uu5.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3gv34uu5.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n  \
    \          sum += lst[i]^3\n        else\n            sum += lst[i]\n        end\n\
    \    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvxj9bs7l.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpvxj9bs7l.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvxj9bs7l.jl:28\ntest set: Test Failed at /tmp/tmpvxj9bs7l.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvxj9bs7l.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvxj9bs7l.jl:28\ntest set: Test Failed at /tmp/tmpvxj9bs7l.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvxj9bs7l.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvxj9bs7l.jl:28\ntest set: Test Failed at /tmp/tmpvxj9bs7l.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpvxj9bs7l.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvxj9bs7l.jl:28\ntest set: Test Failed at /tmp/tmpvxj9bs7l.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 65958 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvxj9bs7l.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvxj9bs7l.jl:28\ntest set: Test Failed at /tmp/tmpvxj9bs7l.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6142 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvxj9bs7l.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvxj9bs7l.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvxj9bs7l.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp3hh6rdm_.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp3hh6rdm_.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3hh6rdm_.jl:28\\ntest set: Test Failed at /tmp/tmp3hh6rdm_.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3hh6rdm_.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3hh6rdm_.jl:28\\ntest set: Test Failed at /tmp/tmp3hh6rdm_.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp3hh6rdm_.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3hh6rdm_.jl:28\\ntest set: Test Failed at /tmp/tmp3hh6rdm_.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmp3hh6rdm_.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3hh6rdm_.jl:28\\ntest set: Test Failed at /tmp/tmp3hh6rdm_.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp3hh6rdm_.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3hh6rdm_.jl:28\\ntest set: Test Failed at /tmp/tmp3hh6rdm_.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3hh6rdm_.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3hh6rdm_.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp95lukn5f.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp95lukn5f.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp95lukn5f.jl:28\\ntest set: Test Failed at /tmp/tmp95lukn5f.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp95lukn5f.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp95lukn5f.jl:28\\ntest set: Test Failed at /tmp/tmp95lukn5f.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp95lukn5f.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp95lukn5f.jl:28\\ntest set: Test Failed at /tmp/tmp95lukn5f.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmp95lukn5f.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp95lukn5f.jl:28\\ntest set: Test Failed at /tmp/tmp95lukn5f.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp95lukn5f.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp95lukn5f.jl:28\\ntest set: Test Failed at /tmp/tmp95lukn5f.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp95lukn5f.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp95lukn5f.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph1msogss.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmph1msogss.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph1msogss.jl:28\ntest set: Test Failed at /tmp/tmph1msogss.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph1msogss.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph1msogss.jl:28\ntest set: Test Failed at /tmp/tmph1msogss.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph1msogss.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph1msogss.jl:28\ntest set: Test Failed at /tmp/tmph1msogss.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmph1msogss.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph1msogss.jl:28\ntest set: Test Failed at /tmp/tmph1msogss.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmph1msogss.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph1msogss.jl:28\ntest set: Test Failed at /tmp/tmph1msogss.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph1msogss.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph1msogss.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph1msogss.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n            sum\
    \ += lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphs7ji0zw.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmphs7ji0zw.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphs7ji0zw.jl:28\ntest set: Test Failed at /tmp/tmphs7ji0zw.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphs7ji0zw.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphs7ji0zw.jl:28\ntest set: Test Failed at /tmp/tmphs7ji0zw.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphs7ji0zw.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphs7ji0zw.jl:28\ntest set: Test Failed at /tmp/tmphs7ji0zw.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmphs7ji0zw.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphs7ji0zw.jl:28\ntest set: Test Failed at /tmp/tmphs7ji0zw.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmphs7ji0zw.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphs7ji0zw.jl:28\ntest set: Test Failed at /tmp/tmphs7ji0zw.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphs7ji0zw.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphs7ji0zw.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphs7ji0zw.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjury62mc.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpjury62mc.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjury62mc.jl:28\ntest set: Test Failed at /tmp/tmpjury62mc.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjury62mc.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjury62mc.jl:28\ntest set: Test Failed at /tmp/tmpjury62mc.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjury62mc.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjury62mc.jl:28\ntest set: Test Failed at /tmp/tmpjury62mc.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpjury62mc.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjury62mc.jl:28\ntest set: Test Failed at /tmp/tmpjury62mc.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjury62mc.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjury62mc.jl:28\ntest set: Test Failed at /tmp/tmpjury62mc.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjury62mc.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjury62mc.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjury62mc.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvezlz4n9.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpvezlz4n9.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvezlz4n9.jl:28\ntest set: Test Failed at /tmp/tmpvezlz4n9.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvezlz4n9.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvezlz4n9.jl:28\ntest set: Test Failed at /tmp/tmpvezlz4n9.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvezlz4n9.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvezlz4n9.jl:28\ntest set: Test Failed at /tmp/tmpvezlz4n9.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpvezlz4n9.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvezlz4n9.jl:28\ntest set: Test Failed at /tmp/tmpvezlz4n9.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvezlz4n9.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvezlz4n9.jl:28\ntest set: Test Failed at /tmp/tmpvezlz4n9.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvezlz4n9.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvezlz4n9.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvezlz4n9.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpnvokhh9m.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpnvokhh9m.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnvokhh9m.jl:28\\ntest set: Test Failed at /tmp/tmpnvokhh9m.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpnvokhh9m.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnvokhh9m.jl:28\\ntest set: Test Failed at /tmp/tmpnvokhh9m.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpnvokhh9m.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnvokhh9m.jl:28\\ntest set: Test Failed at /tmp/tmpnvokhh9m.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnvokhh9m.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnvokhh9m.jl:28\\ntest set: Test Failed at /tmp/tmpnvokhh9m.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpnvokhh9m.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnvokhh9m.jl:28\\ntest set: Test Failed at /tmp/tmpnvokhh9m.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpnvokhh9m.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnvokhh9m.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn_qdh8no.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpn_qdh8no.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn_qdh8no.jl:28\ntest set: Test Failed at /tmp/tmpn_qdh8no.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn_qdh8no.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn_qdh8no.jl:28\ntest set: Test Failed at /tmp/tmpn_qdh8no.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpn_qdh8no.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn_qdh8no.jl:28\ntest set: Test Failed at /tmp/tmpn_qdh8no.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpn_qdh8no.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn_qdh8no.jl:28\ntest set: Test Failed at /tmp/tmpn_qdh8no.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpn_qdh8no.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn_qdh8no.jl:28\ntest set: Test Failed at /tmp/tmpn_qdh8no.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpn_qdh8no.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpn_qdh8no.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn_qdh8no.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    \"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 3 == 0\n            sum += lst[i]^2\n   \
    \     elseif i % 4 == 0\n            sum += lst[i]^3\n        else\n         \
    \   sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1,\
    \ 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1, -5, 2,\
    \ -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\t@test(candidate([-1,\
    \ 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16, -9, -2, 36, 36, 26,\
    \ -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1, -3,\
    \ 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10]) ==\
    \ -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpmnxdqui_.jl:39\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpmnxdqui_.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmnxdqui_.jl:38\\ntest set: Test Failed at /tmp/tmpmnxdqui_.jl:40\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpmnxdqui_.jl:40\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmnxdqui_.jl:38\\ntest set: Test Failed at /tmp/tmpmnxdqui_.jl:45\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpmnxdqui_.jl:45\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmnxdqui_.jl:38\\ntest set: Test Failed at /tmp/tmpmnxdqui_.jl:46\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpmnxdqui_.jl:46\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmnxdqui_.jl:38\\ntest set: Test Failed at /tmp/tmpmnxdqui_.jl:48\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpmnxdqui_.jl:48\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmnxdqui_.jl:38\\ntest set: Test Failed at /tmp/tmpmnxdqui_.jl:49\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpmnxdqui_.jl:49\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpmnxdqui_.jl:38\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpji0etme8.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpji0etme8.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpji0etme8.jl:28\ntest set: Test Failed at /tmp/tmpji0etme8.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpji0etme8.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpji0etme8.jl:28\ntest set: Test Failed at /tmp/tmpji0etme8.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpji0etme8.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpji0etme8.jl:28\ntest set: Test Failed at /tmp/tmpji0etme8.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpji0etme8.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpji0etme8.jl:28\ntest set: Test Failed at /tmp/tmpji0etme8.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpji0etme8.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpji0etme8.jl:28\ntest set: Test Failed at /tmp/tmpji0etme8.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpji0etme8.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpji0etme8.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpji0etme8.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpyxaaw273.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpyxaaw273.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpyxaaw273.jl:28\\ntest set: Test Failed at /tmp/tmpyxaaw273.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpyxaaw273.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpyxaaw273.jl:28\\ntest set: Test Failed at /tmp/tmpyxaaw273.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpyxaaw273.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpyxaaw273.jl:28\\ntest set: Test Failed at /tmp/tmpyxaaw273.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpyxaaw273.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpyxaaw273.jl:28\\ntest set: Test Failed at /tmp/tmpyxaaw273.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpyxaaw273.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpyxaaw273.jl:28\\ntest set: Test Failed at /tmp/tmpyxaaw273.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpyxaaw273.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpyxaaw273.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpavekf_xn.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpavekf_xn.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpavekf_xn.jl:28\ntest set: Test Failed at /tmp/tmpavekf_xn.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpavekf_xn.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpavekf_xn.jl:28\ntest set: Test Failed at /tmp/tmpavekf_xn.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpavekf_xn.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpavekf_xn.jl:28\ntest set: Test Failed at /tmp/tmpavekf_xn.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpavekf_xn.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpavekf_xn.jl:28\ntest set: Test Failed at /tmp/tmpavekf_xn.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpavekf_xn.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpavekf_xn.jl:28\ntest set: Test Failed at /tmp/tmpavekf_xn.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpavekf_xn.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpavekf_xn.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpavekf_xn.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    \"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 3 == 0\n            sum += lst[i]^2\n   \
    \     elseif i % 4 == 0\n            sum += lst[i]^3\n        else\n         \
    \   sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1,\
    \ 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1, -5, 2,\
    \ -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\t@test(candidate([-1,\
    \ 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16, -9, -2, 36, 36, 26,\
    \ -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1, -3,\
    \ 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10]) ==\
    \ -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk_nioiq1.jl:39\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpk_nioiq1.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk_nioiq1.jl:38\ntest set: Test Failed at /tmp/tmpk_nioiq1.jl:40\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpk_nioiq1.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk_nioiq1.jl:38\ntest set: Test Failed at /tmp/tmpk_nioiq1.jl:45\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpk_nioiq1.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk_nioiq1.jl:38\ntest set: Test Failed at /tmp/tmpk_nioiq1.jl:46\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpk_nioiq1.jl:46\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk_nioiq1.jl:38\ntest set: Test Failed at /tmp/tmpk_nioiq1.jl:48\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpk_nioiq1.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk_nioiq1.jl:38\ntest set: Test Failed at /tmp/tmpk_nioiq1.jl:49\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpk_nioiq1.jl:49\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk_nioiq1.jl:38\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk_nioiq1.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp647s4ag9.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp647s4ag9.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp647s4ag9.jl:28\ntest set: Test Failed at /tmp/tmp647s4ag9.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp647s4ag9.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp647s4ag9.jl:28\ntest set: Test Failed at /tmp/tmp647s4ag9.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp647s4ag9.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp647s4ag9.jl:28\ntest set: Test Failed at /tmp/tmp647s4ag9.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp647s4ag9.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp647s4ag9.jl:28\ntest set: Test Failed at /tmp/tmp647s4ag9.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp647s4ag9.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp647s4ag9.jl:28\ntest set: Test Failed at /tmp/tmp647s4ag9.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp647s4ag9.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp647s4ag9.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp647s4ag9.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqpesttl1.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpqpesttl1.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqpesttl1.jl:28\ntest set: Test Failed at /tmp/tmpqpesttl1.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqpesttl1.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqpesttl1.jl:28\ntest set: Test Failed at /tmp/tmpqpesttl1.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqpesttl1.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqpesttl1.jl:28\ntest set: Test Failed at /tmp/tmpqpesttl1.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpqpesttl1.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqpesttl1.jl:28\ntest set: Test Failed at /tmp/tmpqpesttl1.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqpesttl1.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqpesttl1.jl:28\ntest set: Test Failed at /tmp/tmpqpesttl1.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqpesttl1.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqpesttl1.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqpesttl1.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2_z6wxod.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp2_z6wxod.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_z6wxod.jl:28\ntest set: Test Failed at /tmp/tmp2_z6wxod.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2_z6wxod.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_z6wxod.jl:28\ntest set: Test Failed at /tmp/tmp2_z6wxod.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2_z6wxod.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_z6wxod.jl:28\ntest set: Test Failed at /tmp/tmp2_z6wxod.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp2_z6wxod.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_z6wxod.jl:28\ntest set: Test Failed at /tmp/tmp2_z6wxod.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2_z6wxod.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_z6wxod.jl:28\ntest set: Test Failed at /tmp/tmp2_z6wxod.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2_z6wxod.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2_z6wxod.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2_z6wxod.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n            sum\
    \ += lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpieudivjc.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpieudivjc.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpieudivjc.jl:28\ntest set: Test Failed at /tmp/tmpieudivjc.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpieudivjc.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpieudivjc.jl:28\ntest set: Test Failed at /tmp/tmpieudivjc.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpieudivjc.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpieudivjc.jl:28\ntest set: Test Failed at /tmp/tmpieudivjc.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpieudivjc.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpieudivjc.jl:28\ntest set: Test Failed at /tmp/tmpieudivjc.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpieudivjc.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpieudivjc.jl:28\ntest set: Test Failed at /tmp/tmpieudivjc.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpieudivjc.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpieudivjc.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpieudivjc.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2rckx6ex.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp2rckx6ex.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2rckx6ex.jl:28\ntest set: Test Failed at /tmp/tmp2rckx6ex.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2rckx6ex.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2rckx6ex.jl:28\ntest set: Test Failed at /tmp/tmp2rckx6ex.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2rckx6ex.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2rckx6ex.jl:28\ntest set: Test Failed at /tmp/tmp2rckx6ex.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp2rckx6ex.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2rckx6ex.jl:28\ntest set: Test Failed at /tmp/tmp2rckx6ex.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2rckx6ex.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2rckx6ex.jl:28\ntest set: Test Failed at /tmp/tmp2rckx6ex.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2rckx6ex.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2rckx6ex.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2rckx6ex.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpitf16iru.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpitf16iru.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpitf16iru.jl:28\ntest set: Test Failed at /tmp/tmpitf16iru.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpitf16iru.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpitf16iru.jl:28\ntest set: Test Failed at /tmp/tmpitf16iru.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpitf16iru.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpitf16iru.jl:28\ntest set: Test Failed at /tmp/tmpitf16iru.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpitf16iru.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpitf16iru.jl:28\ntest set: Test Failed at /tmp/tmpitf16iru.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpitf16iru.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpitf16iru.jl:28\ntest set: Test Failed at /tmp/tmpitf16iru.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpitf16iru.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpitf16iru.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpitf16iru.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb2z93mrf.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpb2z93mrf.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb2z93mrf.jl:28\ntest set: Test Failed at /tmp/tmpb2z93mrf.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpb2z93mrf.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb2z93mrf.jl:28\ntest set: Test Failed at /tmp/tmpb2z93mrf.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpb2z93mrf.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb2z93mrf.jl:28\ntest set: Test Failed at /tmp/tmpb2z93mrf.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpb2z93mrf.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb2z93mrf.jl:28\ntest set: Test Failed at /tmp/tmpb2z93mrf.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpb2z93mrf.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb2z93mrf.jl:28\ntest set: Test Failed at /tmp/tmpb2z93mrf.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpb2z93mrf.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb2z93mrf.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb2z93mrf.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk1kmqjtm.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpk1kmqjtm.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk1kmqjtm.jl:28\ntest set: Test Failed at /tmp/tmpk1kmqjtm.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpk1kmqjtm.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk1kmqjtm.jl:28\ntest set: Test Failed at /tmp/tmpk1kmqjtm.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpk1kmqjtm.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk1kmqjtm.jl:28\ntest set: Test Failed at /tmp/tmpk1kmqjtm.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpk1kmqjtm.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk1kmqjtm.jl:28\ntest set: Test Failed at /tmp/tmpk1kmqjtm.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpk1kmqjtm.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk1kmqjtm.jl:28\ntest set: Test Failed at /tmp/tmpk1kmqjtm.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpk1kmqjtm.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpk1kmqjtm.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk1kmqjtm.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    total = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4\
    \ != 0\n            total += lst[i]^2\n        elseif i % 4 == 0\n           \
    \ total += lst[i]^3\n        else\n            total += lst[i]\n        end\n\
    \    end\n    return total\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpvg1opceh.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpvg1opceh.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvg1opceh.jl:28\\ntest set: Test Failed at /tmp/tmpvg1opceh.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpvg1opceh.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvg1opceh.jl:28\\ntest set: Test Failed at /tmp/tmpvg1opceh.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpvg1opceh.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvg1opceh.jl:28\\ntest set: Test Failed at /tmp/tmpvg1opceh.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpvg1opceh.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvg1opceh.jl:28\\ntest set: Test Failed at /tmp/tmpvg1opceh.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 67674 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpvg1opceh.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvg1opceh.jl:28\\ntest set: Test Failed at /tmp/tmpvg1opceh.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 8872 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpvg1opceh.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvg1opceh.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl6qcywd0.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpl6qcywd0.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl6qcywd0.jl:28\ntest set: Test Failed at /tmp/tmpl6qcywd0.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpl6qcywd0.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl6qcywd0.jl:28\ntest set: Test Failed at /tmp/tmpl6qcywd0.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpl6qcywd0.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl6qcywd0.jl:28\ntest set: Test Failed at /tmp/tmpl6qcywd0.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpl6qcywd0.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl6qcywd0.jl:28\ntest set: Test Failed at /tmp/tmpl6qcywd0.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpl6qcywd0.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl6qcywd0.jl:28\ntest set: Test Failed at /tmp/tmpl6qcywd0.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpl6qcywd0.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpl6qcywd0.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl6qcywd0.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxrno_6zi.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpxrno_6zi.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxrno_6zi.jl:28\ntest set: Test Failed at /tmp/tmpxrno_6zi.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxrno_6zi.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxrno_6zi.jl:28\ntest set: Test Failed at /tmp/tmpxrno_6zi.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxrno_6zi.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxrno_6zi.jl:28\ntest set: Test Failed at /tmp/tmpxrno_6zi.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpxrno_6zi.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxrno_6zi.jl:28\ntest set: Test Failed at /tmp/tmpxrno_6zi.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxrno_6zi.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxrno_6zi.jl:28\ntest set: Test Failed at /tmp/tmpxrno_6zi.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxrno_6zi.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxrno_6zi.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxrno_6zi.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpqi1uwhin.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpqi1uwhin.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqi1uwhin.jl:28\\ntest set: Test Failed at /tmp/tmpqi1uwhin.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpqi1uwhin.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqi1uwhin.jl:28\\ntest set: Test Failed at /tmp/tmpqi1uwhin.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpqi1uwhin.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqi1uwhin.jl:28\\ntest set: Test Failed at /tmp/tmpqi1uwhin.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpqi1uwhin.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqi1uwhin.jl:28\\ntest set: Test Failed at /tmp/tmpqi1uwhin.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpqi1uwhin.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqi1uwhin.jl:28\\ntest set: Test Failed at /tmp/tmpqi1uwhin.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpqi1uwhin.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpqi1uwhin.jl:28\\nTest Summary: | Pass  Fail \
    \ '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp32i2mw5f.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp32i2mw5f.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp32i2mw5f.jl:28\ntest set: Test Failed at /tmp/tmp32i2mw5f.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp32i2mw5f.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp32i2mw5f.jl:28\ntest set: Test Failed at /tmp/tmp32i2mw5f.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp32i2mw5f.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp32i2mw5f.jl:28\ntest set: Test Failed at /tmp/tmp32i2mw5f.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp32i2mw5f.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp32i2mw5f.jl:28\ntest set: Test Failed at /tmp/tmp32i2mw5f.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp32i2mw5f.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp32i2mw5f.jl:28\ntest set: Test Failed at /tmp/tmp32i2mw5f.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp32i2mw5f.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp32i2mw5f.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp32i2mw5f.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpest9u_yw.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpest9u_yw.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpest9u_yw.jl:28\ntest set: Test Failed at /tmp/tmpest9u_yw.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpest9u_yw.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpest9u_yw.jl:28\ntest set: Test Failed at /tmp/tmpest9u_yw.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpest9u_yw.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpest9u_yw.jl:28\ntest set: Test Failed at /tmp/tmpest9u_yw.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpest9u_yw.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpest9u_yw.jl:28\ntest set: Test Failed at /tmp/tmpest9u_yw.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpest9u_yw.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpest9u_yw.jl:28\ntest set: Test Failed at /tmp/tmpest9u_yw.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpest9u_yw.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpest9u_yw.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpest9u_yw.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    \"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 3 == 0\n            sum += lst[i]^2\n   \
    \     elseif i % 4 == 0 && i % 3 != 0\n            sum += lst[i]^3\n        else\n\
    \            sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2, 3]) ==\
    \ 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1up70wh7.jl:39\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp1up70wh7.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1up70wh7.jl:38\ntest set: Test Failed at /tmp/tmp1up70wh7.jl:40\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1up70wh7.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1up70wh7.jl:38\ntest set: Test Failed at /tmp/tmp1up70wh7.jl:45\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1up70wh7.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1up70wh7.jl:38\ntest set: Test Failed at /tmp/tmp1up70wh7.jl:46\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp1up70wh7.jl:46\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1up70wh7.jl:38\ntest set: Test Failed at /tmp/tmp1up70wh7.jl:48\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1up70wh7.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1up70wh7.jl:38\ntest set: Test Failed at /tmp/tmp1up70wh7.jl:49\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1up70wh7.jl:49\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1up70wh7.jl:38\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1up70wh7.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmplw_6k982.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmplw_6k982.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplw_6k982.jl:28\\ntest set: Test Failed at /tmp/tmplw_6k982.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmplw_6k982.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplw_6k982.jl:28\\ntest set: Test Failed at /tmp/tmplw_6k982.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmplw_6k982.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplw_6k982.jl:28\\ntest set: Test Failed at /tmp/tmplw_6k982.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmplw_6k982.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplw_6k982.jl:28\\ntest set: Test Failed at /tmp/tmplw_6k982.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmplw_6k982.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplw_6k982.jl:28\\ntest set: Test Failed at /tmp/tmplw_6k982.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmplw_6k982.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmplw_6k982.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpnk7hj8gf.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpnk7hj8gf.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnk7hj8gf.jl:28\\ntest set: Test Failed at /tmp/tmpnk7hj8gf.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpnk7hj8gf.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnk7hj8gf.jl:28\\ntest set: Test Failed at /tmp/tmpnk7hj8gf.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpnk7hj8gf.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnk7hj8gf.jl:28\\ntest set: Test Failed at /tmp/tmpnk7hj8gf.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpnk7hj8gf.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnk7hj8gf.jl:28\\ntest set: Test Failed at /tmp/tmpnk7hj8gf.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 67674 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpnk7hj8gf.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnk7hj8gf.jl:28\\ntest set: Test Failed at /tmp/tmpnk7hj8gf.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 8872 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpnk7hj8gf.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpnk7hj8gf.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpnk7hj8gf.jl:26\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpsnseb94h.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpsnseb94h.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpsnseb94h.jl:28\\ntest set: Test Failed at /tmp/tmpsnseb94h.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpsnseb94h.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpsnseb94h.jl:28\\ntest set: Test Failed at /tmp/tmpsnseb94h.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpsnseb94h.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpsnseb94h.jl:28\\ntest set: Test Failed at /tmp/tmpsnseb94h.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpsnseb94h.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpsnseb94h.jl:28\\ntest set: Test Failed at /tmp/tmpsnseb94h.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpsnseb94h.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpsnseb94h.jl:28\\ntest set: Test Failed at /tmp/tmpsnseb94h.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpsnseb94h.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpsnseb94h.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n            sum\
    \ += lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpjicj362c.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpjicj362c.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjicj362c.jl:28\\ntest set: Test Failed at /tmp/tmpjicj362c.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpjicj362c.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjicj362c.jl:28\\ntest set: Test Failed at /tmp/tmpjicj362c.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpjicj362c.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjicj362c.jl:28\\ntest set: Test Failed at /tmp/tmpjicj362c.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpjicj362c.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjicj362c.jl:28\\ntest set: Test Failed at /tmp/tmpjicj362c.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpjicj362c.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjicj362c.jl:28\\ntest set: Test Failed at /tmp/tmpjicj362c.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpjicj362c.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpjicj362c.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxyav6m13.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpxyav6m13.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxyav6m13.jl:28\ntest set: Test Failed at /tmp/tmpxyav6m13.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxyav6m13.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxyav6m13.jl:28\ntest set: Test Failed at /tmp/tmpxyav6m13.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxyav6m13.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxyav6m13.jl:28\ntest set: Test Failed at /tmp/tmpxyav6m13.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpxyav6m13.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxyav6m13.jl:28\ntest set: Test Failed at /tmp/tmpxyav6m13.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxyav6m13.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxyav6m13.jl:28\ntest set: Test Failed at /tmp/tmpxyav6m13.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxyav6m13.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxyav6m13.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxyav6m13.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcrs3ipal.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpcrs3ipal.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcrs3ipal.jl:28\ntest set: Test Failed at /tmp/tmpcrs3ipal.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcrs3ipal.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcrs3ipal.jl:28\ntest set: Test Failed at /tmp/tmpcrs3ipal.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcrs3ipal.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcrs3ipal.jl:28\ntest set: Test Failed at /tmp/tmpcrs3ipal.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpcrs3ipal.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcrs3ipal.jl:28\ntest set: Test Failed at /tmp/tmpcrs3ipal.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpcrs3ipal.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcrs3ipal.jl:28\ntest set: Test Failed at /tmp/tmpcrs3ipal.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcrs3ipal.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcrs3ipal.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcrs3ipal.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpzcdc2acg.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpzcdc2acg.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzcdc2acg.jl:28\\ntest set: Test Failed at /tmp/tmpzcdc2acg.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpzcdc2acg.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzcdc2acg.jl:28\\ntest set: Test Failed at /tmp/tmpzcdc2acg.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpzcdc2acg.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzcdc2acg.jl:28\\ntest set: Test Failed at /tmp/tmpzcdc2acg.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpzcdc2acg.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzcdc2acg.jl:28\\ntest set: Test Failed at /tmp/tmpzcdc2acg.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 67674 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpzcdc2acg.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzcdc2acg.jl:28\\ntest set: Test Failed at /tmp/tmpzcdc2acg.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 8872 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpzcdc2acg.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzcdc2acg.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6gvtlo84.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp6gvtlo84.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gvtlo84.jl:28\ntest set: Test Failed at /tmp/tmp6gvtlo84.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6gvtlo84.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gvtlo84.jl:28\ntest set: Test Failed at /tmp/tmp6gvtlo84.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6gvtlo84.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gvtlo84.jl:28\ntest set: Test Failed at /tmp/tmp6gvtlo84.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp6gvtlo84.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gvtlo84.jl:28\ntest set: Test Failed at /tmp/tmp6gvtlo84.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp6gvtlo84.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gvtlo84.jl:28\ntest set: Test Failed at /tmp/tmp6gvtlo84.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6gvtlo84.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gvtlo84.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6gvtlo84.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps954_vhq.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmps954_vhq.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps954_vhq.jl:28\ntest set: Test Failed at /tmp/tmps954_vhq.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps954_vhq.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps954_vhq.jl:28\ntest set: Test Failed at /tmp/tmps954_vhq.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmps954_vhq.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps954_vhq.jl:28\ntest set: Test Failed at /tmp/tmps954_vhq.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmps954_vhq.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps954_vhq.jl:28\ntest set: Test Failed at /tmp/tmps954_vhq.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmps954_vhq.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps954_vhq.jl:28\ntest set: Test Failed at /tmp/tmps954_vhq.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps954_vhq.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps954_vhq.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps954_vhq.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp328flnl9.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp328flnl9.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp328flnl9.jl:28\ntest set: Test Failed at /tmp/tmp328flnl9.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp328flnl9.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp328flnl9.jl:28\ntest set: Test Failed at /tmp/tmp328flnl9.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp328flnl9.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp328flnl9.jl:28\ntest set: Test Failed at /tmp/tmp328flnl9.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp328flnl9.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp328flnl9.jl:28\ntest set: Test Failed at /tmp/tmp328flnl9.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp328flnl9.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp328flnl9.jl:28\ntest set: Test Failed at /tmp/tmp328flnl9.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp328flnl9.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp328flnl9.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp328flnl9.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpig_kwxdb.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpig_kwxdb.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpig_kwxdb.jl:28\ntest set: Test Failed at /tmp/tmpig_kwxdb.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpig_kwxdb.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpig_kwxdb.jl:28\ntest set: Test Failed at /tmp/tmpig_kwxdb.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpig_kwxdb.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpig_kwxdb.jl:28\ntest set: Test Failed at /tmp/tmpig_kwxdb.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpig_kwxdb.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpig_kwxdb.jl:28\ntest set: Test Failed at /tmp/tmpig_kwxdb.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpig_kwxdb.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpig_kwxdb.jl:28\ntest set: Test Failed at /tmp/tmpig_kwxdb.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpig_kwxdb.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpig_kwxdb.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpig_kwxdb.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n  \
    \          sum += lst[i]^3\n        else\n            sum += lst[i]\n        end\n\
    \    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkj8ift_3.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpkj8ift_3.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkj8ift_3.jl:28\ntest set: Test Failed at /tmp/tmpkj8ift_3.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkj8ift_3.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkj8ift_3.jl:28\ntest set: Test Failed at /tmp/tmpkj8ift_3.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkj8ift_3.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkj8ift_3.jl:28\ntest set: Test Failed at /tmp/tmpkj8ift_3.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpkj8ift_3.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkj8ift_3.jl:28\ntest set: Test Failed at /tmp/tmpkj8ift_3.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 65958 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpkj8ift_3.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkj8ift_3.jl:28\ntest set: Test Failed at /tmp/tmpkj8ift_3.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6142 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkj8ift_3.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkj8ift_3.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkj8ift_3.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7ae4ihwf.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp7ae4ihwf.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ae4ihwf.jl:28\ntest set: Test Failed at /tmp/tmp7ae4ihwf.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7ae4ihwf.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ae4ihwf.jl:28\ntest set: Test Failed at /tmp/tmp7ae4ihwf.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7ae4ihwf.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ae4ihwf.jl:28\ntest set: Test Failed at /tmp/tmp7ae4ihwf.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp7ae4ihwf.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ae4ihwf.jl:28\ntest set: Test Failed at /tmp/tmp7ae4ihwf.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7ae4ihwf.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ae4ihwf.jl:28\ntest set: Test Failed at /tmp/tmp7ae4ihwf.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7ae4ihwf.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7ae4ihwf.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ae4ihwf.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdfe7d49t.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpdfe7d49t.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdfe7d49t.jl:28\ntest set: Test Failed at /tmp/tmpdfe7d49t.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdfe7d49t.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdfe7d49t.jl:28\ntest set: Test Failed at /tmp/tmpdfe7d49t.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdfe7d49t.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdfe7d49t.jl:28\ntest set: Test Failed at /tmp/tmpdfe7d49t.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpdfe7d49t.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdfe7d49t.jl:28\ntest set: Test Failed at /tmp/tmpdfe7d49t.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpdfe7d49t.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdfe7d49t.jl:28\ntest set: Test Failed at /tmp/tmpdfe7d49t.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdfe7d49t.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdfe7d49t.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdfe7d49t.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n            sum\
    \ += lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps61xifpf.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmps61xifpf.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps61xifpf.jl:28\ntest set: Test Failed at /tmp/tmps61xifpf.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps61xifpf.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps61xifpf.jl:28\ntest set: Test Failed at /tmp/tmps61xifpf.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmps61xifpf.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps61xifpf.jl:28\ntest set: Test Failed at /tmp/tmps61xifpf.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmps61xifpf.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps61xifpf.jl:28\ntest set: Test Failed at /tmp/tmps61xifpf.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmps61xifpf.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps61xifpf.jl:28\ntest set: Test Failed at /tmp/tmps61xifpf.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps61xifpf.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps61xifpf.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps61xifpf.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpebr6gw8t.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpebr6gw8t.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpebr6gw8t.jl:28\\ntest set: Test Failed at /tmp/tmpebr6gw8t.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpebr6gw8t.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpebr6gw8t.jl:28\\ntest set: Test Failed at /tmp/tmpebr6gw8t.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpebr6gw8t.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpebr6gw8t.jl:28\\ntest set: Test Failed at /tmp/tmpebr6gw8t.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpebr6gw8t.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpebr6gw8t.jl:28\\ntest set: Test Failed at /tmp/tmpebr6gw8t.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpebr6gw8t.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpebr6gw8t.jl:28\\ntest set: Test Failed at /tmp/tmpebr6gw8t.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpebr6gw8t.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpebr6gw8t.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n  \
    \          sum += lst[i]^3\n        else\n            sum += lst[i]\n        end\n\
    \    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpxvbllojd.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpxvbllojd.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxvbllojd.jl:28\\ntest set: Test Failed at /tmp/tmpxvbllojd.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpxvbllojd.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxvbllojd.jl:28\\ntest set: Test Failed at /tmp/tmpxvbllojd.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpxvbllojd.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxvbllojd.jl:28\\ntest set: Test Failed at /tmp/tmpxvbllojd.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpxvbllojd.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxvbllojd.jl:28\\ntest set: Test Failed at /tmp/tmpxvbllojd.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 65958 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpxvbllojd.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxvbllojd.jl:28\\ntest set: Test Failed at /tmp/tmpxvbllojd.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6142 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpxvbllojd.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpxvbllojd.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpna4dj653.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpna4dj653.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpna4dj653.jl:28\\ntest set: Test Failed at /tmp/tmpna4dj653.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpna4dj653.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpna4dj653.jl:28\\ntest set: Test Failed at /tmp/tmpna4dj653.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpna4dj653.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpna4dj653.jl:28\\ntest set: Test Failed at /tmp/tmpna4dj653.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpna4dj653.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpna4dj653.jl:28\\ntest set: Test Failed at /tmp/tmpna4dj653.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpna4dj653.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpna4dj653.jl:28\\ntest set: Test Failed at /tmp/tmpna4dj653.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpna4dj653.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpna4dj653.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp86m0cjh2.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp86m0cjh2.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp86m0cjh2.jl:28\ntest set: Test Failed at /tmp/tmp86m0cjh2.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp86m0cjh2.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp86m0cjh2.jl:28\ntest set: Test Failed at /tmp/tmp86m0cjh2.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp86m0cjh2.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp86m0cjh2.jl:28\ntest set: Test Failed at /tmp/tmp86m0cjh2.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp86m0cjh2.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp86m0cjh2.jl:28\ntest set: Test Failed at /tmp/tmp86m0cjh2.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp86m0cjh2.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp86m0cjh2.jl:28\ntest set: Test Failed at /tmp/tmp86m0cjh2.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp86m0cjh2.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp86m0cjh2.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp86m0cjh2.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgn4ehym1.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpgn4ehym1.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgn4ehym1.jl:28\ntest set: Test Failed at /tmp/tmpgn4ehym1.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgn4ehym1.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgn4ehym1.jl:28\ntest set: Test Failed at /tmp/tmpgn4ehym1.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgn4ehym1.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgn4ehym1.jl:28\ntest set: Test Failed at /tmp/tmpgn4ehym1.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpgn4ehym1.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgn4ehym1.jl:28\ntest set: Test Failed at /tmp/tmpgn4ehym1.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgn4ehym1.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgn4ehym1.jl:28\ntest set: Test Failed at /tmp/tmpgn4ehym1.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgn4ehym1.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgn4ehym1.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgn4ehym1.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpwwap6auw.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpwwap6auw.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwwap6auw.jl:28\\ntest set: Test Failed at /tmp/tmpwwap6auw.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpwwap6auw.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwwap6auw.jl:28\\ntest set: Test Failed at /tmp/tmpwwap6auw.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpwwap6auw.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwwap6auw.jl:28\\ntest set: Test Failed at /tmp/tmpwwap6auw.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpwwap6auw.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwwap6auw.jl:28\\ntest set: Test Failed at /tmp/tmpwwap6auw.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 67674 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpwwap6auw.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwwap6auw.jl:28\\ntest set: Test Failed at /tmp/tmpwwap6auw.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 8872 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpwwap6auw.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpwwap6auw.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvegljg5n.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpvegljg5n.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvegljg5n.jl:28\ntest set: Test Failed at /tmp/tmpvegljg5n.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvegljg5n.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvegljg5n.jl:28\ntest set: Test Failed at /tmp/tmpvegljg5n.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvegljg5n.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvegljg5n.jl:28\ntest set: Test Failed at /tmp/tmpvegljg5n.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpvegljg5n.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvegljg5n.jl:28\ntest set: Test Failed at /tmp/tmpvegljg5n.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvegljg5n.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvegljg5n.jl:28\ntest set: Test Failed at /tmp/tmpvegljg5n.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvegljg5n.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvegljg5n.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvegljg5n.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n  \
    \          sum += lst[i]^3\n        else\n            sum += lst[i]\n        end\n\
    \    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa0be7agp.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpa0be7agp.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa0be7agp.jl:28\ntest set: Test Failed at /tmp/tmpa0be7agp.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa0be7agp.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa0be7agp.jl:28\ntest set: Test Failed at /tmp/tmpa0be7agp.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpa0be7agp.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa0be7agp.jl:28\ntest set: Test Failed at /tmp/tmpa0be7agp.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpa0be7agp.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa0be7agp.jl:28\ntest set: Test Failed at /tmp/tmpa0be7agp.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 65958 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpa0be7agp.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa0be7agp.jl:28\ntest set: Test Failed at /tmp/tmpa0be7agp.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6142 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpa0be7agp.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpa0be7agp.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa0be7agp.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo1tyatkl.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpo1tyatkl.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo1tyatkl.jl:28\ntest set: Test Failed at /tmp/tmpo1tyatkl.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpo1tyatkl.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo1tyatkl.jl:28\ntest set: Test Failed at /tmp/tmpo1tyatkl.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpo1tyatkl.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo1tyatkl.jl:28\ntest set: Test Failed at /tmp/tmpo1tyatkl.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpo1tyatkl.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo1tyatkl.jl:28\ntest set: Test Failed at /tmp/tmpo1tyatkl.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpo1tyatkl.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo1tyatkl.jl:28\ntest set: Test Failed at /tmp/tmpo1tyatkl.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpo1tyatkl.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpo1tyatkl.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo1tyatkl.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp0wqlc_bw.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp0wqlc_bw.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0wqlc_bw.jl:28\\ntest set: Test Failed at /tmp/tmp0wqlc_bw.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp0wqlc_bw.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0wqlc_bw.jl:28\\ntest set: Test Failed at /tmp/tmp0wqlc_bw.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp0wqlc_bw.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0wqlc_bw.jl:28\\ntest set: Test Failed at /tmp/tmp0wqlc_bw.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmp0wqlc_bw.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0wqlc_bw.jl:28\\ntest set: Test Failed at /tmp/tmp0wqlc_bw.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp0wqlc_bw.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0wqlc_bw.jl:28\\ntest set: Test Failed at /tmp/tmp0wqlc_bw.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp0wqlc_bw.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0wqlc_bw.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp3pjauejn.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp3pjauejn.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3pjauejn.jl:28\\ntest set: Test Failed at /tmp/tmp3pjauejn.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3pjauejn.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3pjauejn.jl:28\\ntest set: Test Failed at /tmp/tmp3pjauejn.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp3pjauejn.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3pjauejn.jl:28\\ntest set: Test Failed at /tmp/tmp3pjauejn.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmp3pjauejn.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3pjauejn.jl:28\\ntest set: Test Failed at /tmp/tmp3pjauejn.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp3pjauejn.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3pjauejn.jl:28\\ntest set: Test Failed at /tmp/tmp3pjauejn.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3pjauejn.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3pjauejn.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjako4lbo.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpjako4lbo.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjako4lbo.jl:28\ntest set: Test Failed at /tmp/tmpjako4lbo.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjako4lbo.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjako4lbo.jl:28\ntest set: Test Failed at /tmp/tmpjako4lbo.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjako4lbo.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjako4lbo.jl:28\ntest set: Test Failed at /tmp/tmpjako4lbo.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpjako4lbo.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjako4lbo.jl:28\ntest set: Test Failed at /tmp/tmpjako4lbo.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjako4lbo.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjako4lbo.jl:28\ntest set: Test Failed at /tmp/tmpjako4lbo.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjako4lbo.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjako4lbo.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjako4lbo.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbfu4ukhh.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpbfu4ukhh.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbfu4ukhh.jl:28\ntest set: Test Failed at /tmp/tmpbfu4ukhh.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbfu4ukhh.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbfu4ukhh.jl:28\ntest set: Test Failed at /tmp/tmpbfu4ukhh.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbfu4ukhh.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbfu4ukhh.jl:28\ntest set: Test Failed at /tmp/tmpbfu4ukhh.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpbfu4ukhh.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbfu4ukhh.jl:28\ntest set: Test Failed at /tmp/tmpbfu4ukhh.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbfu4ukhh.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbfu4ukhh.jl:28\ntest set: Test Failed at /tmp/tmpbfu4ukhh.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbfu4ukhh.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbfu4ukhh.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbfu4ukhh.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp0_3ds98r.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp0_3ds98r.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0_3ds98r.jl:28\\ntest set: Test Failed at /tmp/tmp0_3ds98r.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp0_3ds98r.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0_3ds98r.jl:28\\ntest set: Test Failed at /tmp/tmp0_3ds98r.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp0_3ds98r.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0_3ds98r.jl:28\\ntest set: Test Failed at /tmp/tmp0_3ds98r.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmp0_3ds98r.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0_3ds98r.jl:28\\ntest set: Test Failed at /tmp/tmp0_3ds98r.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 67674 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp0_3ds98r.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0_3ds98r.jl:28\\ntest set: Test Failed at /tmp/tmp0_3ds98r.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 8872 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp0_3ds98r.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp0_3ds98r.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbaao3u1e.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpbaao3u1e.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbaao3u1e.jl:28\ntest set: Test Failed at /tmp/tmpbaao3u1e.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbaao3u1e.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbaao3u1e.jl:28\ntest set: Test Failed at /tmp/tmpbaao3u1e.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpbaao3u1e.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbaao3u1e.jl:28\ntest set: Test Failed at /tmp/tmpbaao3u1e.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpbaao3u1e.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbaao3u1e.jl:28\ntest set: Test Failed at /tmp/tmpbaao3u1e.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbaao3u1e.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbaao3u1e.jl:28\ntest set: Test Failed at /tmp/tmpbaao3u1e.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpbaao3u1e.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbaao3u1e.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbaao3u1e.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph_e030v8.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmph_e030v8.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_e030v8.jl:28\ntest set: Test Failed at /tmp/tmph_e030v8.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph_e030v8.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_e030v8.jl:28\ntest set: Test Failed at /tmp/tmph_e030v8.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmph_e030v8.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_e030v8.jl:28\ntest set: Test Failed at /tmp/tmph_e030v8.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmph_e030v8.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_e030v8.jl:28\ntest set: Test Failed at /tmp/tmph_e030v8.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmph_e030v8.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_e030v8.jl:28\ntest set: Test Failed at /tmp/tmph_e030v8.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmph_e030v8.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmph_e030v8.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph_e030v8.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp71m89cfl.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp71m89cfl.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp71m89cfl.jl:28\ntest set: Test Failed at /tmp/tmp71m89cfl.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp71m89cfl.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp71m89cfl.jl:28\ntest set: Test Failed at /tmp/tmp71m89cfl.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp71m89cfl.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp71m89cfl.jl:28\ntest set: Test Failed at /tmp/tmp71m89cfl.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp71m89cfl.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp71m89cfl.jl:28\ntest set: Test Failed at /tmp/tmp71m89cfl.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp71m89cfl.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp71m89cfl.jl:28\ntest set: Test Failed at /tmp/tmp71m89cfl.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp71m89cfl.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp71m89cfl.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp71m89cfl.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpq3ap2a6e.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpq3ap2a6e.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq3ap2a6e.jl:28\\ntest set: Test Failed at /tmp/tmpq3ap2a6e.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpq3ap2a6e.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq3ap2a6e.jl:28\\ntest set: Test Failed at /tmp/tmpq3ap2a6e.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpq3ap2a6e.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq3ap2a6e.jl:28\\ntest set: Test Failed at /tmp/tmpq3ap2a6e.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpq3ap2a6e.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq3ap2a6e.jl:28\\ntest set: Test Failed at /tmp/tmpq3ap2a6e.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpq3ap2a6e.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq3ap2a6e.jl:28\\ntest set: Test Failed at /tmp/tmpq3ap2a6e.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpq3ap2a6e.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpq3ap2a6e.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjx1cwau_.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpjx1cwau_.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjx1cwau_.jl:28\ntest set: Test Failed at /tmp/tmpjx1cwau_.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjx1cwau_.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjx1cwau_.jl:28\ntest set: Test Failed at /tmp/tmpjx1cwau_.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjx1cwau_.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjx1cwau_.jl:28\ntest set: Test Failed at /tmp/tmpjx1cwau_.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpjx1cwau_.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjx1cwau_.jl:28\ntest set: Test Failed at /tmp/tmpjx1cwau_.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjx1cwau_.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjx1cwau_.jl:28\ntest set: Test Failed at /tmp/tmpjx1cwau_.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjx1cwau_.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjx1cwau_.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjx1cwau_.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoirzsv7t.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpoirzsv7t.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoirzsv7t.jl:28\ntest set: Test Failed at /tmp/tmpoirzsv7t.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpoirzsv7t.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoirzsv7t.jl:28\ntest set: Test Failed at /tmp/tmpoirzsv7t.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpoirzsv7t.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoirzsv7t.jl:28\ntest set: Test Failed at /tmp/tmpoirzsv7t.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpoirzsv7t.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoirzsv7t.jl:28\ntest set: Test Failed at /tmp/tmpoirzsv7t.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpoirzsv7t.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoirzsv7t.jl:28\ntest set: Test Failed at /tmp/tmpoirzsv7t.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpoirzsv7t.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoirzsv7t.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoirzsv7t.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpimpq2xax.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpimpq2xax.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpimpq2xax.jl:28\\ntest set: Test Failed at /tmp/tmpimpq2xax.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpimpq2xax.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpimpq2xax.jl:28\\ntest set: Test Failed at /tmp/tmpimpq2xax.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpimpq2xax.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpimpq2xax.jl:28\\ntest set: Test Failed at /tmp/tmpimpq2xax.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpimpq2xax.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpimpq2xax.jl:28\\ntest set: Test Failed at /tmp/tmpimpq2xax.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 67674 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpimpq2xax.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpimpq2xax.jl:28\\ntest set: Test Failed at /tmp/tmpimpq2xax.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 8872 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpimpq2xax.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpimpq2xax.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_xsi81wh.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp_xsi81wh.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_xsi81wh.jl:28\ntest set: Test Failed at /tmp/tmp_xsi81wh.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_xsi81wh.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_xsi81wh.jl:28\ntest set: Test Failed at /tmp/tmp_xsi81wh.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_xsi81wh.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_xsi81wh.jl:28\ntest set: Test Failed at /tmp/tmp_xsi81wh.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp_xsi81wh.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_xsi81wh.jl:28\ntest set: Test Failed at /tmp/tmp_xsi81wh.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_xsi81wh.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_xsi81wh.jl:28\ntest set: Test Failed at /tmp/tmp_xsi81wh.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_xsi81wh.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_xsi81wh.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_xsi81wh.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpciy1ll_8.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpciy1ll_8.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpciy1ll_8.jl:28\\ntest set: Test Failed at /tmp/tmpciy1ll_8.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpciy1ll_8.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpciy1ll_8.jl:28\\ntest set: Test Failed at /tmp/tmpciy1ll_8.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpciy1ll_8.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpciy1ll_8.jl:28\\ntest set: Test Failed at /tmp/tmpciy1ll_8.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpciy1ll_8.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpciy1ll_8.jl:28\\ntest set: Test Failed at /tmp/tmpciy1ll_8.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpciy1ll_8.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpciy1ll_8.jl:28\\ntest set: Test Failed at /tmp/tmpciy1ll_8.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpciy1ll_8.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpciy1ll_8.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgehaluqg.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpgehaluqg.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgehaluqg.jl:28\ntest set: Test Failed at /tmp/tmpgehaluqg.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgehaluqg.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgehaluqg.jl:28\ntest set: Test Failed at /tmp/tmpgehaluqg.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgehaluqg.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgehaluqg.jl:28\ntest set: Test Failed at /tmp/tmpgehaluqg.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpgehaluqg.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgehaluqg.jl:28\ntest set: Test Failed at /tmp/tmpgehaluqg.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgehaluqg.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgehaluqg.jl:28\ntest set: Test Failed at /tmp/tmpgehaluqg.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgehaluqg.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgehaluqg.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgehaluqg.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkzv2s3ki.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpkzv2s3ki.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkzv2s3ki.jl:28\ntest set: Test Failed at /tmp/tmpkzv2s3ki.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkzv2s3ki.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkzv2s3ki.jl:28\ntest set: Test Failed at /tmp/tmpkzv2s3ki.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpkzv2s3ki.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkzv2s3ki.jl:28\ntest set: Test Failed at /tmp/tmpkzv2s3ki.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpkzv2s3ki.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkzv2s3ki.jl:28\ntest set: Test Failed at /tmp/tmpkzv2s3ki.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpkzv2s3ki.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkzv2s3ki.jl:28\ntest set: Test Failed at /tmp/tmpkzv2s3ki.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpkzv2s3ki.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpkzv2s3ki.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkzv2s3ki.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6gwx7lad.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp6gwx7lad.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gwx7lad.jl:28\ntest set: Test Failed at /tmp/tmp6gwx7lad.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6gwx7lad.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gwx7lad.jl:28\ntest set: Test Failed at /tmp/tmp6gwx7lad.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp6gwx7lad.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gwx7lad.jl:28\ntest set: Test Failed at /tmp/tmp6gwx7lad.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp6gwx7lad.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gwx7lad.jl:28\ntest set: Test Failed at /tmp/tmp6gwx7lad.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp6gwx7lad.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gwx7lad.jl:28\ntest set: Test Failed at /tmp/tmp6gwx7lad.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp6gwx7lad.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp6gwx7lad.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6gwx7lad.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpys86rm75.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpys86rm75.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpys86rm75.jl:28\\ntest set: Test Failed at /tmp/tmpys86rm75.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpys86rm75.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpys86rm75.jl:28\\ntest set: Test Failed at /tmp/tmpys86rm75.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpys86rm75.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpys86rm75.jl:28\\ntest set: Test Failed at /tmp/tmpys86rm75.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpys86rm75.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpys86rm75.jl:28\\ntest set: Test Failed at /tmp/tmpys86rm75.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 67674 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpys86rm75.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpys86rm75.jl:28\\ntest set: Test Failed at /tmp/tmpys86rm75.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 8872 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpys86rm75.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpys86rm75.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n            sum\
    \ += lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu3sxom94.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpu3sxom94.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu3sxom94.jl:28\ntest set: Test Failed at /tmp/tmpu3sxom94.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu3sxom94.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu3sxom94.jl:28\ntest set: Test Failed at /tmp/tmpu3sxom94.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpu3sxom94.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu3sxom94.jl:28\ntest set: Test Failed at /tmp/tmpu3sxom94.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpu3sxom94.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu3sxom94.jl:28\ntest set: Test Failed at /tmp/tmpu3sxom94.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpu3sxom94.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu3sxom94.jl:28\ntest set: Test Failed at /tmp/tmpu3sxom94.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu3sxom94.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu3sxom94.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu3sxom94.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp2txt2dpf.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp2txt2dpf.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2txt2dpf.jl:28\\ntest set: Test Failed at /tmp/tmp2txt2dpf.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp2txt2dpf.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2txt2dpf.jl:28\\ntest set: Test Failed at /tmp/tmp2txt2dpf.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp2txt2dpf.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2txt2dpf.jl:28\\ntest set: Test Failed at /tmp/tmp2txt2dpf.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmp2txt2dpf.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2txt2dpf.jl:28\\ntest set: Test Failed at /tmp/tmp2txt2dpf.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp2txt2dpf.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2txt2dpf.jl:28\\ntest set: Test Failed at /tmp/tmp2txt2dpf.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp2txt2dpf.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2txt2dpf.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxshz3ogy.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpxshz3ogy.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxshz3ogy.jl:28\ntest set: Test Failed at /tmp/tmpxshz3ogy.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxshz3ogy.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxshz3ogy.jl:28\ntest set: Test Failed at /tmp/tmpxshz3ogy.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxshz3ogy.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxshz3ogy.jl:28\ntest set: Test Failed at /tmp/tmpxshz3ogy.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpxshz3ogy.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxshz3ogy.jl:28\ntest set: Test Failed at /tmp/tmpxshz3ogy.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxshz3ogy.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxshz3ogy.jl:28\ntest set: Test Failed at /tmp/tmpxshz3ogy.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxshz3ogy.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxshz3ogy.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxshz3ogy.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if (i % 3 == 0) & (i % 4\
    \ != 0)\n            sum += lst[i]^2\n        elseif (i % 4 == 0) & (i % 3 !=\
    \ 0)\n            sum += lst[i]^3\n        else\n            sum += lst[i]\n \
    \       end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4,\
    \ 9]) == 14)\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1, -5, 2,\
    \ -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\t@test(candidate([-1,\
    \ 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16, -9, -2, 36, 36, 26,\
    \ -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1, -3,\
    \ 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10]) ==\
    \ -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpepg5cad3.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpepg5cad3.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpepg5cad3.jl:28\ntest set: Test Failed at /tmp/tmpepg5cad3.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpepg5cad3.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpepg5cad3.jl:28\ntest set: Test Failed at /tmp/tmpepg5cad3.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpepg5cad3.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpepg5cad3.jl:28\ntest set: Test Failed at /tmp/tmpepg5cad3.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpepg5cad3.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpepg5cad3.jl:28\ntest set: Test Failed at /tmp/tmpepg5cad3.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 65958 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpepg5cad3.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpepg5cad3.jl:28\ntest set: Test Failed at /tmp/tmpepg5cad3.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6142 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpepg5cad3.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpepg5cad3.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpepg5cad3.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxwh7f3k1.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpxwh7f3k1.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxwh7f3k1.jl:28\ntest set: Test Failed at /tmp/tmpxwh7f3k1.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxwh7f3k1.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxwh7f3k1.jl:28\ntest set: Test Failed at /tmp/tmpxwh7f3k1.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpxwh7f3k1.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxwh7f3k1.jl:28\ntest set: Test Failed at /tmp/tmpxwh7f3k1.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpxwh7f3k1.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxwh7f3k1.jl:28\ntest set: Test Failed at /tmp/tmpxwh7f3k1.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpxwh7f3k1.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxwh7f3k1.jl:28\ntest set: Test Failed at /tmp/tmpxwh7f3k1.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpxwh7f3k1.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpxwh7f3k1.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxwh7f3k1.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfqyjldg5.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpfqyjldg5.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfqyjldg5.jl:28\ntest set: Test Failed at /tmp/tmpfqyjldg5.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfqyjldg5.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfqyjldg5.jl:28\ntest set: Test Failed at /tmp/tmpfqyjldg5.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfqyjldg5.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfqyjldg5.jl:28\ntest set: Test Failed at /tmp/tmpfqyjldg5.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpfqyjldg5.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfqyjldg5.jl:28\ntest set: Test Failed at /tmp/tmpfqyjldg5.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfqyjldg5.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfqyjldg5.jl:28\ntest set: Test Failed at /tmp/tmpfqyjldg5.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfqyjldg5.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfqyjldg5.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfqyjldg5.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb0tmtu7j.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpb0tmtu7j.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb0tmtu7j.jl:28\ntest set: Test Failed at /tmp/tmpb0tmtu7j.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpb0tmtu7j.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb0tmtu7j.jl:28\ntest set: Test Failed at /tmp/tmpb0tmtu7j.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpb0tmtu7j.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb0tmtu7j.jl:28\ntest set: Test Failed at /tmp/tmpb0tmtu7j.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpb0tmtu7j.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb0tmtu7j.jl:28\ntest set: Test Failed at /tmp/tmpb0tmtu7j.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpb0tmtu7j.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb0tmtu7j.jl:28\ntest set: Test Failed at /tmp/tmpb0tmtu7j.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpb0tmtu7j.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb0tmtu7j.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb0tmtu7j.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp42j4ei_8.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp42j4ei_8.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp42j4ei_8.jl:28\ntest set: Test Failed at /tmp/tmp42j4ei_8.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp42j4ei_8.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp42j4ei_8.jl:28\ntest set: Test Failed at /tmp/tmp42j4ei_8.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp42j4ei_8.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp42j4ei_8.jl:28\ntest set: Test Failed at /tmp/tmp42j4ei_8.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp42j4ei_8.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp42j4ei_8.jl:28\ntest set: Test Failed at /tmp/tmp42j4ei_8.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp42j4ei_8.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp42j4ei_8.jl:28\ntest set: Test Failed at /tmp/tmp42j4ei_8.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp42j4ei_8.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp42j4ei_8.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp42j4ei_8.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n  \
    \          sum += lst[i]^3\n        else\n            sum += lst[i]\n        end\n\
    \    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj4uruxqq.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpj4uruxqq.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj4uruxqq.jl:28\ntest set: Test Failed at /tmp/tmpj4uruxqq.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj4uruxqq.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj4uruxqq.jl:28\ntest set: Test Failed at /tmp/tmpj4uruxqq.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj4uruxqq.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj4uruxqq.jl:28\ntest set: Test Failed at /tmp/tmpj4uruxqq.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpj4uruxqq.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj4uruxqq.jl:28\ntest set: Test Failed at /tmp/tmpj4uruxqq.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 65958 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpj4uruxqq.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj4uruxqq.jl:28\ntest set: Test Failed at /tmp/tmpj4uruxqq.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6142 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj4uruxqq.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj4uruxqq.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj4uruxqq.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw1wmw5h3.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpw1wmw5h3.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw1wmw5h3.jl:28\ntest set: Test Failed at /tmp/tmpw1wmw5h3.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw1wmw5h3.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw1wmw5h3.jl:28\ntest set: Test Failed at /tmp/tmpw1wmw5h3.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw1wmw5h3.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw1wmw5h3.jl:28\ntest set: Test Failed at /tmp/tmpw1wmw5h3.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpw1wmw5h3.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw1wmw5h3.jl:28\ntest set: Test Failed at /tmp/tmpw1wmw5h3.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpw1wmw5h3.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw1wmw5h3.jl:28\ntest set: Test Failed at /tmp/tmpw1wmw5h3.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw1wmw5h3.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw1wmw5h3.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw1wmw5h3.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjbp_jdsu.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpjbp_jdsu.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjbp_jdsu.jl:28\ntest set: Test Failed at /tmp/tmpjbp_jdsu.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjbp_jdsu.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjbp_jdsu.jl:28\ntest set: Test Failed at /tmp/tmpjbp_jdsu.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjbp_jdsu.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjbp_jdsu.jl:28\ntest set: Test Failed at /tmp/tmpjbp_jdsu.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpjbp_jdsu.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjbp_jdsu.jl:28\ntest set: Test Failed at /tmp/tmpjbp_jdsu.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjbp_jdsu.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjbp_jdsu.jl:28\ntest set: Test Failed at /tmp/tmpjbp_jdsu.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjbp_jdsu.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjbp_jdsu.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjbp_jdsu.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n            sum\
    \ += lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpii_p2226.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpii_p2226.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpii_p2226.jl:28\\ntest set: Test Failed at /tmp/tmpii_p2226.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpii_p2226.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpii_p2226.jl:28\\ntest set: Test Failed at /tmp/tmpii_p2226.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpii_p2226.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpii_p2226.jl:28\\ntest set: Test Failed at /tmp/tmpii_p2226.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpii_p2226.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpii_p2226.jl:28\\ntest set: Test Failed at /tmp/tmpii_p2226.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpii_p2226.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpii_p2226.jl:28\\ntest set: Test Failed at /tmp/tmpii_p2226.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpii_p2226.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpii_p2226.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_mlpczxl.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp_mlpczxl.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_mlpczxl.jl:28\ntest set: Test Failed at /tmp/tmp_mlpczxl.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_mlpczxl.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_mlpczxl.jl:28\ntest set: Test Failed at /tmp/tmp_mlpczxl.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_mlpczxl.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_mlpczxl.jl:28\ntest set: Test Failed at /tmp/tmp_mlpczxl.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp_mlpczxl.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_mlpczxl.jl:28\ntest set: Test Failed at /tmp/tmp_mlpczxl.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_mlpczxl.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_mlpczxl.jl:28\ntest set: Test Failed at /tmp/tmp_mlpczxl.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_mlpczxl.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_mlpczxl.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_mlpczxl.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcdu3dwar.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpcdu3dwar.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcdu3dwar.jl:28\ntest set: Test Failed at /tmp/tmpcdu3dwar.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcdu3dwar.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcdu3dwar.jl:28\ntest set: Test Failed at /tmp/tmpcdu3dwar.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcdu3dwar.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcdu3dwar.jl:28\ntest set: Test Failed at /tmp/tmpcdu3dwar.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpcdu3dwar.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcdu3dwar.jl:28\ntest set: Test Failed at /tmp/tmpcdu3dwar.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpcdu3dwar.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcdu3dwar.jl:28\ntest set: Test Failed at /tmp/tmpcdu3dwar.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcdu3dwar.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcdu3dwar.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcdu3dwar.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp38ew_wh0.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp38ew_wh0.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp38ew_wh0.jl:28\\ntest set: Test Failed at /tmp/tmp38ew_wh0.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp38ew_wh0.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp38ew_wh0.jl:28\\ntest set: Test Failed at /tmp/tmp38ew_wh0.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp38ew_wh0.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp38ew_wh0.jl:28\\ntest set: Test Failed at /tmp/tmp38ew_wh0.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmp38ew_wh0.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp38ew_wh0.jl:28\\ntest set: Test Failed at /tmp/tmp38ew_wh0.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 67674 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp38ew_wh0.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp38ew_wh0.jl:28\\ntest set: Test Failed at /tmp/tmp38ew_wh0.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 8872 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp38ew_wh0.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp38ew_wh0.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpf9hi0mkl.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpf9hi0mkl.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf9hi0mkl.jl:28\\ntest set: Test Failed at /tmp/tmpf9hi0mkl.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpf9hi0mkl.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf9hi0mkl.jl:28\\ntest set: Test Failed at /tmp/tmpf9hi0mkl.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpf9hi0mkl.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf9hi0mkl.jl:28\\ntest set: Test Failed at /tmp/tmpf9hi0mkl.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpf9hi0mkl.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf9hi0mkl.jl:28\\ntest set: Test Failed at /tmp/tmpf9hi0mkl.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 67674 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpf9hi0mkl.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf9hi0mkl.jl:28\\ntest set: Test Failed at /tmp/tmpf9hi0mkl.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 8872 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpf9hi0mkl.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf9hi0mkl.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n            sum\
    \ += lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpcws3rzt6.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpcws3rzt6.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcws3rzt6.jl:28\\ntest set: Test Failed at /tmp/tmpcws3rzt6.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpcws3rzt6.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcws3rzt6.jl:28\\ntest set: Test Failed at /tmp/tmpcws3rzt6.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpcws3rzt6.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcws3rzt6.jl:28\\ntest set: Test Failed at /tmp/tmpcws3rzt6.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpcws3rzt6.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcws3rzt6.jl:28\\ntest set: Test Failed at /tmp/tmpcws3rzt6.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpcws3rzt6.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcws3rzt6.jl:28\\ntest set: Test Failed at /tmp/tmpcws3rzt6.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpcws3rzt6.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpcws3rzt6.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_wjrp9qs.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp_wjrp9qs.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_wjrp9qs.jl:28\ntest set: Test Failed at /tmp/tmp_wjrp9qs.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_wjrp9qs.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_wjrp9qs.jl:28\ntest set: Test Failed at /tmp/tmp_wjrp9qs.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_wjrp9qs.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_wjrp9qs.jl:28\ntest set: Test Failed at /tmp/tmp_wjrp9qs.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp_wjrp9qs.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_wjrp9qs.jl:28\ntest set: Test Failed at /tmp/tmp_wjrp9qs.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_wjrp9qs.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_wjrp9qs.jl:28\ntest set: Test Failed at /tmp/tmp_wjrp9qs.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_wjrp9qs.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_wjrp9qs.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_wjrp9qs.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpx76tttv0.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpx76tttv0.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpx76tttv0.jl:28\\ntest set: Test Failed at /tmp/tmpx76tttv0.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpx76tttv0.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpx76tttv0.jl:28\\ntest set: Test Failed at /tmp/tmpx76tttv0.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpx76tttv0.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpx76tttv0.jl:28\\ntest set: Test Failed at /tmp/tmpx76tttv0.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpx76tttv0.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpx76tttv0.jl:28\\ntest set: Test Failed at /tmp/tmpx76tttv0.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 67674 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpx76tttv0.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpx76tttv0.jl:28\\ntest set: Test Failed at /tmp/tmpx76tttv0.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 8872 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpx76tttv0.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpx76tttv0.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg1hmfo94.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpg1hmfo94.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg1hmfo94.jl:28\ntest set: Test Failed at /tmp/tmpg1hmfo94.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg1hmfo94.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg1hmfo94.jl:28\ntest set: Test Failed at /tmp/tmpg1hmfo94.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg1hmfo94.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg1hmfo94.jl:28\ntest set: Test Failed at /tmp/tmpg1hmfo94.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpg1hmfo94.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg1hmfo94.jl:28\ntest set: Test Failed at /tmp/tmpg1hmfo94.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg1hmfo94.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg1hmfo94.jl:28\ntest set: Test Failed at /tmp/tmpg1hmfo94.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg1hmfo94.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg1hmfo94.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg1hmfo94.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0p7q89la.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp0p7q89la.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0p7q89la.jl:28\ntest set: Test Failed at /tmp/tmp0p7q89la.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0p7q89la.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0p7q89la.jl:28\ntest set: Test Failed at /tmp/tmp0p7q89la.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0p7q89la.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0p7q89la.jl:28\ntest set: Test Failed at /tmp/tmp0p7q89la.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp0p7q89la.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0p7q89la.jl:28\ntest set: Test Failed at /tmp/tmp0p7q89la.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0p7q89la.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0p7q89la.jl:28\ntest set: Test Failed at /tmp/tmp0p7q89la.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0p7q89la.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0p7q89la.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0p7q89la.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4fz56rc5.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp4fz56rc5.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4fz56rc5.jl:28\ntest set: Test Failed at /tmp/tmp4fz56rc5.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4fz56rc5.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4fz56rc5.jl:28\ntest set: Test Failed at /tmp/tmp4fz56rc5.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp4fz56rc5.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4fz56rc5.jl:28\ntest set: Test Failed at /tmp/tmp4fz56rc5.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp4fz56rc5.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4fz56rc5.jl:28\ntest set: Test Failed at /tmp/tmp4fz56rc5.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp4fz56rc5.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4fz56rc5.jl:28\ntest set: Test Failed at /tmp/tmp4fz56rc5.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp4fz56rc5.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp4fz56rc5.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4fz56rc5.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjqd9d5co.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpjqd9d5co.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjqd9d5co.jl:28\ntest set: Test Failed at /tmp/tmpjqd9d5co.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjqd9d5co.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjqd9d5co.jl:28\ntest set: Test Failed at /tmp/tmpjqd9d5co.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjqd9d5co.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjqd9d5co.jl:28\ntest set: Test Failed at /tmp/tmpjqd9d5co.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpjqd9d5co.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjqd9d5co.jl:28\ntest set: Test Failed at /tmp/tmpjqd9d5co.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjqd9d5co.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjqd9d5co.jl:28\ntest set: Test Failed at /tmp/tmpjqd9d5co.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjqd9d5co.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjqd9d5co.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjqd9d5co.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplrq44ww2.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmplrq44ww2.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplrq44ww2.jl:28\ntest set: Test Failed at /tmp/tmplrq44ww2.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplrq44ww2.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplrq44ww2.jl:28\ntest set: Test Failed at /tmp/tmplrq44ww2.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplrq44ww2.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplrq44ww2.jl:28\ntest set: Test Failed at /tmp/tmplrq44ww2.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmplrq44ww2.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplrq44ww2.jl:28\ntest set: Test Failed at /tmp/tmplrq44ww2.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmplrq44ww2.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplrq44ww2.jl:28\ntest set: Test Failed at /tmp/tmplrq44ww2.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplrq44ww2.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplrq44ww2.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplrq44ww2.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n            sum\
    \ += lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprwc_llbu.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmprwc_llbu.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprwc_llbu.jl:28\ntest set: Test Failed at /tmp/tmprwc_llbu.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprwc_llbu.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprwc_llbu.jl:28\ntest set: Test Failed at /tmp/tmprwc_llbu.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprwc_llbu.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprwc_llbu.jl:28\ntest set: Test Failed at /tmp/tmprwc_llbu.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmprwc_llbu.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprwc_llbu.jl:28\ntest set: Test Failed at /tmp/tmprwc_llbu.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmprwc_llbu.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprwc_llbu.jl:28\ntest set: Test Failed at /tmp/tmprwc_llbu.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprwc_llbu.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprwc_llbu.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprwc_llbu.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq64mrkgq.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpq64mrkgq.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq64mrkgq.jl:28\ntest set: Test Failed at /tmp/tmpq64mrkgq.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpq64mrkgq.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq64mrkgq.jl:28\ntest set: Test Failed at /tmp/tmpq64mrkgq.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpq64mrkgq.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq64mrkgq.jl:28\ntest set: Test Failed at /tmp/tmpq64mrkgq.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpq64mrkgq.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq64mrkgq.jl:28\ntest set: Test Failed at /tmp/tmpq64mrkgq.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpq64mrkgq.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq64mrkgq.jl:28\ntest set: Test Failed at /tmp/tmpq64mrkgq.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpq64mrkgq.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpq64mrkgq.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq64mrkgq.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeuc1nu0h.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpeuc1nu0h.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeuc1nu0h.jl:28\ntest set: Test Failed at /tmp/tmpeuc1nu0h.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpeuc1nu0h.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeuc1nu0h.jl:28\ntest set: Test Failed at /tmp/tmpeuc1nu0h.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpeuc1nu0h.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeuc1nu0h.jl:28\ntest set: Test Failed at /tmp/tmpeuc1nu0h.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpeuc1nu0h.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeuc1nu0h.jl:28\ntest set: Test Failed at /tmp/tmpeuc1nu0h.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpeuc1nu0h.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeuc1nu0h.jl:28\ntest set: Test Failed at /tmp/tmpeuc1nu0h.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpeuc1nu0h.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpeuc1nu0h.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeuc1nu0h.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg7ghgv_9.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpg7ghgv_9.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg7ghgv_9.jl:28\ntest set: Test Failed at /tmp/tmpg7ghgv_9.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg7ghgv_9.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg7ghgv_9.jl:28\ntest set: Test Failed at /tmp/tmpg7ghgv_9.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpg7ghgv_9.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg7ghgv_9.jl:28\ntest set: Test Failed at /tmp/tmpg7ghgv_9.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpg7ghgv_9.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg7ghgv_9.jl:28\ntest set: Test Failed at /tmp/tmpg7ghgv_9.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpg7ghgv_9.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg7ghgv_9.jl:28\ntest set: Test Failed at /tmp/tmpg7ghgv_9.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpg7ghgv_9.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpg7ghgv_9.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg7ghgv_9.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptiucww7r.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmptiucww7r.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptiucww7r.jl:28\ntest set: Test Failed at /tmp/tmptiucww7r.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptiucww7r.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptiucww7r.jl:28\ntest set: Test Failed at /tmp/tmptiucww7r.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptiucww7r.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptiucww7r.jl:28\ntest set: Test Failed at /tmp/tmptiucww7r.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmptiucww7r.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptiucww7r.jl:28\ntest set: Test Failed at /tmp/tmptiucww7r.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmptiucww7r.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptiucww7r.jl:28\ntest set: Test Failed at /tmp/tmptiucww7r.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptiucww7r.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptiucww7r.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptiucww7r.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb9f4ba19.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpb9f4ba19.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb9f4ba19.jl:28\ntest set: Test Failed at /tmp/tmpb9f4ba19.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpb9f4ba19.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb9f4ba19.jl:28\ntest set: Test Failed at /tmp/tmpb9f4ba19.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpb9f4ba19.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb9f4ba19.jl:28\ntest set: Test Failed at /tmp/tmpb9f4ba19.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpb9f4ba19.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb9f4ba19.jl:28\ntest set: Test Failed at /tmp/tmpb9f4ba19.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpb9f4ba19.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb9f4ba19.jl:28\ntest set: Test Failed at /tmp/tmpb9f4ba19.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpb9f4ba19.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb9f4ba19.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb9f4ba19.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdko6pz2_.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpdko6pz2_.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdko6pz2_.jl:28\ntest set: Test Failed at /tmp/tmpdko6pz2_.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdko6pz2_.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdko6pz2_.jl:28\ntest set: Test Failed at /tmp/tmpdko6pz2_.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdko6pz2_.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdko6pz2_.jl:28\ntest set: Test Failed at /tmp/tmpdko6pz2_.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpdko6pz2_.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdko6pz2_.jl:28\ntest set: Test Failed at /tmp/tmpdko6pz2_.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpdko6pz2_.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdko6pz2_.jl:28\ntest set: Test Failed at /tmp/tmpdko6pz2_.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdko6pz2_.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdko6pz2_.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdko6pz2_.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoh2r9w85.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpoh2r9w85.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoh2r9w85.jl:28\ntest set: Test Failed at /tmp/tmpoh2r9w85.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpoh2r9w85.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoh2r9w85.jl:28\ntest set: Test Failed at /tmp/tmpoh2r9w85.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpoh2r9w85.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoh2r9w85.jl:28\ntest set: Test Failed at /tmp/tmpoh2r9w85.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpoh2r9w85.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoh2r9w85.jl:28\ntest set: Test Failed at /tmp/tmpoh2r9w85.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpoh2r9w85.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoh2r9w85.jl:28\ntest set: Test Failed at /tmp/tmpoh2r9w85.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpoh2r9w85.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpoh2r9w85.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoh2r9w85.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpzt7pp4dd.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpzt7pp4dd.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzt7pp4dd.jl:28\\ntest set: Test Failed at /tmp/tmpzt7pp4dd.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpzt7pp4dd.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzt7pp4dd.jl:28\\ntest set: Test Failed at /tmp/tmpzt7pp4dd.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpzt7pp4dd.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzt7pp4dd.jl:28\\ntest set: Test Failed at /tmp/tmpzt7pp4dd.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpzt7pp4dd.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzt7pp4dd.jl:28\\ntest set: Test Failed at /tmp/tmpzt7pp4dd.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpzt7pp4dd.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzt7pp4dd.jl:28\\ntest set: Test Failed at /tmp/tmpzt7pp4dd.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpzt7pp4dd.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzt7pp4dd.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5  '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdvzc_2mi.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpdvzc_2mi.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdvzc_2mi.jl:28\ntest set: Test Failed at /tmp/tmpdvzc_2mi.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdvzc_2mi.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdvzc_2mi.jl:28\ntest set: Test Failed at /tmp/tmpdvzc_2mi.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpdvzc_2mi.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdvzc_2mi.jl:28\ntest set: Test Failed at /tmp/tmpdvzc_2mi.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpdvzc_2mi.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdvzc_2mi.jl:28\ntest set: Test Failed at /tmp/tmpdvzc_2mi.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpdvzc_2mi.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdvzc_2mi.jl:28\ntest set: Test Failed at /tmp/tmpdvzc_2mi.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpdvzc_2mi.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpdvzc_2mi.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdvzc_2mi.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpadwlldb5.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpadwlldb5.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpadwlldb5.jl:28\ntest set: Test Failed at /tmp/tmpadwlldb5.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpadwlldb5.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpadwlldb5.jl:28\ntest set: Test Failed at /tmp/tmpadwlldb5.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpadwlldb5.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpadwlldb5.jl:28\ntest set: Test Failed at /tmp/tmpadwlldb5.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpadwlldb5.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpadwlldb5.jl:28\ntest set: Test Failed at /tmp/tmpadwlldb5.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpadwlldb5.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpadwlldb5.jl:28\ntest set: Test Failed at /tmp/tmpadwlldb5.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpadwlldb5.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpadwlldb5.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpadwlldb5.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp87k_3k4o.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp87k_3k4o.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87k_3k4o.jl:28\ntest set: Test Failed at /tmp/tmp87k_3k4o.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp87k_3k4o.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87k_3k4o.jl:28\ntest set: Test Failed at /tmp/tmp87k_3k4o.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp87k_3k4o.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87k_3k4o.jl:28\ntest set: Test Failed at /tmp/tmp87k_3k4o.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp87k_3k4o.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87k_3k4o.jl:28\ntest set: Test Failed at /tmp/tmp87k_3k4o.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp87k_3k4o.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87k_3k4o.jl:28\ntest set: Test Failed at /tmp/tmp87k_3k4o.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp87k_3k4o.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87k_3k4o.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp87k_3k4o.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwp0qphl4.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpwp0qphl4.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwp0qphl4.jl:28\ntest set: Test Failed at /tmp/tmpwp0qphl4.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwp0qphl4.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwp0qphl4.jl:28\ntest set: Test Failed at /tmp/tmpwp0qphl4.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwp0qphl4.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwp0qphl4.jl:28\ntest set: Test Failed at /tmp/tmpwp0qphl4.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpwp0qphl4.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwp0qphl4.jl:28\ntest set: Test Failed at /tmp/tmpwp0qphl4.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwp0qphl4.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwp0qphl4.jl:28\ntest set: Test Failed at /tmp/tmpwp0qphl4.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwp0qphl4.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwp0qphl4.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwp0qphl4.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    \"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 3 == 0\n            sum += lst[i]^2\n   \
    \     elseif i % 4 == 0 && i % 3 != 0\n            sum += lst[i]^3\n        else\n\
    \            sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2, 3]) ==\
    \ 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprrs09tu8.jl:39\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmprrs09tu8.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprrs09tu8.jl:38\ntest set: Test Failed at /tmp/tmprrs09tu8.jl:40\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprrs09tu8.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprrs09tu8.jl:38\ntest set: Test Failed at /tmp/tmprrs09tu8.jl:45\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmprrs09tu8.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprrs09tu8.jl:38\ntest set: Test Failed at /tmp/tmprrs09tu8.jl:46\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmprrs09tu8.jl:46\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprrs09tu8.jl:38\ntest set: Test Failed at /tmp/tmprrs09tu8.jl:48\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmprrs09tu8.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprrs09tu8.jl:38\ntest set: Test Failed at /tmp/tmprrs09tu8.jl:49\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmprrs09tu8.jl:49\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmprrs09tu8.jl:38\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprrs09tu8.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpikocjmt9.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpikocjmt9.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpikocjmt9.jl:28\ntest set: Test Failed at /tmp/tmpikocjmt9.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpikocjmt9.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpikocjmt9.jl:28\ntest set: Test Failed at /tmp/tmpikocjmt9.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpikocjmt9.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpikocjmt9.jl:28\ntest set: Test Failed at /tmp/tmpikocjmt9.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpikocjmt9.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpikocjmt9.jl:28\ntest set: Test Failed at /tmp/tmpikocjmt9.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpikocjmt9.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpikocjmt9.jl:28\ntest set: Test Failed at /tmp/tmpikocjmt9.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpikocjmt9.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpikocjmt9.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpikocjmt9.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgbbtlp7z.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpgbbtlp7z.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgbbtlp7z.jl:28\ntest set: Test Failed at /tmp/tmpgbbtlp7z.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgbbtlp7z.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgbbtlp7z.jl:28\ntest set: Test Failed at /tmp/tmpgbbtlp7z.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgbbtlp7z.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgbbtlp7z.jl:28\ntest set: Test Failed at /tmp/tmpgbbtlp7z.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpgbbtlp7z.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgbbtlp7z.jl:28\ntest set: Test Failed at /tmp/tmpgbbtlp7z.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgbbtlp7z.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgbbtlp7z.jl:28\ntest set: Test Failed at /tmp/tmpgbbtlp7z.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgbbtlp7z.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgbbtlp7z.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgbbtlp7z.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgdhpi5pa.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpgdhpi5pa.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgdhpi5pa.jl:28\ntest set: Test Failed at /tmp/tmpgdhpi5pa.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgdhpi5pa.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgdhpi5pa.jl:28\ntest set: Test Failed at /tmp/tmpgdhpi5pa.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgdhpi5pa.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgdhpi5pa.jl:28\ntest set: Test Failed at /tmp/tmpgdhpi5pa.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpgdhpi5pa.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgdhpi5pa.jl:28\ntest set: Test Failed at /tmp/tmpgdhpi5pa.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgdhpi5pa.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgdhpi5pa.jl:28\ntest set: Test Failed at /tmp/tmpgdhpi5pa.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgdhpi5pa.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgdhpi5pa.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgdhpi5pa.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp383_xxjk.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp383_xxjk.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp383_xxjk.jl:28\ntest set: Test Failed at /tmp/tmp383_xxjk.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp383_xxjk.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp383_xxjk.jl:28\ntest set: Test Failed at /tmp/tmp383_xxjk.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp383_xxjk.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp383_xxjk.jl:28\ntest set: Test Failed at /tmp/tmp383_xxjk.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp383_xxjk.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp383_xxjk.jl:28\ntest set: Test Failed at /tmp/tmp383_xxjk.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp383_xxjk.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp383_xxjk.jl:28\ntest set: Test Failed at /tmp/tmp383_xxjk.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp383_xxjk.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp383_xxjk.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp383_xxjk.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu5f45e4q.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpu5f45e4q.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu5f45e4q.jl:28\ntest set: Test Failed at /tmp/tmpu5f45e4q.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu5f45e4q.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu5f45e4q.jl:28\ntest set: Test Failed at /tmp/tmpu5f45e4q.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpu5f45e4q.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu5f45e4q.jl:28\ntest set: Test Failed at /tmp/tmpu5f45e4q.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpu5f45e4q.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu5f45e4q.jl:28\ntest set: Test Failed at /tmp/tmpu5f45e4q.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpu5f45e4q.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu5f45e4q.jl:28\ntest set: Test Failed at /tmp/tmpu5f45e4q.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpu5f45e4q.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpu5f45e4q.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu5f45e4q.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0ykpc4fw.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp0ykpc4fw.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ykpc4fw.jl:28\ntest set: Test Failed at /tmp/tmp0ykpc4fw.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0ykpc4fw.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ykpc4fw.jl:28\ntest set: Test Failed at /tmp/tmp0ykpc4fw.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp0ykpc4fw.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ykpc4fw.jl:28\ntest set: Test Failed at /tmp/tmp0ykpc4fw.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp0ykpc4fw.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ykpc4fw.jl:28\ntest set: Test Failed at /tmp/tmp0ykpc4fw.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp0ykpc4fw.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ykpc4fw.jl:28\ntest set: Test Failed at /tmp/tmp0ykpc4fw.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp0ykpc4fw.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp0ykpc4fw.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ykpc4fw.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwxk2rdeo.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpwxk2rdeo.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwxk2rdeo.jl:28\ntest set: Test Failed at /tmp/tmpwxk2rdeo.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwxk2rdeo.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwxk2rdeo.jl:28\ntest set: Test Failed at /tmp/tmpwxk2rdeo.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwxk2rdeo.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwxk2rdeo.jl:28\ntest set: Test Failed at /tmp/tmpwxk2rdeo.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpwxk2rdeo.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwxk2rdeo.jl:28\ntest set: Test Failed at /tmp/tmpwxk2rdeo.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwxk2rdeo.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwxk2rdeo.jl:28\ntest set: Test Failed at /tmp/tmpwxk2rdeo.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwxk2rdeo.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwxk2rdeo.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwxk2rdeo.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5yat7fda.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp5yat7fda.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5yat7fda.jl:28\ntest set: Test Failed at /tmp/tmp5yat7fda.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5yat7fda.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5yat7fda.jl:28\ntest set: Test Failed at /tmp/tmp5yat7fda.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5yat7fda.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5yat7fda.jl:28\ntest set: Test Failed at /tmp/tmp5yat7fda.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp5yat7fda.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5yat7fda.jl:28\ntest set: Test Failed at /tmp/tmp5yat7fda.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5yat7fda.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5yat7fda.jl:28\ntest set: Test Failed at /tmp/tmp5yat7fda.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5yat7fda.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5yat7fda.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5yat7fda.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5fvrf8r7.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp5fvrf8r7.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5fvrf8r7.jl:28\ntest set: Test Failed at /tmp/tmp5fvrf8r7.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5fvrf8r7.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5fvrf8r7.jl:28\ntest set: Test Failed at /tmp/tmp5fvrf8r7.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp5fvrf8r7.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5fvrf8r7.jl:28\ntest set: Test Failed at /tmp/tmp5fvrf8r7.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp5fvrf8r7.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5fvrf8r7.jl:28\ntest set: Test Failed at /tmp/tmp5fvrf8r7.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp5fvrf8r7.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5fvrf8r7.jl:28\ntest set: Test Failed at /tmp/tmp5fvrf8r7.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp5fvrf8r7.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp5fvrf8r7.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5fvrf8r7.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp2fh9uog7.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp2fh9uog7.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2fh9uog7.jl:28\\ntest set: Test Failed at /tmp/tmp2fh9uog7.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp2fh9uog7.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2fh9uog7.jl:28\\ntest set: Test Failed at /tmp/tmp2fh9uog7.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp2fh9uog7.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2fh9uog7.jl:28\\ntest set: Test Failed at /tmp/tmp2fh9uog7.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmp2fh9uog7.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2fh9uog7.jl:28\\ntest set: Test Failed at /tmp/tmp2fh9uog7.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp2fh9uog7.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2fh9uog7.jl:28\\ntest set: Test Failed at /tmp/tmp2fh9uog7.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp2fh9uog7.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp2fh9uog7.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_pw66g78.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp_pw66g78.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_pw66g78.jl:28\ntest set: Test Failed at /tmp/tmp_pw66g78.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_pw66g78.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_pw66g78.jl:28\ntest set: Test Failed at /tmp/tmp_pw66g78.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_pw66g78.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_pw66g78.jl:28\ntest set: Test Failed at /tmp/tmp_pw66g78.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp_pw66g78.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_pw66g78.jl:28\ntest set: Test Failed at /tmp/tmp_pw66g78.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_pw66g78.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_pw66g78.jl:28\ntest set: Test Failed at /tmp/tmp_pw66g78.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_pw66g78.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_pw66g78.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_pw66g78.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n            sum\
    \ += lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw0xrdh8i.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpw0xrdh8i.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw0xrdh8i.jl:28\ntest set: Test Failed at /tmp/tmpw0xrdh8i.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw0xrdh8i.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw0xrdh8i.jl:28\ntest set: Test Failed at /tmp/tmpw0xrdh8i.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpw0xrdh8i.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw0xrdh8i.jl:28\ntest set: Test Failed at /tmp/tmpw0xrdh8i.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpw0xrdh8i.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw0xrdh8i.jl:28\ntest set: Test Failed at /tmp/tmpw0xrdh8i.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpw0xrdh8i.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw0xrdh8i.jl:28\ntest set: Test Failed at /tmp/tmpw0xrdh8i.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpw0xrdh8i.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpw0xrdh8i.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw0xrdh8i.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i = 1:length(lst)\n        if i % 3 == 0\n          \
    \  sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n \
    \       else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3eb79ej2.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp3eb79ej2.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3eb79ej2.jl:28\ntest set: Test Failed at /tmp/tmp3eb79ej2.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3eb79ej2.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3eb79ej2.jl:28\ntest set: Test Failed at /tmp/tmp3eb79ej2.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3eb79ej2.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3eb79ej2.jl:28\ntest set: Test Failed at /tmp/tmp3eb79ej2.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp3eb79ej2.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3eb79ej2.jl:28\ntest set: Test Failed at /tmp/tmp3eb79ej2.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3eb79ej2.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3eb79ej2.jl:28\ntest set: Test Failed at /tmp/tmp3eb79ej2.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3eb79ej2.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3eb79ej2.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3eb79ej2.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd9j_ao9r.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpd9j_ao9r.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd9j_ao9r.jl:28\ntest set: Test Failed at /tmp/tmpd9j_ao9r.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd9j_ao9r.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd9j_ao9r.jl:28\ntest set: Test Failed at /tmp/tmpd9j_ao9r.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpd9j_ao9r.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd9j_ao9r.jl:28\ntest set: Test Failed at /tmp/tmpd9j_ao9r.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpd9j_ao9r.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd9j_ao9r.jl:28\ntest set: Test Failed at /tmp/tmpd9j_ao9r.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpd9j_ao9r.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd9j_ao9r.jl:28\ntest set: Test Failed at /tmp/tmpd9j_ao9r.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpd9j_ao9r.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpd9j_ao9r.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd9j_ao9r.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp8c5zd26c.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp8c5zd26c.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8c5zd26c.jl:28\\ntest set: Test Failed at /tmp/tmp8c5zd26c.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp8c5zd26c.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8c5zd26c.jl:28\\ntest set: Test Failed at /tmp/tmp8c5zd26c.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp8c5zd26c.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8c5zd26c.jl:28\\ntest set: Test Failed at /tmp/tmp8c5zd26c.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmp8c5zd26c.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8c5zd26c.jl:28\\ntest set: Test Failed at /tmp/tmp8c5zd26c.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp8c5zd26c.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8c5zd26c.jl:28\\ntest set: Test Failed at /tmp/tmp8c5zd26c.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp8c5zd26c.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp8c5zd26c.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1mxdthqs.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp1mxdthqs.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1mxdthqs.jl:28\ntest set: Test Failed at /tmp/tmp1mxdthqs.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1mxdthqs.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1mxdthqs.jl:28\ntest set: Test Failed at /tmp/tmp1mxdthqs.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp1mxdthqs.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1mxdthqs.jl:28\ntest set: Test Failed at /tmp/tmp1mxdthqs.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp1mxdthqs.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1mxdthqs.jl:28\ntest set: Test Failed at /tmp/tmp1mxdthqs.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp1mxdthqs.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1mxdthqs.jl:28\ntest set: Test Failed at /tmp/tmp1mxdthqs.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp1mxdthqs.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp1mxdthqs.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1mxdthqs.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    \"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 3 == 0\n            lst[i] = lst[i]^2\n \
    \       elseif i % 4 == 0 && i % 3 != 0\n            lst[i] = lst[i]^3\n     \
    \   end\n        sum += lst[i]\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1,\
    \ 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1, -5, 2,\
    \ -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\t@test(candidate([-1,\
    \ 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16, -9, -2, 36, 36, 26,\
    \ -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1, -3,\
    \ 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10]) ==\
    \ -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzol_sm4w.jl:38\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpzol_sm4w.jl:38\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzol_sm4w.jl:37\ntest set: Test Failed at /tmp/tmpzol_sm4w.jl:39\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzol_sm4w.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzol_sm4w.jl:37\ntest set: Test Failed at /tmp/tmpzol_sm4w.jl:44\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpzol_sm4w.jl:44\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzol_sm4w.jl:37\ntest set: Test Failed at /tmp/tmpzol_sm4w.jl:45\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpzol_sm4w.jl:45\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzol_sm4w.jl:37\ntest set: Test Failed at /tmp/tmpzol_sm4w.jl:47\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpzol_sm4w.jl:47\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzol_sm4w.jl:37\ntest set: Test Failed at /tmp/tmpzol_sm4w.jl:48\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpzol_sm4w.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzol_sm4w.jl:37\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzol_sm4w.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7zzf07hs.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp7zzf07hs.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7zzf07hs.jl:28\ntest set: Test Failed at /tmp/tmp7zzf07hs.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7zzf07hs.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7zzf07hs.jl:28\ntest set: Test Failed at /tmp/tmp7zzf07hs.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7zzf07hs.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7zzf07hs.jl:28\ntest set: Test Failed at /tmp/tmp7zzf07hs.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp7zzf07hs.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7zzf07hs.jl:28\ntest set: Test Failed at /tmp/tmp7zzf07hs.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7zzf07hs.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7zzf07hs.jl:28\ntest set: Test Failed at /tmp/tmp7zzf07hs.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7zzf07hs.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7zzf07hs.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7zzf07hs.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_xlfgblr.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp_xlfgblr.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_xlfgblr.jl:28\ntest set: Test Failed at /tmp/tmp_xlfgblr.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_xlfgblr.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_xlfgblr.jl:28\ntest set: Test Failed at /tmp/tmp_xlfgblr.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp_xlfgblr.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_xlfgblr.jl:28\ntest set: Test Failed at /tmp/tmp_xlfgblr.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp_xlfgblr.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_xlfgblr.jl:28\ntest set: Test Failed at /tmp/tmp_xlfgblr.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp_xlfgblr.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_xlfgblr.jl:28\ntest set: Test Failed at /tmp/tmp_xlfgblr.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp_xlfgblr.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp_xlfgblr.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_xlfgblr.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpzqi66w20.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpzqi66w20.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzqi66w20.jl:28\\ntest set: Test Failed at /tmp/tmpzqi66w20.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpzqi66w20.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzqi66w20.jl:28\\ntest set: Test Failed at /tmp/tmpzqi66w20.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpzqi66w20.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzqi66w20.jl:28\\ntest set: Test Failed at /tmp/tmpzqi66w20.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpzqi66w20.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzqi66w20.jl:28\\ntest set: Test Failed at /tmp/tmpzqi66w20.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 67674 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpzqi66w20.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzqi66w20.jl:28\\ntest set: Test Failed at /tmp/tmpzqi66w20.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 8872 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpzqi66w20.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpzqi66w20.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n  \
    \          sum += lst[i]^3\n        else\n            sum += lst[i]\n        end\n\
    \    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpte7qzcqh.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpte7qzcqh.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpte7qzcqh.jl:28\ntest set: Test Failed at /tmp/tmpte7qzcqh.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpte7qzcqh.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpte7qzcqh.jl:28\ntest set: Test Failed at /tmp/tmpte7qzcqh.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpte7qzcqh.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpte7qzcqh.jl:28\ntest set: Test Failed at /tmp/tmpte7qzcqh.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpte7qzcqh.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpte7qzcqh.jl:28\ntest set: Test Failed at /tmp/tmpte7qzcqh.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 65958 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpte7qzcqh.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpte7qzcqh.jl:28\ntest set: Test Failed at /tmp/tmpte7qzcqh.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6142 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpte7qzcqh.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpte7qzcqh.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpte7qzcqh.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmeui4obw.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpmeui4obw.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmeui4obw.jl:28\ntest set: Test Failed at /tmp/tmpmeui4obw.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmeui4obw.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmeui4obw.jl:28\ntest set: Test Failed at /tmp/tmpmeui4obw.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmeui4obw.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmeui4obw.jl:28\ntest set: Test Failed at /tmp/tmpmeui4obw.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpmeui4obw.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmeui4obw.jl:28\ntest set: Test Failed at /tmp/tmpmeui4obw.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpmeui4obw.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmeui4obw.jl:28\ntest set: Test Failed at /tmp/tmpmeui4obw.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmeui4obw.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmeui4obw.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmeui4obw.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplwcneicp.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmplwcneicp.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplwcneicp.jl:28\ntest set: Test Failed at /tmp/tmplwcneicp.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplwcneicp.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplwcneicp.jl:28\ntest set: Test Failed at /tmp/tmplwcneicp.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmplwcneicp.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplwcneicp.jl:28\ntest set: Test Failed at /tmp/tmplwcneicp.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmplwcneicp.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplwcneicp.jl:28\ntest set: Test Failed at /tmp/tmplwcneicp.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmplwcneicp.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplwcneicp.jl:28\ntest set: Test Failed at /tmp/tmplwcneicp.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmplwcneicp.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmplwcneicp.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplwcneicp.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpaaklnluz.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpaaklnluz.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpaaklnluz.jl:28\\ntest set: Test Failed at /tmp/tmpaaklnluz.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpaaklnluz.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpaaklnluz.jl:28\\ntest set: Test Failed at /tmp/tmpaaklnluz.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpaaklnluz.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpaaklnluz.jl:28\\ntest set: Test Failed at /tmp/tmpaaklnluz.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpaaklnluz.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpaaklnluz.jl:28\\ntest set: Test Failed at /tmp/tmpaaklnluz.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 67674 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpaaklnluz.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpaaklnluz.jl:28\\ntest set: Test Failed at /tmp/tmpaaklnluz.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 8872 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpaaklnluz.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpaaklnluz.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmptmnsiq9o.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmptmnsiq9o.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptmnsiq9o.jl:28\\ntest set: Test Failed at /tmp/tmptmnsiq9o.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmptmnsiq9o.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptmnsiq9o.jl:28\\ntest set: Test Failed at /tmp/tmptmnsiq9o.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmptmnsiq9o.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptmnsiq9o.jl:28\\ntest set: Test Failed at /tmp/tmptmnsiq9o.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmptmnsiq9o.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptmnsiq9o.jl:28\\ntest set: Test Failed at /tmp/tmptmnsiq9o.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmptmnsiq9o.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptmnsiq9o.jl:28\\ntest set: Test Failed at /tmp/tmptmnsiq9o.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmptmnsiq9o.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmptmnsiq9o.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7bi29xgd.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp7bi29xgd.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7bi29xgd.jl:28\ntest set: Test Failed at /tmp/tmp7bi29xgd.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7bi29xgd.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7bi29xgd.jl:28\ntest set: Test Failed at /tmp/tmp7bi29xgd.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7bi29xgd.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7bi29xgd.jl:28\ntest set: Test Failed at /tmp/tmp7bi29xgd.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp7bi29xgd.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7bi29xgd.jl:28\ntest set: Test Failed at /tmp/tmp7bi29xgd.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7bi29xgd.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7bi29xgd.jl:28\ntest set: Test Failed at /tmp/tmp7bi29xgd.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7bi29xgd.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7bi29xgd.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7bi29xgd.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp87yibif4.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp87yibif4.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87yibif4.jl:28\ntest set: Test Failed at /tmp/tmp87yibif4.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp87yibif4.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87yibif4.jl:28\ntest set: Test Failed at /tmp/tmp87yibif4.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp87yibif4.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87yibif4.jl:28\ntest set: Test Failed at /tmp/tmp87yibif4.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp87yibif4.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87yibif4.jl:28\ntest set: Test Failed at /tmp/tmp87yibif4.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp87yibif4.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87yibif4.jl:28\ntest set: Test Failed at /tmp/tmp87yibif4.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp87yibif4.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp87yibif4.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp87yibif4.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt1bwd8zc.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpt1bwd8zc.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt1bwd8zc.jl:28\ntest set: Test Failed at /tmp/tmpt1bwd8zc.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt1bwd8zc.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt1bwd8zc.jl:28\ntest set: Test Failed at /tmp/tmpt1bwd8zc.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt1bwd8zc.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt1bwd8zc.jl:28\ntest set: Test Failed at /tmp/tmpt1bwd8zc.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpt1bwd8zc.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt1bwd8zc.jl:28\ntest set: Test Failed at /tmp/tmpt1bwd8zc.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpt1bwd8zc.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt1bwd8zc.jl:28\ntest set: Test Failed at /tmp/tmpt1bwd8zc.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt1bwd8zc.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt1bwd8zc.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt1bwd8zc.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpigo76qwv.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpigo76qwv.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpigo76qwv.jl:28\\ntest set: Test Failed at /tmp/tmpigo76qwv.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpigo76qwv.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpigo76qwv.jl:28\\ntest set: Test Failed at /tmp/tmpigo76qwv.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpigo76qwv.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpigo76qwv.jl:28\\ntest set: Test Failed at /tmp/tmpigo76qwv.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpigo76qwv.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpigo76qwv.jl:28\\ntest set: Test Failed at /tmp/tmpigo76qwv.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpigo76qwv.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpigo76qwv.jl:28\\ntest set: Test Failed at /tmp/tmpigo76qwv.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpigo76qwv.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpigo76qwv.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpuqc8kn2z.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpuqc8kn2z.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuqc8kn2z.jl:28\\ntest set: Test Failed at /tmp/tmpuqc8kn2z.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpuqc8kn2z.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuqc8kn2z.jl:28\\ntest set: Test Failed at /tmp/tmpuqc8kn2z.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpuqc8kn2z.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuqc8kn2z.jl:28\\ntest set: Test Failed at /tmp/tmpuqc8kn2z.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpuqc8kn2z.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuqc8kn2z.jl:28\\ntest set: Test Failed at /tmp/tmpuqc8kn2z.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpuqc8kn2z.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuqc8kn2z.jl:28\\ntest set: Test Failed at /tmp/tmpuqc8kn2z.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpuqc8kn2z.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpuqc8kn2z.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    \"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 3 == 0\n            sum += lst[i]^2\n   \
    \     elseif i % 4 == 0\n            sum += lst[i]^3\n        else\n         \
    \   sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1,\
    \ 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1, -5, 2,\
    \ -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\t@test(candidate([-1,\
    \ 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16, -9, -2, 36, 36, 26,\
    \ -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1, -3,\
    \ 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10]) ==\
    \ -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvw0gni48.jl:39\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpvw0gni48.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvw0gni48.jl:38\ntest set: Test Failed at /tmp/tmpvw0gni48.jl:40\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvw0gni48.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvw0gni48.jl:38\ntest set: Test Failed at /tmp/tmpvw0gni48.jl:45\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvw0gni48.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvw0gni48.jl:38\ntest set: Test Failed at /tmp/tmpvw0gni48.jl:46\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpvw0gni48.jl:46\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvw0gni48.jl:38\ntest set: Test Failed at /tmp/tmpvw0gni48.jl:48\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvw0gni48.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvw0gni48.jl:38\ntest set: Test Failed at /tmp/tmpvw0gni48.jl:49\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvw0gni48.jl:49\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvw0gni48.jl:38\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvw0gni48.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfazyi8mz.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpfazyi8mz.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfazyi8mz.jl:28\ntest set: Test Failed at /tmp/tmpfazyi8mz.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfazyi8mz.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfazyi8mz.jl:28\ntest set: Test Failed at /tmp/tmpfazyi8mz.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfazyi8mz.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfazyi8mz.jl:28\ntest set: Test Failed at /tmp/tmpfazyi8mz.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpfazyi8mz.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfazyi8mz.jl:28\ntest set: Test Failed at /tmp/tmpfazyi8mz.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfazyi8mz.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfazyi8mz.jl:28\ntest set: Test Failed at /tmp/tmpfazyi8mz.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfazyi8mz.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfazyi8mz.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfazyi8mz.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    \"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 3 == 0\n            sum += lst[i]^2\n   \
    \     elseif i % 4 == 0\n            sum += lst[i]^3\n        else\n         \
    \   sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1,\
    \ 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1, -5, 2,\
    \ -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\t@test(candidate([-1,\
    \ 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16, -9, -2, 36, 36, 26,\
    \ -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1, -3,\
    \ 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10]) ==\
    \ -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps1l9pzq1.jl:39\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmps1l9pzq1.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps1l9pzq1.jl:38\ntest set: Test Failed at /tmp/tmps1l9pzq1.jl:40\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps1l9pzq1.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps1l9pzq1.jl:38\ntest set: Test Failed at /tmp/tmps1l9pzq1.jl:45\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmps1l9pzq1.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps1l9pzq1.jl:38\ntest set: Test Failed at /tmp/tmps1l9pzq1.jl:46\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmps1l9pzq1.jl:46\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps1l9pzq1.jl:38\ntest set: Test Failed at /tmp/tmps1l9pzq1.jl:48\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmps1l9pzq1.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps1l9pzq1.jl:38\ntest set: Test Failed at /tmp/tmps1l9pzq1.jl:49\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps1l9pzq1.jl:49\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps1l9pzq1.jl:38\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps1l9pzq1.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcr6040_m.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpcr6040_m.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcr6040_m.jl:28\ntest set: Test Failed at /tmp/tmpcr6040_m.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcr6040_m.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcr6040_m.jl:28\ntest set: Test Failed at /tmp/tmpcr6040_m.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcr6040_m.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcr6040_m.jl:28\ntest set: Test Failed at /tmp/tmpcr6040_m.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpcr6040_m.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcr6040_m.jl:28\ntest set: Test Failed at /tmp/tmpcr6040_m.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpcr6040_m.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcr6040_m.jl:28\ntest set: Test Failed at /tmp/tmpcr6040_m.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcr6040_m.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcr6040_m.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcr6040_m.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgawqrm5t.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpgawqrm5t.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgawqrm5t.jl:28\ntest set: Test Failed at /tmp/tmpgawqrm5t.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgawqrm5t.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgawqrm5t.jl:28\ntest set: Test Failed at /tmp/tmpgawqrm5t.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgawqrm5t.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgawqrm5t.jl:28\ntest set: Test Failed at /tmp/tmpgawqrm5t.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpgawqrm5t.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgawqrm5t.jl:28\ntest set: Test Failed at /tmp/tmpgawqrm5t.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgawqrm5t.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgawqrm5t.jl:28\ntest set: Test Failed at /tmp/tmpgawqrm5t.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgawqrm5t.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgawqrm5t.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgawqrm5t.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr_1qvxj6.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpr_1qvxj6.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr_1qvxj6.jl:28\ntest set: Test Failed at /tmp/tmpr_1qvxj6.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr_1qvxj6.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr_1qvxj6.jl:28\ntest set: Test Failed at /tmp/tmpr_1qvxj6.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpr_1qvxj6.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr_1qvxj6.jl:28\ntest set: Test Failed at /tmp/tmpr_1qvxj6.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpr_1qvxj6.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr_1qvxj6.jl:28\ntest set: Test Failed at /tmp/tmpr_1qvxj6.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpr_1qvxj6.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr_1qvxj6.jl:28\ntest set: Test Failed at /tmp/tmpr_1qvxj6.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpr_1qvxj6.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpr_1qvxj6.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr_1qvxj6.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n            sum\
    \ += lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwxo5dsru.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpwxo5dsru.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwxo5dsru.jl:28\ntest set: Test Failed at /tmp/tmpwxo5dsru.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwxo5dsru.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwxo5dsru.jl:28\ntest set: Test Failed at /tmp/tmpwxo5dsru.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpwxo5dsru.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwxo5dsru.jl:28\ntest set: Test Failed at /tmp/tmpwxo5dsru.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpwxo5dsru.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwxo5dsru.jl:28\ntest set: Test Failed at /tmp/tmpwxo5dsru.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpwxo5dsru.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwxo5dsru.jl:28\ntest set: Test Failed at /tmp/tmpwxo5dsru.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpwxo5dsru.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpwxo5dsru.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwxo5dsru.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    \"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 3 == 0\n            sum += lst[i]^2\n   \
    \     elseif i % 4 == 0\n            sum += lst[i]^3\n        else\n         \
    \   sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1,\
    \ 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1, -5, 2,\
    \ -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\t@test(candidate([-1,\
    \ 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16, -9, -2, 36, 36, 26,\
    \ -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1, -3,\
    \ 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10]) ==\
    \ -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8mydqd8n.jl:39\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp8mydqd8n.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8mydqd8n.jl:38\ntest set: Test Failed at /tmp/tmp8mydqd8n.jl:40\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8mydqd8n.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8mydqd8n.jl:38\ntest set: Test Failed at /tmp/tmp8mydqd8n.jl:45\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp8mydqd8n.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8mydqd8n.jl:38\ntest set: Test Failed at /tmp/tmp8mydqd8n.jl:46\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp8mydqd8n.jl:46\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8mydqd8n.jl:38\ntest set: Test Failed at /tmp/tmp8mydqd8n.jl:48\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp8mydqd8n.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8mydqd8n.jl:38\ntest set: Test Failed at /tmp/tmp8mydqd8n.jl:49\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp8mydqd8n.jl:49\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8mydqd8n.jl:38\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8mydqd8n.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    \"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 3 == 0\n            sum += lst[i]^2\n   \
    \     elseif i % 4 == 0\n            sum += lst[i]^3\n        else\n         \
    \   sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1,\
    \ 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1, -5, 2,\
    \ -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\t@test(candidate([-1,\
    \ 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16, -9, -2, 36, 36, 26,\
    \ -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1, -3,\
    \ 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10]) ==\
    \ -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqyqfa4if.jl:39\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpqyqfa4if.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqyqfa4if.jl:38\ntest set: Test Failed at /tmp/tmpqyqfa4if.jl:40\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqyqfa4if.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqyqfa4if.jl:38\ntest set: Test Failed at /tmp/tmpqyqfa4if.jl:45\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpqyqfa4if.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqyqfa4if.jl:38\ntest set: Test Failed at /tmp/tmpqyqfa4if.jl:46\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpqyqfa4if.jl:46\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqyqfa4if.jl:38\ntest set: Test Failed at /tmp/tmpqyqfa4if.jl:48\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqyqfa4if.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqyqfa4if.jl:38\ntest set: Test Failed at /tmp/tmpqyqfa4if.jl:49\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpqyqfa4if.jl:49\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqyqfa4if.jl:38\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqyqfa4if.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for (i,x) in enumerate(lst)\n        if i % 3 == 0\n    \
    \        sum += x^2\n        elseif i % 4 == 0\n            sum += x^3\n     \
    \   else\n            sum += x\n        end\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2,\
    \ 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps7zn06ey.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmps7zn06ey.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7zn06ey.jl:28\ntest set: Test Failed at /tmp/tmps7zn06ey.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps7zn06ey.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7zn06ey.jl:28\ntest set: Test Failed at /tmp/tmps7zn06ey.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmps7zn06ey.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7zn06ey.jl:28\ntest set: Test Failed at /tmp/tmps7zn06ey.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmps7zn06ey.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7zn06ey.jl:28\ntest set: Test Failed at /tmp/tmps7zn06ey.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmps7zn06ey.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7zn06ey.jl:28\ntest set: Test Failed at /tmp/tmps7zn06ey.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps7zn06ey.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps7zn06ey.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps7zn06ey.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpvkktxofy.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpvkktxofy.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvkktxofy.jl:28\\ntest set: Test Failed at /tmp/tmpvkktxofy.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpvkktxofy.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvkktxofy.jl:28\\ntest set: Test Failed at /tmp/tmpvkktxofy.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpvkktxofy.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvkktxofy.jl:28\\ntest set: Test Failed at /tmp/tmpvkktxofy.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpvkktxofy.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvkktxofy.jl:28\\ntest set: Test Failed at /tmp/tmpvkktxofy.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpvkktxofy.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvkktxofy.jl:28\\ntest set: Test Failed at /tmp/tmpvkktxofy.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpvkktxofy.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpvkktxofy.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpf21vbn66.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpf21vbn66.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf21vbn66.jl:28\\ntest set: Test Failed at /tmp/tmpf21vbn66.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpf21vbn66.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf21vbn66.jl:28\\ntest set: Test Failed at /tmp/tmpf21vbn66.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpf21vbn66.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf21vbn66.jl:28\\ntest set: Test Failed at /tmp/tmpf21vbn66.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpf21vbn66.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf21vbn66.jl:28\\ntest set: Test Failed at /tmp/tmpf21vbn66.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpf21vbn66.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf21vbn66.jl:28\\ntest set: Test Failed at /tmp/tmpf21vbn66.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpf21vbn66.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpf21vbn66.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpixpat8g3.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpixpat8g3.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpixpat8g3.jl:28\ntest set: Test Failed at /tmp/tmpixpat8g3.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpixpat8g3.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpixpat8g3.jl:28\ntest set: Test Failed at /tmp/tmpixpat8g3.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpixpat8g3.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpixpat8g3.jl:28\ntest set: Test Failed at /tmp/tmpixpat8g3.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpixpat8g3.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpixpat8g3.jl:28\ntest set: Test Failed at /tmp/tmpixpat8g3.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpixpat8g3.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpixpat8g3.jl:28\ntest set: Test Failed at /tmp/tmpixpat8g3.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpixpat8g3.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpixpat8g3.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpixpat8g3.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptck6ezdr.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmptck6ezdr.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptck6ezdr.jl:28\ntest set: Test Failed at /tmp/tmptck6ezdr.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptck6ezdr.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptck6ezdr.jl:28\ntest set: Test Failed at /tmp/tmptck6ezdr.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptck6ezdr.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptck6ezdr.jl:28\ntest set: Test Failed at /tmp/tmptck6ezdr.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmptck6ezdr.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptck6ezdr.jl:28\ntest set: Test Failed at /tmp/tmptck6ezdr.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmptck6ezdr.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptck6ezdr.jl:28\ntest set: Test Failed at /tmp/tmptck6ezdr.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptck6ezdr.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptck6ezdr.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptck6ezdr.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for (i,v) in enumerate(lst)\n        if i % 3 == 0\n    \
    \        sum += v^2\n        elseif i % 4 == 0\n            sum += v^3\n     \
    \   else\n            sum += v\n        end\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2,\
    \ 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2b0j58rm.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp2b0j58rm.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2b0j58rm.jl:28\ntest set: Test Failed at /tmp/tmp2b0j58rm.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2b0j58rm.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2b0j58rm.jl:28\ntest set: Test Failed at /tmp/tmp2b0j58rm.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp2b0j58rm.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2b0j58rm.jl:28\ntest set: Test Failed at /tmp/tmp2b0j58rm.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp2b0j58rm.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2b0j58rm.jl:28\ntest set: Test Failed at /tmp/tmp2b0j58rm.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp2b0j58rm.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2b0j58rm.jl:28\ntest set: Test Failed at /tmp/tmp2b0j58rm.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp2b0j58rm.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp2b0j58rm.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2b0j58rm.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n  \
    \          sum += lst[i]^3\n        else\n            sum += lst[i]\n        end\n\
    \    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp3g8or8pp.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp3g8or8pp.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3g8or8pp.jl:28\\ntest set: Test Failed at /tmp/tmp3g8or8pp.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3g8or8pp.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3g8or8pp.jl:28\\ntest set: Test Failed at /tmp/tmp3g8or8pp.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp3g8or8pp.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3g8or8pp.jl:28\\ntest set: Test Failed at /tmp/tmp3g8or8pp.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmp3g8or8pp.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3g8or8pp.jl:28\\ntest set: Test Failed at /tmp/tmp3g8or8pp.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 65958 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp3g8or8pp.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3g8or8pp.jl:28\\ntest set: Test Failed at /tmp/tmp3g8or8pp.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6142 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3g8or8pp.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3g8or8pp.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps4rgyujx.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmps4rgyujx.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps4rgyujx.jl:28\ntest set: Test Failed at /tmp/tmps4rgyujx.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps4rgyujx.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps4rgyujx.jl:28\ntest set: Test Failed at /tmp/tmps4rgyujx.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmps4rgyujx.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps4rgyujx.jl:28\ntest set: Test Failed at /tmp/tmps4rgyujx.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmps4rgyujx.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps4rgyujx.jl:28\ntest set: Test Failed at /tmp/tmps4rgyujx.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmps4rgyujx.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps4rgyujx.jl:28\ntest set: Test Failed at /tmp/tmps4rgyujx.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmps4rgyujx.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmps4rgyujx.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps4rgyujx.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    \"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 3 == 0\n            sum += lst[i]^2\n   \
    \     elseif i % 4 == 0\n            sum += lst[i]^3\n        else\n         \
    \   sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1,\
    \ 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1, -5, 2,\
    \ -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\t@test(candidate([-1,\
    \ 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16, -9, -2, 36, 36, 26,\
    \ -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1, -3,\
    \ 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10]) ==\
    \ -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt1yo2e5b.jl:39\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpt1yo2e5b.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt1yo2e5b.jl:38\ntest set: Test Failed at /tmp/tmpt1yo2e5b.jl:40\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt1yo2e5b.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt1yo2e5b.jl:38\ntest set: Test Failed at /tmp/tmpt1yo2e5b.jl:45\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpt1yo2e5b.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt1yo2e5b.jl:38\ntest set: Test Failed at /tmp/tmpt1yo2e5b.jl:46\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpt1yo2e5b.jl:46\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt1yo2e5b.jl:38\ntest set: Test Failed at /tmp/tmpt1yo2e5b.jl:48\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpt1yo2e5b.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt1yo2e5b.jl:38\ntest set: Test Failed at /tmp/tmpt1yo2e5b.jl:49\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpt1yo2e5b.jl:49\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpt1yo2e5b.jl:38\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt1yo2e5b.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9wpsob5b.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp9wpsob5b.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wpsob5b.jl:28\ntest set: Test Failed at /tmp/tmp9wpsob5b.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9wpsob5b.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wpsob5b.jl:28\ntest set: Test Failed at /tmp/tmp9wpsob5b.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp9wpsob5b.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wpsob5b.jl:28\ntest set: Test Failed at /tmp/tmp9wpsob5b.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp9wpsob5b.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wpsob5b.jl:28\ntest set: Test Failed at /tmp/tmp9wpsob5b.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp9wpsob5b.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wpsob5b.jl:28\ntest set: Test Failed at /tmp/tmp9wpsob5b.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp9wpsob5b.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp9wpsob5b.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9wpsob5b.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmp3cwq51jm.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmp3cwq51jm.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3cwq51jm.jl:28\\ntest set: Test Failed at /tmp/tmp3cwq51jm.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3cwq51jm.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3cwq51jm.jl:28\\ntest set: Test Failed at /tmp/tmp3cwq51jm.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmp3cwq51jm.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3cwq51jm.jl:28\\ntest set: Test Failed at /tmp/tmp3cwq51jm.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmp3cwq51jm.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3cwq51jm.jl:28\\ntest set: Test Failed at /tmp/tmp3cwq51jm.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 67674 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmp3cwq51jm.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3cwq51jm.jl:28\\ntest set: Test Failed at /tmp/tmp3cwq51jm.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 8872 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmp3cwq51jm.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmp3cwq51jm.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp10fqt91w.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp10fqt91w.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp10fqt91w.jl:28\ntest set: Test Failed at /tmp/tmp10fqt91w.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp10fqt91w.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp10fqt91w.jl:28\ntest set: Test Failed at /tmp/tmp10fqt91w.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp10fqt91w.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp10fqt91w.jl:28\ntest set: Test Failed at /tmp/tmp10fqt91w.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp10fqt91w.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp10fqt91w.jl:28\ntest set: Test Failed at /tmp/tmp10fqt91w.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp10fqt91w.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp10fqt91w.jl:28\ntest set: Test Failed at /tmp/tmp10fqt91w.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp10fqt91w.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp10fqt91w.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp10fqt91w.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptj1c5eu3.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmptj1c5eu3.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptj1c5eu3.jl:28\ntest set: Test Failed at /tmp/tmptj1c5eu3.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptj1c5eu3.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptj1c5eu3.jl:28\ntest set: Test Failed at /tmp/tmptj1c5eu3.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmptj1c5eu3.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptj1c5eu3.jl:28\ntest set: Test Failed at /tmp/tmptj1c5eu3.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmptj1c5eu3.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptj1c5eu3.jl:28\ntest set: Test Failed at /tmp/tmptj1c5eu3.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmptj1c5eu3.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptj1c5eu3.jl:28\ntest set: Test Failed at /tmp/tmptj1c5eu3.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmptj1c5eu3.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmptj1c5eu3.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptj1c5eu3.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfp6k4pjj.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpfp6k4pjj.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfp6k4pjj.jl:28\ntest set: Test Failed at /tmp/tmpfp6k4pjj.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfp6k4pjj.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfp6k4pjj.jl:28\ntest set: Test Failed at /tmp/tmpfp6k4pjj.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpfp6k4pjj.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfp6k4pjj.jl:28\ntest set: Test Failed at /tmp/tmpfp6k4pjj.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpfp6k4pjj.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfp6k4pjj.jl:28\ntest set: Test Failed at /tmp/tmpfp6k4pjj.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfp6k4pjj.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfp6k4pjj.jl:28\ntest set: Test Failed at /tmp/tmpfp6k4pjj.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpfp6k4pjj.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfp6k4pjj.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfp6k4pjj.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp15kc6fif.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp15kc6fif.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp15kc6fif.jl:28\ntest set: Test Failed at /tmp/tmp15kc6fif.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp15kc6fif.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp15kc6fif.jl:28\ntest set: Test Failed at /tmp/tmp15kc6fif.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp15kc6fif.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp15kc6fif.jl:28\ntest set: Test Failed at /tmp/tmp15kc6fif.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp15kc6fif.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp15kc6fif.jl:28\ntest set: Test Failed at /tmp/tmp15kc6fif.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp15kc6fif.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp15kc6fif.jl:28\ntest set: Test Failed at /tmp/tmp15kc6fif.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp15kc6fif.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp15kc6fif.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp15kc6fif.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgt7cw0gm.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpgt7cw0gm.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgt7cw0gm.jl:28\ntest set: Test Failed at /tmp/tmpgt7cw0gm.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgt7cw0gm.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgt7cw0gm.jl:28\ntest set: Test Failed at /tmp/tmpgt7cw0gm.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgt7cw0gm.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgt7cw0gm.jl:28\ntest set: Test Failed at /tmp/tmpgt7cw0gm.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpgt7cw0gm.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgt7cw0gm.jl:28\ntest set: Test Failed at /tmp/tmpgt7cw0gm.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgt7cw0gm.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgt7cw0gm.jl:28\ntest set: Test Failed at /tmp/tmpgt7cw0gm.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgt7cw0gm.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgt7cw0gm.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgt7cw0gm.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcgfyya1s.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpcgfyya1s.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcgfyya1s.jl:28\ntest set: Test Failed at /tmp/tmpcgfyya1s.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcgfyya1s.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcgfyya1s.jl:28\ntest set: Test Failed at /tmp/tmpcgfyya1s.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpcgfyya1s.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcgfyya1s.jl:28\ntest set: Test Failed at /tmp/tmpcgfyya1s.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpcgfyya1s.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcgfyya1s.jl:28\ntest set: Test Failed at /tmp/tmpcgfyya1s.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpcgfyya1s.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcgfyya1s.jl:28\ntest set: Test Failed at /tmp/tmpcgfyya1s.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpcgfyya1s.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpcgfyya1s.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcgfyya1s.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpl6su1sa3.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpl6su1sa3.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpl6su1sa3.jl:28\\ntest set: Test Failed at /tmp/tmpl6su1sa3.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpl6su1sa3.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpl6su1sa3.jl:28\\ntest set: Test Failed at /tmp/tmpl6su1sa3.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpl6su1sa3.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpl6su1sa3.jl:28\\ntest set: Test Failed at /tmp/tmpl6su1sa3.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpl6su1sa3.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpl6su1sa3.jl:28\\ntest set: Test Failed at /tmp/tmpl6su1sa3.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpl6su1sa3.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpl6su1sa3.jl:28\\ntest set: Test Failed at /tmp/tmpl6su1sa3.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpl6su1sa3.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpl6su1sa3.jl:28\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    \"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 3 == 0\n            sum += lst[i]^2\n   \
    \     elseif i % 4 == 0\n            sum += lst[i]^3\n        else\n         \
    \   sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1,\
    \ 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1, -5, 2,\
    \ -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\t@test(candidate([-1,\
    \ 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16, -9, -2, 36, 36, 26,\
    \ -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1, -3,\
    \ 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10]) ==\
    \ -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpezkfsxsv.jl:39\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpezkfsxsv.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpezkfsxsv.jl:38\ntest set: Test Failed at /tmp/tmpezkfsxsv.jl:40\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpezkfsxsv.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpezkfsxsv.jl:38\ntest set: Test Failed at /tmp/tmpezkfsxsv.jl:45\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpezkfsxsv.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpezkfsxsv.jl:38\ntest set: Test Failed at /tmp/tmpezkfsxsv.jl:46\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpezkfsxsv.jl:46\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpezkfsxsv.jl:38\ntest set: Test Failed at /tmp/tmpezkfsxsv.jl:48\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpezkfsxsv.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpezkfsxsv.jl:38\ntest set: Test Failed at /tmp/tmpezkfsxsv.jl:49\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpezkfsxsv.jl:49\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpezkfsxsv.jl:38\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpezkfsxsv.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm_4kq1dw.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpm_4kq1dw.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm_4kq1dw.jl:28\ntest set: Test Failed at /tmp/tmpm_4kq1dw.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpm_4kq1dw.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm_4kq1dw.jl:28\ntest set: Test Failed at /tmp/tmpm_4kq1dw.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpm_4kq1dw.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm_4kq1dw.jl:28\ntest set: Test Failed at /tmp/tmpm_4kq1dw.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpm_4kq1dw.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm_4kq1dw.jl:28\ntest set: Test Failed at /tmp/tmpm_4kq1dw.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpm_4kq1dw.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm_4kq1dw.jl:28\ntest set: Test Failed at /tmp/tmpm_4kq1dw.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpm_4kq1dw.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpm_4kq1dw.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm_4kq1dw.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmily2hev.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpmily2hev.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmily2hev.jl:28\ntest set: Test Failed at /tmp/tmpmily2hev.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmily2hev.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmily2hev.jl:28\ntest set: Test Failed at /tmp/tmpmily2hev.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmily2hev.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmily2hev.jl:28\ntest set: Test Failed at /tmp/tmpmily2hev.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpmily2hev.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmily2hev.jl:28\ntest set: Test Failed at /tmp/tmpmily2hev.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpmily2hev.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmily2hev.jl:28\ntest set: Test Failed at /tmp/tmpmily2hev.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmily2hev.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmily2hev.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmily2hev.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "b'test set: Test Failed at /tmp/tmpycq5zjpf.jl:29\\n  Expression: candidate([1,\
    \ 2, 3]) == 6\\n   Evaluated: 12 == 6\\nStacktrace:\\n [1] top-level scope at\
    \ /tmp/tmpycq5zjpf.jl:29\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpycq5zjpf.jl:28\\ntest set: Test Failed at /tmp/tmpycq5zjpf.jl:30\\\
    n  Expression: candidate([1, 4, 9]) == 14\\n   Evaluated: 86 == 14\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpycq5zjpf.jl:30\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpycq5zjpf.jl:28\\ntest set: Test Failed at /tmp/tmpycq5zjpf.jl:35\\\
    n  Expression: candidate([-1, -5, 2, -1, -5]) == -126\\n   Evaluated: -8 == -126\\\
    nStacktrace:\\n [1] top-level scope at /tmp/tmpycq5zjpf.jl:35\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpycq5zjpf.jl:28\\ntest set: Test Failed at /tmp/tmpycq5zjpf.jl:36\\\
    n  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\\n   Evaluated: -156 ==\
    \ 3030\\nStacktrace:\\n [1] top-level scope at /tmp/tmpycq5zjpf.jl:36\\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpycq5zjpf.jl:28\\ntest set: Test Failed at /tmp/tmpycq5zjpf.jl:38\\\
    n  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\\n   Evaluated: 66090 == -14196\\nStacktrace:\\n [1] top-level\
    \ scope at /tmp/tmpycq5zjpf.jl:38\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpycq5zjpf.jl:28\\ntest set: Test Failed at /tmp/tmpycq5zjpf.jl:39\\\
    n  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\\n   Evaluated: 6324 == -1448\\nStacktrace:\\\
    n [1] top-level scope at /tmp/tmpycq5zjpf.jl:39\\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n [3] top-level scope at /tmp/tmpycq5zjpf.jl:28\\nTest Summary: | Pass  Fail \
    \ Total\\ntest set      |    5     6     11\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgd7tk5vo.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpgd7tk5vo.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgd7tk5vo.jl:28\ntest set: Test Failed at /tmp/tmpgd7tk5vo.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgd7tk5vo.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgd7tk5vo.jl:28\ntest set: Test Failed at /tmp/tmpgd7tk5vo.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpgd7tk5vo.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgd7tk5vo.jl:28\ntest set: Test Failed at /tmp/tmpgd7tk5vo.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpgd7tk5vo.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgd7tk5vo.jl:28\ntest set: Test Failed at /tmp/tmpgd7tk5vo.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpgd7tk5vo.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgd7tk5vo.jl:28\ntest set: Test Failed at /tmp/tmpgd7tk5vo.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpgd7tk5vo.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpgd7tk5vo.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgd7tk5vo.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphbj73xqq.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmphbj73xqq.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbj73xqq.jl:28\ntest set: Test Failed at /tmp/tmphbj73xqq.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphbj73xqq.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbj73xqq.jl:28\ntest set: Test Failed at /tmp/tmphbj73xqq.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmphbj73xqq.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbj73xqq.jl:28\ntest set: Test Failed at /tmp/tmphbj73xqq.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmphbj73xqq.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbj73xqq.jl:28\ntest set: Test Failed at /tmp/tmphbj73xqq.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmphbj73xqq.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbj73xqq.jl:28\ntest set: Test Failed at /tmp/tmphbj73xqq.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmphbj73xqq.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmphbj73xqq.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphbj73xqq.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpca4pepv5.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpca4pepv5.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpca4pepv5.jl:28\ntest set: Test Failed at /tmp/tmpca4pepv5.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpca4pepv5.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpca4pepv5.jl:28\ntest set: Test Failed at /tmp/tmpca4pepv5.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpca4pepv5.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpca4pepv5.jl:28\ntest set: Test Failed at /tmp/tmpca4pepv5.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpca4pepv5.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpca4pepv5.jl:28\ntest set: Test Failed at /tmp/tmpca4pepv5.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpca4pepv5.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpca4pepv5.jl:28\ntest set: Test Failed at /tmp/tmpca4pepv5.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpca4pepv5.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpca4pepv5.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpca4pepv5.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n            sum\
    \ += lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppi9gx4cw.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmppi9gx4cw.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppi9gx4cw.jl:28\ntest set: Test Failed at /tmp/tmppi9gx4cw.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppi9gx4cw.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppi9gx4cw.jl:28\ntest set: Test Failed at /tmp/tmppi9gx4cw.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppi9gx4cw.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppi9gx4cw.jl:28\ntest set: Test Failed at /tmp/tmppi9gx4cw.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmppi9gx4cw.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppi9gx4cw.jl:28\ntest set: Test Failed at /tmp/tmppi9gx4cw.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmppi9gx4cw.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppi9gx4cw.jl:28\ntest set: Test Failed at /tmp/tmppi9gx4cw.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppi9gx4cw.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppi9gx4cw.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppi9gx4cw.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmwp6uam9.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpmwp6uam9.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmwp6uam9.jl:28\ntest set: Test Failed at /tmp/tmpmwp6uam9.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmwp6uam9.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmwp6uam9.jl:28\ntest set: Test Failed at /tmp/tmpmwp6uam9.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpmwp6uam9.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmwp6uam9.jl:28\ntest set: Test Failed at /tmp/tmpmwp6uam9.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpmwp6uam9.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmwp6uam9.jl:28\ntest set: Test Failed at /tmp/tmpmwp6uam9.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpmwp6uam9.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmwp6uam9.jl:28\ntest set: Test Failed at /tmp/tmpmwp6uam9.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpmwp6uam9.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpmwp6uam9.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmwp6uam9.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp13vo_7em.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp13vo_7em.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp13vo_7em.jl:28\ntest set: Test Failed at /tmp/tmp13vo_7em.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp13vo_7em.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp13vo_7em.jl:28\ntest set: Test Failed at /tmp/tmp13vo_7em.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp13vo_7em.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp13vo_7em.jl:28\ntest set: Test Failed at /tmp/tmp13vo_7em.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp13vo_7em.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp13vo_7em.jl:28\ntest set: Test Failed at /tmp/tmp13vo_7em.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp13vo_7em.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp13vo_7em.jl:28\ntest set: Test Failed at /tmp/tmp13vo_7em.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp13vo_7em.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp13vo_7em.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp13vo_7em.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj_1r_7nq.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpj_1r_7nq.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_1r_7nq.jl:28\ntest set: Test Failed at /tmp/tmpj_1r_7nq.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj_1r_7nq.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_1r_7nq.jl:28\ntest set: Test Failed at /tmp/tmpj_1r_7nq.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpj_1r_7nq.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_1r_7nq.jl:28\ntest set: Test Failed at /tmp/tmpj_1r_7nq.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpj_1r_7nq.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_1r_7nq.jl:28\ntest set: Test Failed at /tmp/tmpj_1r_7nq.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpj_1r_7nq.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_1r_7nq.jl:28\ntest set: Test Failed at /tmp/tmpj_1r_7nq.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpj_1r_7nq.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpj_1r_7nq.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj_1r_7nq.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    \"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\n    sum = 0\n    for\
    \ i in 1:length(lst)\n        if i % 3 == 0\n            sum += lst[i]^2\n   \
    \     elseif i % 4 == 0\n            sum += lst[i]^3\n        else\n         \
    \   sum += lst[i]\n        end\n    end\n    return sum\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1,\
    \ 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([])) == 0)\n\t@test(candidate([1,\
    \ 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1, -1, -1, -1, -1, -1, -1,\
    \ -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1, -5, 2,\
    \ -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\t@test(candidate([-1,\
    \ 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16, -9, -2, 36, 36, 26,\
    \ -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1, -3,\
    \ 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10]) ==\
    \ -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppd1ss5r_.jl:39\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmppd1ss5r_.jl:39\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppd1ss5r_.jl:38\ntest set: Test Failed at /tmp/tmppd1ss5r_.jl:40\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppd1ss5r_.jl:40\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppd1ss5r_.jl:38\ntest set: Test Failed at /tmp/tmppd1ss5r_.jl:45\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmppd1ss5r_.jl:45\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppd1ss5r_.jl:38\ntest set: Test Failed at /tmp/tmppd1ss5r_.jl:46\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmppd1ss5r_.jl:46\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppd1ss5r_.jl:38\ntest set: Test Failed at /tmp/tmppd1ss5r_.jl:48\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmppd1ss5r_.jl:48\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppd1ss5r_.jl:38\ntest set: Test Failed at /tmp/tmppd1ss5r_.jl:49\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmppd1ss5r_.jl:49\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmppd1ss5r_.jl:38\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppd1ss5r_.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7rlxqwsx.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp7rlxqwsx.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rlxqwsx.jl:28\ntest set: Test Failed at /tmp/tmp7rlxqwsx.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7rlxqwsx.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rlxqwsx.jl:28\ntest set: Test Failed at /tmp/tmp7rlxqwsx.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp7rlxqwsx.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rlxqwsx.jl:28\ntest set: Test Failed at /tmp/tmp7rlxqwsx.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp7rlxqwsx.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rlxqwsx.jl:28\ntest set: Test Failed at /tmp/tmp7rlxqwsx.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp7rlxqwsx.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rlxqwsx.jl:28\ntest set: Test Failed at /tmp/tmp7rlxqwsx.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp7rlxqwsx.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp7rlxqwsx.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7rlxqwsx.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0\n            sum +=\
    \ lst[i]^3\n        else\n            sum += lst[i]\n        end\n    end\n  \
    \  return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvws94rh7.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpvws94rh7.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvws94rh7.jl:28\ntest set: Test Failed at /tmp/tmpvws94rh7.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvws94rh7.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvws94rh7.jl:28\ntest set: Test Failed at /tmp/tmpvws94rh7.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpvws94rh7.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvws94rh7.jl:28\ntest set: Test Failed at /tmp/tmpvws94rh7.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpvws94rh7.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvws94rh7.jl:28\ntest set: Test Failed at /tmp/tmpvws94rh7.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 67674 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpvws94rh7.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvws94rh7.jl:28\ntest set: Test Failed at /tmp/tmpvws94rh7.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 8872 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpvws94rh7.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpvws94rh7.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvws94rh7.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0 && i % 4 !=\
    \ 0\n            sum += lst[i]^2\n        elseif i % 4 == 0 && i % 3 != 0\n  \
    \          sum += lst[i]^3\n        else\n            sum += lst[i]\n        end\n\
    \    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1, 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjyexrfpy.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpjyexrfpy.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjyexrfpy.jl:28\ntest set: Test Failed at /tmp/tmpjyexrfpy.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjyexrfpy.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjyexrfpy.jl:28\ntest set: Test Failed at /tmp/tmpjyexrfpy.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpjyexrfpy.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjyexrfpy.jl:28\ntest set: Test Failed at /tmp/tmpjyexrfpy.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpjyexrfpy.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjyexrfpy.jl:28\ntest set: Test Failed at /tmp/tmpjyexrfpy.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 65958 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpjyexrfpy.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjyexrfpy.jl:28\ntest set: Test Failed at /tmp/tmpjyexrfpy.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6142 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpjyexrfpy.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpjyexrfpy.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjyexrfpy.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpp2156832.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpp2156832.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp2156832.jl:28\ntest set: Test Failed at /tmp/tmpp2156832.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp2156832.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp2156832.jl:28\ntest set: Test Failed at /tmp/tmpp2156832.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpp2156832.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp2156832.jl:28\ntest set: Test Failed at /tmp/tmpp2156832.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpp2156832.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp2156832.jl:28\ntest set: Test Failed at /tmp/tmpp2156832.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpp2156832.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp2156832.jl:28\ntest set: Test Failed at /tmp/tmpp2156832.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpp2156832.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpp2156832.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp2156832.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp16r_6r2s.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp16r_6r2s.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp16r_6r2s.jl:28\ntest set: Test Failed at /tmp/tmp16r_6r2s.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp16r_6r2s.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp16r_6r2s.jl:28\ntest set: Test Failed at /tmp/tmp16r_6r2s.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp16r_6r2s.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp16r_6r2s.jl:28\ntest set: Test Failed at /tmp/tmp16r_6r2s.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp16r_6r2s.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp16r_6r2s.jl:28\ntest set: Test Failed at /tmp/tmp16r_6r2s.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp16r_6r2s.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp16r_6r2s.jl:28\ntest set: Test Failed at /tmp/tmp16r_6r2s.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp16r_6r2s.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp16r_6r2s.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp16r_6r2s.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i = 1:length(lst)\n        if i % 3 == 0\n          \
    \  sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n \
    \       else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaldtev76.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmpaldtev76.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaldtev76.jl:28\ntest set: Test Failed at /tmp/tmpaldtev76.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpaldtev76.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaldtev76.jl:28\ntest set: Test Failed at /tmp/tmpaldtev76.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmpaldtev76.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaldtev76.jl:28\ntest set: Test Failed at /tmp/tmpaldtev76.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmpaldtev76.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaldtev76.jl:28\ntest set: Test Failed at /tmp/tmpaldtev76.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpaldtev76.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaldtev76.jl:28\ntest set: Test Failed at /tmp/tmpaldtev76.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmpaldtev76.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpaldtev76.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaldtev76.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3rfy2tsv.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp3rfy2tsv.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3rfy2tsv.jl:28\ntest set: Test Failed at /tmp/tmp3rfy2tsv.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3rfy2tsv.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3rfy2tsv.jl:28\ntest set: Test Failed at /tmp/tmp3rfy2tsv.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp3rfy2tsv.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3rfy2tsv.jl:28\ntest set: Test Failed at /tmp/tmp3rfy2tsv.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp3rfy2tsv.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3rfy2tsv.jl:28\ntest set: Test Failed at /tmp/tmp3rfy2tsv.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp3rfy2tsv.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3rfy2tsv.jl:28\ntest set: Test Failed at /tmp/tmp3rfy2tsv.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp3rfy2tsv.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp3rfy2tsv.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3rfy2tsv.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\"\n    This function will take a list of integers. For all entries\
    \ in the list, the function shall square the integer entry if its index is a \n\
    \    multiple of 3 and will cube the integer entry if its index is a multiple\
    \ of 4 and not a multiple of 3. The function will not \n    change the entries\
    \ in the list whose indexes are not a multiple of 3 or 4. The function shall then\
    \ return the sum of all entries. \n    \n    Examples:\n    For lst = [1,2,3]\
    \ the output should be 6\n    For lst = []  the output should be 0\n    For lst\
    \ = [-1,-5,2,-1,-5]  the output should be -126\n    \"\"\"\nfunction sum_squares(lst::Vector{Int64})::Int64\
    \ \n    sum = 0\n    for i in 1:length(lst)\n        if i % 3 == 0\n         \
    \   sum += lst[i]^2\n        elseif i % 4 == 0\n            sum += lst[i]^3\n\
    \        else\n            sum += lst[i]\n        end\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1,\
    \ 2, 3]) == 6)\n\t@test(candidate([1, 4, 9]) == 14)\n\t@test(candidate(Vector{Int64}([]))\
    \ == 0)\n\t@test(candidate([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 9)\n\t@test(candidate([-1,\
    \ -1, -1, -1, -1, -1, -1, -1, -1]) == -3)\n\t@test(candidate([0]) == 0)\n\t@test(candidate([-1,\
    \ -5, 2, -1, -5]) == -126)\n\t@test(candidate([-56, -99, 1, 0, -2]) == 3030)\n\
    \t@test(candidate([-1, 0, 0, 0, 0, 0, 0, 0, -1]) == 0)\n\t@test(candidate([-16,\
    \ -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26, 35, 37]) == -14196)\n\t@test(candidate([-1,\
    \ -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14, 6, 13, 11, 16, 16, 4, 10])\
    \ == -1448)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp59ax1yn0.jl:29\n  Expression: candidate([1,\
    \ 2, 3]) == 6\n   Evaluated: 12 == 6\nStacktrace:\n [1] top-level scope at /tmp/tmp59ax1yn0.jl:29\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp59ax1yn0.jl:28\ntest set: Test Failed at /tmp/tmp59ax1yn0.jl:30\n\
    \  Expression: candidate([1, 4, 9]) == 14\n   Evaluated: 86 == 14\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp59ax1yn0.jl:30\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp59ax1yn0.jl:28\ntest set: Test Failed at /tmp/tmp59ax1yn0.jl:35\n\
    \  Expression: candidate([-1, -5, 2, -1, -5]) == -126\n   Evaluated: -8 == -126\n\
    Stacktrace:\n [1] top-level scope at /tmp/tmp59ax1yn0.jl:35\n [2] top-level scope\
    \ at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp59ax1yn0.jl:28\ntest set: Test Failed at /tmp/tmp59ax1yn0.jl:36\n\
    \  Expression: candidate([-56, -99, 1, 0, -2]) == 3030\n   Evaluated: -156 ==\
    \ 3030\nStacktrace:\n [1] top-level scope at /tmp/tmp59ax1yn0.jl:36\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp59ax1yn0.jl:28\ntest set: Test Failed at /tmp/tmp59ax1yn0.jl:38\n\
    \  Expression: candidate([-16, -9, -2, 36, 36, 26, -20, 25, -40, 20, -4, 12, -26,\
    \ 35, 37]) == -14196\n   Evaluated: 66090 == -14196\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp59ax1yn0.jl:38\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp59ax1yn0.jl:28\ntest set: Test Failed at /tmp/tmp59ax1yn0.jl:39\n\
    \  Expression: candidate([-1, -3, 17, -1, -15, 13, -1, 14, -14, -12, -5, 14, -14,\
    \ 6, 13, 11, 16, 16, 4, 10]) == -1448\n   Evaluated: 6324 == -1448\nStacktrace:\n\
    \ [1] top-level scope at /tmp/tmp59ax1yn0.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp59ax1yn0.jl:28\nTest Summary: | Pass  Fail  Total\n\
    test set      |    5     6     11\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 5 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp59ax1yn0.jl:26\n"
  exit_code: 1
  status: SyntaxError

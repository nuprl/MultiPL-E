name: HumanEval_9_rolling_max
language: julia
results:
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpjk1tw_4b.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpjk1tw_4b.jl:8\n   [3] macro expansion\n     @ /tmp/tmpjk1tw_4b.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpjk1tw_4b.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjk1tw_4b.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp4euh0x_s.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp4euh0x_s.jl:8\n   [3] macro expansion\n     @ /tmp/tmp4euh0x_s.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4euh0x_s.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4euh0x_s.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    rolling_max = [max_so_far]\n    for i in\
    \ 2:length(numbers)\n        if numbers[i] > max_so_far\n            max_so_far\
    \ = numbers[i]\n        end\n        push!(rolling_max, max_so_far)\n    end\n\
    \    return rolling_max\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\
    \t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpifja6ri5.jl:22\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpifja6ri5.jl:7\n   [3] macro expansion\n     @ /tmp/tmpifja6ri5.jl:22\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpifja6ri5.jl:21\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpifja6ri5.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4sro_w04.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmp4sro_w04.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmp4sro_w04.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4sro_w04.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkj_qy3cr.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpkj_qy3cr.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpkj_qy3cr.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpkj_qy3cr.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp5na9tm87.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp5na9tm87.jl:8\n   [3] macro expansion\n     @ /tmp/tmp5na9tm87.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5na9tm87.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5na9tm87.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpqh85p2ry.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpqh85p2ry.jl:8\n   [3] macro expansion\n     @ /tmp/tmpqh85p2ry.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqh85p2ry.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqh85p2ry.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpwpqdnih2.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpwpqdnih2.jl:8\n   [3] macro expansion\n     @ /tmp/tmpwpqdnih2.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwpqdnih2.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwpqdnih2.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = zeros(Int64, length(numbers))\n\
    \    result[1] = max_so_far\n    for i in 2:length(numbers)\n        if numbers[i]\
    \ > max_so_far\n            max_so_far = numbers[i]\n        end\n        result[i]\
    \ = max_so_far\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfb0uilkz.jl:23\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpfb0uilkz.jl:7\n   [3] macro expansion\n     @ /tmp/tmpfb0uilkz.jl:23\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfb0uilkz.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfb0uilkz.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = Vector{Int64}(undef, length(numbers))\n\
    \    result[1] = max_so_far\n    for i in 2:length(numbers)\n        if numbers[i]\
    \ > max_so_far\n            max_so_far = numbers[i]\n        end\n        result[i]\
    \ = max_so_far\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd2l02jc1.jl:23\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpd2l02jc1.jl:7\n   [3] macro expansion\n     @ /tmp/tmpd2l02jc1.jl:23\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd2l02jc1.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd2l02jc1.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpmrqn39vm.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpmrqn39vm.jl:8\n   [3] macro expansion\n     @ /tmp/tmpmrqn39vm.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmrqn39vm.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmrqn39vm.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_value = 0\n    for i in\
    \ 1:length(numbers)\n        max_value = max(max_value, numbers[i])\n        result[i]\
    \ = max_value\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpx1qka18p.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpx1qka18p.jl:8\n   [3] macro expansion\n     @ /tmp/tmpx1qka18p.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpx1qka18p.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx1qka18p.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    for i in 1:length(numbers)\n\
    \        result[i] = maximum(numbers[1:i])\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_value = 0\n    for i in\
    \ 1:length(numbers)\n        if numbers[i] > max_value\n            max_value\
    \ = numbers[i]\n        end\n        result[i] = max_value\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    current_max = 0\n    for i\
    \ in 1:length(numbers)\n        current_max = max(current_max, numbers[i])\n \
    \       result[i] = current_max\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = [max_so_far]\n    for i in 2:length(numbers)\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        push!(result, max_so_far)\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpkejoes5i.jl:20\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpkejoes5i.jl:7\n   [3] macro expansion\n     @ /tmp/tmpkejoes5i.jl:20\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkejoes5i.jl:19\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkejoes5i.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpgb_8k512.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpgb_8k512.jl:8\n   [3] macro expansion\n     @ /tmp/tmpgb_8k512.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgb_8k512.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgb_8k512.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp9e1qqz9n.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp9e1qqz9n.jl:8\n   [3] macro expansion\n     @ /tmp/tmp9e1qqz9n.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9e1qqz9n.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9e1qqz9n.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpss20_6gw.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpss20_6gw.jl:8\n   [3] macro expansion\n     @ /tmp/tmpss20_6gw.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpss20_6gw.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpss20_6gw.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    current_max = 0\n    for i\
    \ in 1:length(numbers)\n        current_max = max(current_max, numbers[i])\n \
    \       result[i] = current_max\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpwiuxy7l6.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpwiuxy7l6.jl:8\n   [3] macro expansion\n     @ /tmp/tmpwiuxy7l6.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwiuxy7l6.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwiuxy7l6.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = Vector{Int64}(undef, length(numbers))\n\
    \    result[1] = max_so_far\n    for i in 2:length(numbers)\n        if numbers[i]\
    \ > max_so_far\n            max_so_far = numbers[i]\n        end\n        result[i]\
    \ = max_so_far\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpyz_r4dqb.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpyz_r4dqb.jl:7\\n   [3] macro expansion\\n     @ /tmp/tmpyz_r4dqb.jl:23\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpyz_r4dqb.jl:22\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = [max_so_far]\n    for i in 2:length(numbers)\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        push!(result, max_so_far)\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpv3l0heyr.jl:20\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpv3l0heyr.jl:7\n   [3] macro expansion\n     @ /tmp/tmpv3l0heyr.jl:20\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv3l0heyr.jl:19\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv3l0heyr.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = zeros(Int64, length(numbers))\n\
    \    result[1] = max_so_far\n    for i in 2:length(numbers)\n        if numbers[i]\
    \ > max_so_far\n            max_so_far = numbers[i]\n        end\n        result[i]\
    \ = max_so_far\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc2kcrius.jl:23\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpc2kcrius.jl:7\n   [3] macro expansion\n     @ /tmp/tmpc2kcrius.jl:23\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc2kcrius.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc2kcrius.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp6qzx7cez.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp6qzx7cez.jl:8\n   [3] macro expansion\n     @ /tmp/tmp6qzx7cez.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6qzx7cez.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6qzx7cez.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = Vector{Int64}(undef, length(numbers))\n    result[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp35d3ijur.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp35d3ijur.jl:8\n   [3] macro expansion\n     @ /tmp/tmp35d3ijur.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp35d3ijur.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp35d3ijur.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpetjm0ecq.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpetjm0ecq.jl:8\n   [3] macro expansion\n     @ /tmp/tmpetjm0ecq.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpetjm0ecq.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpetjm0ecq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp5alzpuru.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp5alzpuru.jl:8\n   [3] macro expansion\n     @ /tmp/tmp5alzpuru.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5alzpuru.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5alzpuru.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmph_ua6nsn.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmph_ua6nsn.jl:8\n   [3] macro expansion\n     @ /tmp/tmph_ua6nsn.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph_ua6nsn.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph_ua6nsn.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i = 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmplruguu57.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmplruguu57.jl:8\n   [3] macro expansion\n     @ /tmp/tmplruguu57.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplruguu57.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplruguu57.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmplt41d9nv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmplt41d9nv.jl:8\n   [3] macro expansion\n     @ /tmp/tmplt41d9nv.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplt41d9nv.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplt41d9nv.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpt6a0yw_4.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpt6a0yw_4.jl:8\n   [3] macro expansion\n     @ /tmp/tmpt6a0yw_4.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt6a0yw_4.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt6a0yw_4.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = [max_so_far]\n    for i in 2:length(numbers)\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        push!(result, max_so_far)\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpffc4glqz.jl:20\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpffc4glqz.jl:7\n   [3] macro expansion\n     @ /tmp/tmpffc4glqz.jl:20\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpffc4glqz.jl:19\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpffc4glqz.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpde3m25cb.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpde3m25cb.jl:8\n   [3] macro expansion\n     @ /tmp/tmpde3m25cb.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpde3m25cb.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpde3m25cb.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(numbers)\n    result = zeros(Int64, n)\n    result[1] = numbers[1]\n\
    \    for i in 2:n\n        result[i] = max(result[i-1], numbers[i])\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\
    \t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5ng82z3t.jl:20\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp5ng82z3t.jl:9\n   [3] macro expansion\n     @ /tmp/tmp5ng82z3t.jl:20\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5ng82z3t.jl:19\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5ng82z3t.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpj_4cwkp7.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpj_4cwkp7.jl:8\n   [3] macro expansion\n     @ /tmp/tmpj_4cwkp7.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj_4cwkp7.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj_4cwkp7.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpa4vwd8sc.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpa4vwd8sc.jl:8\n   [3] macro expansion\n     @ /tmp/tmpa4vwd8sc.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa4vwd8sc.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa4vwd8sc.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpbdp09h3g.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpbdp09h3g.jl:8\n   [3] macro expansion\n     @ /tmp/tmpbdp09h3g.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbdp09h3g.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbdp09h3g.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpwkzq9ytz.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpwkzq9ytz.jl:8\n   [3] macro expansion\n     @ /tmp/tmpwkzq9ytz.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwkzq9ytz.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwkzq9ytz.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmphmptbl30.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmphmptbl30.jl:8\n   [3] macro expansion\n     @ /tmp/tmphmptbl30.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmphmptbl30.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphmptbl30.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpj9f5io01.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpj9f5io01.jl:8\n   [3] macro expansion\n     @ /tmp/tmpj9f5io01.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj9f5io01.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj9f5io01.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpwwur0y_y.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpwwur0y_y.jl:8\n   [3] macro expansion\n     @ /tmp/tmpwwur0y_y.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwwur0y_y.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwwur0y_y.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpfjxd0hc_.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpfjxd0hc_.jl:8\n   [3] macro expansion\n     @ /tmp/tmpfjxd0hc_.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfjxd0hc_.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfjxd0hc_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp9nsg3nsw.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp9nsg3nsw.jl:8\n   [3] macro expansion\n     @ /tmp/tmp9nsg3nsw.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9nsg3nsw.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9nsg3nsw.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmppxq0hwnl.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmppxq0hwnl.jl:8\n   [3] macro expansion\n     @ /tmp/tmppxq0hwnl.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppxq0hwnl.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppxq0hwnl.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpa_vh0wk_.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpa_vh0wk_.jl:8\n   [3] macro expansion\n     @ /tmp/tmpa_vh0wk_.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa_vh0wk_.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa_vh0wk_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp7hxq6i2s.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp7hxq6i2s.jl:8\n   [3] macro expansion\n     @ /tmp/tmp7hxq6i2s.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7hxq6i2s.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7hxq6i2s.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpn__an6fv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpn__an6fv.jl:8\n   [3] macro expansion\n     @ /tmp/tmpn__an6fv.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn__an6fv.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn__an6fv.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpghuc38x0.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpghuc38x0.jl:8\n   [3] macro expansion\n     @ /tmp/tmpghuc38x0.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpghuc38x0.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpghuc38x0.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp_l2i44mv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp_l2i44mv.jl:8\n   [3] macro expansion\n     @ /tmp/tmp_l2i44mv.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_l2i44mv.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_l2i44mv.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpq88s76ej.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpq88s76ej.jl:8\n   [3] macro expansion\n     @ /tmp/tmpq88s76ej.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq88s76ej.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq88s76ej.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_so_far = 0\n    for i\
    \ in 1:length(numbers)\n        max_so_far = max(max_so_far, numbers[i])\n   \
    \     result[i] = max_so_far\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    current_max = 0\n    for i\
    \ in 1:length(numbers)\n        current_max = max(current_max, numbers[i])\n \
    \       result[i] = current_max\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_so_far = numbers[1]\n\
    \    result[1] = max_so_far\n    for i in 2:length(numbers)\n        max_so_far\
    \ = max(max_so_far, numbers[i])\n        result[i] = max_so_far\n    end\n   \
    \ return result\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\
    \t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn_4q6_qm.jl:21\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpn_4q6_qm.jl:8\n   [3] macro expansion\n     @ /tmp/tmpn_4q6_qm.jl:21\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn_4q6_qm.jl:20\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn_4q6_qm.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpcdf9vb7p.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpcdf9vb7p.jl:8\n   [3] macro expansion\n     @ /tmp/tmpcdf9vb7p.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcdf9vb7p.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcdf9vb7p.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_so_far = 0\n    for i\
    \ in 1:length(numbers)\n        max_so_far = max(max_so_far, numbers[i])\n   \
    \     result[i] = max_so_far\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = Vector{Int64}(undef, length(numbers))\n    result[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpltaij8oo.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpltaij8oo.jl:8\n   [3] macro expansion\n     @ /tmp/tmpltaij8oo.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpltaij8oo.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpltaij8oo.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpfsf6q8ox.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpfsf6q8ox.jl:8\n   [3] macro expansion\n     @ /tmp/tmpfsf6q8ox.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfsf6q8ox.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfsf6q8ox.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpd03u6mrl.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpd03u6mrl.jl:8\n   [3] macro expansion\n     @ /tmp/tmpd03u6mrl.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd03u6mrl.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd03u6mrl.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp3spc_rpa.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp3spc_rpa.jl:8\n   [3] macro expansion\n     @ /tmp/tmp3spc_rpa.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3spc_rpa.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3spc_rpa.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_so_far = numbers[1]\n\
    \    result[1] = max_so_far\n    for i in 2:length(numbers)\n        max_so_far\
    \ = max(max_so_far, numbers[i])\n        result[i] = max_so_far\n    end\n   \
    \ return result\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\
    \t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptustlxw6.jl:21\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmptustlxw6.jl:8\n   [3] macro expansion\n     @ /tmp/tmptustlxw6.jl:21\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptustlxw6.jl:20\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptustlxw6.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_so_far = 0\n    for i\
    \ in 1:length(numbers)\n        max_so_far = max(max_so_far, numbers[i])\n   \
    \     result[i] = max_so_far\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpmxefjp5r.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpmxefjp5r.jl:8\n   [3] macro expansion\n     @ /tmp/tmpmxefjp5r.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpmxefjp5r.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmxefjp5r.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = 0\n    result = zeros(Int64, length(numbers))\n    for i\
    \ in 1:length(numbers)\n        max_so_far = max(max_so_far, numbers[i])\n   \
    \     result[i] = max_so_far\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpgayz8wcw.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpgayz8wcw.jl:8\n   [3] macro expansion\n     @ /tmp/tmpgayz8wcw.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgayz8wcw.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgayz8wcw.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp1s8c2qos.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp1s8c2qos.jl:8\n   [3] macro expansion\n     @ /tmp/tmp1s8c2qos.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1s8c2qos.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1s8c2qos.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpb8ii60d4.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpb8ii60d4.jl:8\n   [3] macro expansion\n     @ /tmp/tmpb8ii60d4.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb8ii60d4.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb8ii60d4.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp4z94e29f.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp4z94e29f.jl:8\n   [3] macro expansion\n     @ /tmp/tmp4z94e29f.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4z94e29f.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4z94e29f.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp6qp7c_0q.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp6qp7c_0q.jl:8\n   [3] macro expansion\n     @ /tmp/tmp6qp7c_0q.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6qp7c_0q.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6qp7c_0q.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmptms62nzt.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmptms62nzt.jl:8\n   [3] macro expansion\n     @ /tmp/tmptms62nzt.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptms62nzt.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptms62nzt.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmplzqcd8nt.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmplzqcd8nt.jl:8\n   [3] macro expansion\n     @ /tmp/tmplzqcd8nt.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplzqcd8nt.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplzqcd8nt.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = Vector{Int64}(undef, length(numbers))\n    result[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpnksi792v.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpnksi792v.jl:8\n   [3] macro expansion\n     @ /tmp/tmpnksi792v.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpnksi792v.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnksi792v.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpl9q4f4uw.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpl9q4f4uw.jl:8\n   [3] macro expansion\n     @ /tmp/tmpl9q4f4uw.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl9q4f4uw.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl9q4f4uw.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpoqmh0vjo.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpoqmh0vjo.jl:8\n   [3] macro expansion\n     @ /tmp/tmpoqmh0vjo.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpoqmh0vjo.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoqmh0vjo.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpid58srlc.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpid58srlc.jl:8\n   [3] macro expansion\n     @ /tmp/tmpid58srlc.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpid58srlc.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpid58srlc.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpw5fnc90v.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpw5fnc90v.jl:8\n   [3] macro expansion\n     @ /tmp/tmpw5fnc90v.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw5fnc90v.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw5fnc90v.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpz00almz3.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpz00almz3.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpz00almz3.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpz00almz3.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpz00almz3.jl:16\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpn5iry00u.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpn5iry00u.jl:8\n   [3] macro expansion\n     @ /tmp/tmpn5iry00u.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpn5iry00u.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn5iry00u.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxdbvks9c.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpxdbvks9c.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpxdbvks9c.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxdbvks9c.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    current_max = 0\n    for i\
    \ in 1:length(numbers)\n        if numbers[i] > current_max\n            current_max\
    \ = numbers[i]\n        end\n        result[i] = current_max\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpyjkm9g1w.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpyjkm9g1w.jl:8\n   [3] macro expansion\n     @ /tmp/tmpyjkm9g1w.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyjkm9g1w.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyjkm9g1w.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpods6nyys.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpods6nyys.jl:8\n   [3] macro expansion\n     @ /tmp/tmpods6nyys.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpods6nyys.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpods6nyys.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpaklbxz6a.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpaklbxz6a.jl:8\n   [3] macro expansion\n     @ /tmp/tmpaklbxz6a.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpaklbxz6a.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaklbxz6a.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpxdq2ms0_.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpxdq2ms0_.jl:8\n   [3] macro expansion\n     @ /tmp/tmpxdq2ms0_.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxdq2ms0_.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxdq2ms0_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    for i in 1:length(numbers)\n\
    \        result[i] = maximum(numbers[1:i])\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp_p9ncbzy.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp_p9ncbzy.jl:8\n   [3] macro expansion\n     @ /tmp/tmp_p9ncbzy.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_p9ncbzy.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_p9ncbzy.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpy8naz_d3.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpy8naz_d3.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpy8naz_d3.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpy8naz_d3.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpebvvoa87.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpebvvoa87.jl:8\n   [3] macro expansion\n     @ /tmp/tmpebvvoa87.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpebvvoa87.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpebvvoa87.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp4vuk_g_6.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp4vuk_g_6.jl:8\n   [3] macro expansion\n     @ /tmp/tmp4vuk_g_6.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4vuk_g_6.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4vuk_g_6.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(numbers)\n    result = zeros(Int64, n)\n    result[1] = numbers[1]\n\
    \    for i in 2:n\n        result[i] = max(result[i-1], numbers[i])\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\
    \t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpviadyno2.jl:20\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpviadyno2.jl:9\n   [3] macro expansion\n     @ /tmp/tmpviadyno2.jl:20\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpviadyno2.jl:19\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpviadyno2.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = [max_so_far]\n    for i in 2:length(numbers)\n\
    \        if numbers[i] > max_so_far\n            max_so_far = numbers[i]\n   \
    \     end\n        push!(result, max_so_far)\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpeh4kwqoz.jl:22\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpeh4kwqoz.jl:7\n   [3] macro expansion\n     @ /tmp/tmpeh4kwqoz.jl:22\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpeh4kwqoz.jl:21\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeh4kwqoz.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4gh_r5es.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmp4gh_r5es.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmp4gh_r5es.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4gh_r5es.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpe362_5nl.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpe362_5nl.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpe362_5nl.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpe362_5nl.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp1_udzn6b.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp1_udzn6b.jl:8\n   [3] macro expansion\n     @ /tmp/tmp1_udzn6b.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1_udzn6b.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1_udzn6b.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_so_far = numbers[1]\n\
    \    result[1] = max_so_far\n    for i in 2:length(numbers)\n        max_so_far\
    \ = max(max_so_far, numbers[i])\n        result[i] = max_so_far\n    end\n   \
    \ return result\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\
    \t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbyrxfw7x.jl:21\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpbyrxfw7x.jl:8\n   [3] macro expansion\n     @ /tmp/tmpbyrxfw7x.jl:21\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpbyrxfw7x.jl:20\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbyrxfw7x.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_so_far = 0\n    for i\
    \ in 1:length(numbers)\n        max_so_far = max(max_so_far, numbers[i])\n   \
    \     result[i] = max_so_far\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpknhlsmr0.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpknhlsmr0.jl:8\n   [3] macro expansion\n     @ /tmp/tmpknhlsmr0.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpknhlsmr0.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpknhlsmr0.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp9s81mwj1.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp9s81mwj1.jl:8\n   [3] macro expansion\n     @ /tmp/tmp9s81mwj1.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9s81mwj1.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9s81mwj1.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpvxie9ubx.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpvxie9ubx.jl:8\n   [3] macro expansion\n     @ /tmp/tmpvxie9ubx.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvxie9ubx.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvxie9ubx.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = 0\n    result = zeros(Int64, length(numbers))\n    for i\
    \ in 1:length(numbers)\n        max_so_far = max(max_so_far, numbers[i])\n   \
    \     result[i] = max_so_far\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = [max_so_far]\n    for i in 2:length(numbers)\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        push!(result, max_so_far)\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp5siisdzy.jl:20\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp5siisdzy.jl:7\n   [3] macro expansion\n     @ /tmp/tmp5siisdzy.jl:20\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5siisdzy.jl:19\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5siisdzy.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    maximums = zeros(Int64, length(numbers))\n    maximums[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        maximums[i] = max(maximums[i-1], numbers[i])\n\
    \    end\n    return maximums\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyaqsr_gm.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpyaqsr_gm.jl:8\n   [3] macro expansion\n     @ /tmp/tmpyaqsr_gm.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyaqsr_gm.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyaqsr_gm.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpv9xo0zbv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpv9xo0zbv.jl:8\n   [3] macro expansion\n     @ /tmp/tmpv9xo0zbv.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv9xo0zbv.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv9xo0zbv.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpa649vw0o.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpa649vw0o.jl:8\n   [3] macro expansion\n     @ /tmp/tmpa649vw0o.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpa649vw0o.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa649vw0o.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = Vector{Int64}(undef, length(numbers))\n    result[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmplw110t1n.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmplw110t1n.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmplw110t1n.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmplw110t1n.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    max_so_far_list = [max_so_far]\n    for i\
    \ in 2:length(numbers)\n        if numbers[i] > max_so_far\n            max_so_far\
    \ = numbers[i]\n        end\n        push!(max_so_far_list, max_so_far)\n    end\n\
    \    return max_so_far_list\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmplo3_y5ww.jl:22\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmplo3_y5ww.jl:7\n   [3] macro expansion\n     @ /tmp/tmplo3_y5ww.jl:22\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplo3_y5ww.jl:21\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplo3_y5ww.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    rolling_max = zeros(Int64, length(numbers))\n\
    \    rolling_max[1] = max_so_far\n    for i in 2:length(numbers)\n        max_so_far\
    \ = max(max_so_far, numbers[i])\n        rolling_max[i] = max_so_far\n    end\n\
    \    return rolling_max\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\
    \t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjauk3nx6.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpjauk3nx6.jl:7\\n   [3] macro expansion\\n     @ /tmp/tmpjauk3nx6.jl:21\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjauk3nx6.jl:20\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp21h5cq6l.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmp21h5cq6l.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmp21h5cq6l.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp21h5cq6l.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = 0\n    result = zeros(Int64, length(numbers))\n    for i\
    \ in 1:length(numbers)\n        max_so_far = max(max_so_far, numbers[i])\n   \
    \     result[i] = max_so_far\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpe5cfnwfj.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpe5cfnwfj.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpe5cfnwfj.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpe5cfnwfj.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmptdp0yr1i.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmptdp0yr1i.jl:8\n   [3] macro expansion\n     @ /tmp/tmptdp0yr1i.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptdp0yr1i.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptdp0yr1i.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1xe_2_cy.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmp1xe_2_cy.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmp1xe_2_cy.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp1xe_2_cy.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmponnly24j.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmponnly24j.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmponnly24j.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmponnly24j.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpiced9fa_.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpiced9fa_.jl:8\n   [3] macro expansion\n     @ /tmp/tmpiced9fa_.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpiced9fa_.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiced9fa_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    max_so_far_list = [max_so_far]\n    for i\
    \ in 2:length(numbers)\n        if numbers[i] > max_so_far\n            max_so_far\
    \ = numbers[i]\n        end\n        push!(max_so_far_list, max_so_far)\n    end\n\
    \    return max_so_far_list\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmppi9lts79.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmppi9lts79.jl:7\\n   [3] macro expansion\\n     @ /tmp/tmppi9lts79.jl:22\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmppi9lts79.jl:21\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    # initialize the result vector with the first element\n    result = [numbers[1]]\n\
    \    # iterate over the rest of the elements\n    for i in 2:length(numbers)\n\
    \        # append the maximum of the current element and the last element of the\
    \ result vector\n        push!(result, max(numbers[i], result[end]))\n    end\n\
    \    # return the result vector\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmcfmoafd.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpmcfmoafd.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpmcfmoafd.jl:22\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmcfmoafd.jl:21\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpebbt_gr7.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpebbt_gr7.jl:8\n   [3] macro expansion\n     @ /tmp/tmpebbt_gr7.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpebbt_gr7.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpebbt_gr7.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmputt8xbrv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmputt8xbrv.jl:8\n   [3] macro expansion\n     @ /tmp/tmputt8xbrv.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmputt8xbrv.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmputt8xbrv.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = [max_so_far]\n    for i in 2:length(numbers)\n\
    \        if numbers[i] > max_so_far\n            max_so_far = numbers[i]\n   \
    \     end\n        push!(result, max_so_far)\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps6q56ba4.jl:22\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmps6q56ba4.jl:7\n   [3] macro expansion\n     @ /tmp/tmps6q56ba4.jl:22\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps6q56ba4.jl:21\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps6q56ba4.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_so_far = 0\n    for i\
    \ in 1:length(numbers)\n        max_so_far = max(max_so_far, numbers[i])\n   \
    \     result[i] = max_so_far\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp6obge_48.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp6obge_48.jl:8\n   [3] macro expansion\n     @ /tmp/tmp6obge_48.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp6obge_48.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6obge_48.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = [max_so_far]\n    for i in 2:length(numbers)\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        push!(result, max_so_far)\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4g9i5ei3.jl:20\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmp4g9i5ei3.jl:7\\n   [3] macro expansion\\n     @ /tmp/tmp4g9i5ei3.jl:20\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp4g9i5ei3.jl:19\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpcetwd8po.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpcetwd8po.jl:8\n   [3] macro expansion\n     @ /tmp/tmpcetwd8po.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcetwd8po.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcetwd8po.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = 0\n    result = zeros(Int64, length(numbers))\n    for (i,\
    \ n) in enumerate(numbers)\n        max_so_far = max(max_so_far, n)\n        result[i]\
    \ = max_so_far\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5ztb5yz2.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmp5ztb5yz2.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmp5ztb5yz2.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5ztb5yz2.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpymyb0kgr.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpymyb0kgr.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpymyb0kgr.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpymyb0kgr.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    current_max = 0\n    for i\
    \ in 1:length(numbers)\n        current_max = max(current_max, numbers[i])\n \
    \       result[i] = current_max\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcob3js4u.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpcob3js4u.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpcob3js4u.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcob3js4u.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmsm9981g.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpmsm9981g.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpmsm9981g.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpmsm9981g.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcldl0343.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpcldl0343.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpcldl0343.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpcldl0343.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = 0\n    result = []\n    for i in numbers\n        max_so_far\
    \ = max(max_so_far, i)\n        push!(result, max_so_far)\n    end\n    return\
    \ result\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_value = 0\n    for i in\
    \ 1:length(numbers)\n        max_value = max(max_value, numbers[i])\n        result[i]\
    \ = max_value\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5y745o9k.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmp5y745o9k.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmp5y745o9k.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp5y745o9k.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_element = 0\n    for i\
    \ in 1:length(numbers)\n        max_element = max(max_element, numbers[i])\n \
    \       result[i] = max_element\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpxzn7nn0d.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpxzn7nn0d.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpxzn7nn0d.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpxzn7nn0d.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    current_max = 0\n    for i\
    \ in 1:length(numbers)\n        current_max = max(current_max, numbers[i])\n \
    \       result[i] = current_max\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = 0\n    result = zeros(Int64, length(numbers))\n    for i\
    \ in 1:length(numbers)\n        max_so_far = max(max_so_far, numbers[i])\n   \
    \     result[i] = max_so_far\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpm_zg5ab_.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpm_zg5ab_.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpm_zg5ab_.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpm_zg5ab_.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjt2rce3y.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpjt2rce3y.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpjt2rce3y.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpjt2rce3y.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpjt2rce3y.jl:16\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_value = 0\n    for i in\
    \ 1:length(numbers)\n        max_value = max(max_value, numbers[i])\n        result[i]\
    \ = max_value\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpgrwvuw8q.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpgrwvuw8q.jl:8\n   [3] macro expansion\n     @ /tmp/tmpgrwvuw8q.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgrwvuw8q.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgrwvuw8q.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = Vector{Int64}(undef, length(numbers))\n    result[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp5nhflh0_.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp5nhflh0_.jl:8\n   [3] macro expansion\n     @ /tmp/tmp5nhflh0_.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5nhflh0_.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5nhflh0_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpl49xnyl9.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpl49xnyl9.jl:8\n   [3] macro expansion\n     @ /tmp/tmpl49xnyl9.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl49xnyl9.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl49xnyl9.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    maximums = zeros(Int64, length(numbers))\n    maximums[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        maximums[i] = max(maximums[i-1], numbers[i])\n\
    \    end\n    return maximums\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp59_y0mv1.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp59_y0mv1.jl:8\n   [3] macro expansion\n     @ /tmp/tmp59_y0mv1.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp59_y0mv1.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp59_y0mv1.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmps1uu_ofq.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmps1uu_ofq.jl:8\n   [3] macro expansion\n     @ /tmp/tmps1uu_ofq.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmps1uu_ofq.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps1uu_ofq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_so_far = numbers[1]\n\
    \    for i in 1:length(numbers)\n        if numbers[i] > max_so_far\n        \
    \    max_so_far = numbers[i]\n        end\n        result[i] = max_so_far\n  \
    \  end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\
    \t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp10r3wl5c.jl:22\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmp10r3wl5c.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmp10r3wl5c.jl:22\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp10r3wl5c.jl:21\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmppjib_m1s.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmppjib_m1s.jl:8\n   [3] macro expansion\n     @ /tmp/tmppjib_m1s.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppjib_m1s.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppjib_m1s.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = Vector{Int64}(undef, length(numbers))\n\
    \    result[1] = max_so_far\n    for i in 2:length(numbers)\n        if numbers[i]\
    \ > max_so_far\n            max_so_far = numbers[i]\n        end\n        result[i]\
    \ = max_so_far\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxc_4wcqx.jl:23\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpxc_4wcqx.jl:7\n   [3] macro expansion\n     @ /tmp/tmpxc_4wcqx.jl:23\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxc_4wcqx.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxc_4wcqx.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpdxkfu28e.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpdxkfu28e.jl:8\n   [3] macro expansion\n     @ /tmp/tmpdxkfu28e.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdxkfu28e.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdxkfu28e.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_value = 0\n    for i in\
    \ 1:length(numbers)\n        max_value = max(max_value, numbers[i])\n        result[i]\
    \ = max_value\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpk0lygps8.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpk0lygps8.jl:8\n   [3] macro expansion\n     @ /tmp/tmpk0lygps8.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpk0lygps8.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk0lygps8.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = [max_so_far]\n    for i in 2:length(numbers)\n\
    \        max_so_far = max(max_so_far, numbers[i])\n        push!(result, max_so_far)\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmplfkix3a5.jl:20\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmplfkix3a5.jl:7\n   [3] macro expansion\n     @ /tmp/tmplfkix3a5.jl:20\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplfkix3a5.jl:19\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplfkix3a5.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmp2u2bz3mg.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmp2u2bz3mg.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmp2u2bz3mg.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmp2u2bz3mg.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmphq5bhsh_.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmphq5bhsh_.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmphq5bhsh_.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmphq5bhsh_.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpq58is8xq.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpq58is8xq.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpq58is8xq.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpq58is8xq.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpj1vynhhj.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpj1vynhhj.jl:8\n   [3] macro expansion\n     @ /tmp/tmpj1vynhhj.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj1vynhhj.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj1vynhhj.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp1x98_v7z.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp1x98_v7z.jl:8\n   [3] macro expansion\n     @ /tmp/tmp1x98_v7z.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1x98_v7z.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1x98_v7z.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpinjsmcpj.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpinjsmcpj.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpinjsmcpj.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpinjsmcpj.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = Vector{Int64}(undef, length(numbers))\n    result[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt78sdgki.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpt78sdgki.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpt78sdgki.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpt78sdgki.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpkou5o0lj.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpkou5o0lj.jl:8\n   [3] macro expansion\n     @ /tmp/tmpkou5o0lj.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkou5o0lj.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkou5o0lj.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmplryc630q.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmplryc630q.jl:8\n   [3] macro expansion\n     @ /tmp/tmplryc630q.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplryc630q.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplryc630q.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpyje0wv3i.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpyje0wv3i.jl:8\n   [3] macro expansion\n     @ /tmp/tmpyje0wv3i.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyje0wv3i.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyje0wv3i.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp5dkoqvrf.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp5dkoqvrf.jl:8\n   [3] macro expansion\n     @ /tmp/tmp5dkoqvrf.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp5dkoqvrf.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5dkoqvrf.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmprky2kkpq.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmprky2kkpq.jl:8\n   [3] macro expansion\n     @ /tmp/tmprky2kkpq.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprky2kkpq.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprky2kkpq.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    current_max = numbers[1]\n\
    \    result[1] = current_max\n    for i in 2:length(numbers)\n        if numbers[i]\
    \ > current_max\n            current_max = numbers[i]\n        end\n        result[i]\
    \ = current_max\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd5e1hsep.jl:23\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpd5e1hsep.jl:8\n   [3] macro expansion\n     @ /tmp/tmpd5e1hsep.jl:23\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpd5e1hsep.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd5e1hsep.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = Vector{Int64}(undef, length(numbers))\n\
    \    result[1] = max_so_far\n    for i in 2:length(numbers)\n        if numbers[i]\
    \ > max_so_far\n            max_so_far = numbers[i]\n        end\n        result[i]\
    \ = max_so_far\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyw8eqjhl.jl:23\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpyw8eqjhl.jl:7\n   [3] macro expansion\n     @ /tmp/tmpyw8eqjhl.jl:23\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpyw8eqjhl.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyw8eqjhl.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpvdzoceu1.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpvdzoceu1.jl:8\n   [3] macro expansion\n     @ /tmp/tmpvdzoceu1.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvdzoceu1.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvdzoceu1.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    current_max = 0\n    for i\
    \ in 1:length(numbers)\n        current_max = max(current_max, numbers[i])\n \
    \       result[i] = current_max\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmptbqdm4_l.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmptbqdm4_l.jl:8\n   [3] macro expansion\n     @ /tmp/tmptbqdm4_l.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptbqdm4_l.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptbqdm4_l.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmpalo4flmq.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmpalo4flmq.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmpalo4flmq.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmpalo4flmq.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    for i in 1:length(numbers)\n\
    \        result[i] = maximum(numbers[1:i])\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    n = length(numbers)\n    result = zeros(Int64, n)\n    result[1] = numbers[1]\n\
    \    for i in 2:n\n        result[i] = max(result[i-1], numbers[i])\n    end\n\
    \    return result\nend\nusing Test\n\n@testset begin\n\ncandidate = rolling_max;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\
    \t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw68ao9em.jl:20\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpw68ao9em.jl:9\n   [3] macro expansion\n     @ /tmp/tmpw68ao9em.jl:20\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw68ao9em.jl:19\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw68ao9em.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = Vector{Int64}(undef, length(numbers))\n    result[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmplwxzxhbn.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmplwxzxhbn.jl:8\n   [3] macro expansion\n     @ /tmp/tmplwxzxhbn.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplwxzxhbn.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplwxzxhbn.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp4dt0ecsx.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp4dt0ecsx.jl:8\n   [3] macro expansion\n     @ /tmp/tmp4dt0ecsx.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4dt0ecsx.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4dt0ecsx.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmptez47gcb.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmptez47gcb.jl:8\n   [3] macro expansion\n     @ /tmp/tmptez47gcb.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptez47gcb.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptez47gcb.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpdifjefuz.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpdifjefuz.jl:8\n   [3] macro expansion\n     @ /tmp/tmpdifjefuz.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdifjefuz.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdifjefuz.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpuve9zvzp.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpuve9zvzp.jl:8\n   [3] macro expansion\n     @ /tmp/tmpuve9zvzp.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpuve9zvzp.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuve9zvzp.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    current_max = 0\n    for i\
    \ in 1:length(numbers)\n        current_max = max(current_max, numbers[i])\n \
    \       result[i] = current_max\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "b'test set: Error During Test at /tmp/tmprw1fqoac.jl:19\\n  Test threw\
    \ exception\\n  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\\\
    n  BoundsError: attempt to access 0-element Vector{Int64} at index [1]\\n  Stacktrace:\\\
    n   [1] getindex\\n     @ ./array.jl:805 [inlined]\\n   [2] rolling_max(numbers::Vector{Int64})\\\
    n     @ Main /tmp/tmprw1fqoac.jl:8\\n   [3] macro expansion\\n     @ /tmp/tmprw1fqoac.jl:19\
    \ [inlined]\\n   [4] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [5] top-level scope\\n     @ /tmp/tmprw1fqoac.jl:18\\nTest Summary:\
    \ | Pass  Error  Total\\ntest set      |    3      1      4\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    rolling_max_list = [max_so_far]\n    for\
    \ i in 2:length(numbers)\n        if numbers[i] > max_so_far\n            max_so_far\
    \ = numbers[i]\n        end\n        push!(rolling_max_list, max_so_far)\n   \
    \ end\n    return rolling_max_list\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw9lzwqej.jl:22\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpw9lzwqej.jl:7\n   [3] macro expansion\n     @ /tmp/tmpw9lzwqej.jl:22\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw9lzwqej.jl:21\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw9lzwqej.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = 0\n    result = zeros(Int64, length(numbers))\n    for i\
    \ in 1:length(numbers)\n        max_so_far = max(max_so_far, numbers[i])\n   \
    \     result[i] = max_so_far\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = Vector{Int64}(undef, length(numbers))\n    result[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpq653xfd_.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpq653xfd_.jl:8\n   [3] macro expansion\n     @ /tmp/tmpq653xfd_.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq653xfd_.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq653xfd_.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = Vector{Int64}(undef, length(numbers))\n    result[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpr95_ln_k.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpr95_ln_k.jl:8\n   [3] macro expansion\n     @ /tmp/tmpr95_ln_k.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr95_ln_k.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr95_ln_k.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = [max_so_far]\n    for i in 2:length(numbers)\n\
    \        if numbers[i] > max_so_far\n            max_so_far = numbers[i]\n   \
    \     end\n        push!(result, max_so_far)\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzxion2l0.jl:22\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpzxion2l0.jl:7\n   [3] macro expansion\n     @ /tmp/tmpzxion2l0.jl:22\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzxion2l0.jl:21\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzxion2l0.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpv0tqw1nl.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpv0tqw1nl.jl:8\n   [3] macro expansion\n     @ /tmp/tmpv0tqw1nl.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv0tqw1nl.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv0tqw1nl.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpm5yc54nv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpm5yc54nv.jl:8\n   [3] macro expansion\n     @ /tmp/tmpm5yc54nv.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm5yc54nv.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm5yc54nv.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp2thyw2nr.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp2thyw2nr.jl:8\n   [3] macro expansion\n     @ /tmp/tmp2thyw2nr.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2thyw2nr.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2thyw2nr.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_value = 0\n    for i in\
    \ 1:length(numbers)\n        max_value = max(max_value, numbers[i])\n        result[i]\
    \ = max_value\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    maximums = zeros(Int64, length(numbers))\n    maximums[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        maximums[i] = max(maximums[i-1], numbers[i])\n\
    \    end\n    return maximums\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7sxba9_k.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp7sxba9_k.jl:8\n   [3] macro expansion\n     @ /tmp/tmp7sxba9_k.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7sxba9_k.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7sxba9_k.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpocarr6he.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpocarr6he.jl:8\n   [3] macro expansion\n     @ /tmp/tmpocarr6he.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpocarr6he.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpocarr6he.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpt_y9ogh3.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpt_y9ogh3.jl:8\n   [3] macro expansion\n     @ /tmp/tmpt_y9ogh3.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpt_y9ogh3.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt_y9ogh3.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = Vector{Int64}(undef, length(numbers))\n    result[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpdmbhleco.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpdmbhleco.jl:8\n   [3] macro expansion\n     @ /tmp/tmpdmbhleco.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdmbhleco.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdmbhleco.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = Vector{Int64}(undef, length(numbers))\n    result[1] = numbers[1]\n\
    \    for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmp3a3xah5i.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp3a3xah5i.jl:8\n   [3] macro expansion\n     @ /tmp/tmp3a3xah5i.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3a3xah5i.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3a3xah5i.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpc4e9lvlz.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpc4e9lvlz.jl:8\n   [3] macro expansion\n     @ /tmp/tmpc4e9lvlz.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpc4e9lvlz.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc4e9lvlz.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    result[1] = numbers[1]\n \
    \   for i in 2:length(numbers)\n        result[i] = max(result[i-1], numbers[i])\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t\
    @test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2, 1])\
    \ == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100, 100])\n\
    end\n"
  stdout: "test set: Error During Test at /tmp/tmpctm_lluh.jl:19\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmpctm_lluh.jl:8\n   [3] macro expansion\n     @ /tmp/tmpctm_lluh.jl:19\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpctm_lluh.jl:18\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpctm_lluh.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    current_max = 0\n    for i\
    \ in 1:length(numbers)\n        current_max = max(current_max, numbers[i])\n \
    \       result[i] = current_max\n    end\n    return result\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    max_so_far = numbers[1]\n    result = [max_so_far]\n    for i in 2:length(numbers)\n\
    \        if numbers[i] > max_so_far\n            max_so_far = numbers[i]\n   \
    \     end\n        push!(result, max_so_far)\n    end\n    return result\nend\n\
    using Test\n\n@testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp07k2hbnz.jl:22\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp07k2hbnz.jl:7\n   [3] macro expansion\n     @ /tmp/tmp07k2hbnz.jl:22\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp07k2hbnz.jl:21\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp07k2hbnz.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_so_far = numbers[1]\n\
    \    result[1] = max_so_far\n    for i in 2:length(numbers)\n        if numbers[i]\
    \ > max_so_far\n            max_so_far = numbers[i]\n        end\n        result[i]\
    \ = max_so_far\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([4, 3, 2,\
    \ 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100, 3]) == [3, 3, 3, 100,\
    \ 100])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp02ipqbc4.jl:23\n  Test threw exception\n\
    \  Expression: candidate(Vector{Int64}([])) == Vector{Int64}([])\n  BoundsError:\
    \ attempt to access 0-element Vector{Int64} at index [1]\n  Stacktrace:\n   [1]\
    \ getindex\n     @ ./array.jl:805 [inlined]\n   [2] rolling_max(numbers::Vector{Int64})\n\
    \     @ Main /tmp/tmp02ipqbc4.jl:8\n   [3] macro expansion\n     @ /tmp/tmp02ipqbc4.jl:23\
    \ [inlined]\n   [4] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp02ipqbc4.jl:22\nTest Summary:\
    \ | Pass  Error  Total\ntest set      |    3      1      4\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp02ipqbc4.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" From a given list of integers, generate a list of rolling maximum\
    \ element found until given moment\n    in the sequence.\n    >>> rolling_max([1,\
    \ 2, 3, 2, 3, 4, 2])\n    [1, 2, 3, 3, 3, 4, 4]\n    \"\"\"\nfunction rolling_max(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    result = zeros(Int64, length(numbers))\n    max_so_far = 0\n    for i\
    \ in 1:length(numbers)\n        max_so_far = max(max_so_far, numbers[i])\n   \
    \     result[i] = max_so_far\n    end\n    return result\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = rolling_max;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([4, 3, 2, 1]) == [4, 4, 4, 4])\n\t@test(candidate([3, 2, 3, 100,\
    \ 3]) == [3, 3, 3, 100, 100])\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    4      4\n"
  exit_code: 0
  status: OK

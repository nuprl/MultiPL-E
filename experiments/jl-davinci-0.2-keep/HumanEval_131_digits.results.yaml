name: HumanEval_131_digits
language: julia
results:
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n \xF7 10)\
    \ * (n % 10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp61pny1hk.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp61pny1hk.jl:1\n\
    in expression starting at /tmp/tmp61pny1hk.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpq3ig9jpp.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq3ig9jpp.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq3ig9jpp.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq3ig9jpp.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    if n % 2 == 0\n        return\
    \ digits(n/10)\n    else\n        return (n % 10) * digits(n/10)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpsmovb5rr.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == 5\\n  MethodError: no method matching\
    \ digits(::Float64)\\n  Closest candidates are:\\n    digits(!Matched::Int64)\
    \ at /tmp/tmpsmovb5rr.jl:8\\n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @\
    \ Main /tmp/tmpsmovb5rr.jl:0\\n   [2] macro expansion\\n     @ /tmp/tmpsmovb5rr.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpsmovb5rr.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpsmovb5rr.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(54) == 5\\n  MethodError: no method matching digits(::Float64)\\n\
    \  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpsmovb5rr.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpsmovb5rr.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmpsmovb5rr.jl:24 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpsmovb5rr.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpsmovb5rr.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(120) == 1\\n  MethodError: no method matching digits(::Float64)\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpsmovb5rr.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpsmovb5rr.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmpsmovb5rr.jl:25 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpsmovb5rr.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpsmovb5rr.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(5014) == 5\\n  MethodError: no method matching digits(::Float64)\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpsmovb5rr.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpsmovb5rr."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            product *= digit\n        end\n      \
    \  n = div(n, 10)\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_u8mnwug.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_u8mnwug.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_u8mnwug.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_u8mnwug.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            product *= digit\n        end\n      \
    \  n = div(n, 10)\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5iwhtqf1.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5iwhtqf1.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5iwhtqf1.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5iwhtqf1.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            result *= digit\n        end\n       \
    \ n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp7cjdhr89.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7cjdhr89.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7cjdhr89.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7cjdhr89.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        d = n % 10\n      \
    \  if d % 2 == 1\n            prod *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzsaf7mq_.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzsaf7mq_.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzsaf7mq_.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzsaf7mq_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprdaadm55.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprdaadm55.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprdaadm55.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprdaadm55.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpcnln0vid.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcnln0vid.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcnln0vid.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcnln0vid.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpoa_h9u9_.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoa_h9u9_.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoa_h9u9_.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoa_h9u9_.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n == 0 && return 0\n    n % 2 == 0 && return digits(n \xF7 10)\n    return\
    \ (n % 10) * digits(n \xF7 10)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdddz17vh.jl:18\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdddz17vh.jl:18\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdddz17vh.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdddz17vh.jl:19\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdddz17vh.jl:19 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdddz17vh.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdddz17vh.jl:20\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdddz17vh.jl:20 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdddz17vh.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdddz17vh.jl:21\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdddz17vh.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdddz17vh.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdddz17vh.jl:22\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdddz17vh.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdddz17vh.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdddz17vh.jl:23\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdddz17vh.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdddz17vh.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n % 10) *\
    \ digits(n \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdgakso3m.jl:21\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdgakso3m.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdgakso3m.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpdgakso3m.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdgakso3m.jl:22 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdgakso3m.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpdgakso3m.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdgakso3m.jl:23 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdgakso3m.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpdgakso3m.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdgakso3m.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdgakso3m.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpdgakso3m.jl:25\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdgakso3m.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdgakso3m.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpdgakso3m.jl:26\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 384 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdgakso3m.jl:26 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdgakso3m.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n % 10) *\
    \ digits(n // 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpinewf209.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(54) == 5\\n  MethodError: no method matching\
    \ digits(::Rational{Int64})\\n  Closest candidates are:\\n    digits(!Matched::Int64)\
    \ at /tmp/tmpinewf209.jl:8\\n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @\
    \ Main /tmp/tmpinewf209.jl:12\\n   [2] macro expansion\\n     @ /tmp/tmpinewf209.jl:21\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpinewf209.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpinewf209.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(120) == 1\\n  MethodError: no method matching digits(::Rational{Int64})\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpinewf209.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpinewf209.jl:12\\\
    n   [2] macro expansion\\n     @ /tmp/tmpinewf209.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpinewf209.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpinewf209.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(5014) == 5\\n  MethodError: no method matching digits(::Rational{Int64})\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpinewf209.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpinewf209.jl:12\\\
    n   [2] macro expansion\\n     @ /tmp/tmpinewf209.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpinewf209.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpinewf209.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(98765) == 315\\n  MethodError: no method matching digits(::Rational{Int64})\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpinewf209.jl:8\\\
    n  Stacktrace:\\n   [1] digits"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpljprytod.jl:17\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpljprytod.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpljprytod.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpljprytod.jl:18\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpljprytod.jl:18 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpljprytod.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpljprytod.jl:19\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpljprytod.jl:19 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpljprytod.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpljprytod.jl:20\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpljprytod.jl:20 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpljprytod.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpljprytod.jl:21\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpljprytod.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpljprytod.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpljprytod.jl:22\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpljprytod.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpljprytod.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    res = 1\n    while n > 0\n        d = n % 10\n       \
    \ if d % 2 != 0\n            res *= d\n        end\n        n = div(n, 10)\n \
    \   end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0oj20tc9.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0oj20tc9.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0oj20tc9.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0oj20tc9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    res = 1\n    while n > 0\n        digit = n % 10\n   \
    \     if digit % 2 != 0\n            res *= digit\n        end\n        n = div(n,\
    \ 10)\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpra8bs2s9.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpra8bs2s9.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpra8bs2s9.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpra8bs2s9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmptyam_bx1.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptyam_bx1.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptyam_bx1.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptyam_bx1.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            product *= digit\n        end\n      \
    \  n = div(n, 10)\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpskpr1yg9.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpskpr1yg9.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpskpr1yg9.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpskpr1yg9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpqw_ygpaw.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqw_ygpaw.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqw_ygpaw.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqw_ygpaw.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3xqwan7_.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3xqwan7_.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3xqwan7_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3xqwan7_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        d = n % 10\n      \
    \  if d % 2 == 1\n            prod *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgnkiub8a.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgnkiub8a.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgnkiub8a.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgnkiub8a.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpy1bs497s.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpy1bs497s.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy1bs497s.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy1bs497s.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb0iyk5yj.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb0iyk5yj.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb0iyk5yj.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb0iyk5yj.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    product = 1\n    while n > 0\n        digit = n % 10\n        if digit\
    \ % 2 != 0\n            product *= digit\n        end\n        n = div(n, 10)\n\
    \    end\n    return product\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkiu2z7r3.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkiu2z7r3.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkiu2z7r3.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkiu2z7r3.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            product *= digit\n        end\n      \
    \  n = div(n, 10)\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpjeu54sgq.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjeu54sgq.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjeu54sgq.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjeu54sgq.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpq8soxfhj.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq8soxfhj.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq8soxfhj.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq8soxfhj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n == 0 && return 0\n    n % 2 == 0 && return digits(n \xF7 10)\n    return\
    \ n % 10 * digits(n \xF7 10)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1fjrslkp.jl:18\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1fjrslkp.jl:18\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1fjrslkp.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp1fjrslkp.jl:19\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1fjrslkp.jl:19 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1fjrslkp.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp1fjrslkp.jl:20\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1fjrslkp.jl:20 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1fjrslkp.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp1fjrslkp.jl:21\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1fjrslkp.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1fjrslkp.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp1fjrslkp.jl:22\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1fjrslkp.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1fjrslkp.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp1fjrslkp.jl:23\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1fjrslkp.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1fjrslkp.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            product *= digit\n        end\n      \
    \  n = div(n, 10)\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpq7ygoclo.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq7ygoclo.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq7ygoclo.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq7ygoclo.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        d = n % 10\n      \
    \  if d % 2 == 1\n            prod *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphaini9b3.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphaini9b3.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphaini9b3.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphaini9b3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            result *= digit\n        end\n       \
    \ n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp6ufl9ss9.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6ufl9ss9.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6ufl9ss9.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6ufl9ss9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd0tzghnq.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd0tzghnq.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd0tzghnq.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd0tzghnq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            product *= digit\n        end\n      \
    \  n = div(n, 10)\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpc167r8lw.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc167r8lw.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc167r8lw.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc167r8lw.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_lnvta35.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_lnvta35.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_lnvta35.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_lnvta35.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            result *= digit\n        end\n       \
    \ n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpjthilikj.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjthilikj.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjthilikj.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjthilikj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n % 2 == 1 ? n : 0\n    else\n        return\
    \ (n % 10 % 2 == 1 ? n % 10 : 0) * digits(n \xF7 10)\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp85isin6w.jl:21\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp85isin6w.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp85isin6w.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp85isin6w.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp85isin6w.jl:22 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp85isin6w.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp85isin6w.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp85isin6w.jl:23 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp85isin6w.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp85isin6w.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp85isin6w.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp85isin6w.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp85isin6w.jl:25\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp85isin6w.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp85isin6w.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp85isin6w.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        d = n % 10\n      \
    \  if d % 2 == 1\n            prod *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9fjxpi6v.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9fjxpi6v.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9fjxpi6v.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9fjxpi6v.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n % 2 == 1 ? n : 0\n    else\n        return\
    \ digits(n % 10) * digits(n \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpcttc7eh_.jl:21\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcttc7eh_.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcttc7eh_.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpcttc7eh_.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcttc7eh_.jl:22 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcttc7eh_.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpcttc7eh_.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcttc7eh_.jl:23 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcttc7eh_.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpcttc7eh_.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcttc7eh_.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcttc7eh_.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpcttc7eh_.jl:25\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcttc7eh_.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcttc7eh_.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcttc7eh_.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpxmt1l2ih.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxmt1l2ih.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxmt1l2ih.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxmt1l2ih.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    product = 1\n    for i in 1:length(n_str)\n   \
    \     if parse(Int64, n_str[i]) % 2 != 0\n            product *= parse(Int64,\
    \ n_str[i])\n        end\n    end\n    return product\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpfyy_qv9y.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfyy_qv9y.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfyy_qv9y.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfyy_qv9y.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return (n % 10) * digits(n\
    \ \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpozzx0n_i.jl:21\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpozzx0n_i.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpozzx0n_i.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpozzx0n_i.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpozzx0n_i.jl:22 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpozzx0n_i.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpozzx0n_i.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpozzx0n_i.jl:23 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpozzx0n_i.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpozzx0n_i.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpozzx0n_i.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpozzx0n_i.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpozzx0n_i.jl:25\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpozzx0n_i.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpozzx0n_i.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpozzx0n_i.jl:26\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 384 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpozzx0n_i.jl:26 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpozzx0n_i.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5see7zfi.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5see7zfi.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5see7zfi.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5see7zfi.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmplp_nwoes.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplp_nwoes.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplp_nwoes.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplp_nwoes.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            product *= digit\n        end\n      \
    \  n = div(n, 10)\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpwt_fyyt8.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwt_fyyt8.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwt_fyyt8.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwt_fyyt8.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        if n % 2 == 1\n   \
    \         prod *= n % 10\n        end\n        n = n \xF7 10\n    end\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt7w_4gwi.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpt7w_4gwi.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt7w_4gwi.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt7w_4gwi.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    if n % 2 == 0\n        return\
    \ digits(n/10)\n    else\n        return (n % 10) * digits(n/10)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjl3u4z36.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == 5\\n  MethodError: no method matching\
    \ digits(::Float64)\\n  Closest candidates are:\\n    digits(!Matched::Int64)\
    \ at /tmp/tmpjl3u4z36.jl:8\\n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @\
    \ Main /tmp/tmpjl3u4z36.jl:0\\n   [2] macro expansion\\n     @ /tmp/tmpjl3u4z36.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpjl3u4z36.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpjl3u4z36.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(54) == 5\\n  MethodError: no method matching digits(::Float64)\\n\
    \  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpjl3u4z36.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpjl3u4z36.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmpjl3u4z36.jl:24 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpjl3u4z36.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpjl3u4z36.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(120) == 1\\n  MethodError: no method matching digits(::Float64)\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpjl3u4z36.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpjl3u4z36.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmpjl3u4z36.jl:25 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpjl3u4z36.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpjl3u4z36.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(5014) == 5\\n  MethodError: no method matching digits(::Float64)\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpjl3u4z36.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpjl3u4z36."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwxkvmfc9.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwxkvmfc9.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwxkvmfc9.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwxkvmfc9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        d = n % 10\n      \
    \  if d % 2 == 1\n            prod *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyhz17u06.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyhz17u06.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyhz17u06.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyhz17u06.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpduq37e11.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpduq37e11.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpduq37e11.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpduq37e11.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        d = n % 10\n      \
    \  if d % 2 == 1\n            prod *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk678c2_4.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpk678c2_4.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk678c2_4.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk678c2_4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    if n % 2 == 0\n        return\
    \ digits(n/10)\n    else\n        return (n % 10) * digits(n/10)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpl9fp3d77.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == 5\\n  MethodError: no method matching\
    \ digits(::Float64)\\n  Closest candidates are:\\n    digits(!Matched::Int64)\
    \ at /tmp/tmpl9fp3d77.jl:8\\n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @\
    \ Main /tmp/tmpl9fp3d77.jl:0\\n   [2] macro expansion\\n     @ /tmp/tmpl9fp3d77.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpl9fp3d77.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpl9fp3d77.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(54) == 5\\n  MethodError: no method matching digits(::Float64)\\n\
    \  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpl9fp3d77.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpl9fp3d77.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmpl9fp3d77.jl:24 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpl9fp3d77.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpl9fp3d77.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(120) == 1\\n  MethodError: no method matching digits(::Float64)\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpl9fp3d77.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpl9fp3d77.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmpl9fp3d77.jl:25 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpl9fp3d77.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpl9fp3d77.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(5014) == 5\\n  MethodError: no method matching digits(::Float64)\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpl9fp3d77.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpl9fp3d77."
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp3cmt23kx.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3cmt23kx.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3cmt23kx.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3cmt23kx.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    end\n    if n % 2 == 0\n        return\
    \ digits(n \xF7 10)\n    else\n        return (n % 10) * digits(n \xF7 10)\n \
    \   end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfpht2wgt.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfpht2wgt.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfpht2wgt.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfpht2wgt.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        d = n % 10\n      \
    \  if d % 2 == 1\n            prod *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy0rqriol.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpy0rqriol.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy0rqriol.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy0rqriol.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        if n % 2 == 1\n   \
    \         prod *= n % 10\n        end\n        n = div(n, 10)\n    end\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoz2a1s66.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoz2a1s66.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoz2a1s66.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoz2a1s66.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    if n % 2 == 0\n        return\
    \ digits(n/10)\n    else\n        return (n % 10) * digits(n/10)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpth5k7h49.jl:23\n  Test threw exception\n\
    \  Expression: candidate(5) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpth5k7h49.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpth5k7h49.jl:0\n \
    \  [2] macro expansion\n     @ /tmp/tmpth5k7h49.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpth5k7h49.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpth5k7h49.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(54) == 5\n  MethodError: no method matching digits(::Float64)\n  Closest\
    \ candidates are:\n    digits(!Matched::Int64) at /tmp/tmpth5k7h49.jl:8\n  Stacktrace:\n\
    \   [1] digits(n::Int64)\n     @ Main /tmp/tmpth5k7h49.jl:0\n   [2] macro expansion\n\
    \     @ /tmp/tmpth5k7h49.jl:24 [inlined]\n   [3] macro expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpth5k7h49.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpth5k7h49.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Float64)\n \
    \ Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpth5k7h49.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpth5k7h49.jl:0\n \
    \  [2] macro expansion\n     @ /tmp/tmpth5k7h49.jl:25 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpth5k7h49.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpth5k7h49.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpth5k7h49.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpth5k7h49.jl:0\n \
    \  [2] macro expansion\n     @ /tmp/tmpth5k7h49.jl:"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpth5k7h49.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp24trhtvd.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp24trhtvd.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp24trhtvd.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp24trhtvd.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0\n        return 0\n    end\n    if n == 0\n        return 0\n\
    \    end\n    if n < 10\n        if n % 2 == 0\n            return 0\n       \
    \ else\n            return n\n        end\n    end\n    if n % 2 == 0\n      \
    \  return digits(n/10)\n    else\n        return n % 10 * digits(n/10)\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdvf021e7.jl:34\n  Test threw exception\n\
    \  Expression: candidate(54) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpdvf021e7.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpdvf021e7.jl:0\n \
    \  [2] macro expansion\n     @ /tmp/tmpdvf021e7.jl:34 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdvf021e7.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpdvf021e7.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(120) == 1\n  MethodError: no method matching digits(::Float64)\n \
    \ Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpdvf021e7.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpdvf021e7.jl:0\n \
    \  [2] macro expansion\n     @ /tmp/tmpdvf021e7.jl:35 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdvf021e7.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpdvf021e7.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(5014) == 5\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpdvf021e7.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpdvf021e7.jl:0\n \
    \  [2] macro expansion\n     @ /tmp/tmpdvf021e7.jl:36 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpdvf021e7.jl:32\ntest set:\
    \ Error During Test at /tmp/tmpdvf021e7.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(98765) == 315\n  MethodError: no method matching digits(::Float64)\n\
    \  Closest candidates are:\n    digits(!Matched::Int64) at /tmp/tmpdvf021e7.jl:8\n\
    \  Stacktrace:\n   [1] digits(n::Int64)\n     @ Main /tmp/tmpdvf021e7.jl:0\n \
    \  [2] macro expansion\n     @ /tmp/tmpdvf021"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdvf021e7.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    end\n    if n % 2 == 0\n        return\
    \ digits(n \xF7 10)\n    else\n        return (n % 10) * digits(n \xF7 10)\n \
    \   end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1tkjx23l.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1tkjx23l.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1tkjx23l.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1tkjx23l.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpkk0dsl7c.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkk0dsl7c.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkk0dsl7c.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkk0dsl7c.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            result *= digit\n        end\n       \
    \ n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpfe44_p1s.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfe44_p1s.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfe44_p1s.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfe44_p1s.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpufr810me.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpufr810me.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpufr810me.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpufr810me.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp54eqxnm8.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp54eqxnm8.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp54eqxnm8.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp54eqxnm8.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            result *= digit\n        end\n       \
    \ n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp9d87z13d.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9d87z13d.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9d87z13d.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9d87z13d.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_347rviw.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_347rviw.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_347rviw.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_347rviw.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfamumjdp.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfamumjdp.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfamumjdp.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfamumjdp.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        d = n % 10\n      \
    \  if d % 2 == 1\n            prod *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfeycjvg4.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfeycjvg4.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfeycjvg4.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfeycjvg4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # your code here\n    return 0\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmphio2l4a0.jl:17\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphio2l4a0.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphio2l4a0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphio2l4a0.jl:18\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphio2l4a0.jl:18 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphio2l4a0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphio2l4a0.jl:19\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphio2l4a0.jl:19 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphio2l4a0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphio2l4a0.jl:20\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphio2l4a0.jl:20 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphio2l4a0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphio2l4a0.jl:21\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphio2l4a0.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphio2l4a0.jl:16\ntest set: Test\
    \ Failed at /tmp/tmphio2l4a0.jl:22\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphio2l4a0.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphio2l4a0.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0\n        return 0\n    end\n    if n < 10\n        if n % 2 ==\
    \ 0\n            return 0\n        else\n            return n\n        end\n \
    \   end\n    if n % 2 == 0\n        return digits(div(n, 10))\n    else\n    \
    \    return n % 10 * digits(div(n, 10))\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        if n % 2 == 1\n   \
    \         prod *= n % 10\n        end\n        n = div(n, 10)\n    end\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcnojmvjx.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcnojmvjx.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcnojmvjx.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcnojmvjx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        if n % 2 == 1\n   \
    \         prod *= n % 10\n        end\n        n = div(n, 10)\n    end\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppeuglqly.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppeuglqly.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppeuglqly.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppeuglqly.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            result *= digit\n        end\n       \
    \ n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp2f66qwiy.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2f66qwiy.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2f66qwiy.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2f66qwiy.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpywawbtbu.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpywawbtbu.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpywawbtbu.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpywawbtbu.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpvwvzdgt7.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvwvzdgt7.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvwvzdgt7.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvwvzdgt7.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        if n % 2 == 1\n   \
    \         prod *= n % 10\n        end\n        n = div(n, 10)\n    end\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph1_bciws.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmph1_bciws.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph1_bciws.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph1_bciws.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp0ks5jedo.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0ks5jedo.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0ks5jedo.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ks5jedo.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp7e7u4hzk.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7e7u4hzk.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7e7u4hzk.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7e7u4hzk.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            product *= digit\n        end\n      \
    \  n = div(n, 10)\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_xjsyrqi.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_xjsyrqi.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_xjsyrqi.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_xjsyrqi.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        d = n % 10\n      \
    \  if d % 2 == 1\n            prod *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4sxaee2v.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4sxaee2v.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4sxaee2v.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4sxaee2v.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        d = n % 10\n    \
    \    if d % 2 == 1\n            result *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaofixzk2.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaofixzk2.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaofixzk2.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaofixzk2.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0\n        return 0\n    end\n    if n == 0\n        return 0\n\
    \    end\n    if n < 10\n        if n % 2 == 0\n            return 0\n       \
    \ else\n            return n\n        end\n    end\n    if n % 2 == 0\n      \
    \  return digits(n // 10)\n    else\n        return (n % 10) * digits(n // 10)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpg61twj8j.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(54) == 5\\n  MethodError: no method matching\
    \ digits(::Rational{Int64})\\n  Closest candidates are:\\n    digits(!Matched::Int64)\
    \ at /tmp/tmpg61twj8j.jl:8\\n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @\
    \ Main /tmp/tmpg61twj8j.jl:23\\n   [2] macro expansion\\n     @ /tmp/tmpg61twj8j.jl:34\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg61twj8j.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpg61twj8j.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(120) == 1\\n  MethodError: no method matching digits(::Rational{Int64})\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpg61twj8j.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpg61twj8j.jl:23\\\
    n   [2] macro expansion\\n     @ /tmp/tmpg61twj8j.jl:35 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg61twj8j.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpg61twj8j.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(5014) == 5\\n  MethodError: no method matching digits(::Rational{Int64})\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpg61twj8j.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpg61twj8j.jl:23\\\
    n   [2] macro expansion\\n     @ /tmp/tmpg61twj8j.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg61twj8j.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpg61twj8j.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(98765) == 315\\n  MethodError: no method matching digits(::Rational{Int64})\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpg61twj8j.jl:8\\\
    n  Stacktrace:\\n   [1] digits"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfcn5ai81.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfcn5ai81.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfcn5ai81.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfcn5ai81.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        if n % 2 == 1\n   \
    \         prod *= n % 10\n        end\n        n = div(n, 10)\n    end\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2c_le7yr.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2c_le7yr.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2c_le7yr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2c_le7yr.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n % 10) *\
    \ digits(n // 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfjywt9pu.jl:21\\n  Test threw\
    \ exception\\n  Expression: candidate(54) == 5\\n  MethodError: no method matching\
    \ digits(::Rational{Int64})\\n  Closest candidates are:\\n    digits(!Matched::Int64)\
    \ at /tmp/tmpfjywt9pu.jl:8\\n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @\
    \ Main /tmp/tmpfjywt9pu.jl:12\\n   [2] macro expansion\\n     @ /tmp/tmpfjywt9pu.jl:21\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpfjywt9pu.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpfjywt9pu.jl:22\\n  Test threw exception\\n  Expression:\
    \ candidate(120) == 1\\n  MethodError: no method matching digits(::Rational{Int64})\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpfjywt9pu.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpfjywt9pu.jl:12\\\
    n   [2] macro expansion\\n     @ /tmp/tmpfjywt9pu.jl:22 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpfjywt9pu.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpfjywt9pu.jl:23\\n  Test threw exception\\n  Expression:\
    \ candidate(5014) == 5\\n  MethodError: no method matching digits(::Rational{Int64})\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpfjywt9pu.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpfjywt9pu.jl:12\\\
    n   [2] macro expansion\\n     @ /tmp/tmpfjywt9pu.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpfjywt9pu.jl:19\\ntest set:\
    \ Error During Test at /tmp/tmpfjywt9pu.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(98765) == 315\\n  MethodError: no method matching digits(::Rational{Int64})\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpfjywt9pu.jl:8\\\
    n  Stacktrace:\\n   [1] digits"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in n_str\n        if parse(Int64,\
    \ i) % 2 != 0\n            prod *= parse(Int64, i)\n        end\n    end\n   \
    \ return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpao1nkctb.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpao1nkctb.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpao1nkctb.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpao1nkctb.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    if n < 10\n        return n % 2 == 1 ? n : 0\n    end\n\
    \    return (n % 10 % 2 == 1 ? n % 10 : 1) * digits(n \xF7 10)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpihfgepr3.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpihfgepr3.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpihfgepr3.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpihfgepr3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpaprrw8ez.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaprrw8ez.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaprrw8ez.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaprrw8ez.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0\n        return digits(-n)\n    end\n    if n < 10\n        return\
    \ n % 2 == 1 ? n : 0\n    end\n    return digits(n % 10) * digits(n \xF7 10)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1ckqy829.jl:23\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ckqy829.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ckqy829.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp1ckqy829.jl:24\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ckqy829.jl:24 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ckqy829.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp1ckqy829.jl:25\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ckqy829.jl:25 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ckqy829.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp1ckqy829.jl:26\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ckqy829.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ckqy829.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp1ckqy829.jl:27\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1ckqy829.jl:27\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ckqy829.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ckqy829.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        d = n % 10\n      \
    \  if d % 2 == 1\n            prod *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppo4encbv.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppo4encbv.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppo4encbv.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppo4encbv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return (n % 10) * digits(n\
    \ \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb5yu95vt.jl:21\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb5yu95vt.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb5yu95vt.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpb5yu95vt.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb5yu95vt.jl:22 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb5yu95vt.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpb5yu95vt.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb5yu95vt.jl:23 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb5yu95vt.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpb5yu95vt.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb5yu95vt.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb5yu95vt.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpb5yu95vt.jl:25\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb5yu95vt.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb5yu95vt.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpb5yu95vt.jl:26\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 384 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb5yu95vt.jl:26 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb5yu95vt.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpl15wti1v.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl15wti1v.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl15wti1v.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl15wti1v.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            product *= digit\n        end\n      \
    \  n = div(n, 10)\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp9b8knnf5.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9b8knnf5.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9b8knnf5.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9b8knnf5.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmptvgrq_rc.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptvgrq_rc.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptvgrq_rc.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptvgrq_rc.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for c in n_str\n        if c == '0'\
    \ || c == '2' || c == '4' || c == '6' || c == '8'\n            continue\n    \
    \    else\n            prod *= parse(Int64, c)\n        end\n    end\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbj02q568.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpbj02q568.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbj02q568.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbj02q568.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            product *= digit\n        end\n      \
    \  n = div(n, 10)\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpgc2h1xb7.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgc2h1xb7.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgc2h1xb7.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgc2h1xb7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    product = 1\n    for i in 1:length(n_str)\n   \
    \     if parse(Int64, n_str[i]) % 2 != 0\n            product *= parse(Int64,\
    \ n_str[i])\n        end\n    end\n    return product\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpingzga8p.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpingzga8p.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpingzga8p.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpingzga8p.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    res = 1\n    while n > 0\n        digit = n % 10\n   \
    \     if digit % 2 != 0\n            res *= digit\n        end\n        n = div(n,\
    \ 10)\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7xvjj7nv.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7xvjj7nv.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7xvjj7nv.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7xvjj7nv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n \xF7 10)\
    \ * (n % 10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3lixv94o.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3lixv94o.jl:1\n\
    in expression starting at /tmp/tmp3lixv94o.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n \xF7 10)\
    \ * (n % 10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqbv0vpnz.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqbv0vpnz.jl:1\n\
    in expression starting at /tmp/tmpqbv0vpnz.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptf9kvfte.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptf9kvfte.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptf9kvfte.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptf9kvfte.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpy97c6_tz.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpy97c6_tz.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy97c6_tz.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy97c6_tz.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            result *= digit\n        end\n       \
    \ n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp0m1yf0o9.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0m1yf0o9.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0m1yf0o9.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0m1yf0o9.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    if n % 2 == 0\n        return\
    \ digits(n/10)\n    else\n        return (n % 10) * digits(n/10)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5mcy_5gf.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == 5\\n  MethodError: no method matching\
    \ digits(::Float64)\\n  Closest candidates are:\\n    digits(!Matched::Int64)\
    \ at /tmp/tmp5mcy_5gf.jl:8\\n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @\
    \ Main /tmp/tmp5mcy_5gf.jl:0\\n   [2] macro expansion\\n     @ /tmp/tmp5mcy_5gf.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5mcy_5gf.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp5mcy_5gf.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(54) == 5\\n  MethodError: no method matching digits(::Float64)\\n\
    \  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmp5mcy_5gf.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmp5mcy_5gf.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmp5mcy_5gf.jl:24 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5mcy_5gf.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp5mcy_5gf.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(120) == 1\\n  MethodError: no method matching digits(::Float64)\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmp5mcy_5gf.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmp5mcy_5gf.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmp5mcy_5gf.jl:25 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5mcy_5gf.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp5mcy_5gf.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(5014) == 5\\n  MethodError: no method matching digits(::Float64)\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmp5mcy_5gf.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmp5mcy_5gf."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpcd0v8vsw.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcd0v8vsw.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcd0v8vsw.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcd0v8vsw.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpmicmwolu.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmicmwolu.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmicmwolu.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmicmwolu.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n % 2 == 1 ? n : 0\n    else\n        return\
    \ digits(n % 10) * digits(n \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp3dqva_jz.jl:21\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3dqva_jz.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3dqva_jz.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp3dqva_jz.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3dqva_jz.jl:22 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3dqva_jz.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp3dqva_jz.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3dqva_jz.jl:23 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3dqva_jz.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp3dqva_jz.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3dqva_jz.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3dqva_jz.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp3dqva_jz.jl:25\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3dqva_jz.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3dqva_jz.jl:19\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3dqva_jz.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0\n        return digits(-n)\n    end\n    if n < 10\n        return\
    \ n % 2 == 1 ? n : 0\n    end\n    return digits(n % 10) * digits(n \xF7 10)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf_cxqq01.jl:23\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf_cxqq01.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf_cxqq01.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf_cxqq01.jl:24\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf_cxqq01.jl:24 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf_cxqq01.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf_cxqq01.jl:25\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf_cxqq01.jl:25 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf_cxqq01.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf_cxqq01.jl:26\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf_cxqq01.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf_cxqq01.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpf_cxqq01.jl:27\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf_cxqq01.jl:27\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf_cxqq01.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf_cxqq01.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0\n        return 0\n    end\n    if n == 0\n        return 0\n\
    \    end\n    if n < 10\n        if n % 2 == 0\n            return 0\n       \
    \ else\n            return n\n        end\n    end\n    if n % 2 == 0\n      \
    \  return digits(n / 10)\n    else\n        return (n % 10) * digits(n / 10)\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzgqcuwt3.jl:34\\n  Test threw\
    \ exception\\n  Expression: candidate(54) == 5\\n  MethodError: no method matching\
    \ digits(::Float64)\\n  Closest candidates are:\\n    digits(!Matched::Int64)\
    \ at /tmp/tmpzgqcuwt3.jl:8\\n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @\
    \ Main /tmp/tmpzgqcuwt3.jl:0\\n   [2] macro expansion\\n     @ /tmp/tmpzgqcuwt3.jl:34\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpzgqcuwt3.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpzgqcuwt3.jl:35\\n  Test threw exception\\n  Expression:\
    \ candidate(120) == 1\\n  MethodError: no method matching digits(::Float64)\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpzgqcuwt3.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpzgqcuwt3.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmpzgqcuwt3.jl:35 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpzgqcuwt3.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpzgqcuwt3.jl:36\\n  Test threw exception\\n  Expression:\
    \ candidate(5014) == 5\\n  MethodError: no method matching digits(::Float64)\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpzgqcuwt3.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpzgqcuwt3.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmpzgqcuwt3.jl:36 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpzgqcuwt3.jl:32\\ntest set:\
    \ Error During Test at /tmp/tmpzgqcuwt3.jl:37\\n  Test threw exception\\n  Expression:\
    \ candidate(98765) == 315\\n  MethodError: no method matching digits(::Float64)\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpzgqcuwt3.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpzgq"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n \xF7 10)\
    \ * (n % 10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpge51a6uk.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpge51a6uk.jl:1\n\
    in expression starting at /tmp/tmpge51a6uk.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3kyu6khg.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3kyu6khg.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3kyu6khg.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3kyu6khg.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        d = n % 10\n      \
    \  if d % 2 == 1\n            prod *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfm1pjz69.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfm1pjz69.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfm1pjz69.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfm1pjz69.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpf276acjj.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf276acjj.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf276acjj.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf276acjj.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for c in n_str\n        if c == '0'\
    \ || c == '2' || c == '4' || c == '6' || c == '8'\n            continue\n    \
    \    else\n            prod *= parse(Int64, c)\n        end\n    end\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpolff9h4s.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpolff9h4s.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpolff9h4s.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpolff9h4s.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu4ybq6k6.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu4ybq6k6.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu4ybq6k6.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu4ybq6k6.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n \xF7 10)\
    \ * (n % 10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpury6h2fw.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpury6h2fw.jl:1\n\
    in expression starting at /tmp/tmpury6h2fw.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n == 0 && return 0\n    n % 2 == 0 && return digits(n \xF7 10)\n    return\
    \ n % 10 * digits(n \xF7 10)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa_fo8b9d.jl:18\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa_fo8b9d.jl:18\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa_fo8b9d.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpa_fo8b9d.jl:19\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa_fo8b9d.jl:19 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa_fo8b9d.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpa_fo8b9d.jl:20\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa_fo8b9d.jl:20 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa_fo8b9d.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpa_fo8b9d.jl:21\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa_fo8b9d.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa_fo8b9d.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpa_fo8b9d.jl:22\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa_fo8b9d.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa_fo8b9d.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpa_fo8b9d.jl:23\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpa_fo8b9d.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa_fo8b9d.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    product = 1\n    for i in 1:length(n_str)\n   \
    \     if parse(Int64, n_str[i]) % 2 != 0\n            product *= parse(Int64,\
    \ n_str[i])\n        end\n    end\n    return product\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp0u3_h0cw.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp0u3_h0cw.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0u3_h0cw.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0u3_h0cw.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp7qpxnccp.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7qpxnccp.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7qpxnccp.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7qpxnccp.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n \xF7 10)\
    \ * (n % 10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptqqgshmj.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptqqgshmj.jl:1\n\
    in expression starting at /tmp/tmptqqgshmj.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        d = n % 10\n      \
    \  if d % 2 == 1\n            prod *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq8yq150p.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq8yq150p.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq8yq150p.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq8yq150p.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    end\n    if n % 2 == 0\n        return\
    \ digits(n \xF7 10)\n    else\n        return (n % 10) * digits(n \xF7 10)\n \
    \   end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvblshqvv.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvblshqvv.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvblshqvv.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvblshqvv.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in n_str\n        if parse(Int64,\
    \ i) % 2 != 0\n            prod *= parse(Int64, i)\n        end\n    end\n   \
    \ return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg64vqy8g.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpg64vqy8g.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg64vqy8g.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg64vqy8g.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    product = 1\n    for i in 1:length(n_str)\n   \
    \     digit = parse(Int64, n_str[i])\n        if digit % 2 == 1\n            product\
    \ *= digit\n        end\n    end\n    return product\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpgytx0ve7.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgytx0ve7.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgytx0ve7.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgytx0ve7.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    end\n    if n % 2 == 0\n        return\
    \ digits(n \xF7 10)\n    else\n        return (n % 10) * digits(n \xF7 10)\n \
    \   end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkn_r4s6j.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkn_r4s6j.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkn_r4s6j.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkn_r4s6j.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpvui3bo_u.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvui3bo_u.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvui3bo_u.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvui3bo_u.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp12u_v86e.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp12u_v86e.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp12u_v86e.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp12u_v86e.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return (n % 10) * digits(n\
    \ \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnkl5eab3.jl:21\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnkl5eab3.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnkl5eab3.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnkl5eab3.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnkl5eab3.jl:22 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnkl5eab3.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnkl5eab3.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnkl5eab3.jl:23 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnkl5eab3.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnkl5eab3.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnkl5eab3.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnkl5eab3.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnkl5eab3.jl:25\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnkl5eab3.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnkl5eab3.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpnkl5eab3.jl:26\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 384 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnkl5eab3.jl:26 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnkl5eab3.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            result *= digit\n        end\n       \
    \ n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpqf8yo4c0.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqf8yo4c0.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqf8yo4c0.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqf8yo4c0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5snzm1lj.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5snzm1lj.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5snzm1lj.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5snzm1lj.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzlo7ig13.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzlo7ig13.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzlo7ig13.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzlo7ig13.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7rj0ni_z.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7rj0ni_z.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7rj0ni_z.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7rj0ni_z.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            product *= digit\n        end\n      \
    \  n = div(n, 10)\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp22yxkcs8.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp22yxkcs8.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp22yxkcs8.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp22yxkcs8.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    res = 1\n    while n > 0\n        d = n % 10\n       \
    \ if d % 2 != 0\n            res *= d\n        end\n        n = div(n, 10)\n \
    \   end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvsm5wsb3.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvsm5wsb3.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvsm5wsb3.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvsm5wsb3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            result *= digit\n        end\n       \
    \ n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmplkbyqyq3.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplkbyqyq3.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplkbyqyq3.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplkbyqyq3.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfm69utaq.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpfm69utaq.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfm69utaq.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfm69utaq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    if n < 10\n        return n % 2 == 1 ? n : 0\n    end\n\
    \    return (n % 10 % 2 == 1 ? n % 10 : 1) * digits(n \xF7 10)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54)\
    \ == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpvrs9b6nv.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvrs9b6nv.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvrs9b6nv.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvrs9b6nv.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    res = 1\n    while n > 0\n        d = n % 10\n       \
    \ if d % 2 != 0\n            res *= d\n        end\n        n = div(n, 10)\n \
    \   end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnvo3xr2m.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnvo3xr2m.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnvo3xr2m.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnvo3xr2m.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpyaka70sg.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpyaka70sg.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyaka70sg.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyaka70sg.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmprkbtodxk.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprkbtodxk.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprkbtodxk.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprkbtodxk.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        r = n % 10\n      \
    \  if r % 2 != 0\n            prod *= r\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx16m69tx.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx16m69tx.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx16m69tx.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx16m69tx.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpdwj99q2j.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdwj99q2j.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdwj99q2j.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdwj99q2j.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpho8p6rb4.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpho8p6rb4.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpho8p6rb4.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpho8p6rb4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    end\n    if n % 2 == 0\n        return\
    \ digits(n \xF7 10)\n    else\n        return n % 10 * digits(n \xF7 10)\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzsmt14sp.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzsmt14sp.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzsmt14sp.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzsmt14sp.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp__c2ta75.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp__c2ta75.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp__c2ta75.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp__c2ta75.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    if n % 2 == 0\n        return\
    \ digits(n/10)\n    else\n        return (n % 10) * digits(n/10)\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5) == 5)\n\
    \t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpu4osglfh.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(5) == 5\\n  MethodError: no method matching\
    \ digits(::Float64)\\n  Closest candidates are:\\n    digits(!Matched::Int64)\
    \ at /tmp/tmpu4osglfh.jl:8\\n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @\
    \ Main /tmp/tmpu4osglfh.jl:0\\n   [2] macro expansion\\n     @ /tmp/tmpu4osglfh.jl:23\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpu4osglfh.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpu4osglfh.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(54) == 5\\n  MethodError: no method matching digits(::Float64)\\n\
    \  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpu4osglfh.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpu4osglfh.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmpu4osglfh.jl:24 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpu4osglfh.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpu4osglfh.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(120) == 1\\n  MethodError: no method matching digits(::Float64)\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpu4osglfh.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpu4osglfh.jl:0\\\
    n   [2] macro expansion\\n     @ /tmp/tmpu4osglfh.jl:25 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpu4osglfh.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpu4osglfh.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(5014) == 5\\n  MethodError: no method matching digits(::Float64)\\\
    n  Closest candidates are:\\n    digits(!Matched::Int64) at /tmp/tmpu4osglfh.jl:8\\\
    n  Stacktrace:\\n   [1] digits(n::Int64)\\n     @ Main /tmp/tmpu4osglfh."
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n == 0 && return 0\n    n % 2 == 0 && return digits(n \xF7 10)\n    return\
    \ n % 10 * digits(n \xF7 10)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphneqi87l.jl:18\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphneqi87l.jl:18\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphneqi87l.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphneqi87l.jl:19\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphneqi87l.jl:19 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphneqi87l.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphneqi87l.jl:20\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphneqi87l.jl:20 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphneqi87l.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphneqi87l.jl:21\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphneqi87l.jl:21 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphneqi87l.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphneqi87l.jl:22\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphneqi87l.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphneqi87l.jl:17\ntest set: Test\
    \ Failed at /tmp/tmphneqi87l.jl:23\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmphneqi87l.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphneqi87l.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n \xF7 10)\
    \ * (n % 10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmps24z2ync.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmps24z2ync.jl:1\n\
    in expression starting at /tmp/tmps24z2ync.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return (n % 10) * digits(n\
    \ \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl8_k_0w7.jl:21\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl8_k_0w7.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl8_k_0w7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpl8_k_0w7.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl8_k_0w7.jl:22 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl8_k_0w7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpl8_k_0w7.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl8_k_0w7.jl:23 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl8_k_0w7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpl8_k_0w7.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl8_k_0w7.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl8_k_0w7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpl8_k_0w7.jl:25\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl8_k_0w7.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl8_k_0w7.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpl8_k_0w7.jl:26\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 384 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl8_k_0w7.jl:26 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl8_k_0w7.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpvs0hkdhp.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvs0hkdhp.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvs0hkdhp.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvs0hkdhp.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpin9z8vao.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpin9z8vao.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpin9z8vao.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpin9z8vao.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl0kdw122.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpl0kdw122.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl0kdw122.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl0kdw122.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        d = n % 10\n      \
    \  if d % 2 == 1\n            prod *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppr74jx1z.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmppr74jx1z.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppr74jx1z.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppr74jx1z.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        if n % 2 == 1\n   \
    \         prod *= n % 10\n        end\n        n = div(n, 10)\n    end\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2xc_fsgd.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2xc_fsgd.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2xc_fsgd.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2xc_fsgd.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpealnn2f8.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpealnn2f8.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpealnn2f8.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpealnn2f8.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmptofdoz78.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptofdoz78.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptofdoz78.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptofdoz78.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n == 0\n        return 0\n    end\n    if n % 2 == 0\n        return\
    \ digits(n \xF7 10)\n    else\n        return (n % 10) * digits(n \xF7 10)\n \
    \   end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_8h87115.jl:23\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_8h87115.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_8h87115.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp_8h87115.jl:24\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_8h87115.jl:24 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_8h87115.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp_8h87115.jl:25\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_8h87115.jl:25 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_8h87115.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp_8h87115.jl:26\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_8h87115.jl:26 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_8h87115.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp_8h87115.jl:27\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_8h87115.jl:27\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_8h87115.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp_8h87115.jl:28\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_8h87115.jl:28\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_8h87115.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpxr2p9t1m.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpxr2p9t1m.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxr2p9t1m.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxr2p9t1m.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n \xF7 10)\
    \ * (n % 10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpegx5fhk7.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpegx5fhk7.jl:1\n\
    in expression starting at /tmp/tmpegx5fhk7.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx8sorg3e.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpx8sorg3e.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx8sorg3e.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx8sorg3e.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    end\n    if n % 2 == 0\n        return\
    \ digits(n \xF7 10)\n    else\n        return (n % 10) * digits(n \xF7 10)\n \
    \   end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4sv4eu5u.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4sv4eu5u.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4sv4eu5u.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4sv4eu5u.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return (n % 10) * digits(n\
    \ \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb86naktl.jl:21\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb86naktl.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb86naktl.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpb86naktl.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb86naktl.jl:22 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb86naktl.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpb86naktl.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb86naktl.jl:23 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb86naktl.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpb86naktl.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb86naktl.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb86naktl.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpb86naktl.jl:25\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb86naktl.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb86naktl.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpb86naktl.jl:26\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 384 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb86naktl.jl:26 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb86naktl.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    res = 1\n    while n > 0\n        if n % 2 == 1\n    \
    \        res *= n % 10\n        end\n        n = div(n, 10)\n    end\n    return\
    \ res\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzftdmnby.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzftdmnby.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzftdmnby.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzftdmnby.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        d = n % 10\n      \
    \  if d % 2 == 1\n            prod *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_6fg8rr8.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_6fg8rr8.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_6fg8rr8.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_6fg8rr8.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return (n % 10) * digits(n\
    \ \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp621tnng1.jl:21\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp621tnng1.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp621tnng1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp621tnng1.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp621tnng1.jl:22 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp621tnng1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp621tnng1.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp621tnng1.jl:23 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp621tnng1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp621tnng1.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp621tnng1.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp621tnng1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp621tnng1.jl:25\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp621tnng1.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp621tnng1.jl:19\ntest set: Test\
    \ Failed at /tmp/tmp621tnng1.jl:26\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 384 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp621tnng1.jl:26 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp621tnng1.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 0\n        return digits(-n)\n    end\n    if n < 10\n        return\
    \ n % 2 == 1 ? n : 0\n    end\n    return digits(n % 10) * digits(n \xF7 10)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp011kh8gz.jl:23\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp011kh8gz.jl:23\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp011kh8gz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp011kh8gz.jl:24\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp011kh8gz.jl:24 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp011kh8gz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp011kh8gz.jl:25\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp011kh8gz.jl:25 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp011kh8gz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp011kh8gz.jl:26\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp011kh8gz.jl:26\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp011kh8gz.jl:21\ntest set: Test\
    \ Failed at /tmp/tmp011kh8gz.jl:27\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp011kh8gz.jl:27\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp011kh8gz.jl:21\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     5      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp011kh8gz.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        if n % 2 == 1\n   \
    \         prod *= n % 10\n        end\n        n = div(n, 10)\n    end\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzdrh9_75.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzdrh9_75.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzdrh9_75.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzdrh9_75.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        if n % 2 == 1\n   \
    \         prod *= n % 10\n        end\n        n = div(n, 10)\n    end\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwhkp1_jq.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpwhkp1_jq.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwhkp1_jq.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwhkp1_jq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return (n % 10) * digits(n\
    \ \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv1fhabjh.jl:21\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv1fhabjh.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv1fhabjh.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpv1fhabjh.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv1fhabjh.jl:22 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv1fhabjh.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpv1fhabjh.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv1fhabjh.jl:23 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv1fhabjh.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpv1fhabjh.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv1fhabjh.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv1fhabjh.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpv1fhabjh.jl:25\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv1fhabjh.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv1fhabjh.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpv1fhabjh.jl:26\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 384 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv1fhabjh.jl:26 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv1fhabjh.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            result *= digit\n        end\n       \
    \ n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpim96nr8x.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpim96nr8x.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpim96nr8x.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpim96nr8x.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            result *= digit\n        end\n       \
    \ n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpzlckbyvm.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzlckbyvm.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzlckbyvm.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzlckbyvm.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n \xF7 10)\
    \ * (n % 10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpx6hn3285.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx6hn3285.jl:1\n\
    in expression starting at /tmp/tmpx6hn3285.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp4_juxcsv.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4_juxcsv.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4_juxcsv.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4_juxcsv.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            result *= digit\n        end\n       \
    \ n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpp8l4zxoc.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpp8l4zxoc.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpp8l4zxoc.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpp8l4zxoc.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    # YOUR CODE HERE\n    return 0\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpoimjgy9n.jl:17\n  Expression: candidate(5)\
    \ == 5\n   Evaluated: 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoimjgy9n.jl:17\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoimjgy9n.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoimjgy9n.jl:18\n  Expression: candidate(54) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoimjgy9n.jl:18 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoimjgy9n.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoimjgy9n.jl:19\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoimjgy9n.jl:19 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoimjgy9n.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoimjgy9n.jl:20\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoimjgy9n.jl:20 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoimjgy9n.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoimjgy9n.jl:21\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 0 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoimjgy9n.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoimjgy9n.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpoimjgy9n.jl:22\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 0 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoimjgy9n.jl:22\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoimjgy9n.jl:14\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp9v15bbic.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9v15bbic.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9v15bbic.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9v15bbic.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            result *= digit\n        end\n       \
    \ n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpc9t7w9ub.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpc9t7w9ub.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpc9t7w9ub.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc9t7w9ub.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return n % 10 * digits(n\
    \ \xF7 10)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpggk01dxu.jl:21\n  Expression: candidate(54)\
    \ == 5\n   Evaluated: 20 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpggk01dxu.jl:21\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpggk01dxu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpggk01dxu.jl:22\n  Expression: candidate(120) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpggk01dxu.jl:22 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpggk01dxu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpggk01dxu.jl:23\n  Expression: candidate(5014) == 5\n   Evaluated:\
    \ 0 == 5\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpggk01dxu.jl:23 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpggk01dxu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpggk01dxu.jl:24\n  Expression: candidate(98765) == 315\n  \
    \ Evaluated: 15120 == 315\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpggk01dxu.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpggk01dxu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpggk01dxu.jl:25\n  Expression: candidate(5576543) == 2625\n\
    \   Evaluated: 63000 == 2625\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpggk01dxu.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpggk01dxu.jl:19\ntest set: Test\
    \ Failed at /tmp/tmpggk01dxu.jl:26\n  Expression: candidate(2468) == 0\n   Evaluated:\
    \ 384 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpggk01dxu.jl:26 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 6 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpggk01dxu.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy35ozmww.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpy35ozmww.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy35ozmww.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy35ozmww.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        d = n % 10\n      \
    \  if d % 2 == 1\n            prod *= d\n        end\n        n = div(n, 10)\n\
    \    end\n    return prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\
    \t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi5904g1v.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpi5904g1v.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi5904g1v.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi5904g1v.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            result *= digit\n        end\n       \
    \ n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp1rphbim0.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1rphbim0.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1rphbim0.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1rphbim0.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpu075cthr.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu075cthr.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu075cthr.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu075cthr.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n \xF7 10)\
    \ * (n % 10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpycooua24.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpycooua24.jl:1\n\
    in expression starting at /tmp/tmpycooua24.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmprh55ne2q.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprh55ne2q.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprh55ne2q.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprh55ne2q.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5pstb9pu.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5pstb9pu.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5pstb9pu.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5pstb9pu.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    result = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            result *= digit\n        end\n       \
    \ n = div(n, 10)\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpvpoxsr0y.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvpoxsr0y.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvpoxsr0y.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvpoxsr0y.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n \xF7 10)\
    \ * (n % 10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpf2jk0bbn.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf2jk0bbn.jl:1\n\
    in expression starting at /tmp/tmpf2jk0bbn.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp_cint8hr.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_cint8hr.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_cint8hr.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_cint8hr.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp5d96uyr4.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5d96uyr4.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5d96uyr4.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5d96uyr4.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpabqkbemc.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpabqkbemc.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpabqkbemc.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpabqkbemc.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    res = 1\n    while n > 0\n        digit = n % 10\n   \
    \     if digit % 2 != 0\n            res *= digit\n        end\n        n = div(n,\
    \ 10)\n    end\n    return res\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9lsjupqm.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp9lsjupqm.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9lsjupqm.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9lsjupqm.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpqikirvba.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqikirvba.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqikirvba.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqikirvba.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        if n % 2 == 1\n   \
    \         prod *= n % 10\n        end\n        n = div(n, 10)\n    end\n    return\
    \ prod\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp45ttddkj.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp45ttddkj.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp45ttddkj.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp45ttddkj.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        return digits(n \xF7 10)\
    \ * (n % 10)\nend\nusing Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
    \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
    \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
    \t@test(candidate(2468) == 0)\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7kpcjyrt.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7kpcjyrt.jl:1\n\
    in expression starting at /tmp/tmp7kpcjyrt.jl:1\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmpv3yj6w3c.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv3yj6w3c.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv3yj6w3c.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv3yj6w3c.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n_str = string(n)\n    prod = 1\n    for i in 1:length(n_str)\n      \
    \  if parse(Int64, n_str[i]) % 2 != 0\n            prod *= parse(Int64, n_str[i])\n\
    \        end\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp__c0xfkm.jl:29\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp__c0xfkm.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp__c0xfkm.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp__c0xfkm.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    if n < 10\n        return n\n    else\n        if n % 2 == 0\n       \
    \     return digits(n \xF7 10)\n        else\n            return (n % 10) * digits(n\
    \ \xF7 10)\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120)\
    \ == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543)\
    \ == 2625)\n\t@test(candidate(2468) == 0)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2iyfh34m.jl:30\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 2 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2iyfh34m.jl:30\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2iyfh34m.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2iyfh34m.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    prod = 1\n    while n > 0\n        digit = n % 10\n  \
    \      if digit % 2 != 0\n            prod *= digit\n        end\n        n =\
    \ div(n, 10)\n    end\n    return prod\nend\nusing Test\n\n@testset begin\n\n\
    candidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp6bj3aq0w.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6bj3aq0w.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6bj3aq0w.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6bj3aq0w.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            product *= digit\n        end\n      \
    \  n = div(n, 10)\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp73z580ys.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp73z580ys.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp73z580ys.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp73z580ys.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
    \    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n\
    \    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\nfunction digits(n::Int64)::Int64\
    \ \n    n = abs(n)\n    product = 1\n    while n > 0\n        digit = n % 10\n\
    \        if digit % 2 != 0\n            product *= digit\n        end\n      \
    \  n = div(n, 10)\n    end\n    return product\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = digits;\n\t@test(candidate(5) == 5)\n\t@test(candidate(54) == 5)\n\
    \t@test(candidate(120) == 1)\n\t@test(candidate(5014) == 5)\n\t@test(candidate(98765)\
    \ == 315)\n\t@test(candidate(5576543) == 2625)\n\t@test(candidate(2468) == 0)\n\
    end\n"
  stdout: "test set: Test Failed at /tmp/tmp69qtx47a.jl:31\n  Expression: candidate(2468)\
    \ == 0\n   Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp69qtx47a.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp69qtx47a.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     1      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp69qtx47a.jl:22\n"
  exit_code: 1
  status: SyntaxError

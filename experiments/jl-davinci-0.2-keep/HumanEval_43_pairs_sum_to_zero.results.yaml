name: HumanEval_43_pairs_sum_to_zero
language: julia
results:
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    if length(l) < 2\n        return false\n    end\n    for i in 1:length(l)\n\
    \        for j in i+1:length(l)\n            if l[i] + l[j] == 0\n           \
    \     return true\n            end\n        end\n    end\n    return false\nend\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if (l[i]\
    \ + l[j] == 0) && (i != j)\n                return true\n            end\n   \
    \     end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if (l[i]\
    \ + l[j] == 0) && (i != j)\n                return true\n            end\n   \
    \     end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if (i\
    \ != j) && (l[i] + l[j] == 0)\n                return true\n            end\n\
    \        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmppbxb3w8q.jl:24\\n  Test threw\
    \ exception\\n  Expression: candidate([1, 3, 5, 0]) == false\\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Bool\\n  Closest\
    \ candidates are:\\n    convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\\
    n    convert(::Type{T}, !Matched::Number) where T<:Number at number.jl:7\\n  \
    \  convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at twiceprecision.jl:250\\\
    n    ...\\n  Stacktrace:\\n   [1] pairs_sum_to_zero(l::Vector{Int64})\\n     @\
    \ Main /tmp/tmppbxb3w8q.jl:18\\n   [2] macro expansion\\n     @ /tmp/tmppbxb3w8q.jl:24\
    \ [inlined]\\n   [3] macro expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmppbxb3w8q.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmppbxb3w8q.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 3, -2, 1]) == false\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Bool\\n  Closest candidates are:\\n   \
    \ convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:7\\n    convert(::Type{T}, !Matched::Base.TwicePrecision)\
    \ where T<:Number at twiceprecision.jl:250\\n    ...\\n  Stacktrace:\\n   [1]\
    \ pairs_sum_to_zero(l::Vector{Int64})\\n     @ Main /tmp/tmppbxb3w8q.jl:18\\n\
    \   [2] macro expansion\\n     @ /tmp/tmppbxb3w8q.jl:25 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmppbxb3w8q.jl:23\\ntest set:\
    \ Error During Test at /tmp/tmppbxb3w8q.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate([1, 2, 3, 7]) == false\\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Bool\\n  Closest candidates are:\\n   \
    \ convert(::Type{T}, !Matched::T) where T<:Number at number.jl:6\\n    convert(::Type{T},\
    \ !Matched::Number) where T<:Number at number.jl:"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    # YOUR CODE HERE\n    for i in 1:length(l)\n        for j in 1:length(l)\n\
    \            if i != j\n                if l[i] + l[j] == 0\n                \
    \    return true\n                end\n            end\n        end\n    end\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    # YOUR CODE HERE\n    for i in 1:length(l)\n        for j in i+1:length(l)\n\
    \            if l[i] + l[j] == 0\n                return true\n            end\n\
    \        end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    if length(l) == 1\n        return false\n    end\n    for i in 1:length(l)\n\
    \        for j in 1:length(l)\n            if i != j && l[i] + l[j] == 0\n   \
    \             return true\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if l[i]\
    \ + l[j] == 0 && i != j\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j\n                if l[i] + l[j] == 0\n                    return true\n  \
    \              end\n            end\n        end\n    end\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if (l[i]\
    \ + l[j] == 0) && (i != j)\n                return true\n            end\n   \
    \     end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in i+1:length(l)\n            if l[i]\
    \ + l[j] == 0\n                return true\n            end\n        end\n   \
    \ end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    pairs_sum_to_zero takes a list of integers as an input.\n\
    \    it returns True if there are two distinct elements in the list that\n   \
    \ sum to zero, and False otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    False\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    False\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    False\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    True\n\
    \    >>> pairs_sum_to_zero([1])\n    False\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    for i in 1:length(l)\n        for j in 1:length(l)\n            if i !=\
    \ j && l[i] + l[j] == 0\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    9      9\n"
  exit_code: 0
  status: OK

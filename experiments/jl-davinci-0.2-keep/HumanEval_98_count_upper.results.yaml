name: HumanEval_98_count_upper
language: julia
results:
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp99ikajn3.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp99ikajn3.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp99ikajn3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp99ikajn3.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp99ikajn3.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp99ikajn3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp99ikajn3.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp99ikajn3.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp99ikajn3.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp99ikajn3.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if isupper(c) && i % 2 == 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmps94jrbug.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"aBCdEf\") == 1\\n  UndefVarError: isupper\
    \ not defined\\n  Stacktrace:\\n   [1] count_upper(s::String)\\n     @ Main /tmp/tmps94jrbug.jl:12\\\
    n   [2] macro expansion\\n     @ /tmp/tmps94jrbug.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmps94jrbug.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmps94jrbug.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdefg\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmps94jrbug.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmps94jrbug.jl:24 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmps94jrbug.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmps94jrbug.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"dBBE\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmps94jrbug.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmps94jrbug.jl:25 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmps94jrbug.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmps94jrbug.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"B\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmps94jrbug.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmps94jrbug.jl:26 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmps94jrbug.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmps94jrbug.jl:27\\n  Test threw exception\\n "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp071ftjv6.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp071ftjv6.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp071ftjv6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp071ftjv6.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp071ftjv6.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp071ftjv6.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp071ftjv6.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp071ftjv6.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp071ftjv6.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp071ftjv6.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,c)\
    \ in enumerate(s)\n        if (i % 2 == 0) && (c in \"AEIOU\")\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp02rjslrl.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp02rjslrl.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp02rjslrl.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp02rjslrl.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp02rjslrl.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp02rjslrl.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp02rjslrl.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp02rjslrl.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp02rjslrl.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp02rjslrl.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprz43c4b1.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmprz43c4b1.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprz43c4b1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprz43c4b1.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprz43c4b1.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprz43c4b1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprz43c4b1.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprz43c4b1.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprz43c4b1.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprz43c4b1.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if c in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n  \
    \          if i % 2 == 0\n                count += 1\n            end\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_h3n_cj7.jl:25\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp_h3n_cj7.jl:25 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_h3n_cj7.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp_h3n_cj7.jl:29\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_h3n_cj7.jl:29 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_h3n_cj7.jl:24\ntest set: Test\
    \ Failed at /tmp/tmp_h3n_cj7.jl:31\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp_h3n_cj7.jl:31\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_h3n_cj7.jl:24\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_h3n_cj7.jl:22\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if isupper(c) && i % 2 == 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe7kaelwt.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpe7kaelwt.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmpe7kaelwt.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe7kaelwt.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpe7kaelwt.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpe7kaelwt.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpe7kaelwt.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe7kaelwt.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpe7kaelwt.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpe7kaelwt.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpe7kaelwt.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe7kaelwt.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpe7kaelwt.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpe7kaelwt.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpe7kaelwt.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpe7kaelwt.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpe7kaelwt.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe7kaelwt.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8ob9q73c.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp8ob9q73c.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8ob9q73c.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8ob9q73c.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8ob9q73c.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8ob9q73c.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8ob9q73c.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8ob9q73c.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8ob9q73c.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8ob9q73c.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk95kyb18.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpk95kyb18.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk95kyb18.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpk95kyb18.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpk95kyb18.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk95kyb18.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpk95kyb18.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpk95kyb18.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk95kyb18.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk95kyb18.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ char) in enumerate(s)\n        if i % 2 == 0 && isupper(char) && char in \"\
    AEIOU\"\n            count += 1\n        end\n    end\n    return count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpzcvjd3pw.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"aBCdEf\") == 1\\n  UndefVarError: isupper\
    \ not defined\\n  Stacktrace:\\n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpzcvjd3pw.jl:12\\\
    n   [2] macro expansion\\n     @ /tmp/tmpzcvjd3pw.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpzcvjd3pw.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpzcvjd3pw.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdefg\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpzcvjd3pw.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpzcvjd3pw.jl:24 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpzcvjd3pw.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpzcvjd3pw.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"dBBE\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpzcvjd3pw.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpzcvjd3pw.jl:25 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpzcvjd3pw.jl:22\\ntest set:\
    \ Test Failed at /tmp/tmpzcvjd3pw.jl:27\\n  Expression: candidate(\"U\") == 1\\\
    n   Evaluated: 0 == 1\\nStacktrace:\\n [1] macro expansion\\n   @ /tmp/tmpzcvjd3pw.jl:27\
    \ [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpzcvjd3pw.jl:22\\ntest set: Error\
    \ During Test at /tmp/tmpzcvjd3pw.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"EEEE\") == 2\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if isupper(s[i]) && isvowel(s[i])\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaznce782.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpaznce782.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmpaznce782.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpaznce782.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpaznce782.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpaznce782.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpaznce782.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpaznce782.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpaznce782.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpaznce782.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpaznce782.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpaznce782.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpaznce782.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpaznce782.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpaznce782.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpaznce782.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpaznce782.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaznce782.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd22edw6g.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpd22edw6g.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd22edw6g.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpd22edw6g.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd22edw6g.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd22edw6g.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpd22edw6g.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpd22edw6g.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd22edw6g.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd22edw6g.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if c in \"AEIOU\" && i % 2 == 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6aj3ui6k.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp6aj3ui6k.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6aj3ui6k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp6aj3ui6k.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6aj3ui6k.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6aj3ui6k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp6aj3ui6k.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp6aj3ui6k.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6aj3ui6k.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6aj3ui6k.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjg0tvv2s.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpjg0tvv2s.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjg0tvv2s.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjg0tvv2s.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjg0tvv2s.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjg0tvv2s.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjg0tvv2s.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjg0tvv2s.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjg0tvv2s.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjg0tvv2s.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkv_hdddc.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpkv_hdddc.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkv_hdddc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkv_hdddc.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkv_hdddc.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkv_hdddc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkv_hdddc.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkv_hdddc.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkv_hdddc.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkv_hdddc.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpja5csfwt.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpja5csfwt.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpja5csfwt.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpja5csfwt.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpja5csfwt.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpja5csfwt.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpja5csfwt.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpja5csfwt.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpja5csfwt.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpja5csfwt.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:length(s)\n        if i % 2 == 0 && isupper(s[i]) && s[i] in \"AEIOU\"\n \
    \           count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5w6yow_t.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"aBCdEf\") == 1\\n  UndefVarError: isupper\
    \ not defined\\n  Stacktrace:\\n   [1] count_upper(s::String)\\n     @ Main /tmp/tmp5w6yow_t.jl:12\\\
    n   [2] macro expansion\\n     @ /tmp/tmp5w6yow_t.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5w6yow_t.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp5w6yow_t.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdefg\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmp5w6yow_t.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp5w6yow_t.jl:24 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5w6yow_t.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp5w6yow_t.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"dBBE\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmp5w6yow_t.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp5w6yow_t.jl:25 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5w6yow_t.jl:22\\ntest set:\
    \ Test Failed at /tmp/tmp5w6yow_t.jl:27\\n  Expression: candidate(\"U\") == 1\\\
    n   Evaluated: 0 == 1\\nStacktrace:\\n [1] macro expansion\\n   @ /tmp/tmp5w6yow_t.jl:27\
    \ [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmp5w6yow_t.jl:22\\ntest set: Error\
    \ During Test at /tmp/tmp5w6yow_t.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"EEEE\") == 2\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq_lbl3x3.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpq_lbl3x3.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq_lbl3x3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq_lbl3x3.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq_lbl3x3.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq_lbl3x3.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq_lbl3x3.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq_lbl3x3.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq_lbl3x3.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq_lbl3x3.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv5tbnjfm.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpv5tbnjfm.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv5tbnjfm.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpv5tbnjfm.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv5tbnjfm.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv5tbnjfm.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpv5tbnjfm.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpv5tbnjfm.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv5tbnjfm.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv5tbnjfm.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpew83i_rb.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpew83i_rb.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpew83i_rb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpew83i_rb.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpew83i_rb.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpew83i_rb.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpew83i_rb.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpew83i_rb.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpew83i_rb.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpew83i_rb.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3989sjyw.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp3989sjyw.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3989sjyw.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3989sjyw.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3989sjyw.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3989sjyw.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3989sjyw.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3989sjyw.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3989sjyw.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3989sjyw.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpoaeex312.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpoaeex312.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoaeex312.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpoaeex312.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoaeex312.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoaeex312.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpoaeex312.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpoaeex312.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpoaeex312.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpoaeex312.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr6qvyjfr.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpr6qvyjfr.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr6qvyjfr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpr6qvyjfr.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr6qvyjfr.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr6qvyjfr.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpr6qvyjfr.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr6qvyjfr.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr6qvyjfr.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr6qvyjfr.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if isupper(s[i]) && (s[i] in \"AEIOU\")\n           \
    \ count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpg7n_d61a.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpg7n_d61a.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmpg7n_d61a.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg7n_d61a.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpg7n_d61a.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpg7n_d61a.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpg7n_d61a.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg7n_d61a.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpg7n_d61a.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpg7n_d61a.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpg7n_d61a.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg7n_d61a.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpg7n_d61a.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpg7n_d61a.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpg7n_d61a.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg7n_d61a.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpg7n_d61a.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg7n_d61a.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if isupper(s[i]) && isvowel(s[i])\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplti9w9ob.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmplti9w9ob.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmplti9w9ob.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplti9w9ob.jl:22\ntest set:\
    \ Error During Test at /tmp/tmplti9w9ob.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmplti9w9ob.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmplti9w9ob.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplti9w9ob.jl:22\ntest set:\
    \ Error During Test at /tmp/tmplti9w9ob.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmplti9w9ob.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmplti9w9ob.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplti9w9ob.jl:22\ntest set:\
    \ Error During Test at /tmp/tmplti9w9ob.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmplti9w9ob.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmplti9w9ob.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplti9w9ob.jl:22\ntest set:\
    \ Error During Test at /tmp/tmplti9w9ob.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplti9w9ob.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1pg2g57f.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp1pg2g57f.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1pg2g57f.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1pg2g57f.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1pg2g57f.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1pg2g57f.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp1pg2g57f.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp1pg2g57f.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1pg2g57f.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1pg2g57f.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu2b4_r3c.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpu2b4_r3c.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu2b4_r3c.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu2b4_r3c.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu2b4_r3c.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu2b4_r3c.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpu2b4_r3c.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpu2b4_r3c.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu2b4_r3c.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu2b4_r3c.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if isvowel(c) && isupper(c) && i % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6jfiequh.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isvowel not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmp6jfiequh.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmp6jfiequh.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6jfiequh.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp6jfiequh.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp6jfiequh.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp6jfiequh.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6jfiequh.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp6jfiequh.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp6jfiequh.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp6jfiequh.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6jfiequh.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp6jfiequh.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp6jfiequh.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp6jfiequh.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6jfiequh.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp6jfiequh.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isvowe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6jfiequh.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i =\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcusy71dp.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpcusy71dp.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcusy71dp.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpcusy71dp.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcusy71dp.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcusy71dp.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpcusy71dp.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcusy71dp.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcusy71dp.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcusy71dp.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if (i % 2 == 0) && (c in \"AEIOU\")\n          \
    \  count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2kfhnlgl.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp2kfhnlgl.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2kfhnlgl.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2kfhnlgl.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2kfhnlgl.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2kfhnlgl.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2kfhnlgl.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2kfhnlgl.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2kfhnlgl.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2kfhnlgl.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmsmy50h_.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpmsmy50h_.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmsmy50h_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmsmy50h_.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmsmy50h_.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmsmy50h_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpmsmy50h_.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpmsmy50h_.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmsmy50h_.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmsmy50h_.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkow5snte.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpkow5snte.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkow5snte.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkow5snte.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkow5snte.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkow5snte.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkow5snte.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkow5snte.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkow5snte.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkow5snte.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,c)\
    \ in enumerate(s)\n        if i % 2 == 0 && c in \"AEIOU\"\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvl4ioabs.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpvl4ioabs.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvl4ioabs.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpvl4ioabs.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvl4ioabs.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvl4ioabs.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpvl4ioabs.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpvl4ioabs.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvl4ioabs.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvl4ioabs.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if isupper(c) && i % 2 == 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqakj427d.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpqakj427d.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmpqakj427d.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpqakj427d.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpqakj427d.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpqakj427d.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpqakj427d.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpqakj427d.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpqakj427d.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpqakj427d.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpqakj427d.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpqakj427d.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpqakj427d.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpqakj427d.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpqakj427d.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpqakj427d.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpqakj427d.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqakj427d.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzgw5g79t.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpzgw5g79t.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzgw5g79t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpzgw5g79t.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzgw5g79t.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzgw5g79t.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpzgw5g79t.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpzgw5g79t.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzgw5g79t.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzgw5g79t.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if isupper(c) && i % 2 == 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpow5qz2r3.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpow5qz2r3.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmpow5qz2r3.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpow5qz2r3.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpow5qz2r3.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpow5qz2r3.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpow5qz2r3.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpow5qz2r3.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpow5qz2r3.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpow5qz2r3.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpow5qz2r3.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpow5qz2r3.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpow5qz2r3.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpow5qz2r3.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpow5qz2r3.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpow5qz2r3.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpow5qz2r3.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpow5qz2r3.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if isupper(c) && i % 2 == 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp70zcluj9.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmp70zcluj9.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmp70zcluj9.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp70zcluj9.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp70zcluj9.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp70zcluj9.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp70zcluj9.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp70zcluj9.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp70zcluj9.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp70zcluj9.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp70zcluj9.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp70zcluj9.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp70zcluj9.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp70zcluj9.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp70zcluj9.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp70zcluj9.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp70zcluj9.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp70zcluj9.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if isupper(c) && i % 2 == 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5ai1jzxf.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"aBCdEf\") == 1\\n  UndefVarError: isupper\
    \ not defined\\n  Stacktrace:\\n   [1] count_upper(s::String)\\n     @ Main /tmp/tmp5ai1jzxf.jl:12\\\
    n   [2] macro expansion\\n     @ /tmp/tmp5ai1jzxf.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5ai1jzxf.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp5ai1jzxf.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdefg\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmp5ai1jzxf.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp5ai1jzxf.jl:24 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5ai1jzxf.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp5ai1jzxf.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"dBBE\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmp5ai1jzxf.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp5ai1jzxf.jl:25 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5ai1jzxf.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp5ai1jzxf.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"B\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmp5ai1jzxf.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp5ai1jzxf.jl:26 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp5ai1jzxf.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp5ai1jzxf.jl:27\\n  Test threw exception\\n "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdvdoxuvp.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpdvdoxuvp.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdvdoxuvp.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdvdoxuvp.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdvdoxuvp.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdvdoxuvp.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpdvdoxuvp.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpdvdoxuvp.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdvdoxuvp.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdvdoxuvp.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if isvowel(c) && isupper(c) && i % 2 == 0\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuj682n9o.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isvowel not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpuj682n9o.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmpuj682n9o.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuj682n9o.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpuj682n9o.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpuj682n9o.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpuj682n9o.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuj682n9o.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpuj682n9o.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpuj682n9o.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpuj682n9o.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuj682n9o.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpuj682n9o.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isvowel not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpuj682n9o.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpuj682n9o.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpuj682n9o.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpuj682n9o.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isvowe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuj682n9o.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,c)\
    \ in enumerate(s)\n        if isupper(c) && i % 2 == 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpaopmkfmn.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpaopmkfmn.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmpaopmkfmn.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpaopmkfmn.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpaopmkfmn.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpaopmkfmn.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpaopmkfmn.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpaopmkfmn.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpaopmkfmn.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpaopmkfmn.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpaopmkfmn.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpaopmkfmn.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpaopmkfmn.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpaopmkfmn.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpaopmkfmn.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpaopmkfmn.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpaopmkfmn.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaopmkfmn.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:length(s)\n        if (i % 2 == 0) && (s[i] in \"AEIOU\")\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3hw86yir.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp3hw86yir.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3hw86yir.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3hw86yir.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3hw86yir.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3hw86yir.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3hw86yir.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3hw86yir.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3hw86yir.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3hw86yir.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if isupper(c) && i % 2 == 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmge04bf7.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpmge04bf7.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmpmge04bf7.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmge04bf7.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpmge04bf7.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpmge04bf7.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpmge04bf7.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmge04bf7.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpmge04bf7.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpmge04bf7.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpmge04bf7.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmge04bf7.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpmge04bf7.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpmge04bf7.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpmge04bf7.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpmge04bf7.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpmge04bf7.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmge04bf7.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgaestijx.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpgaestijx.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgaestijx.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpgaestijx.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgaestijx.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgaestijx.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpgaestijx.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpgaestijx.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgaestijx.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgaestijx.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,c)\
    \ in enumerate(s)\n        if isvowel(c) && isupper(c) && i % 2 == 0\n       \
    \     count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\
    \t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"\
    B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t\
    @test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpqingzx0p.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"aBCdEf\") == 1\\n  UndefVarError: isvowel\
    \ not defined\\n  Stacktrace:\\n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpqingzx0p.jl:12\\\
    n   [2] macro expansion\\n     @ /tmp/tmpqingzx0p.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqingzx0p.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpqingzx0p.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdefg\") == 0\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpqingzx0p.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpqingzx0p.jl:24 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqingzx0p.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpqingzx0p.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"dBBE\") == 0\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpqingzx0p.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpqingzx0p.jl:25 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqingzx0p.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpqingzx0p.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"B\") == 0\\n  UndefVarError: isvowel not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpqingzx0p.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpqingzx0p.jl:26 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpqingzx0p.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpqingzx0p.jl:27\\n  Test threw exception\\n "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,c)\
    \ in enumerate(s)\n        if isupper(c) && i % 2 == 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpg4xow5o8.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"aBCdEf\") == 1\\n  UndefVarError: isupper\
    \ not defined\\n  Stacktrace:\\n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpg4xow5o8.jl:12\\\
    n   [2] macro expansion\\n     @ /tmp/tmpg4xow5o8.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg4xow5o8.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpg4xow5o8.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdefg\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpg4xow5o8.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpg4xow5o8.jl:24 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg4xow5o8.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpg4xow5o8.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"dBBE\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpg4xow5o8.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpg4xow5o8.jl:25 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg4xow5o8.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpg4xow5o8.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"B\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpg4xow5o8.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpg4xow5o8.jl:26 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg4xow5o8.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpg4xow5o8.jl:27\\n  Test threw exception\\n "
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3xfnc04g.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp3xfnc04g.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3xfnc04g.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3xfnc04g.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3xfnc04g.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3xfnc04g.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3xfnc04g.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3xfnc04g.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3xfnc04g.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3xfnc04g.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf6zg9qzy.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpf6zg9qzy.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf6zg9qzy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpf6zg9qzy.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf6zg9qzy.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf6zg9qzy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpf6zg9qzy.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpf6zg9qzy.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf6zg9qzy.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf6zg9qzy.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,c)\
    \ in enumerate(s)\n        if c in \"AEIOU\" && i % 2 == 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcnv_ws8g.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpcnv_ws8g.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcnv_ws8g.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpcnv_ws8g.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcnv_ws8g.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcnv_ws8g.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpcnv_ws8g.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpcnv_ws8g.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcnv_ws8g.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcnv_ws8g.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:length(s)\n        if isupper(s[i]) && i % 2 == 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpudthdsls.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpudthdsls.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmpudthdsls.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpudthdsls.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpudthdsls.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpudthdsls.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpudthdsls.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpudthdsls.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpudthdsls.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpudthdsls.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpudthdsls.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpudthdsls.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpudthdsls.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpudthdsls.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpudthdsls.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpudthdsls.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpudthdsls.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpudthdsls.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnmdahf3a.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpnmdahf3a.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnmdahf3a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpnmdahf3a.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnmdahf3a.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnmdahf3a.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpnmdahf3a.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpnmdahf3a.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnmdahf3a.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnmdahf3a.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpehf0zymg.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpehf0zymg.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpehf0zymg.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpehf0zymg.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpehf0zymg.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpehf0zymg.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpehf0zymg.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpehf0zymg.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpehf0zymg.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpehf0zymg.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:length(s)\n        if s[i] in ['A','E','I','O','U'] && i % 2 == 0\n      \
    \      count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\
    \t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"\
    B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t\
    @test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp45w653lm.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp45w653lm.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp45w653lm.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp45w653lm.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp45w653lm.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp45w653lm.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp45w653lm.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp45w653lm.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp45w653lm.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp45w653lm.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8oka5gw_.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp8oka5gw_.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8oka5gw_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8oka5gw_.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8oka5gw_.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8oka5gw_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp8oka5gw_.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp8oka5gw_.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8oka5gw_.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8oka5gw_.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpaietkos_.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpaietkos_.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaietkos_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpaietkos_.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaietkos_.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaietkos_.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpaietkos_.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpaietkos_.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpaietkos_.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpaietkos_.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:endof(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n       \
    \ end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpo9h_z4ci.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"aBCdEf\") == 1\\n  UndefVarError: endof\
    \ not defined\\n  Stacktrace:\\n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpo9h_z4ci.jl:11\\\
    n   [2] macro expansion\\n     @ /tmp/tmpo9h_z4ci.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpo9h_z4ci.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpo9h_z4ci.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdefg\") == 0\\n  UndefVarError: endof not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpo9h_z4ci.jl:11\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpo9h_z4ci.jl:24 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpo9h_z4ci.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpo9h_z4ci.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"dBBE\") == 0\\n  UndefVarError: endof not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpo9h_z4ci.jl:11\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpo9h_z4ci.jl:25 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpo9h_z4ci.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpo9h_z4ci.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"B\") == 0\\n  UndefVarError: endof not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpo9h_z4ci.jl:11\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpo9h_z4ci.jl:26 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpo9h_z4ci.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpo9h_z4ci.jl:27\\n  Test threw exception\\n  Express"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpovw3tlcs.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpovw3tlcs.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpovw3tlcs.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpovw3tlcs.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpovw3tlcs.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpovw3tlcs.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpovw3tlcs.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpovw3tlcs.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpovw3tlcs.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpovw3tlcs.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplhaqyvt8.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmplhaqyvt8.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplhaqyvt8.jl:22\ntest set: Test\
    \ Failed at /tmp/tmplhaqyvt8.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplhaqyvt8.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplhaqyvt8.jl:22\ntest set: Test\
    \ Failed at /tmp/tmplhaqyvt8.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmplhaqyvt8.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplhaqyvt8.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplhaqyvt8.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if isupper(s[i]) && isvowel(s[i])\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpol4sspxd.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpol4sspxd.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmpol4sspxd.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpol4sspxd.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpol4sspxd.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpol4sspxd.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpol4sspxd.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpol4sspxd.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpol4sspxd.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpol4sspxd.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpol4sspxd.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpol4sspxd.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpol4sspxd.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpol4sspxd.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpol4sspxd.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpol4sspxd.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpol4sspxd.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpol4sspxd.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if (i % 2 == 0) && (c in \"AEIOU\")\n          \
    \  count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr4seb5nt.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpr4seb5nt.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr4seb5nt.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpr4seb5nt.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr4seb5nt.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr4seb5nt.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpr4seb5nt.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpr4seb5nt.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr4seb5nt.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr4seb5nt.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz0_2uys8.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpz0_2uys8.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz0_2uys8.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpz0_2uys8.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz0_2uys8.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz0_2uys8.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpz0_2uys8.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz0_2uys8.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz0_2uys8.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz0_2uys8.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4cqibyo1.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp4cqibyo1.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4cqibyo1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4cqibyo1.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4cqibyo1.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4cqibyo1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4cqibyo1.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4cqibyo1.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4cqibyo1.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4cqibyo1.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkyjjk4i1.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpkyjjk4i1.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkyjjk4i1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkyjjk4i1.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkyjjk4i1.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkyjjk4i1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkyjjk4i1.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkyjjk4i1.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkyjjk4i1.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkyjjk4i1.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4s31o08s.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp4s31o08s.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4s31o08s.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4s31o08s.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4s31o08s.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4s31o08s.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4s31o08s.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4s31o08s.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4s31o08s.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4s31o08s.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprdibaqpc.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmprdibaqpc.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprdibaqpc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprdibaqpc.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprdibaqpc.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprdibaqpc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprdibaqpc.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprdibaqpc.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprdibaqpc.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprdibaqpc.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5d0ob1al.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp5d0ob1al.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5d0ob1al.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5d0ob1al.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5d0ob1al.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5d0ob1al.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp5d0ob1al.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp5d0ob1al.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5d0ob1al.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5d0ob1al.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptx8pe6wa.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmptx8pe6wa.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptx8pe6wa.jl:22\ntest set: Test\
    \ Failed at /tmp/tmptx8pe6wa.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptx8pe6wa.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptx8pe6wa.jl:22\ntest set: Test\
    \ Failed at /tmp/tmptx8pe6wa.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmptx8pe6wa.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptx8pe6wa.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptx8pe6wa.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn6_wdzir.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpn6_wdzir.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn6_wdzir.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpn6_wdzir.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpn6_wdzir.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn6_wdzir.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpn6_wdzir.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpn6_wdzir.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn6_wdzir.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn6_wdzir.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp028_c5in.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp028_c5in.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp028_c5in.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp028_c5in.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp028_c5in.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp028_c5in.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp028_c5in.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp028_c5in.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp028_c5in.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp028_c5in.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpupkfdthi.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpupkfdthi.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpupkfdthi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpupkfdthi.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpupkfdthi.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpupkfdthi.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpupkfdthi.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpupkfdthi.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpupkfdthi.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpupkfdthi.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqj2nr9tf.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpqj2nr9tf.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqj2nr9tf.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpqj2nr9tf.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqj2nr9tf.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqj2nr9tf.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpqj2nr9tf.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpqj2nr9tf.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqj2nr9tf.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqj2nr9tf.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:length(s)\n        if (i % 2 == 0) && (s[i] in \"AEIOU\")\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprpr2ez2g.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmprpr2ez2g.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprpr2ez2g.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprpr2ez2g.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprpr2ez2g.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprpr2ez2g.jl:22\ntest set: Test\
    \ Failed at /tmp/tmprpr2ez2g.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmprpr2ez2g.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprpr2ez2g.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprpr2ez2g.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if i % 2 == 0 && isupper(c) && c in \"AEIOU\"\n\
    \            count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpp0a8upxl.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"aBCdEf\") == 1\\n  UndefVarError: isupper\
    \ not defined\\n  Stacktrace:\\n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpp0a8upxl.jl:12\\\
    n   [2] macro expansion\\n     @ /tmp/tmpp0a8upxl.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpp0a8upxl.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpp0a8upxl.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdefg\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpp0a8upxl.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpp0a8upxl.jl:24 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpp0a8upxl.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpp0a8upxl.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"dBBE\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpp0a8upxl.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpp0a8upxl.jl:25 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpp0a8upxl.jl:22\\ntest set:\
    \ Test Failed at /tmp/tmpp0a8upxl.jl:27\\n  Expression: candidate(\"U\") == 1\\\
    n   Evaluated: 0 == 1\\nStacktrace:\\n [1] macro expansion\\n   @ /tmp/tmpp0a8upxl.jl:27\
    \ [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpp0a8upxl.jl:22\\ntest set: Error\
    \ During Test at /tmp/tmpp0a8upxl.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"EEEE\") == 2\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    # YOUR CODE HERE\n    return\
    \ 0\nend\nusing Test\n\n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"\
    aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\"\
    ) == 0)\n\t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7vfbi9hz.jl:18\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp7vfbi9hz.jl:18 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7vfbi9hz.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp7vfbi9hz.jl:22\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7vfbi9hz.jl:22 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7vfbi9hz.jl:17\ntest set: Test\
    \ Failed at /tmp/tmp7vfbi9hz.jl:24\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp7vfbi9hz.jl:24\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7vfbi9hz.jl:17\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7vfbi9hz.jl:15\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if isupper(s[i]) && isvowel(s[i])\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8ryct05w.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmp8ryct05w.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmp8ryct05w.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8ryct05w.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp8ryct05w.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp8ryct05w.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp8ryct05w.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8ryct05w.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp8ryct05w.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp8ryct05w.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp8ryct05w.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8ryct05w.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp8ryct05w.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp8ryct05w.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp8ryct05w.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp8ryct05w.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp8ryct05w.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8ryct05w.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp91q3qm_4.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp91q3qm_4.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp91q3qm_4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp91q3qm_4.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp91q3qm_4.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp91q3qm_4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp91q3qm_4.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp91q3qm_4.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp91q3qm_4.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp91q3qm_4.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,c)\
    \ in enumerate(s)\n        if isupper(c) && i % 2 == 0\n            count += 1\n\
    \        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\n\
    candidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprvfdkc_f.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmprvfdkc_f.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmprvfdkc_f.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprvfdkc_f.jl:22\ntest set:\
    \ Error During Test at /tmp/tmprvfdkc_f.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmprvfdkc_f.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmprvfdkc_f.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprvfdkc_f.jl:22\ntest set:\
    \ Error During Test at /tmp/tmprvfdkc_f.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmprvfdkc_f.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmprvfdkc_f.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprvfdkc_f.jl:22\ntest set:\
    \ Error During Test at /tmp/tmprvfdkc_f.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmprvfdkc_f.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmprvfdkc_f.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprvfdkc_f.jl:22\ntest set:\
    \ Error During Test at /tmp/tmprvfdkc_f.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprvfdkc_f.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if isupper(c) && i % 2 == 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpx27mqlgh.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"aBCdEf\") == 1\\n  UndefVarError: isupper\
    \ not defined\\n  Stacktrace:\\n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpx27mqlgh.jl:12\\\
    n   [2] macro expansion\\n     @ /tmp/tmpx27mqlgh.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpx27mqlgh.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpx27mqlgh.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdefg\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpx27mqlgh.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpx27mqlgh.jl:24 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpx27mqlgh.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpx27mqlgh.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"dBBE\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpx27mqlgh.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpx27mqlgh.jl:25 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpx27mqlgh.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpx27mqlgh.jl:26\\n  Test threw exception\\n  Expression:\
    \ candidate(\"B\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpx27mqlgh.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpx27mqlgh.jl:26 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpx27mqlgh.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpx27mqlgh.jl:27\\n  Test threw exception\\n "
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq3c3fwa4.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpq3c3fwa4.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq3c3fwa4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq3c3fwa4.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq3c3fwa4.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq3c3fwa4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq3c3fwa4.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq3c3fwa4.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq3c3fwa4.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq3c3fwa4.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpylxmryia.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpylxmryia.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpylxmryia.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpylxmryia.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpylxmryia.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpylxmryia.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpylxmryia.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpylxmryia.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpylxmryia.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpylxmryia.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if isupper(s[i]) && (s[i] in \"AEIOU\")\n           \
    \ count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx2apwr_x.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpx2apwr_x.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmpx2apwr_x.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpx2apwr_x.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpx2apwr_x.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpx2apwr_x.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpx2apwr_x.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpx2apwr_x.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpx2apwr_x.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpx2apwr_x.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpx2apwr_x.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpx2apwr_x.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpx2apwr_x.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpx2apwr_x.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpx2apwr_x.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpx2apwr_x.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpx2apwr_x.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx2apwr_x.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpobm8fdlf.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpobm8fdlf.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpobm8fdlf.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpobm8fdlf.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpobm8fdlf.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpobm8fdlf.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpobm8fdlf.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpobm8fdlf.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpobm8fdlf.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpobm8fdlf.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if isupper(s[i]) && isvowel(s[i])\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmprwfol9mq.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"aBCdEf\") == 1\\n  UndefVarError: isupper\
    \ not defined\\n  Stacktrace:\\n   [1] count_upper(s::String)\\n     @ Main /tmp/tmprwfol9mq.jl:12\\\
    n   [2] macro expansion\\n     @ /tmp/tmprwfol9mq.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmprwfol9mq.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmprwfol9mq.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdefg\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmprwfol9mq.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmprwfol9mq.jl:24 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmprwfol9mq.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmprwfol9mq.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"dBBE\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmprwfol9mq.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmprwfol9mq.jl:25 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmprwfol9mq.jl:22\\ntest set:\
    \ Test Failed at /tmp/tmprwfol9mq.jl:27\\n  Expression: candidate(\"U\") == 1\\\
    n   Evaluated: 0 == 1\\nStacktrace:\\n [1] macro expansion\\n   @ /tmp/tmprwfol9mq.jl:27\
    \ [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmprwfol9mq.jl:22\\ntest set: Error\
    \ During Test at /tmp/tmprwfol9mq.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"EEEE\") == 2\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:length(s)\n        if i % 2 == 0 && isupper(s[i]) && s[i] in \"AEIOU\"\n \
    \           count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp1ccv5yxi.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"aBCdEf\") == 1\\n  UndefVarError: isupper\
    \ not defined\\n  Stacktrace:\\n   [1] count_upper(s::String)\\n     @ Main /tmp/tmp1ccv5yxi.jl:12\\\
    n   [2] macro expansion\\n     @ /tmp/tmp1ccv5yxi.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp1ccv5yxi.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp1ccv5yxi.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdefg\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmp1ccv5yxi.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp1ccv5yxi.jl:24 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp1ccv5yxi.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmp1ccv5yxi.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"dBBE\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmp1ccv5yxi.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmp1ccv5yxi.jl:25 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmp1ccv5yxi.jl:22\\ntest set:\
    \ Test Failed at /tmp/tmp1ccv5yxi.jl:27\\n  Expression: candidate(\"U\") == 1\\\
    n   Evaluated: 0 == 1\\nStacktrace:\\n [1] macro expansion\\n   @ /tmp/tmp1ccv5yxi.jl:27\
    \ [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmp1ccv5yxi.jl:22\\ntest set: Error\
    \ During Test at /tmp/tmp1ccv5yxi.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"EEEE\") == 2\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2qfht8nc.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp2qfht8nc.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2qfht8nc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2qfht8nc.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2qfht8nc.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2qfht8nc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2qfht8nc.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2qfht8nc.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2qfht8nc.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2qfht8nc.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq8jvp3mt.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpq8jvp3mt.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq8jvp3mt.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq8jvp3mt.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq8jvp3mt.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq8jvp3mt.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpq8jvp3mt.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpq8jvp3mt.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq8jvp3mt.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq8jvp3mt.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkt7ya5_4.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpkt7ya5_4.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkt7ya5_4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkt7ya5_4.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkt7ya5_4.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkt7ya5_4.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpkt7ya5_4.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpkt7ya5_4.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkt7ya5_4.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkt7ya5_4.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if isupper(s[i]) && (s[i] in \"AEIOU\")\n           \
    \ count += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpg5pr9txa.jl:23\\n  Test threw\
    \ exception\\n  Expression: candidate(\"aBCdEf\") == 1\\n  UndefVarError: isupper\
    \ not defined\\n  Stacktrace:\\n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpg5pr9txa.jl:12\\\
    n   [2] macro expansion\\n     @ /tmp/tmpg5pr9txa.jl:23 [inlined]\\n   [3] macro\
    \ expansion\\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg5pr9txa.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpg5pr9txa.jl:24\\n  Test threw exception\\n  Expression:\
    \ candidate(\"abcdefg\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpg5pr9txa.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpg5pr9txa.jl:24 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg5pr9txa.jl:22\\ntest set:\
    \ Error During Test at /tmp/tmpg5pr9txa.jl:25\\n  Test threw exception\\n  Expression:\
    \ candidate(\"dBBE\") == 0\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @ Main /tmp/tmpg5pr9txa.jl:12\\n   [2] macro\
    \ expansion\\n     @ /tmp/tmpg5pr9txa.jl:25 [inlined]\\n   [3] macro expansion\\\
    n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n   [4] top-level scope\\n     @ /tmp/tmpg5pr9txa.jl:22\\ntest set:\
    \ Test Failed at /tmp/tmpg5pr9txa.jl:27\\n  Expression: candidate(\"U\") == 1\\\
    n   Evaluated: 0 == 1\\nStacktrace:\\n [1] macro expansion\\n   @ /tmp/tmpg5pr9txa.jl:27\
    \ [inlined]\\n [2] macro expansion\\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\\n [3] top-level scope\\n   @ /tmp/tmpg5pr9txa.jl:22\\ntest set: Error\
    \ During Test at /tmp/tmpg5pr9txa.jl:29\\n  Test threw exception\\n  Expression:\
    \ candidate(\"EEEE\") == 2\\n  UndefVarError: isupper not defined\\n  Stacktrace:\\\
    n   [1] count_upper(s::String)\\n     @"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjihvmx7k.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpjihvmx7k.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjihvmx7k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjihvmx7k.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjihvmx7k.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjihvmx7k.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpjihvmx7k.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpjihvmx7k.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjihvmx7k.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjihvmx7k.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,\
    \ c) in enumerate(s)\n        if isupper(c) && i % 2 == 0\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu_qmq6yu.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmpu_qmq6yu.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmpu_qmq6yu.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu_qmq6yu.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpu_qmq6yu.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpu_qmq6yu.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpu_qmq6yu.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu_qmq6yu.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpu_qmq6yu.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpu_qmq6yu.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpu_qmq6yu.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu_qmq6yu.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpu_qmq6yu.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmpu_qmq6yu.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmpu_qmq6yu.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpu_qmq6yu.jl:22\ntest set:\
    \ Error During Test at /tmp/tmpu_qmq6yu.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu_qmq6yu.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz7euu7e1.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpz7euu7e1.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz7euu7e1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpz7euu7e1.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz7euu7e1.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz7euu7e1.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpz7euu7e1.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz7euu7e1.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz7euu7e1.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz7euu7e1.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ eachindex(s)\n        if i % 2 == 0 && isupper(s[i]) && isvowel(s[i])\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp56e9gy0k.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmp56e9gy0k.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmp56e9gy0k.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp56e9gy0k.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp56e9gy0k.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp56e9gy0k.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp56e9gy0k.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp56e9gy0k.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp56e9gy0k.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp56e9gy0k.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp56e9gy0k.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp56e9gy0k.jl:22\ntest set:\
    \ Test Failed at /tmp/tmp56e9gy0k.jl:27\n  Expression: candidate(\"U\") == 1\n\
    \   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp56e9gy0k.jl:27\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp56e9gy0k.jl:22\ntest set: Error\
    \ During Test at /tmp/tmp56e9gy0k.jl:29\n  Test threw exception\n  Expression:\
    \ candidate(\"EEEE\") == 2\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp56e9gy0k.jl:12\n   [2] macro\
    \ expansion\n     "
  stderr: "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp56e9gy0k.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in ['A','E','I','O','U']\n            count +=\
    \ 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,c)\
    \ in enumerate(s)\n        if (i % 2 == 0) && (c in \"AEIOU\")\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz_gkda4c.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpz_gkda4c.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz_gkda4c.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpz_gkda4c.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz_gkda4c.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz_gkda4c.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpz_gkda4c.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpz_gkda4c.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpz_gkda4c.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz_gkda4c.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if isupper(s[i]) && isvowel(s[i])\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_mt5hvih.jl:23\n  Test threw exception\n\
    \  Expression: candidate(\"aBCdEf\") == 1\n  UndefVarError: isupper not defined\n\
    \  Stacktrace:\n   [1] count_upper(s::String)\n     @ Main /tmp/tmp_mt5hvih.jl:12\n\
    \   [2] macro expansion\n     @ /tmp/tmp_mt5hvih.jl:23 [inlined]\n   [3] macro\
    \ expansion\n     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_mt5hvih.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_mt5hvih.jl:24\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdefg\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp_mt5hvih.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp_mt5hvih.jl:24 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_mt5hvih.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_mt5hvih.jl:25\n  Test threw exception\n  Expression:\
    \ candidate(\"dBBE\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp_mt5hvih.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp_mt5hvih.jl:25 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_mt5hvih.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_mt5hvih.jl:26\n  Test threw exception\n  Expression:\
    \ candidate(\"B\") == 0\n  UndefVarError: isupper not defined\n  Stacktrace:\n\
    \   [1] count_upper(s::String)\n     @ Main /tmp/tmp_mt5hvih.jl:12\n   [2] macro\
    \ expansion\n     @ /tmp/tmp_mt5hvih.jl:26 [inlined]\n   [3] macro expansion\n\
    \     @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp_mt5hvih.jl:22\ntest set:\
    \ Error During Test at /tmp/tmp_mt5hvih.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(\"U\") == 1\n  UndefVarError: isuppe"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 6 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_mt5hvih.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,c)\
    \ in enumerate(s)\n        if (c in \"AEIOU\") && (i % 2 == 0)\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3oy6lawy.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp3oy6lawy.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3oy6lawy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3oy6lawy.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3oy6lawy.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3oy6lawy.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp3oy6lawy.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp3oy6lawy.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3oy6lawy.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3oy6lawy.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:length(s)\n        if i % 2 == 0 && s[i] in ['A', 'E', 'I', 'O', 'U']\n  \
    \          count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4f3rifsc.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp4f3rifsc.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4f3rifsc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4f3rifsc.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4f3rifsc.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4f3rifsc.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp4f3rifsc.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp4f3rifsc.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4f3rifsc.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4f3rifsc.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in \"AEIOU\"\n            count += 1\n      \
    \  end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"abcdefg\"\
    ) == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\") == 0)\n\t\
    @test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: ''
  stderr: "Test Summary: | Pass  Total\ntest set      |    7      7\n"
  exit_code: 0
  status: OK
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for (i,c)\
    \ in enumerate(s)\n        if c in \"AEIOU\" && i % 2 == 0\n            count\
    \ += 1\n        end\n    end\n    return count\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") == 1)\n\t@test(candidate(\"\
    abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\t@test(candidate(\"B\")\
    \ == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpw2q039pn.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpw2q039pn.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw2q039pn.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpw2q039pn.jl:25\n  Expression: candidate(\"dBBE\") == 0\n \
    \  Evaluated: 1 == 0\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpw2q039pn.jl:25\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw2q039pn.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpw2q039pn.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpw2q039pn.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpw2q039pn.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw2q039pn.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 1:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2dpxzspj.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmp2dpxzspj.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2dpxzspj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2dpxzspj.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2dpxzspj.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2dpxzspj.jl:22\ntest set: Test\
    \ Failed at /tmp/tmp2dpxzspj.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmp2dpxzspj.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2dpxzspj.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2dpxzspj.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a string s, count the number of uppercase vowels in\
    \ even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n\
    \    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n   \
    \ \"\"\"\nfunction count_upper(s::String)::Int64 \n    count = 0\n    for i in\
    \ 2:2:length(s)\n        if s[i] in [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    \
    \        count += 1\n        end\n    end\n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_upper;\n\t@test(candidate(\"aBCdEf\") ==\
    \ 1)\n\t@test(candidate(\"abcdefg\") == 0)\n\t@test(candidate(\"dBBE\") == 0)\n\
    \t@test(candidate(\"B\") == 0)\n\t@test(candidate(\"U\") == 1)\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"EEEE\") == 2)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb8f5gv2v.jl:23\n  Expression: candidate(\"\
    aBCdEf\") == 1\n   Evaluated: 0 == 1\nStacktrace:\n [1] macro expansion\n   @\
    \ /tmp/tmpb8f5gv2v.jl:23 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb8f5gv2v.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpb8f5gv2v.jl:27\n  Expression: candidate(\"U\") == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb8f5gv2v.jl:27 [inlined]\n\
    \ [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb8f5gv2v.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpb8f5gv2v.jl:29\n  Expression: candidate(\"EEEE\") == 2\n \
    \  Evaluated: 0 == 2\nStacktrace:\n [1] macro expansion\n   @ /tmp/tmpb8f5gv2v.jl:29\
    \ [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb8f5gv2v.jl:22\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     3      7\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 3 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb8f5gv2v.jl:20\n"
  exit_code: 1
  status: SyntaxError

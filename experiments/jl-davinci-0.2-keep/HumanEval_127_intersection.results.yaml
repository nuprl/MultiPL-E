name: HumanEval_127_intersection
language: julia
results:
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_7nxx7u2.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp_7nxx7u2.jl:26\n   [2] top-level scope at /tmp/tmp_7nxx7u2.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_7nxx7u2.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp_7nxx7u2.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_7nxx7u2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp_7nxx7u2.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_7nxx7u2.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp_7nxx7u2.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_7nxx7u2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp_7nxx7u2.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_7nxx7u2.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp_7nxx7u2.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_7nxx7u2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp_7nxx7u2.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_7nxx7u2.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp_7nxx7u2.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_7nxx7u2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp_7nxx7u2.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_7nxx7u2.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp_7nxx7u2.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_7nxx7u2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp_7nxx7u2.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_7nxx7u2.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp_7nxx7u2.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_7nxx7u2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp_7nxx7u2.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_7nxx7u2.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_7nxx7u2.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppoknry0s.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmppoknry0s.jl:26\n   [2] top-level scope at /tmp/tmppoknry0s.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppoknry0s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppoknry0s.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppoknry0s.jl:26\n\
    \   [2] top-level scope at /tmp/tmppoknry0s.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppoknry0s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppoknry0s.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppoknry0s.jl:26\n\
    \   [2] top-level scope at /tmp/tmppoknry0s.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppoknry0s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppoknry0s.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppoknry0s.jl:26\n\
    \   [2] top-level scope at /tmp/tmppoknry0s.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppoknry0s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppoknry0s.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppoknry0s.jl:26\n\
    \   [2] top-level scope at /tmp/tmppoknry0s.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppoknry0s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppoknry0s.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppoknry0s.jl:26\n\
    \   [2] top-level scope at /tmp/tmppoknry0s.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppoknry0s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppoknry0s.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppoknry0s.jl:26\n\
    \   [2] top-level scope at /tmp/tmppoknry0s.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppoknry0s.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppoknry0s.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpbvd8k515.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpbvd8k515.jl:26\n   [2] top-level scope at /tmp/tmpbvd8k515.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvd8k515.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpbvd8k515.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbvd8k515.jl:26\n\
    \   [2] top-level scope at /tmp/tmpbvd8k515.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvd8k515.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpbvd8k515.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbvd8k515.jl:26\n\
    \   [2] top-level scope at /tmp/tmpbvd8k515.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvd8k515.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpbvd8k515.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbvd8k515.jl:26\n\
    \   [2] top-level scope at /tmp/tmpbvd8k515.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvd8k515.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpbvd8k515.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbvd8k515.jl:26\n\
    \   [2] top-level scope at /tmp/tmpbvd8k515.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvd8k515.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpbvd8k515.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbvd8k515.jl:26\n\
    \   [2] top-level scope at /tmp/tmpbvd8k515.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvd8k515.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpbvd8k515.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbvd8k515.jl:26\n\
    \   [2] top-level scope at /tmp/tmpbvd8k515.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbvd8k515.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbvd8k515.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppo1ee3mm.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmppo1ee3mm.jl:26\n   [2] top-level scope at /tmp/tmppo1ee3mm.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppo1ee3mm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmppo1ee3mm.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppo1ee3mm.jl:26\n\
    \   [2] top-level scope at /tmp/tmppo1ee3mm.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppo1ee3mm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmppo1ee3mm.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppo1ee3mm.jl:26\n\
    \   [2] top-level scope at /tmp/tmppo1ee3mm.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppo1ee3mm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmppo1ee3mm.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppo1ee3mm.jl:26\n\
    \   [2] top-level scope at /tmp/tmppo1ee3mm.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppo1ee3mm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmppo1ee3mm.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppo1ee3mm.jl:26\n\
    \   [2] top-level scope at /tmp/tmppo1ee3mm.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppo1ee3mm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmppo1ee3mm.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppo1ee3mm.jl:26\n\
    \   [2] top-level scope at /tmp/tmppo1ee3mm.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppo1ee3mm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmppo1ee3mm.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppo1ee3mm.jl:26\n\
    \   [2] top-level scope at /tmp/tmppo1ee3mm.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppo1ee3mm.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppo1ee3mm.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3cjhte74.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp3cjhte74.jl:26\n   [2] top-level scope at /tmp/tmp3cjhte74.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3cjhte74.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3cjhte74.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3cjhte74.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3cjhte74.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3cjhte74.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3cjhte74.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3cjhte74.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3cjhte74.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3cjhte74.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3cjhte74.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3cjhte74.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3cjhte74.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3cjhte74.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3cjhte74.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3cjhte74.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3cjhte74.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3cjhte74.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3cjhte74.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3cjhte74.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3cjhte74.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3cjhte74.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3cjhte74.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3cjhte74.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3cjhte74.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3cjhte74.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3cjhte74.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvf6nj7mq.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpvf6nj7mq.jl:26\n   [2] top-level scope at /tmp/tmpvf6nj7mq.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvf6nj7mq.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpvf6nj7mq.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvf6nj7mq.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvf6nj7mq.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvf6nj7mq.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpvf6nj7mq.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvf6nj7mq.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvf6nj7mq.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvf6nj7mq.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpvf6nj7mq.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvf6nj7mq.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvf6nj7mq.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvf6nj7mq.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpvf6nj7mq.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvf6nj7mq.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvf6nj7mq.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvf6nj7mq.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpvf6nj7mq.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvf6nj7mq.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvf6nj7mq.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvf6nj7mq.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpvf6nj7mq.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvf6nj7mq.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvf6nj7mq.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvf6nj7mq.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvf6nj7mq.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    length = finish - start + 1\n  \
    \  if length == 1\n        return \"NO\"\n    end\n    for i in 2:length-1\n \
    \       if length % i == 0\n            return \"NO\"\n        end\n    end\n\
    \    return \"YES\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzb9z25ur.jl:43\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n   Evaluated: \"YES\" == \"NO\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpzb9z25ur.jl:43\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzb9z25ur.jl:41\ntest set: Test Failed at /tmp/tmpzb9z25ur.jl:48\n\
    \  Expression: candidate((1, 2), (1, 2)) == \"NO\"\n   Evaluated: \"YES\" == \"\
    NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpzb9z25ur.jl:48\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpzb9z25ur.jl:41\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzb9z25ur.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4ksgike2.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp4ksgike2.jl:26\n   [2] top-level scope at /tmp/tmp4ksgike2.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4ksgike2.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp4ksgike2.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4ksgike2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4ksgike2.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4ksgike2.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp4ksgike2.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4ksgike2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4ksgike2.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4ksgike2.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp4ksgike2.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4ksgike2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4ksgike2.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4ksgike2.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp4ksgike2.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4ksgike2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4ksgike2.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4ksgike2.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp4ksgike2.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4ksgike2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4ksgike2.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4ksgike2.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp4ksgike2.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4ksgike2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4ksgike2.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4ksgike2.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ksgike2.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    start =\
    \ max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start == finish\n        return \"NO\"\n    end\n    for i in 2:finish\n\
    \        if start % i == 0\n            return \"NO\"\n        end\n    end\n\
    \    return \"YES\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqu0fdrn8.jl:42\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n   Evaluated: \"YES\" == \"NO\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpqu0fdrn8.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqu0fdrn8.jl:40\ntest set: Test Failed at /tmp/tmpqu0fdrn8.jl:47\n\
    \  Expression: candidate((1, 2), (1, 2)) == \"NO\"\n   Evaluated: \"YES\" == \"\
    NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpqu0fdrn8.jl:47\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpqu0fdrn8.jl:40\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqu0fdrn8.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprx6ml5ih.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmprx6ml5ih.jl:26\n   [2] top-level scope at /tmp/tmprx6ml5ih.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprx6ml5ih.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprx6ml5ih.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprx6ml5ih.jl:26\n\
    \   [2] top-level scope at /tmp/tmprx6ml5ih.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprx6ml5ih.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprx6ml5ih.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprx6ml5ih.jl:26\n\
    \   [2] top-level scope at /tmp/tmprx6ml5ih.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprx6ml5ih.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprx6ml5ih.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprx6ml5ih.jl:26\n\
    \   [2] top-level scope at /tmp/tmprx6ml5ih.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprx6ml5ih.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprx6ml5ih.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprx6ml5ih.jl:26\n\
    \   [2] top-level scope at /tmp/tmprx6ml5ih.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprx6ml5ih.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprx6ml5ih.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprx6ml5ih.jl:26\n\
    \   [2] top-level scope at /tmp/tmprx6ml5ih.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprx6ml5ih.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprx6ml5ih.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprx6ml5ih.jl:26\n\
    \   [2] top-level scope at /tmp/tmprx6ml5ih.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprx6ml5ih.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprx6ml5ih.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    if interval1[1]\
    \ <= interval2[1]\n        start = interval2[1]\n    else\n        start = interval1[1]\n\
    \    end\n    if interval1[2] <= interval2[2]\n        end_ = interval1[2]\n \
    \   else\n        end_ = interval2[2]\n    end\n    if isprime(end_ - start +\
    \ 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1,\
    \ 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpw95puvqz.jl:45\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpw95puvqz.jl:34\n   [2] top-level scope at /tmp/tmpw95puvqz.jl:45\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw95puvqz.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmpw95puvqz.jl:46\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpw95puvqz.jl:34\n\
    \   [2] top-level scope at /tmp/tmpw95puvqz.jl:46\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw95puvqz.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmpw95puvqz.jl:47\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpw95puvqz.jl:34\n\
    \   [2] top-level scope at /tmp/tmpw95puvqz.jl:47\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw95puvqz.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmpw95puvqz.jl:48\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpw95puvqz.jl:34\n\
    \   [2] top-level scope at /tmp/tmpw95puvqz.jl:48\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw95puvqz.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmpw95puvqz.jl:49\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpw95puvqz.jl:34\n\
    \   [2] top-level scope at /tmp/tmpw95puvqz.jl:49\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw95puvqz.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmpw95puvqz.jl:51\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpw95puvqz.jl:34\n\
    \   [2] top-level scope at /tmp/tmpw95puvqz.jl:51\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw95puvqz.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmpw95puvqz.jl:52\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpw95puvqz.jl:34\n\
    \   [2] top-level scope at /tmp/tmpw95puvqz.jl:52\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpw95puvqz.jl:44\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpw95puvqz.jl:42\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpygp_raoj.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpygp_raoj.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpygp_raoj.jl:33\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpygp_raoj.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpygp_raoj.jl:34\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpygp_raoj.jl:26\\\
    n   [2] top-level scope at /tmp/tmpygp_raoj.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpygp_raoj.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpygp_raoj.jl:35\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpygp_raoj.jl:26\\\
    n   [2] top-level scope at /tmp/tmpygp_raoj.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpygp_raoj.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpygp_raoj.jl:36\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpygp_raoj.jl:26\\\
    n   [2] top-level scope at /tmp/tmpygp_raoj.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpygp_raoj.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpygp_raoj.jl:37\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpygp_raoj.jl:26\\\
    n   [2] top-level scope at /tmp/tmpygp_raoj.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpygp_raoj.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpygp_raoj.jl:39\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpygp_raoj.jl:26\\\
    n   [2] top-level scope at /tmp/tmpygp_raoj.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpygp_raoj.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpygp_raoj.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpygp_raoj.jl:26\\\
    n   [2] top-level scope at /tmp/tmpygp_raoj.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpygp_raoj.jl:32\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7  '"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp8jmnlmgy.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmp8jmnlmgy.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmp8jmnlmgy.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8jmnlmgy.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8jmnlmgy.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8jmnlmgy.jl:26\\\
    n   [2] top-level scope at /tmp/tmp8jmnlmgy.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8jmnlmgy.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8jmnlmgy.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8jmnlmgy.jl:26\\\
    n   [2] top-level scope at /tmp/tmp8jmnlmgy.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8jmnlmgy.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8jmnlmgy.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8jmnlmgy.jl:26\\\
    n   [2] top-level scope at /tmp/tmp8jmnlmgy.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8jmnlmgy.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8jmnlmgy.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8jmnlmgy.jl:26\\\
    n   [2] top-level scope at /tmp/tmp8jmnlmgy.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8jmnlmgy.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8jmnlmgy.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8jmnlmgy.jl:26\\\
    n   [2] top-level scope at /tmp/tmp8jmnlmgy.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8jmnlmgy.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp8jmnlmgy.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8jmnlmgy.jl:26\\\
    n   [2] top-level scope at /tmp/tmp8jmnlmgy.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp8jmnlmgy.jl:36\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    start =\
    \ max(interval1[1], interval2[1])\n    stop = min(interval1[2], interval2[2])\n\
    \    if isprime(stop - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqas11w3t.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpqas11w3t.jl:26\n   [2] top-level scope at /tmp/tmpqas11w3t.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqas11w3t.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpqas11w3t.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpqas11w3t.jl:26\n\
    \   [2] top-level scope at /tmp/tmpqas11w3t.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqas11w3t.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpqas11w3t.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpqas11w3t.jl:26\n\
    \   [2] top-level scope at /tmp/tmpqas11w3t.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqas11w3t.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpqas11w3t.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpqas11w3t.jl:26\n\
    \   [2] top-level scope at /tmp/tmpqas11w3t.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqas11w3t.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpqas11w3t.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpqas11w3t.jl:26\n\
    \   [2] top-level scope at /tmp/tmpqas11w3t.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqas11w3t.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpqas11w3t.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpqas11w3t.jl:26\n\
    \   [2] top-level scope at /tmp/tmpqas11w3t.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqas11w3t.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpqas11w3t.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpqas11w3t.jl:26\n\
    \   [2] top-level scope at /tmp/tmpqas11w3t.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqas11w3t.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqas11w3t.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    start =\
    \ max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    return isprime(finish - start + 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3))\
    \ == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprvt3ve79.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmprvt3ve79.jl:26\n   [2] top-level scope at /tmp/tmprvt3ve79.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprvt3ve79.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmprvt3ve79.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprvt3ve79.jl:26\n\
    \   [2] top-level scope at /tmp/tmprvt3ve79.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprvt3ve79.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmprvt3ve79.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprvt3ve79.jl:26\n\
    \   [2] top-level scope at /tmp/tmprvt3ve79.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprvt3ve79.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmprvt3ve79.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprvt3ve79.jl:26\n\
    \   [2] top-level scope at /tmp/tmprvt3ve79.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprvt3ve79.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmprvt3ve79.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprvt3ve79.jl:26\n\
    \   [2] top-level scope at /tmp/tmprvt3ve79.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprvt3ve79.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmprvt3ve79.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprvt3ve79.jl:26\n\
    \   [2] top-level scope at /tmp/tmprvt3ve79.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprvt3ve79.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmprvt3ve79.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprvt3ve79.jl:26\n\
    \   [2] top-level scope at /tmp/tmprvt3ve79.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprvt3ve79.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprvt3ve79.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpk0nk0wgc.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpk0nk0wgc.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpk0nk0wgc.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpk0nk0wgc.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpk0nk0wgc.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk0nk0wgc.jl:26\\\
    n   [2] top-level scope at /tmp/tmpk0nk0wgc.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpk0nk0wgc.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpk0nk0wgc.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk0nk0wgc.jl:26\\\
    n   [2] top-level scope at /tmp/tmpk0nk0wgc.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpk0nk0wgc.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpk0nk0wgc.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk0nk0wgc.jl:26\\\
    n   [2] top-level scope at /tmp/tmpk0nk0wgc.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpk0nk0wgc.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpk0nk0wgc.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk0nk0wgc.jl:26\\\
    n   [2] top-level scope at /tmp/tmpk0nk0wgc.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpk0nk0wgc.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpk0nk0wgc.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk0nk0wgc.jl:26\\\
    n   [2] top-level scope at /tmp/tmpk0nk0wgc.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpk0nk0wgc.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpk0nk0wgc.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk0nk0wgc.jl:26\\\
    n   [2] top-level scope at /tmp/tmpk0nk0wgc.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpk0nk0wgc.jl:36\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if stop < start\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpatdyehlx.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpatdyehlx.jl:26\n   [2] top-level scope at /tmp/tmpatdyehlx.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpatdyehlx.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpatdyehlx.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpatdyehlx.jl:26\n\
    \   [2] top-level scope at /tmp/tmpatdyehlx.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpatdyehlx.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpatdyehlx.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpatdyehlx.jl:26\n\
    \   [2] top-level scope at /tmp/tmpatdyehlx.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpatdyehlx.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpatdyehlx.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpatdyehlx.jl:26\n\
    \   [2] top-level scope at /tmp/tmpatdyehlx.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpatdyehlx.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpatdyehlx.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpatdyehlx.jl:26\n\
    \   [2] top-level scope at /tmp/tmpatdyehlx.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpatdyehlx.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpatdyehlx.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpatdyehlx.jl:26\n\
    \   [2] top-level scope at /tmp/tmpatdyehlx.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpatdyehlx.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpatdyehlx.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpatdyehlx.jl:26\n\
    \   [2] top-level scope at /tmp/tmpatdyehlx.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpatdyehlx.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpatdyehlx.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplsb1m5q1.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmplsb1m5q1.jl:26\n   [2] top-level scope at /tmp/tmplsb1m5q1.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplsb1m5q1.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmplsb1m5q1.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmplsb1m5q1.jl:26\n\
    \   [2] top-level scope at /tmp/tmplsb1m5q1.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplsb1m5q1.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmplsb1m5q1.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmplsb1m5q1.jl:26\n\
    \   [2] top-level scope at /tmp/tmplsb1m5q1.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplsb1m5q1.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmplsb1m5q1.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmplsb1m5q1.jl:26\n\
    \   [2] top-level scope at /tmp/tmplsb1m5q1.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplsb1m5q1.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmplsb1m5q1.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmplsb1m5q1.jl:26\n\
    \   [2] top-level scope at /tmp/tmplsb1m5q1.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplsb1m5q1.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmplsb1m5q1.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmplsb1m5q1.jl:26\n\
    \   [2] top-level scope at /tmp/tmplsb1m5q1.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplsb1m5q1.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmplsb1m5q1.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmplsb1m5q1.jl:26\n\
    \   [2] top-level scope at /tmp/tmplsb1m5q1.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplsb1m5q1.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplsb1m5q1.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnrlz5xni.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpnrlz5xni.jl:26\n   [2] top-level scope at /tmp/tmpnrlz5xni.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnrlz5xni.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpnrlz5xni.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnrlz5xni.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnrlz5xni.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnrlz5xni.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpnrlz5xni.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnrlz5xni.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnrlz5xni.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnrlz5xni.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpnrlz5xni.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnrlz5xni.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnrlz5xni.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnrlz5xni.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpnrlz5xni.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnrlz5xni.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnrlz5xni.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnrlz5xni.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpnrlz5xni.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnrlz5xni.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnrlz5xni.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnrlz5xni.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpnrlz5xni.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnrlz5xni.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnrlz5xni.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnrlz5xni.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnrlz5xni.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdw4rmmc6.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpdw4rmmc6.jl:26\n   [2] top-level scope at /tmp/tmpdw4rmmc6.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdw4rmmc6.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpdw4rmmc6.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpdw4rmmc6.jl:26\n\
    \   [2] top-level scope at /tmp/tmpdw4rmmc6.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdw4rmmc6.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpdw4rmmc6.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpdw4rmmc6.jl:26\n\
    \   [2] top-level scope at /tmp/tmpdw4rmmc6.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdw4rmmc6.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpdw4rmmc6.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpdw4rmmc6.jl:26\n\
    \   [2] top-level scope at /tmp/tmpdw4rmmc6.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdw4rmmc6.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpdw4rmmc6.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpdw4rmmc6.jl:26\n\
    \   [2] top-level scope at /tmp/tmpdw4rmmc6.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdw4rmmc6.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpdw4rmmc6.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpdw4rmmc6.jl:26\n\
    \   [2] top-level scope at /tmp/tmpdw4rmmc6.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdw4rmmc6.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpdw4rmmc6.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpdw4rmmc6.jl:26\n\
    \   [2] top-level scope at /tmp/tmpdw4rmmc6.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdw4rmmc6.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdw4rmmc6.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyv0a3ylv.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpyv0a3ylv.jl:26\n   [2] top-level scope at /tmp/tmpyv0a3ylv.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyv0a3ylv.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyv0a3ylv.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyv0a3ylv.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyv0a3ylv.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyv0a3ylv.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyv0a3ylv.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyv0a3ylv.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyv0a3ylv.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyv0a3ylv.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyv0a3ylv.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyv0a3ylv.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyv0a3ylv.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyv0a3ylv.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyv0a3ylv.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyv0a3ylv.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyv0a3ylv.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyv0a3ylv.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyv0a3ylv.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyv0a3ylv.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyv0a3ylv.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyv0a3ylv.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyv0a3ylv.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyv0a3ylv.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyv0a3ylv.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyv0a3ylv.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyv0a3ylv.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    len = finish - start + 1\n    if\
    \ isprime(len)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1,\
    \ 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8myj4ezh.jl:38\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp8myj4ezh.jl:27\n   [2] top-level scope at /tmp/tmp8myj4ezh.jl:38\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8myj4ezh.jl:37\n  \ntest set: Error During\
    \ Test at /tmp/tmp8myj4ezh.jl:39\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8myj4ezh.jl:27\n\
    \   [2] top-level scope at /tmp/tmp8myj4ezh.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8myj4ezh.jl:37\n  \ntest set: Error During\
    \ Test at /tmp/tmp8myj4ezh.jl:40\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8myj4ezh.jl:27\n\
    \   [2] top-level scope at /tmp/tmp8myj4ezh.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8myj4ezh.jl:37\n  \ntest set: Error During\
    \ Test at /tmp/tmp8myj4ezh.jl:41\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8myj4ezh.jl:27\n\
    \   [2] top-level scope at /tmp/tmp8myj4ezh.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8myj4ezh.jl:37\n  \ntest set: Error During\
    \ Test at /tmp/tmp8myj4ezh.jl:42\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8myj4ezh.jl:27\n\
    \   [2] top-level scope at /tmp/tmp8myj4ezh.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8myj4ezh.jl:37\n  \ntest set: Error During\
    \ Test at /tmp/tmp8myj4ezh.jl:44\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8myj4ezh.jl:27\n\
    \   [2] top-level scope at /tmp/tmp8myj4ezh.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8myj4ezh.jl:37\n  \ntest set: Error During\
    \ Test at /tmp/tmp8myj4ezh.jl:45\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8myj4ezh.jl:27\n\
    \   [2] top-level scope at /tmp/tmp8myj4ezh.jl:45\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8myj4ezh.jl:37\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8myj4ezh.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk5ddruwu.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpk5ddruwu.jl:26\n   [2] top-level scope at /tmp/tmpk5ddruwu.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk5ddruwu.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpk5ddruwu.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk5ddruwu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpk5ddruwu.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk5ddruwu.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpk5ddruwu.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk5ddruwu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpk5ddruwu.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk5ddruwu.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpk5ddruwu.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk5ddruwu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpk5ddruwu.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk5ddruwu.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpk5ddruwu.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk5ddruwu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpk5ddruwu.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk5ddruwu.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpk5ddruwu.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk5ddruwu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpk5ddruwu.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk5ddruwu.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpk5ddruwu.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk5ddruwu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpk5ddruwu.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk5ddruwu.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk5ddruwu.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvqvs28c3.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpvqvs28c3.jl:26\n   [2] top-level scope at /tmp/tmpvqvs28c3.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqvs28c3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqvs28c3.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvqvs28c3.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvqvs28c3.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqvs28c3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqvs28c3.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvqvs28c3.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvqvs28c3.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqvs28c3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqvs28c3.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvqvs28c3.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvqvs28c3.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqvs28c3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqvs28c3.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvqvs28c3.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvqvs28c3.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqvs28c3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqvs28c3.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvqvs28c3.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvqvs28c3.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqvs28c3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvqvs28c3.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvqvs28c3.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvqvs28c3.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvqvs28c3.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvqvs28c3.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5vzp3bl0.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp5vzp3bl0.jl:26\n   [2] top-level scope at /tmp/tmp5vzp3bl0.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5vzp3bl0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp5vzp3bl0.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5vzp3bl0.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5vzp3bl0.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5vzp3bl0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp5vzp3bl0.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5vzp3bl0.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5vzp3bl0.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5vzp3bl0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp5vzp3bl0.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5vzp3bl0.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5vzp3bl0.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5vzp3bl0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp5vzp3bl0.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5vzp3bl0.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5vzp3bl0.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5vzp3bl0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp5vzp3bl0.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5vzp3bl0.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5vzp3bl0.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5vzp3bl0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp5vzp3bl0.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5vzp3bl0.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5vzp3bl0.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5vzp3bl0.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5vzp3bl0.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmar_iocu.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpmar_iocu.jl:26\n   [2] top-level scope at /tmp/tmpmar_iocu.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmar_iocu.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpmar_iocu.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpmar_iocu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpmar_iocu.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmar_iocu.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpmar_iocu.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpmar_iocu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpmar_iocu.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmar_iocu.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpmar_iocu.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpmar_iocu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpmar_iocu.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmar_iocu.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpmar_iocu.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpmar_iocu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpmar_iocu.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmar_iocu.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpmar_iocu.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpmar_iocu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpmar_iocu.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmar_iocu.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpmar_iocu.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpmar_iocu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpmar_iocu.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpmar_iocu.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmar_iocu.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd37qdetm.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpd37qdetm.jl:26\n   [2] top-level scope at /tmp/tmpd37qdetm.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd37qdetm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpd37qdetm.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpd37qdetm.jl:26\n\
    \   [2] top-level scope at /tmp/tmpd37qdetm.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd37qdetm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpd37qdetm.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpd37qdetm.jl:26\n\
    \   [2] top-level scope at /tmp/tmpd37qdetm.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd37qdetm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpd37qdetm.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpd37qdetm.jl:26\n\
    \   [2] top-level scope at /tmp/tmpd37qdetm.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd37qdetm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpd37qdetm.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpd37qdetm.jl:26\n\
    \   [2] top-level scope at /tmp/tmpd37qdetm.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd37qdetm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpd37qdetm.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpd37qdetm.jl:26\n\
    \   [2] top-level scope at /tmp/tmpd37qdetm.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd37qdetm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpd37qdetm.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpd37qdetm.jl:26\n\
    \   [2] top-level scope at /tmp/tmpd37qdetm.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd37qdetm.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd37qdetm.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpk7xrrc86.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpk7xrrc86.jl:26\n   [2] top-level scope at /tmp/tmpk7xrrc86.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk7xrrc86.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpk7xrrc86.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk7xrrc86.jl:26\n\
    \   [2] top-level scope at /tmp/tmpk7xrrc86.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk7xrrc86.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpk7xrrc86.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk7xrrc86.jl:26\n\
    \   [2] top-level scope at /tmp/tmpk7xrrc86.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk7xrrc86.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpk7xrrc86.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk7xrrc86.jl:26\n\
    \   [2] top-level scope at /tmp/tmpk7xrrc86.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk7xrrc86.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpk7xrrc86.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk7xrrc86.jl:26\n\
    \   [2] top-level scope at /tmp/tmpk7xrrc86.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk7xrrc86.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpk7xrrc86.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk7xrrc86.jl:26\n\
    \   [2] top-level scope at /tmp/tmpk7xrrc86.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk7xrrc86.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpk7xrrc86.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpk7xrrc86.jl:26\n\
    \   [2] top-level scope at /tmp/tmpk7xrrc86.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpk7xrrc86.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk7xrrc86.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjxv0b6t0.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpjxv0b6t0.jl:26\n   [2] top-level scope at /tmp/tmpjxv0b6t0.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjxv0b6t0.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjxv0b6t0.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjxv0b6t0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjxv0b6t0.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjxv0b6t0.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjxv0b6t0.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjxv0b6t0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjxv0b6t0.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjxv0b6t0.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjxv0b6t0.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjxv0b6t0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjxv0b6t0.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjxv0b6t0.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjxv0b6t0.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjxv0b6t0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjxv0b6t0.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjxv0b6t0.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjxv0b6t0.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjxv0b6t0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjxv0b6t0.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjxv0b6t0.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjxv0b6t0.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjxv0b6t0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjxv0b6t0.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjxv0b6t0.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjxv0b6t0.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    length =\
    \ min(interval1[2], interval2[2]) - max(interval1[1], interval2[1]) + 1\n    if\
    \ length == 1\n        return \"NO\"\n    end\n    for i in 2:length-1\n     \
    \   if length % i == 0\n            return \"NO\"\n        end\n    end\n    return\
    \ \"YES\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpugbew4a8.jl:41\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n   Evaluated: \"YES\" == \"NO\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpugbew4a8.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpugbew4a8.jl:39\ntest set: Test Failed at /tmp/tmpugbew4a8.jl:46\n\
    \  Expression: candidate((1, 2), (1, 2)) == \"NO\"\n   Evaluated: \"YES\" == \"\
    NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpugbew4a8.jl:46\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpugbew4a8.jl:39\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpugbew4a8.jl:37\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbguuxg_b.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpbguuxg_b.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpbguuxg_b.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbguuxg_b.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbguuxg_b.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbguuxg_b.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbguuxg_b.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbguuxg_b.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbguuxg_b.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbguuxg_b.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbguuxg_b.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbguuxg_b.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbguuxg_b.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbguuxg_b.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbguuxg_b.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbguuxg_b.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbguuxg_b.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbguuxg_b.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbguuxg_b.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbguuxg_b.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbguuxg_b.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbguuxg_b.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbguuxg_b.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbguuxg_b.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbguuxg_b.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbguuxg_b.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbguuxg_b.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbguuxg_b.jl:36\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpztxs5odm.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpztxs5odm.jl:26\n   [2] top-level scope at /tmp/tmpztxs5odm.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpztxs5odm.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpztxs5odm.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpztxs5odm.jl:26\n\
    \   [2] top-level scope at /tmp/tmpztxs5odm.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpztxs5odm.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpztxs5odm.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpztxs5odm.jl:26\n\
    \   [2] top-level scope at /tmp/tmpztxs5odm.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpztxs5odm.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpztxs5odm.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpztxs5odm.jl:26\n\
    \   [2] top-level scope at /tmp/tmpztxs5odm.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpztxs5odm.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpztxs5odm.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpztxs5odm.jl:26\n\
    \   [2] top-level scope at /tmp/tmpztxs5odm.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpztxs5odm.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpztxs5odm.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpztxs5odm.jl:26\n\
    \   [2] top-level scope at /tmp/tmpztxs5odm.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpztxs5odm.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpztxs5odm.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpztxs5odm.jl:26\n\
    \   [2] top-level scope at /tmp/tmpztxs5odm.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpztxs5odm.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpztxs5odm.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0h3vo_lh.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp0h3vo_lh.jl:26\n   [2] top-level scope at /tmp/tmp0h3vo_lh.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0h3vo_lh.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp0h3vo_lh.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp0h3vo_lh.jl:26\n\
    \   [2] top-level scope at /tmp/tmp0h3vo_lh.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0h3vo_lh.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp0h3vo_lh.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp0h3vo_lh.jl:26\n\
    \   [2] top-level scope at /tmp/tmp0h3vo_lh.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0h3vo_lh.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp0h3vo_lh.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp0h3vo_lh.jl:26\n\
    \   [2] top-level scope at /tmp/tmp0h3vo_lh.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0h3vo_lh.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp0h3vo_lh.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp0h3vo_lh.jl:26\n\
    \   [2] top-level scope at /tmp/tmp0h3vo_lh.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0h3vo_lh.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp0h3vo_lh.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp0h3vo_lh.jl:26\n\
    \   [2] top-level scope at /tmp/tmp0h3vo_lh.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0h3vo_lh.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp0h3vo_lh.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp0h3vo_lh.jl:26\n\
    \   [2] top-level scope at /tmp/tmp0h3vo_lh.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0h3vo_lh.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0h3vo_lh.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphp_ldr1_.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmphp_ldr1_.jl:26\n   [2] top-level scope at /tmp/tmphp_ldr1_.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphp_ldr1_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmphp_ldr1_.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmphp_ldr1_.jl:26\n\
    \   [2] top-level scope at /tmp/tmphp_ldr1_.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphp_ldr1_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmphp_ldr1_.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmphp_ldr1_.jl:26\n\
    \   [2] top-level scope at /tmp/tmphp_ldr1_.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphp_ldr1_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmphp_ldr1_.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmphp_ldr1_.jl:26\n\
    \   [2] top-level scope at /tmp/tmphp_ldr1_.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphp_ldr1_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmphp_ldr1_.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmphp_ldr1_.jl:26\n\
    \   [2] top-level scope at /tmp/tmphp_ldr1_.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphp_ldr1_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmphp_ldr1_.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmphp_ldr1_.jl:26\n\
    \   [2] top-level scope at /tmp/tmphp_ldr1_.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphp_ldr1_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmphp_ldr1_.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmphp_ldr1_.jl:26\n\
    \   [2] top-level scope at /tmp/tmphp_ldr1_.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphp_ldr1_.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphp_ldr1_.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    if interval1[1]\
    \ < interval2[1]\n        start = interval2[1]\n    else\n        start = interval1[1]\n\
    \    end\n    if interval1[2] < interval2[2]\n        stop = interval1[2]\n  \
    \  else\n        stop = interval2[2]\n    end\n    if isprime(stop - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp6xg9fesq.jl:45\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp6xg9fesq.jl:34\n   [2] top-level scope at /tmp/tmp6xg9fesq.jl:45\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6xg9fesq.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmp6xg9fesq.jl:46\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp6xg9fesq.jl:34\n\
    \   [2] top-level scope at /tmp/tmp6xg9fesq.jl:46\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6xg9fesq.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmp6xg9fesq.jl:47\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp6xg9fesq.jl:34\n\
    \   [2] top-level scope at /tmp/tmp6xg9fesq.jl:47\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6xg9fesq.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmp6xg9fesq.jl:48\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp6xg9fesq.jl:34\n\
    \   [2] top-level scope at /tmp/tmp6xg9fesq.jl:48\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6xg9fesq.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmp6xg9fesq.jl:49\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp6xg9fesq.jl:34\n\
    \   [2] top-level scope at /tmp/tmp6xg9fesq.jl:49\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6xg9fesq.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmp6xg9fesq.jl:51\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp6xg9fesq.jl:34\n\
    \   [2] top-level scope at /tmp/tmp6xg9fesq.jl:51\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6xg9fesq.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmp6xg9fesq.jl:52\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp6xg9fesq.jl:34\n\
    \   [2] top-level scope at /tmp/tmp6xg9fesq.jl:52\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp6xg9fesq.jl:44\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6xg9fesq.jl:42\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjuebtk2b.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpjuebtk2b.jl:26\n   [2] top-level scope at /tmp/tmpjuebtk2b.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjuebtk2b.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjuebtk2b.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjuebtk2b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjuebtk2b.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjuebtk2b.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjuebtk2b.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjuebtk2b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjuebtk2b.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjuebtk2b.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjuebtk2b.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjuebtk2b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjuebtk2b.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjuebtk2b.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjuebtk2b.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjuebtk2b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjuebtk2b.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjuebtk2b.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjuebtk2b.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjuebtk2b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjuebtk2b.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjuebtk2b.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjuebtk2b.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjuebtk2b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjuebtk2b.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjuebtk2b.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjuebtk2b.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptdlyirex.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmptdlyirex.jl:26\n   [2] top-level scope at /tmp/tmptdlyirex.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptdlyirex.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmptdlyirex.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptdlyirex.jl:26\n\
    \   [2] top-level scope at /tmp/tmptdlyirex.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptdlyirex.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmptdlyirex.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptdlyirex.jl:26\n\
    \   [2] top-level scope at /tmp/tmptdlyirex.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptdlyirex.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmptdlyirex.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptdlyirex.jl:26\n\
    \   [2] top-level scope at /tmp/tmptdlyirex.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptdlyirex.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmptdlyirex.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptdlyirex.jl:26\n\
    \   [2] top-level scope at /tmp/tmptdlyirex.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptdlyirex.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmptdlyirex.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptdlyirex.jl:26\n\
    \   [2] top-level scope at /tmp/tmptdlyirex.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptdlyirex.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmptdlyirex.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptdlyirex.jl:26\n\
    \   [2] top-level scope at /tmp/tmptdlyirex.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptdlyirex.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptdlyirex.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjertr4kx.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpjertr4kx.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpjertr4kx.jl:33\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjertr4kx.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjertr4kx.jl:34\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjertr4kx.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjertr4kx.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjertr4kx.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjertr4kx.jl:35\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjertr4kx.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjertr4kx.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjertr4kx.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjertr4kx.jl:36\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjertr4kx.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjertr4kx.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjertr4kx.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjertr4kx.jl:37\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjertr4kx.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjertr4kx.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjertr4kx.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjertr4kx.jl:39\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjertr4kx.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjertr4kx.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjertr4kx.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjertr4kx.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjertr4kx.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjertr4kx.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjertr4kx.jl:32\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    if interval1[1]\
    \ > interval2[1]\n        start = interval1[1]\n    else\n        start = interval2[1]\n\
    \    end\n    if interval1[2] < interval2[2]\n        finish = interval1[2]\n\
    \    else\n        finish = interval2[2]\n    end\n    if start == finish\n  \
    \      return \"NO\"\n    end\n    if isprime(finish - start)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4utdcpl4.jl:49\n  Test threw exception\n\
    \  Expression: candidate((-1, 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp4utdcpl4.jl:37\n   [2] top-level scope at /tmp/tmp4utdcpl4.jl:49\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4utdcpl4.jl:47\n  \ntest set: Error During\
    \ Test at /tmp/tmp4utdcpl4.jl:50\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4utdcpl4.jl:37\n\
    \   [2] top-level scope at /tmp/tmp4utdcpl4.jl:50\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4utdcpl4.jl:47\n  \ntest set: Error During\
    \ Test at /tmp/tmp4utdcpl4.jl:51\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4utdcpl4.jl:37\n\
    \   [2] top-level scope at /tmp/tmp4utdcpl4.jl:51\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4utdcpl4.jl:47\n  \ntest set: Error During\
    \ Test at /tmp/tmp4utdcpl4.jl:54\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4utdcpl4.jl:37\n\
    \   [2] top-level scope at /tmp/tmp4utdcpl4.jl:54\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4utdcpl4.jl:47\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    4      4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4utdcpl4.jl:45\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp66kpiw28.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp66kpiw28.jl:26\n   [2] top-level scope at /tmp/tmp66kpiw28.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp66kpiw28.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp66kpiw28.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp66kpiw28.jl:26\n\
    \   [2] top-level scope at /tmp/tmp66kpiw28.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp66kpiw28.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp66kpiw28.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp66kpiw28.jl:26\n\
    \   [2] top-level scope at /tmp/tmp66kpiw28.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp66kpiw28.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp66kpiw28.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp66kpiw28.jl:26\n\
    \   [2] top-level scope at /tmp/tmp66kpiw28.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp66kpiw28.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp66kpiw28.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp66kpiw28.jl:26\n\
    \   [2] top-level scope at /tmp/tmp66kpiw28.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp66kpiw28.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp66kpiw28.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp66kpiw28.jl:26\n\
    \   [2] top-level scope at /tmp/tmp66kpiw28.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp66kpiw28.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp66kpiw28.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp66kpiw28.jl:26\n\
    \   [2] top-level scope at /tmp/tmp66kpiw28.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp66kpiw28.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp66kpiw28.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn7vxepkf.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpn7vxepkf.jl:26\n   [2] top-level scope at /tmp/tmpn7vxepkf.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7vxepkf.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpn7vxepkf.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpn7vxepkf.jl:26\n\
    \   [2] top-level scope at /tmp/tmpn7vxepkf.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7vxepkf.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpn7vxepkf.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpn7vxepkf.jl:26\n\
    \   [2] top-level scope at /tmp/tmpn7vxepkf.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7vxepkf.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpn7vxepkf.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpn7vxepkf.jl:26\n\
    \   [2] top-level scope at /tmp/tmpn7vxepkf.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7vxepkf.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpn7vxepkf.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpn7vxepkf.jl:26\n\
    \   [2] top-level scope at /tmp/tmpn7vxepkf.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7vxepkf.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpn7vxepkf.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpn7vxepkf.jl:26\n\
    \   [2] top-level scope at /tmp/tmpn7vxepkf.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7vxepkf.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpn7vxepkf.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpn7vxepkf.jl:26\n\
    \   [2] top-level scope at /tmp/tmpn7vxepkf.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7vxepkf.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn7vxepkf.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpry6cy7s_.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpry6cy7s_.jl:26\n   [2] top-level scope at /tmp/tmpry6cy7s_.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpry6cy7s_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpry6cy7s_.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpry6cy7s_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpry6cy7s_.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpry6cy7s_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpry6cy7s_.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpry6cy7s_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpry6cy7s_.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpry6cy7s_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpry6cy7s_.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpry6cy7s_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpry6cy7s_.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpry6cy7s_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpry6cy7s_.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpry6cy7s_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpry6cy7s_.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpry6cy7s_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpry6cy7s_.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpry6cy7s_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpry6cy7s_.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpry6cy7s_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpry6cy7s_.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpry6cy7s_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpry6cy7s_.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpry6cy7s_.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpry6cy7s_.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn95b_c29.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpn95b_c29.jl:26\n   [2] top-level scope at /tmp/tmpn95b_c29.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn95b_c29.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpn95b_c29.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpn95b_c29.jl:26\n\
    \   [2] top-level scope at /tmp/tmpn95b_c29.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn95b_c29.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpn95b_c29.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpn95b_c29.jl:26\n\
    \   [2] top-level scope at /tmp/tmpn95b_c29.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn95b_c29.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpn95b_c29.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpn95b_c29.jl:26\n\
    \   [2] top-level scope at /tmp/tmpn95b_c29.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn95b_c29.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpn95b_c29.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpn95b_c29.jl:26\n\
    \   [2] top-level scope at /tmp/tmpn95b_c29.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn95b_c29.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpn95b_c29.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpn95b_c29.jl:26\n\
    \   [2] top-level scope at /tmp/tmpn95b_c29.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn95b_c29.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpn95b_c29.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpn95b_c29.jl:26\n\
    \   [2] top-level scope at /tmp/tmpn95b_c29.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn95b_c29.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn95b_c29.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpkadwfp_s.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpkadwfp_s.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpkadwfp_s.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkadwfp_s.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpkadwfp_s.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpkadwfp_s.jl:26\\\
    n   [2] top-level scope at /tmp/tmpkadwfp_s.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkadwfp_s.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpkadwfp_s.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpkadwfp_s.jl:26\\\
    n   [2] top-level scope at /tmp/tmpkadwfp_s.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkadwfp_s.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpkadwfp_s.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpkadwfp_s.jl:26\\\
    n   [2] top-level scope at /tmp/tmpkadwfp_s.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkadwfp_s.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpkadwfp_s.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpkadwfp_s.jl:26\\\
    n   [2] top-level scope at /tmp/tmpkadwfp_s.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkadwfp_s.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpkadwfp_s.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpkadwfp_s.jl:26\\\
    n   [2] top-level scope at /tmp/tmpkadwfp_s.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkadwfp_s.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpkadwfp_s.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpkadwfp_s.jl:26\\\
    n   [2] top-level scope at /tmp/tmpkadwfp_s.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpkadwfp_s.jl:36\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcwqewh7d.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpcwqewh7d.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpcwqewh7d.jl:33\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcwqewh7d.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcwqewh7d.jl:34\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcwqewh7d.jl:26\\\
    n   [2] top-level scope at /tmp/tmpcwqewh7d.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcwqewh7d.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcwqewh7d.jl:35\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcwqewh7d.jl:26\\\
    n   [2] top-level scope at /tmp/tmpcwqewh7d.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcwqewh7d.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcwqewh7d.jl:36\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcwqewh7d.jl:26\\\
    n   [2] top-level scope at /tmp/tmpcwqewh7d.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcwqewh7d.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcwqewh7d.jl:37\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcwqewh7d.jl:26\\\
    n   [2] top-level scope at /tmp/tmpcwqewh7d.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcwqewh7d.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcwqewh7d.jl:39\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcwqewh7d.jl:26\\\
    n   [2] top-level scope at /tmp/tmpcwqewh7d.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcwqewh7d.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcwqewh7d.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcwqewh7d.jl:26\\\
    n   [2] top-level scope at /tmp/tmpcwqewh7d.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcwqewh7d.jl:32\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmphidsdfhq.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmphidsdfhq.jl:26\n   [2] top-level scope at /tmp/tmphidsdfhq.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphidsdfhq.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmphidsdfhq.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmphidsdfhq.jl:26\n\
    \   [2] top-level scope at /tmp/tmphidsdfhq.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphidsdfhq.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmphidsdfhq.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmphidsdfhq.jl:26\n\
    \   [2] top-level scope at /tmp/tmphidsdfhq.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphidsdfhq.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmphidsdfhq.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmphidsdfhq.jl:26\n\
    \   [2] top-level scope at /tmp/tmphidsdfhq.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphidsdfhq.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmphidsdfhq.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmphidsdfhq.jl:26\n\
    \   [2] top-level scope at /tmp/tmphidsdfhq.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphidsdfhq.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmphidsdfhq.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmphidsdfhq.jl:26\n\
    \   [2] top-level scope at /tmp/tmphidsdfhq.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphidsdfhq.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmphidsdfhq.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmphidsdfhq.jl:26\n\
    \   [2] top-level scope at /tmp/tmphidsdfhq.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmphidsdfhq.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphidsdfhq.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    start =\
    \ max(interval1[1], interval2[1])\n    stop = min(interval1[2], interval2[2])\n\
    \    if isprime(stop - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppioir0tj.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmppioir0tj.jl:26\n   [2] top-level scope at /tmp/tmppioir0tj.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppioir0tj.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppioir0tj.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppioir0tj.jl:26\n\
    \   [2] top-level scope at /tmp/tmppioir0tj.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppioir0tj.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppioir0tj.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppioir0tj.jl:26\n\
    \   [2] top-level scope at /tmp/tmppioir0tj.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppioir0tj.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppioir0tj.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppioir0tj.jl:26\n\
    \   [2] top-level scope at /tmp/tmppioir0tj.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppioir0tj.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppioir0tj.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppioir0tj.jl:26\n\
    \   [2] top-level scope at /tmp/tmppioir0tj.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppioir0tj.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppioir0tj.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppioir0tj.jl:26\n\
    \   [2] top-level scope at /tmp/tmppioir0tj.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppioir0tj.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppioir0tj.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppioir0tj.jl:26\n\
    \   [2] top-level scope at /tmp/tmppioir0tj.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppioir0tj.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppioir0tj.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp0ofhd1x3.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp0ofhd1x3.jl:26\n   [2] top-level scope at /tmp/tmp0ofhd1x3.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0ofhd1x3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp0ofhd1x3.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp0ofhd1x3.jl:26\n\
    \   [2] top-level scope at /tmp/tmp0ofhd1x3.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0ofhd1x3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp0ofhd1x3.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp0ofhd1x3.jl:26\n\
    \   [2] top-level scope at /tmp/tmp0ofhd1x3.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0ofhd1x3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp0ofhd1x3.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp0ofhd1x3.jl:26\n\
    \   [2] top-level scope at /tmp/tmp0ofhd1x3.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0ofhd1x3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp0ofhd1x3.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp0ofhd1x3.jl:26\n\
    \   [2] top-level scope at /tmp/tmp0ofhd1x3.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0ofhd1x3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp0ofhd1x3.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp0ofhd1x3.jl:26\n\
    \   [2] top-level scope at /tmp/tmp0ofhd1x3.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0ofhd1x3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp0ofhd1x3.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp0ofhd1x3.jl:26\n\
    \   [2] top-level scope at /tmp/tmp0ofhd1x3.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp0ofhd1x3.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0ofhd1x3.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyvuwhhy0.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpyvuwhhy0.jl:26\n   [2] top-level scope at /tmp/tmpyvuwhhy0.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyvuwhhy0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyvuwhhy0.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyvuwhhy0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyvuwhhy0.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyvuwhhy0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyvuwhhy0.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyvuwhhy0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyvuwhhy0.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyvuwhhy0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyvuwhhy0.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyvuwhhy0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyvuwhhy0.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyvuwhhy0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyvuwhhy0.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyvuwhhy0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyvuwhhy0.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyvuwhhy0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyvuwhhy0.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyvuwhhy0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyvuwhhy0.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyvuwhhy0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyvuwhhy0.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyvuwhhy0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyvuwhhy0.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyvuwhhy0.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyvuwhhy0.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl4uv4ce7.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpl4uv4ce7.jl:26\n   [2] top-level scope at /tmp/tmpl4uv4ce7.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl4uv4ce7.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpl4uv4ce7.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl4uv4ce7.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl4uv4ce7.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl4uv4ce7.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpl4uv4ce7.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl4uv4ce7.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl4uv4ce7.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl4uv4ce7.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpl4uv4ce7.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl4uv4ce7.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl4uv4ce7.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl4uv4ce7.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpl4uv4ce7.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl4uv4ce7.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl4uv4ce7.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl4uv4ce7.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpl4uv4ce7.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl4uv4ce7.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl4uv4ce7.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl4uv4ce7.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpl4uv4ce7.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl4uv4ce7.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl4uv4ce7.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl4uv4ce7.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl4uv4ce7.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgdx2z3wi.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpgdx2z3wi.jl:26\n   [2] top-level scope at /tmp/tmpgdx2z3wi.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgdx2z3wi.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpgdx2z3wi.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgdx2z3wi.jl:26\n\
    \   [2] top-level scope at /tmp/tmpgdx2z3wi.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgdx2z3wi.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpgdx2z3wi.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgdx2z3wi.jl:26\n\
    \   [2] top-level scope at /tmp/tmpgdx2z3wi.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgdx2z3wi.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpgdx2z3wi.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgdx2z3wi.jl:26\n\
    \   [2] top-level scope at /tmp/tmpgdx2z3wi.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgdx2z3wi.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpgdx2z3wi.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgdx2z3wi.jl:26\n\
    \   [2] top-level scope at /tmp/tmpgdx2z3wi.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgdx2z3wi.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpgdx2z3wi.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgdx2z3wi.jl:26\n\
    \   [2] top-level scope at /tmp/tmpgdx2z3wi.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgdx2z3wi.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpgdx2z3wi.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgdx2z3wi.jl:26\n\
    \   [2] top-level scope at /tmp/tmpgdx2z3wi.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgdx2z3wi.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgdx2z3wi.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpdqlwo672.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpdqlwo672.jl:26\n   [2] top-level scope at /tmp/tmpdqlwo672.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdqlwo672.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpdqlwo672.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpdqlwo672.jl:26\n\
    \   [2] top-level scope at /tmp/tmpdqlwo672.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdqlwo672.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpdqlwo672.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpdqlwo672.jl:26\n\
    \   [2] top-level scope at /tmp/tmpdqlwo672.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdqlwo672.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpdqlwo672.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpdqlwo672.jl:26\n\
    \   [2] top-level scope at /tmp/tmpdqlwo672.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdqlwo672.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpdqlwo672.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpdqlwo672.jl:26\n\
    \   [2] top-level scope at /tmp/tmpdqlwo672.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdqlwo672.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpdqlwo672.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpdqlwo672.jl:26\n\
    \   [2] top-level scope at /tmp/tmpdqlwo672.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdqlwo672.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpdqlwo672.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpdqlwo672.jl:26\n\
    \   [2] top-level scope at /tmp/tmpdqlwo672.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpdqlwo672.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdqlwo672.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpslsegfrs.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpslsegfrs.jl:26\n   [2] top-level scope at /tmp/tmpslsegfrs.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpslsegfrs.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpslsegfrs.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpslsegfrs.jl:26\n\
    \   [2] top-level scope at /tmp/tmpslsegfrs.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpslsegfrs.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpslsegfrs.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpslsegfrs.jl:26\n\
    \   [2] top-level scope at /tmp/tmpslsegfrs.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpslsegfrs.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpslsegfrs.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpslsegfrs.jl:26\n\
    \   [2] top-level scope at /tmp/tmpslsegfrs.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpslsegfrs.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpslsegfrs.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpslsegfrs.jl:26\n\
    \   [2] top-level scope at /tmp/tmpslsegfrs.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpslsegfrs.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpslsegfrs.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpslsegfrs.jl:26\n\
    \   [2] top-level scope at /tmp/tmpslsegfrs.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpslsegfrs.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpslsegfrs.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpslsegfrs.jl:26\n\
    \   [2] top-level scope at /tmp/tmpslsegfrs.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpslsegfrs.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpslsegfrs.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8n_0wzy9.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp8n_0wzy9.jl:26\n   [2] top-level scope at /tmp/tmp8n_0wzy9.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8n_0wzy9.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8n_0wzy9.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8n_0wzy9.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8n_0wzy9.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8n_0wzy9.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8n_0wzy9.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8n_0wzy9.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8n_0wzy9.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8n_0wzy9.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8n_0wzy9.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8n_0wzy9.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8n_0wzy9.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8n_0wzy9.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8n_0wzy9.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8n_0wzy9.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8n_0wzy9.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8n_0wzy9.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8n_0wzy9.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8n_0wzy9.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8n_0wzy9.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8n_0wzy9.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8n_0wzy9.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8n_0wzy9.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8n_0wzy9.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8n_0wzy9.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8n_0wzy9.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    start =\
    \ max(interval1[1], interval2[1])\n    stop = min(interval1[2], interval2[2])\n\
    \    if isprime(stop - start + 1)\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcxuldxc8.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpcxuldxc8.jl:26\n   [2] top-level scope at /tmp/tmpcxuldxc8.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcxuldxc8.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxuldxc8.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcxuldxc8.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcxuldxc8.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcxuldxc8.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxuldxc8.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcxuldxc8.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcxuldxc8.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcxuldxc8.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxuldxc8.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcxuldxc8.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcxuldxc8.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcxuldxc8.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxuldxc8.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcxuldxc8.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcxuldxc8.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcxuldxc8.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxuldxc8.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcxuldxc8.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcxuldxc8.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcxuldxc8.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcxuldxc8.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcxuldxc8.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcxuldxc8.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcxuldxc8.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcxuldxc8.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpgpj1sljn.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpgpj1sljn.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpgpj1sljn.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgpj1sljn.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgpj1sljn.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgpj1sljn.jl:26\\\
    n   [2] top-level scope at /tmp/tmpgpj1sljn.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgpj1sljn.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgpj1sljn.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgpj1sljn.jl:26\\\
    n   [2] top-level scope at /tmp/tmpgpj1sljn.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgpj1sljn.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgpj1sljn.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgpj1sljn.jl:26\\\
    n   [2] top-level scope at /tmp/tmpgpj1sljn.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgpj1sljn.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgpj1sljn.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgpj1sljn.jl:26\\\
    n   [2] top-level scope at /tmp/tmpgpj1sljn.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgpj1sljn.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgpj1sljn.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgpj1sljn.jl:26\\\
    n   [2] top-level scope at /tmp/tmpgpj1sljn.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgpj1sljn.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpgpj1sljn.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgpj1sljn.jl:26\\\
    n   [2] top-level scope at /tmp/tmpgpj1sljn.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpgpj1sljn.jl:36\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpy0zzo4or.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpy0zzo4or.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpy0zzo4or.jl:33\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpy0zzo4or.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpy0zzo4or.jl:34\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpy0zzo4or.jl:26\\\
    n   [2] top-level scope at /tmp/tmpy0zzo4or.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpy0zzo4or.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpy0zzo4or.jl:35\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpy0zzo4or.jl:26\\\
    n   [2] top-level scope at /tmp/tmpy0zzo4or.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpy0zzo4or.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpy0zzo4or.jl:36\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpy0zzo4or.jl:26\\\
    n   [2] top-level scope at /tmp/tmpy0zzo4or.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpy0zzo4or.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpy0zzo4or.jl:37\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpy0zzo4or.jl:26\\\
    n   [2] top-level scope at /tmp/tmpy0zzo4or.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpy0zzo4or.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpy0zzo4or.jl:39\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpy0zzo4or.jl:26\\\
    n   [2] top-level scope at /tmp/tmpy0zzo4or.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpy0zzo4or.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpy0zzo4or.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpy0zzo4or.jl:26\\\
    n   [2] top-level scope at /tmp/tmpy0zzo4or.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpy0zzo4or.jl:32\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpa2uyxunk.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpa2uyxunk.jl:26\n   [2] top-level scope at /tmp/tmpa2uyxunk.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa2uyxunk.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpa2uyxunk.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpa2uyxunk.jl:26\n\
    \   [2] top-level scope at /tmp/tmpa2uyxunk.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa2uyxunk.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpa2uyxunk.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpa2uyxunk.jl:26\n\
    \   [2] top-level scope at /tmp/tmpa2uyxunk.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa2uyxunk.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpa2uyxunk.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpa2uyxunk.jl:26\n\
    \   [2] top-level scope at /tmp/tmpa2uyxunk.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa2uyxunk.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpa2uyxunk.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpa2uyxunk.jl:26\n\
    \   [2] top-level scope at /tmp/tmpa2uyxunk.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa2uyxunk.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpa2uyxunk.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpa2uyxunk.jl:26\n\
    \   [2] top-level scope at /tmp/tmpa2uyxunk.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa2uyxunk.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpa2uyxunk.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpa2uyxunk.jl:26\n\
    \   [2] top-level scope at /tmp/tmpa2uyxunk.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpa2uyxunk.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa2uyxunk.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp78xc6cqs.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp78xc6cqs.jl:26\n   [2] top-level scope at /tmp/tmp78xc6cqs.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp78xc6cqs.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp78xc6cqs.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp78xc6cqs.jl:26\n\
    \   [2] top-level scope at /tmp/tmp78xc6cqs.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp78xc6cqs.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp78xc6cqs.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp78xc6cqs.jl:26\n\
    \   [2] top-level scope at /tmp/tmp78xc6cqs.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp78xc6cqs.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp78xc6cqs.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp78xc6cqs.jl:26\n\
    \   [2] top-level scope at /tmp/tmp78xc6cqs.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp78xc6cqs.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp78xc6cqs.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp78xc6cqs.jl:26\n\
    \   [2] top-level scope at /tmp/tmp78xc6cqs.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp78xc6cqs.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp78xc6cqs.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp78xc6cqs.jl:26\n\
    \   [2] top-level scope at /tmp/tmp78xc6cqs.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp78xc6cqs.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp78xc6cqs.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp78xc6cqs.jl:26\n\
    \   [2] top-level scope at /tmp/tmp78xc6cqs.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp78xc6cqs.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp78xc6cqs.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe3u0t_og.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpe3u0t_og.jl:26\n   [2] top-level scope at /tmp/tmpe3u0t_og.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe3u0t_og.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpe3u0t_og.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpe3u0t_og.jl:26\n\
    \   [2] top-level scope at /tmp/tmpe3u0t_og.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe3u0t_og.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpe3u0t_og.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpe3u0t_og.jl:26\n\
    \   [2] top-level scope at /tmp/tmpe3u0t_og.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe3u0t_og.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpe3u0t_og.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpe3u0t_og.jl:26\n\
    \   [2] top-level scope at /tmp/tmpe3u0t_og.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe3u0t_og.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpe3u0t_og.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpe3u0t_og.jl:26\n\
    \   [2] top-level scope at /tmp/tmpe3u0t_og.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe3u0t_og.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpe3u0t_og.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpe3u0t_og.jl:26\n\
    \   [2] top-level scope at /tmp/tmpe3u0t_og.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe3u0t_og.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpe3u0t_og.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpe3u0t_og.jl:26\n\
    \   [2] top-level scope at /tmp/tmpe3u0t_og.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe3u0t_og.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe3u0t_og.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    start =\
    \ max(interval1[1], interval2[1])\n    stop = min(interval1[2], interval2[2])\n\
    \    if start == stop\n        return \"NO\"\n    end\n    if isprime(stop - start\
    \ + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1,\
    \ 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp0ozlxv0q.jl:41\\n  Test threw\
    \ exception\\n  Expression: candidate((-1, 1), (0, 4)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmp0ozlxv0q.jl:29\\n   [2] top-level scope at\
    \ /tmp/tmp0ozlxv0q.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0ozlxv0q.jl:39\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0ozlxv0q.jl:42\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp0ozlxv0q.jl:29\\\
    n   [2] top-level scope at /tmp/tmp0ozlxv0q.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0ozlxv0q.jl:39\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0ozlxv0q.jl:43\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp0ozlxv0q.jl:29\\\
    n   [2] top-level scope at /tmp/tmp0ozlxv0q.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0ozlxv0q.jl:39\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp0ozlxv0q.jl:46\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp0ozlxv0q.jl:29\\\
    n   [2] top-level scope at /tmp/tmp0ozlxv0q.jl:46\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp0ozlxv0q.jl:39\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    4      4      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxn2nds5_.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpxn2nds5_.jl:26\n   [2] top-level scope at /tmp/tmpxn2nds5_.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxn2nds5_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxn2nds5_.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxn2nds5_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxn2nds5_.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxn2nds5_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxn2nds5_.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxn2nds5_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxn2nds5_.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxn2nds5_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxn2nds5_.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxn2nds5_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxn2nds5_.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxn2nds5_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxn2nds5_.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxn2nds5_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxn2nds5_.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxn2nds5_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxn2nds5_.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxn2nds5_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxn2nds5_.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxn2nds5_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxn2nds5_.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxn2nds5_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxn2nds5_.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxn2nds5_.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxn2nds5_.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpioaepeu4.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpioaepeu4.jl:26\n   [2] top-level scope at /tmp/tmpioaepeu4.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpioaepeu4.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpioaepeu4.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpioaepeu4.jl:26\n\
    \   [2] top-level scope at /tmp/tmpioaepeu4.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpioaepeu4.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpioaepeu4.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpioaepeu4.jl:26\n\
    \   [2] top-level scope at /tmp/tmpioaepeu4.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpioaepeu4.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpioaepeu4.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpioaepeu4.jl:26\n\
    \   [2] top-level scope at /tmp/tmpioaepeu4.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpioaepeu4.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpioaepeu4.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpioaepeu4.jl:26\n\
    \   [2] top-level scope at /tmp/tmpioaepeu4.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpioaepeu4.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpioaepeu4.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpioaepeu4.jl:26\n\
    \   [2] top-level scope at /tmp/tmpioaepeu4.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpioaepeu4.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpioaepeu4.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpioaepeu4.jl:26\n\
    \   [2] top-level scope at /tmp/tmpioaepeu4.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpioaepeu4.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpioaepeu4.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppziorz09.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmppziorz09.jl:26\n   [2] top-level scope at /tmp/tmppziorz09.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppziorz09.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmppziorz09.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppziorz09.jl:26\n\
    \   [2] top-level scope at /tmp/tmppziorz09.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppziorz09.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmppziorz09.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppziorz09.jl:26\n\
    \   [2] top-level scope at /tmp/tmppziorz09.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppziorz09.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmppziorz09.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppziorz09.jl:26\n\
    \   [2] top-level scope at /tmp/tmppziorz09.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppziorz09.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmppziorz09.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppziorz09.jl:26\n\
    \   [2] top-level scope at /tmp/tmppziorz09.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppziorz09.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmppziorz09.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppziorz09.jl:26\n\
    \   [2] top-level scope at /tmp/tmppziorz09.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppziorz09.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmppziorz09.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppziorz09.jl:26\n\
    \   [2] top-level scope at /tmp/tmppziorz09.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppziorz09.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppziorz09.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjhalhq4_.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpjhalhq4_.jl:26\n   [2] top-level scope at /tmp/tmpjhalhq4_.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjhalhq4_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpjhalhq4_.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjhalhq4_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjhalhq4_.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjhalhq4_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpjhalhq4_.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjhalhq4_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjhalhq4_.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjhalhq4_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpjhalhq4_.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjhalhq4_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjhalhq4_.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjhalhq4_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpjhalhq4_.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjhalhq4_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjhalhq4_.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjhalhq4_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpjhalhq4_.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjhalhq4_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjhalhq4_.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjhalhq4_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpjhalhq4_.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjhalhq4_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjhalhq4_.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjhalhq4_.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjhalhq4_.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpcn9b44hq.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpcn9b44hq.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpcn9b44hq.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcn9b44hq.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcn9b44hq.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcn9b44hq.jl:26\\\
    n   [2] top-level scope at /tmp/tmpcn9b44hq.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcn9b44hq.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcn9b44hq.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcn9b44hq.jl:26\\\
    n   [2] top-level scope at /tmp/tmpcn9b44hq.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcn9b44hq.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcn9b44hq.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcn9b44hq.jl:26\\\
    n   [2] top-level scope at /tmp/tmpcn9b44hq.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcn9b44hq.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcn9b44hq.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcn9b44hq.jl:26\\\
    n   [2] top-level scope at /tmp/tmpcn9b44hq.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcn9b44hq.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcn9b44hq.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcn9b44hq.jl:26\\\
    n   [2] top-level scope at /tmp/tmpcn9b44hq.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcn9b44hq.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpcn9b44hq.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcn9b44hq.jl:26\\\
    n   [2] top-level scope at /tmp/tmpcn9b44hq.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpcn9b44hq.jl:36\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8_wga9x8.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp8_wga9x8.jl:26\n   [2] top-level scope at /tmp/tmp8_wga9x8.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8_wga9x8.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp8_wga9x8.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8_wga9x8.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8_wga9x8.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8_wga9x8.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp8_wga9x8.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8_wga9x8.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8_wga9x8.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8_wga9x8.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp8_wga9x8.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8_wga9x8.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8_wga9x8.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8_wga9x8.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp8_wga9x8.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8_wga9x8.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8_wga9x8.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8_wga9x8.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp8_wga9x8.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8_wga9x8.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8_wga9x8.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8_wga9x8.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp8_wga9x8.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8_wga9x8.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8_wga9x8.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8_wga9x8.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8_wga9x8.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    start =\
    \ max(interval1[1], interval2[1])\n    stop = min(interval1[2], interval2[2])\n\
    \    if start == stop\n        return \"NO\"\n    end\n    if isprime(stop - start\
    \ + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1,\
    \ 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmplhwfir9u.jl:41\\n  Test threw\
    \ exception\\n  Expression: candidate((-1, 1), (0, 4)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmplhwfir9u.jl:29\\n   [2] top-level scope at\
    \ /tmp/tmplhwfir9u.jl:41\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmplhwfir9u.jl:39\\n  \\ntest set: Error During\
    \ Test at /tmp/tmplhwfir9u.jl:42\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmplhwfir9u.jl:29\\\
    n   [2] top-level scope at /tmp/tmplhwfir9u.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmplhwfir9u.jl:39\\n  \\ntest set: Error During\
    \ Test at /tmp/tmplhwfir9u.jl:43\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmplhwfir9u.jl:29\\\
    n   [2] top-level scope at /tmp/tmplhwfir9u.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmplhwfir9u.jl:39\\n  \\ntest set: Error During\
    \ Test at /tmp/tmplhwfir9u.jl:46\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmplhwfir9u.jl:29\\\
    n   [2] top-level scope at /tmp/tmplhwfir9u.jl:46\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmplhwfir9u.jl:39\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    4      4      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpscbvm3iz.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpscbvm3iz.jl:26\n   [2] top-level scope at /tmp/tmpscbvm3iz.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpscbvm3iz.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpscbvm3iz.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpscbvm3iz.jl:26\n\
    \   [2] top-level scope at /tmp/tmpscbvm3iz.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpscbvm3iz.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpscbvm3iz.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpscbvm3iz.jl:26\n\
    \   [2] top-level scope at /tmp/tmpscbvm3iz.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpscbvm3iz.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpscbvm3iz.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpscbvm3iz.jl:26\n\
    \   [2] top-level scope at /tmp/tmpscbvm3iz.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpscbvm3iz.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpscbvm3iz.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpscbvm3iz.jl:26\n\
    \   [2] top-level scope at /tmp/tmpscbvm3iz.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpscbvm3iz.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpscbvm3iz.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpscbvm3iz.jl:26\n\
    \   [2] top-level scope at /tmp/tmpscbvm3iz.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpscbvm3iz.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpscbvm3iz.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpscbvm3iz.jl:26\n\
    \   [2] top-level scope at /tmp/tmpscbvm3iz.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpscbvm3iz.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpscbvm3iz.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpyugcg4m0.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpyugcg4m0.jl:26\n   [2] top-level scope at /tmp/tmpyugcg4m0.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyugcg4m0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyugcg4m0.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyugcg4m0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyugcg4m0.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyugcg4m0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyugcg4m0.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyugcg4m0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyugcg4m0.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyugcg4m0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyugcg4m0.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyugcg4m0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyugcg4m0.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyugcg4m0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyugcg4m0.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyugcg4m0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyugcg4m0.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyugcg4m0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyugcg4m0.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyugcg4m0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyugcg4m0.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyugcg4m0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpyugcg4m0.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpyugcg4m0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpyugcg4m0.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpyugcg4m0.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyugcg4m0.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpq724rcjc.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpq724rcjc.jl:26\n   [2] top-level scope at /tmp/tmpq724rcjc.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq724rcjc.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpq724rcjc.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpq724rcjc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpq724rcjc.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq724rcjc.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpq724rcjc.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpq724rcjc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpq724rcjc.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq724rcjc.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpq724rcjc.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpq724rcjc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpq724rcjc.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq724rcjc.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpq724rcjc.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpq724rcjc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpq724rcjc.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq724rcjc.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpq724rcjc.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpq724rcjc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpq724rcjc.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq724rcjc.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpq724rcjc.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpq724rcjc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpq724rcjc.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpq724rcjc.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq724rcjc.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    if interval1[1]\
    \ <= interval2[1]\n        start = interval2[1]\n    else\n        start = interval1[1]\n\
    \    end\n    if interval1[2] <= interval2[2]\n        end_ = interval1[2]\n \
    \   else\n        end_ = interval2[2]\n    end\n    if end_ - start == 1\n   \
    \     return \"NO\"\n    end\n    if isprime(end_ - start)\n        return \"\
    YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t\
    @test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1), (-5,\
    \ 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpqtd_ldnp.jl:48\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpqtd_ldnp.jl:37\n   [2] top-level scope at /tmp/tmpqtd_ldnp.jl:48\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqtd_ldnp.jl:47\n  \ntest set: Error During\
    \ Test at /tmp/tmpqtd_ldnp.jl:50\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpqtd_ldnp.jl:37\n\
    \   [2] top-level scope at /tmp/tmpqtd_ldnp.jl:50\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqtd_ldnp.jl:47\n  \ntest set: Error During\
    \ Test at /tmp/tmpqtd_ldnp.jl:51\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpqtd_ldnp.jl:37\n\
    \   [2] top-level scope at /tmp/tmpqtd_ldnp.jl:51\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqtd_ldnp.jl:47\n  \ntest set: Error During\
    \ Test at /tmp/tmpqtd_ldnp.jl:52\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpqtd_ldnp.jl:37\n\
    \   [2] top-level scope at /tmp/tmpqtd_ldnp.jl:52\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqtd_ldnp.jl:47\n  \ntest set: Error During\
    \ Test at /tmp/tmpqtd_ldnp.jl:55\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpqtd_ldnp.jl:37\n\
    \   [2] top-level scope at /tmp/tmpqtd_ldnp.jl:55\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpqtd_ldnp.jl:47\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    3      5      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 0 failed, 5 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqtd_ldnp.jl:45\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3kj0fw0b.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp3kj0fw0b.jl:26\n   [2] top-level scope at /tmp/tmp3kj0fw0b.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3kj0fw0b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3kj0fw0b.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3kj0fw0b.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3kj0fw0b.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3kj0fw0b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3kj0fw0b.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3kj0fw0b.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3kj0fw0b.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3kj0fw0b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3kj0fw0b.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3kj0fw0b.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3kj0fw0b.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3kj0fw0b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3kj0fw0b.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3kj0fw0b.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3kj0fw0b.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3kj0fw0b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3kj0fw0b.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3kj0fw0b.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3kj0fw0b.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3kj0fw0b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3kj0fw0b.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3kj0fw0b.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3kj0fw0b.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3kj0fw0b.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3kj0fw0b.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxmjiv8r6.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpxmjiv8r6.jl:26\n   [2] top-level scope at /tmp/tmpxmjiv8r6.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxmjiv8r6.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxmjiv8r6.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxmjiv8r6.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxmjiv8r6.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxmjiv8r6.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxmjiv8r6.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxmjiv8r6.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxmjiv8r6.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxmjiv8r6.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxmjiv8r6.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxmjiv8r6.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxmjiv8r6.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxmjiv8r6.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxmjiv8r6.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxmjiv8r6.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxmjiv8r6.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxmjiv8r6.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxmjiv8r6.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxmjiv8r6.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxmjiv8r6.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxmjiv8r6.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxmjiv8r6.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxmjiv8r6.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxmjiv8r6.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxmjiv8r6.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxmjiv8r6.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp96ytv_nc.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp96ytv_nc.jl:26\n   [2] top-level scope at /tmp/tmp96ytv_nc.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp96ytv_nc.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp96ytv_nc.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp96ytv_nc.jl:26\n\
    \   [2] top-level scope at /tmp/tmp96ytv_nc.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp96ytv_nc.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp96ytv_nc.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp96ytv_nc.jl:26\n\
    \   [2] top-level scope at /tmp/tmp96ytv_nc.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp96ytv_nc.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp96ytv_nc.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp96ytv_nc.jl:26\n\
    \   [2] top-level scope at /tmp/tmp96ytv_nc.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp96ytv_nc.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp96ytv_nc.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp96ytv_nc.jl:26\n\
    \   [2] top-level scope at /tmp/tmp96ytv_nc.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp96ytv_nc.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp96ytv_nc.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp96ytv_nc.jl:26\n\
    \   [2] top-level scope at /tmp/tmp96ytv_nc.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp96ytv_nc.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp96ytv_nc.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp96ytv_nc.jl:26\n\
    \   [2] top-level scope at /tmp/tmp96ytv_nc.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp96ytv_nc.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp96ytv_nc.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp29fwndap.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmp29fwndap.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmp29fwndap.jl:33\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp29fwndap.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp29fwndap.jl:34\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp29fwndap.jl:26\\\
    n   [2] top-level scope at /tmp/tmp29fwndap.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp29fwndap.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp29fwndap.jl:35\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp29fwndap.jl:26\\\
    n   [2] top-level scope at /tmp/tmp29fwndap.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp29fwndap.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp29fwndap.jl:36\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp29fwndap.jl:26\\\
    n   [2] top-level scope at /tmp/tmp29fwndap.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp29fwndap.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp29fwndap.jl:37\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp29fwndap.jl:26\\\
    n   [2] top-level scope at /tmp/tmp29fwndap.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp29fwndap.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp29fwndap.jl:39\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp29fwndap.jl:26\\\
    n   [2] top-level scope at /tmp/tmp29fwndap.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp29fwndap.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp29fwndap.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp29fwndap.jl:26\\\
    n   [2] top-level scope at /tmp/tmp29fwndap.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp29fwndap.jl:32\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if start == finish\n        return\
    \ \"YES\"\n    end\n    for i in 2:finish-1\n        if (finish - start) % i ==\
    \ 0\n            return \"NO\"\n        end\n    end\n    return \"YES\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1,\
    \ 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy34wi84p.jl:41\n  Expression: candidate((1,\
    \ 2), (2, 3)) == \"NO\"\n   Evaluated: \"YES\" == \"NO\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpy34wi84p.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy34wi84p.jl:40\ntest set: Test Failed at /tmp/tmpy34wi84p.jl:42\n\
    \  Expression: candidate((-1, 1), (0, 4)) == \"NO\"\n   Evaluated: \"YES\" ==\
    \ \"NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpy34wi84p.jl:42\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy34wi84p.jl:40\ntest set: Test Failed at /tmp/tmpy34wi84p.jl:45\n\
    \  Expression: candidate((-11, 2), (-1, -1)) == \"NO\"\n   Evaluated: \"YES\"\
    \ == \"NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpy34wi84p.jl:45\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy34wi84p.jl:40\ntest set: Test Failed at /tmp/tmpy34wi84p.jl:47\n\
    \  Expression: candidate((1, 2), (1, 2)) == \"NO\"\n   Evaluated: \"YES\" == \"\
    NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpy34wi84p.jl:47\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy34wi84p.jl:40\ntest set: Test Failed at /tmp/tmpy34wi84p.jl:48\n\
    \  Expression: candidate((-2, -2), (-3, -2)) == \"NO\"\n   Evaluated: \"YES\"\
    \ == \"NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpy34wi84p.jl:48\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpy34wi84p.jl:40\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     5      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy34wi84p.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpes7v17ov.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpes7v17ov.jl:26\n   [2] top-level scope at /tmp/tmpes7v17ov.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpes7v17ov.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpes7v17ov.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpes7v17ov.jl:26\n\
    \   [2] top-level scope at /tmp/tmpes7v17ov.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpes7v17ov.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpes7v17ov.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpes7v17ov.jl:26\n\
    \   [2] top-level scope at /tmp/tmpes7v17ov.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpes7v17ov.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpes7v17ov.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpes7v17ov.jl:26\n\
    \   [2] top-level scope at /tmp/tmpes7v17ov.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpes7v17ov.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpes7v17ov.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpes7v17ov.jl:26\n\
    \   [2] top-level scope at /tmp/tmpes7v17ov.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpes7v17ov.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpes7v17ov.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpes7v17ov.jl:26\n\
    \   [2] top-level scope at /tmp/tmpes7v17ov.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpes7v17ov.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpes7v17ov.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpes7v17ov.jl:26\n\
    \   [2] top-level scope at /tmp/tmpes7v17ov.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpes7v17ov.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpes7v17ov.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptjr9i_18.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmptjr9i_18.jl:26\n   [2] top-level scope at /tmp/tmptjr9i_18.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptjr9i_18.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmptjr9i_18.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptjr9i_18.jl:26\n\
    \   [2] top-level scope at /tmp/tmptjr9i_18.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptjr9i_18.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmptjr9i_18.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptjr9i_18.jl:26\n\
    \   [2] top-level scope at /tmp/tmptjr9i_18.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptjr9i_18.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmptjr9i_18.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptjr9i_18.jl:26\n\
    \   [2] top-level scope at /tmp/tmptjr9i_18.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptjr9i_18.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmptjr9i_18.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptjr9i_18.jl:26\n\
    \   [2] top-level scope at /tmp/tmptjr9i_18.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptjr9i_18.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmptjr9i_18.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptjr9i_18.jl:26\n\
    \   [2] top-level scope at /tmp/tmptjr9i_18.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptjr9i_18.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmptjr9i_18.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptjr9i_18.jl:26\n\
    \   [2] top-level scope at /tmp/tmptjr9i_18.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptjr9i_18.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptjr9i_18.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxhljs33n.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpxhljs33n.jl:26\n   [2] top-level scope at /tmp/tmpxhljs33n.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxhljs33n.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxhljs33n.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxhljs33n.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxhljs33n.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxhljs33n.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxhljs33n.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxhljs33n.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxhljs33n.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxhljs33n.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxhljs33n.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxhljs33n.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxhljs33n.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxhljs33n.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxhljs33n.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxhljs33n.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxhljs33n.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxhljs33n.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxhljs33n.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxhljs33n.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxhljs33n.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxhljs33n.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxhljs33n.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxhljs33n.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxhljs33n.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxhljs33n.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxhljs33n.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl6axpk7h.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpl6axpk7h.jl:26\n   [2] top-level scope at /tmp/tmpl6axpk7h.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl6axpk7h.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl6axpk7h.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl6axpk7h.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl6axpk7h.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl6axpk7h.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl6axpk7h.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl6axpk7h.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl6axpk7h.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl6axpk7h.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl6axpk7h.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl6axpk7h.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl6axpk7h.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl6axpk7h.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl6axpk7h.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl6axpk7h.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl6axpk7h.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl6axpk7h.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl6axpk7h.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl6axpk7h.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl6axpk7h.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl6axpk7h.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl6axpk7h.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl6axpk7h.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl6axpk7h.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl6axpk7h.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl6axpk7h.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiakqqe0e.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpiakqqe0e.jl:26\n   [2] top-level scope at /tmp/tmpiakqqe0e.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiakqqe0e.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpiakqqe0e.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpiakqqe0e.jl:26\n\
    \   [2] top-level scope at /tmp/tmpiakqqe0e.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiakqqe0e.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpiakqqe0e.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpiakqqe0e.jl:26\n\
    \   [2] top-level scope at /tmp/tmpiakqqe0e.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiakqqe0e.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpiakqqe0e.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpiakqqe0e.jl:26\n\
    \   [2] top-level scope at /tmp/tmpiakqqe0e.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiakqqe0e.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpiakqqe0e.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpiakqqe0e.jl:26\n\
    \   [2] top-level scope at /tmp/tmpiakqqe0e.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiakqqe0e.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpiakqqe0e.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpiakqqe0e.jl:26\n\
    \   [2] top-level scope at /tmp/tmpiakqqe0e.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiakqqe0e.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpiakqqe0e.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpiakqqe0e.jl:26\n\
    \   [2] top-level scope at /tmp/tmpiakqqe0e.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiakqqe0e.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiakqqe0e.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7ymmzp1s.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp7ymmzp1s.jl:26\n   [2] top-level scope at /tmp/tmp7ymmzp1s.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ymmzp1s.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ymmzp1s.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7ymmzp1s.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7ymmzp1s.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ymmzp1s.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ymmzp1s.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7ymmzp1s.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7ymmzp1s.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ymmzp1s.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ymmzp1s.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7ymmzp1s.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7ymmzp1s.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ymmzp1s.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ymmzp1s.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7ymmzp1s.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7ymmzp1s.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ymmzp1s.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ymmzp1s.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7ymmzp1s.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7ymmzp1s.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ymmzp1s.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ymmzp1s.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7ymmzp1s.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7ymmzp1s.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ymmzp1s.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ymmzp1s.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnf3nbbr4.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpnf3nbbr4.jl:26\n   [2] top-level scope at /tmp/tmpnf3nbbr4.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnf3nbbr4.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpnf3nbbr4.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnf3nbbr4.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnf3nbbr4.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnf3nbbr4.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpnf3nbbr4.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnf3nbbr4.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnf3nbbr4.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnf3nbbr4.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpnf3nbbr4.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnf3nbbr4.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnf3nbbr4.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnf3nbbr4.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpnf3nbbr4.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnf3nbbr4.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnf3nbbr4.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnf3nbbr4.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpnf3nbbr4.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnf3nbbr4.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnf3nbbr4.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnf3nbbr4.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpnf3nbbr4.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnf3nbbr4.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnf3nbbr4.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnf3nbbr4.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnf3nbbr4.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpu1i9i649.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpu1i9i649.jl:26\n   [2] top-level scope at /tmp/tmpu1i9i649.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu1i9i649.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpu1i9i649.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpu1i9i649.jl:26\n\
    \   [2] top-level scope at /tmp/tmpu1i9i649.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu1i9i649.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpu1i9i649.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpu1i9i649.jl:26\n\
    \   [2] top-level scope at /tmp/tmpu1i9i649.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu1i9i649.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpu1i9i649.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpu1i9i649.jl:26\n\
    \   [2] top-level scope at /tmp/tmpu1i9i649.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu1i9i649.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpu1i9i649.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpu1i9i649.jl:26\n\
    \   [2] top-level scope at /tmp/tmpu1i9i649.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu1i9i649.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpu1i9i649.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpu1i9i649.jl:26\n\
    \   [2] top-level scope at /tmp/tmpu1i9i649.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu1i9i649.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpu1i9i649.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpu1i9i649.jl:26\n\
    \   [2] top-level scope at /tmp/tmpu1i9i649.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpu1i9i649.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu1i9i649.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpt_flso5x.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpt_flso5x.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpt_flso5x.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpt_flso5x.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpt_flso5x.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpt_flso5x.jl:26\\\
    n   [2] top-level scope at /tmp/tmpt_flso5x.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpt_flso5x.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpt_flso5x.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpt_flso5x.jl:26\\\
    n   [2] top-level scope at /tmp/tmpt_flso5x.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpt_flso5x.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpt_flso5x.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpt_flso5x.jl:26\\\
    n   [2] top-level scope at /tmp/tmpt_flso5x.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpt_flso5x.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpt_flso5x.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpt_flso5x.jl:26\\\
    n   [2] top-level scope at /tmp/tmpt_flso5x.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpt_flso5x.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpt_flso5x.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpt_flso5x.jl:26\\\
    n   [2] top-level scope at /tmp/tmpt_flso5x.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpt_flso5x.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpt_flso5x.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpt_flso5x.jl:26\\\
    n   [2] top-level scope at /tmp/tmpt_flso5x.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpt_flso5x.jl:36\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpht6amfu6.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpht6amfu6.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpht6amfu6.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpht6amfu6.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpht6amfu6.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpht6amfu6.jl:26\\\
    n   [2] top-level scope at /tmp/tmpht6amfu6.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpht6amfu6.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpht6amfu6.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpht6amfu6.jl:26\\\
    n   [2] top-level scope at /tmp/tmpht6amfu6.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpht6amfu6.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpht6amfu6.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpht6amfu6.jl:26\\\
    n   [2] top-level scope at /tmp/tmpht6amfu6.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpht6amfu6.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpht6amfu6.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpht6amfu6.jl:26\\\
    n   [2] top-level scope at /tmp/tmpht6amfu6.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpht6amfu6.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpht6amfu6.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpht6amfu6.jl:26\\\
    n   [2] top-level scope at /tmp/tmpht6amfu6.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpht6amfu6.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpht6amfu6.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpht6amfu6.jl:26\\\
    n   [2] top-level scope at /tmp/tmpht6amfu6.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpht6amfu6.jl:36\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7cq9980o.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp7cq9980o.jl:26\n   [2] top-level scope at /tmp/tmp7cq9980o.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7cq9980o.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp7cq9980o.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7cq9980o.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7cq9980o.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7cq9980o.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp7cq9980o.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7cq9980o.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7cq9980o.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7cq9980o.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp7cq9980o.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7cq9980o.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7cq9980o.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7cq9980o.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp7cq9980o.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7cq9980o.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7cq9980o.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7cq9980o.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp7cq9980o.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7cq9980o.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7cq9980o.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7cq9980o.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp7cq9980o.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7cq9980o.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7cq9980o.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7cq9980o.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7cq9980o.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcbnhwifa.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpcbnhwifa.jl:26\n   [2] top-level scope at /tmp/tmpcbnhwifa.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcbnhwifa.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpcbnhwifa.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcbnhwifa.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcbnhwifa.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcbnhwifa.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpcbnhwifa.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcbnhwifa.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcbnhwifa.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcbnhwifa.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpcbnhwifa.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcbnhwifa.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcbnhwifa.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcbnhwifa.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpcbnhwifa.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcbnhwifa.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcbnhwifa.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcbnhwifa.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpcbnhwifa.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcbnhwifa.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcbnhwifa.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcbnhwifa.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpcbnhwifa.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcbnhwifa.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcbnhwifa.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcbnhwifa.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcbnhwifa.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjzwrcxk4.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpjzwrcxk4.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpjzwrcxk4.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjzwrcxk4.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjzwrcxk4.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjzwrcxk4.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjzwrcxk4.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjzwrcxk4.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjzwrcxk4.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjzwrcxk4.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjzwrcxk4.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjzwrcxk4.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjzwrcxk4.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjzwrcxk4.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjzwrcxk4.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjzwrcxk4.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjzwrcxk4.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjzwrcxk4.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjzwrcxk4.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjzwrcxk4.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjzwrcxk4.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjzwrcxk4.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjzwrcxk4.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjzwrcxk4.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjzwrcxk4.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjzwrcxk4.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjzwrcxk4.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjzwrcxk4.jl:36\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5oeh8zqn.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp5oeh8zqn.jl:26\n   [2] top-level scope at /tmp/tmp5oeh8zqn.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeh8zqn.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp5oeh8zqn.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5oeh8zqn.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5oeh8zqn.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeh8zqn.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp5oeh8zqn.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5oeh8zqn.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5oeh8zqn.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeh8zqn.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp5oeh8zqn.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5oeh8zqn.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5oeh8zqn.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeh8zqn.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp5oeh8zqn.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5oeh8zqn.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5oeh8zqn.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeh8zqn.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp5oeh8zqn.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5oeh8zqn.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5oeh8zqn.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeh8zqn.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp5oeh8zqn.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5oeh8zqn.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5oeh8zqn.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5oeh8zqn.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5oeh8zqn.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcje700qq.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpcje700qq.jl:26\n   [2] top-level scope at /tmp/tmpcje700qq.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcje700qq.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcje700qq.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcje700qq.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcje700qq.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcje700qq.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcje700qq.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcje700qq.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcje700qq.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcje700qq.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcje700qq.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcje700qq.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcje700qq.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcje700qq.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcje700qq.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcje700qq.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcje700qq.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcje700qq.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcje700qq.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcje700qq.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcje700qq.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcje700qq.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcje700qq.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcje700qq.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcje700qq.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcje700qq.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcje700qq.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm9qv2962.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpm9qv2962.jl:26\n   [2] top-level scope at /tmp/tmpm9qv2962.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm9qv2962.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpm9qv2962.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpm9qv2962.jl:26\n\
    \   [2] top-level scope at /tmp/tmpm9qv2962.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm9qv2962.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpm9qv2962.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpm9qv2962.jl:26\n\
    \   [2] top-level scope at /tmp/tmpm9qv2962.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm9qv2962.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpm9qv2962.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpm9qv2962.jl:26\n\
    \   [2] top-level scope at /tmp/tmpm9qv2962.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm9qv2962.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpm9qv2962.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpm9qv2962.jl:26\n\
    \   [2] top-level scope at /tmp/tmpm9qv2962.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm9qv2962.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpm9qv2962.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpm9qv2962.jl:26\n\
    \   [2] top-level scope at /tmp/tmpm9qv2962.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm9qv2962.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpm9qv2962.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpm9qv2962.jl:26\n\
    \   [2] top-level scope at /tmp/tmpm9qv2962.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm9qv2962.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm9qv2962.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if start == finish\n        return\
    \ \"YES\"\n    end\n    for i in 2:finish-1\n        if start % i == 0\n     \
    \       return \"NO\"\n        end\n    end\n    return \"YES\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3))\
    \ == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbvkvq3pn.jl:41\n  Expression: candidate((1,\
    \ 2), (2, 3)) == \"NO\"\n   Evaluated: \"YES\" == \"NO\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbvkvq3pn.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbvkvq3pn.jl:40\ntest set: Test Failed at /tmp/tmpbvkvq3pn.jl:42\n\
    \  Expression: candidate((-1, 1), (0, 4)) == \"NO\"\n   Evaluated: \"YES\" ==\
    \ \"NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbvkvq3pn.jl:42\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbvkvq3pn.jl:40\ntest set: Test Failed at /tmp/tmpbvkvq3pn.jl:45\n\
    \  Expression: candidate((-11, 2), (-1, -1)) == \"NO\"\n   Evaluated: \"YES\"\
    \ == \"NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbvkvq3pn.jl:45\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbvkvq3pn.jl:40\ntest set: Test Failed at /tmp/tmpbvkvq3pn.jl:47\n\
    \  Expression: candidate((1, 2), (1, 2)) == \"NO\"\n   Evaluated: \"YES\" == \"\
    NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbvkvq3pn.jl:47\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbvkvq3pn.jl:40\ntest set: Test Failed at /tmp/tmpbvkvq3pn.jl:48\n\
    \  Expression: candidate((-2, -2), (-3, -2)) == \"NO\"\n   Evaluated: \"YES\"\
    \ == \"NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbvkvq3pn.jl:48\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbvkvq3pn.jl:40\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     5      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbvkvq3pn.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] <= interval2[1]\n\
    \        start = interval2[1]\n    else\n        start = interval1[1]\n    end\n\
    \    if interval1[2] <= interval2[2]\n        end_ = interval1[2]\n    else\n\
    \        end_ = interval2[2]\n    end\n    if start > end_\n        return \"\
    NO\"\n    end\n    if isprime(end_ - start + 1)\n        return \"YES\"\n    else\n\
    \        return \"NO\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1,\
    \ 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t\
    @test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1,\
    \ -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4_spmttj.jl:45\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp4_spmttj.jl:34\n   [2] top-level scope at /tmp/tmp4_spmttj.jl:45\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4_spmttj.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmp4_spmttj.jl:46\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4_spmttj.jl:34\n\
    \   [2] top-level scope at /tmp/tmp4_spmttj.jl:46\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4_spmttj.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmp4_spmttj.jl:47\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4_spmttj.jl:34\n\
    \   [2] top-level scope at /tmp/tmp4_spmttj.jl:47\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4_spmttj.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmp4_spmttj.jl:48\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4_spmttj.jl:34\n\
    \   [2] top-level scope at /tmp/tmp4_spmttj.jl:48\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4_spmttj.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmp4_spmttj.jl:49\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4_spmttj.jl:34\n\
    \   [2] top-level scope at /tmp/tmp4_spmttj.jl:49\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4_spmttj.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmp4_spmttj.jl:51\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4_spmttj.jl:34\n\
    \   [2] top-level scope at /tmp/tmp4_spmttj.jl:51\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4_spmttj.jl:44\n  \ntest set: Error During\
    \ Test at /tmp/tmp4_spmttj.jl:52\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4_spmttj.jl:34\n\
    \   [2] top-level scope at /tmp/tmp4_spmttj.jl:52\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4_spmttj.jl:44\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4_spmttj.jl:42\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if start == finish\n        return\
    \ \"YES\"\n    end\n    if isprime(finish - start + 1)\n        return \"YES\"\
    \n    end\n    return \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1,\
    \ 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t\
    @test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1,\
    \ -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbn20q7j6.jl:39\n  Expression: candidate((1,\
    \ 2), (2, 3)) == \"NO\"\n   Evaluated: \"YES\" == \"NO\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpbn20q7j6.jl:39\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbn20q7j6.jl:38\ntest set: Error During Test at\
    \ /tmp/tmpbn20q7j6.jl:40\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbn20q7j6.jl:29\n\
    \   [2] top-level scope at /tmp/tmpbn20q7j6.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbn20q7j6.jl:38\n  \ntest set: Error During\
    \ Test at /tmp/tmpbn20q7j6.jl:41\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbn20q7j6.jl:29\n\
    \   [2] top-level scope at /tmp/tmpbn20q7j6.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbn20q7j6.jl:38\n  \ntest set: Error During\
    \ Test at /tmp/tmpbn20q7j6.jl:42\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbn20q7j6.jl:29\n\
    \   [2] top-level scope at /tmp/tmpbn20q7j6.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbn20q7j6.jl:38\n  \ntest set: Test Failed at\
    \ /tmp/tmpbn20q7j6.jl:43\n  Expression: candidate((-11, 2), (-1, -1)) == \"NO\"\
    \n   Evaluated: \"YES\" == \"NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbn20q7j6.jl:43\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbn20q7j6.jl:38\ntest set: Error During Test at\
    \ /tmp/tmpbn20q7j6.jl:45\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbn20q7j6.jl:29\n\
    \   [2] top-level scope at /tmp/tmpbn20q7j6.jl:45\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpbn20q7j6.jl:38\n  \ntest set: Test Failed at\
    \ /tmp/tmpbn20q7j6.jl:46\n  Expression: candidate((-2, -2), (-3, -2)) == \"NO\"\
    \n   Evaluated: \"YES\" == \"NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpbn20q7j6.jl:46\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpbn20q7j6.jl:38\nTest Summary: | Pass  Fail  Error\
    \  Total\ntest set      |    1     3      4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 3 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbn20q7j6.jl:36\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4iz5va1w.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp4iz5va1w.jl:26\n   [2] top-level scope at /tmp/tmp4iz5va1w.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4iz5va1w.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp4iz5va1w.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4iz5va1w.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4iz5va1w.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4iz5va1w.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp4iz5va1w.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4iz5va1w.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4iz5va1w.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4iz5va1w.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp4iz5va1w.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4iz5va1w.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4iz5va1w.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4iz5va1w.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp4iz5va1w.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4iz5va1w.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4iz5va1w.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4iz5va1w.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp4iz5va1w.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4iz5va1w.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4iz5va1w.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4iz5va1w.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp4iz5va1w.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4iz5va1w.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4iz5va1w.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4iz5va1w.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4iz5va1w.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpfek8dwbk.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpfek8dwbk.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpfek8dwbk.jl:33\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfek8dwbk.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfek8dwbk.jl:34\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpfek8dwbk.jl:26\\\
    n   [2] top-level scope at /tmp/tmpfek8dwbk.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfek8dwbk.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfek8dwbk.jl:35\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpfek8dwbk.jl:26\\\
    n   [2] top-level scope at /tmp/tmpfek8dwbk.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfek8dwbk.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfek8dwbk.jl:36\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpfek8dwbk.jl:26\\\
    n   [2] top-level scope at /tmp/tmpfek8dwbk.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfek8dwbk.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfek8dwbk.jl:37\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpfek8dwbk.jl:26\\\
    n   [2] top-level scope at /tmp/tmpfek8dwbk.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfek8dwbk.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfek8dwbk.jl:39\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpfek8dwbk.jl:26\\\
    n   [2] top-level scope at /tmp/tmpfek8dwbk.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfek8dwbk.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpfek8dwbk.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpfek8dwbk.jl:26\\\
    n   [2] top-level scope at /tmp/tmpfek8dwbk.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpfek8dwbk.jl:32\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprhja8e7v.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmprhja8e7v.jl:26\n   [2] top-level scope at /tmp/tmprhja8e7v.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprhja8e7v.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprhja8e7v.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprhja8e7v.jl:26\n\
    \   [2] top-level scope at /tmp/tmprhja8e7v.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprhja8e7v.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprhja8e7v.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprhja8e7v.jl:26\n\
    \   [2] top-level scope at /tmp/tmprhja8e7v.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprhja8e7v.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprhja8e7v.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprhja8e7v.jl:26\n\
    \   [2] top-level scope at /tmp/tmprhja8e7v.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprhja8e7v.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprhja8e7v.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprhja8e7v.jl:26\n\
    \   [2] top-level scope at /tmp/tmprhja8e7v.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprhja8e7v.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprhja8e7v.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprhja8e7v.jl:26\n\
    \   [2] top-level scope at /tmp/tmprhja8e7v.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprhja8e7v.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprhja8e7v.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprhja8e7v.jl:26\n\
    \   [2] top-level scope at /tmp/tmprhja8e7v.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprhja8e7v.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprhja8e7v.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if finish <\
    \ start\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpapbqkb9f.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpapbqkb9f.jl:26\n   [2] top-level scope at /tmp/tmpapbqkb9f.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpapbqkb9f.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpapbqkb9f.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpapbqkb9f.jl:26\n\
    \   [2] top-level scope at /tmp/tmpapbqkb9f.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpapbqkb9f.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpapbqkb9f.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpapbqkb9f.jl:26\n\
    \   [2] top-level scope at /tmp/tmpapbqkb9f.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpapbqkb9f.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpapbqkb9f.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpapbqkb9f.jl:26\n\
    \   [2] top-level scope at /tmp/tmpapbqkb9f.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpapbqkb9f.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpapbqkb9f.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpapbqkb9f.jl:26\n\
    \   [2] top-level scope at /tmp/tmpapbqkb9f.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpapbqkb9f.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpapbqkb9f.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpapbqkb9f.jl:26\n\
    \   [2] top-level scope at /tmp/tmpapbqkb9f.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpapbqkb9f.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpapbqkb9f.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpapbqkb9f.jl:26\n\
    \   [2] top-level scope at /tmp/tmpapbqkb9f.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpapbqkb9f.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpapbqkb9f.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpflh5dxat.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpflh5dxat.jl:26\n   [2] top-level scope at /tmp/tmpflh5dxat.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpflh5dxat.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpflh5dxat.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpflh5dxat.jl:26\n\
    \   [2] top-level scope at /tmp/tmpflh5dxat.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpflh5dxat.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpflh5dxat.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpflh5dxat.jl:26\n\
    \   [2] top-level scope at /tmp/tmpflh5dxat.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpflh5dxat.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpflh5dxat.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpflh5dxat.jl:26\n\
    \   [2] top-level scope at /tmp/tmpflh5dxat.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpflh5dxat.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpflh5dxat.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpflh5dxat.jl:26\n\
    \   [2] top-level scope at /tmp/tmpflh5dxat.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpflh5dxat.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpflh5dxat.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpflh5dxat.jl:26\n\
    \   [2] top-level scope at /tmp/tmpflh5dxat.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpflh5dxat.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpflh5dxat.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpflh5dxat.jl:26\n\
    \   [2] top-level scope at /tmp/tmpflh5dxat.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpflh5dxat.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpflh5dxat.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start1, end1 = interval1\n\
    \    start2, end2 = interval2\n    if start1 > end1 || start2 > end2\n       \
    \ return \"NO\"\n    end\n    if start1 > start2\n        start1, start2 = start2,\
    \ start1\n    end\n    if end1 < end2\n        end1, end2 = end2, end1\n    end\n\
    \    if start2 > end1\n        return \"NO\"\n    end\n    if start2 <= end1\n\
    \        if start2 == end1\n            return \"YES\"\n        end\n        if\
    \ start2 < end1\n            if isprime(end1 - start2 + 1)\n                return\
    \ \"YES\"\n            else\n                return \"NO\"\n            end\n\
    \        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb844pax5.jl:53\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpb844pax5.jl:40\n   [2] top-level scope at /tmp/tmpb844pax5.jl:53\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb844pax5.jl:52\n  \ntest set: Error During\
    \ Test at /tmp/tmpb844pax5.jl:54\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb844pax5.jl:40\n\
    \   [2] top-level scope at /tmp/tmpb844pax5.jl:54\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb844pax5.jl:52\n  \ntest set: Error During\
    \ Test at /tmp/tmpb844pax5.jl:55\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb844pax5.jl:40\n\
    \   [2] top-level scope at /tmp/tmpb844pax5.jl:55\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb844pax5.jl:52\n  \ntest set: Error During\
    \ Test at /tmp/tmpb844pax5.jl:56\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb844pax5.jl:40\n\
    \   [2] top-level scope at /tmp/tmpb844pax5.jl:56\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb844pax5.jl:52\n  \ntest set: Error During\
    \ Test at /tmp/tmpb844pax5.jl:57\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb844pax5.jl:40\n\
    \   [2] top-level scope at /tmp/tmpb844pax5.jl:57\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb844pax5.jl:52\n  \ntest set: Error During\
    \ Test at /tmp/tmpb844pax5.jl:58\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (3, 5)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb844pax5.jl:40\n\
    \   [2] top-level scope at /tmp/tmpb844pax5.jl:58\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb844pax5.jl:52\n  \ntest set: Error During\
    \ Test at /tmp/tmpb844pax5.jl:59\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb844pax5.jl:40\n\
    \   [2] top-level scope at /tmp/tmpb844pax5.jl:59\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb844pax5.jl:52\n  \ntest set: Test Failed at\
    \ /tmp/tmpb844pax5.jl:60\n  Expression: candidate((-2, -2), (-3, -2)) == \"NO\"\
    \n   Evaluated: \"YES\" == \"NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpb844pax5.jl:60\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpb844pax5.jl:52\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb844pax5.jl:50\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx5kds4of.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpx5kds4of.jl:26\n   [2] top-level scope at /tmp/tmpx5kds4of.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx5kds4of.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpx5kds4of.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpx5kds4of.jl:26\n\
    \   [2] top-level scope at /tmp/tmpx5kds4of.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx5kds4of.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpx5kds4of.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpx5kds4of.jl:26\n\
    \   [2] top-level scope at /tmp/tmpx5kds4of.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx5kds4of.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpx5kds4of.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpx5kds4of.jl:26\n\
    \   [2] top-level scope at /tmp/tmpx5kds4of.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx5kds4of.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpx5kds4of.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpx5kds4of.jl:26\n\
    \   [2] top-level scope at /tmp/tmpx5kds4of.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx5kds4of.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpx5kds4of.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpx5kds4of.jl:26\n\
    \   [2] top-level scope at /tmp/tmpx5kds4of.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx5kds4of.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpx5kds4of.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpx5kds4of.jl:26\n\
    \   [2] top-level scope at /tmp/tmpx5kds4of.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx5kds4of.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx5kds4of.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpd9ogv01_.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpd9ogv01_.jl:26\n   [2] top-level scope at /tmp/tmpd9ogv01_.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd9ogv01_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpd9ogv01_.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpd9ogv01_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpd9ogv01_.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd9ogv01_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpd9ogv01_.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpd9ogv01_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpd9ogv01_.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd9ogv01_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpd9ogv01_.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpd9ogv01_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpd9ogv01_.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd9ogv01_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpd9ogv01_.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpd9ogv01_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpd9ogv01_.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd9ogv01_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpd9ogv01_.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpd9ogv01_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpd9ogv01_.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd9ogv01_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpd9ogv01_.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpd9ogv01_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpd9ogv01_.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpd9ogv01_.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd9ogv01_.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprcwjomyl.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmprcwjomyl.jl:26\n   [2] top-level scope at /tmp/tmprcwjomyl.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprcwjomyl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprcwjomyl.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprcwjomyl.jl:26\n\
    \   [2] top-level scope at /tmp/tmprcwjomyl.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprcwjomyl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprcwjomyl.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprcwjomyl.jl:26\n\
    \   [2] top-level scope at /tmp/tmprcwjomyl.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprcwjomyl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprcwjomyl.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprcwjomyl.jl:26\n\
    \   [2] top-level scope at /tmp/tmprcwjomyl.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprcwjomyl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprcwjomyl.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprcwjomyl.jl:26\n\
    \   [2] top-level scope at /tmp/tmprcwjomyl.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprcwjomyl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprcwjomyl.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprcwjomyl.jl:26\n\
    \   [2] top-level scope at /tmp/tmprcwjomyl.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprcwjomyl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprcwjomyl.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprcwjomyl.jl:26\n\
    \   [2] top-level scope at /tmp/tmprcwjomyl.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprcwjomyl.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprcwjomyl.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbuu25ezn.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpbuu25ezn.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpbuu25ezn.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbuu25ezn.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbuu25ezn.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbuu25ezn.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbuu25ezn.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbuu25ezn.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbuu25ezn.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbuu25ezn.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbuu25ezn.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbuu25ezn.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbuu25ezn.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbuu25ezn.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbuu25ezn.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbuu25ezn.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbuu25ezn.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbuu25ezn.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbuu25ezn.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbuu25ezn.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbuu25ezn.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbuu25ezn.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbuu25ezn.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbuu25ezn.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbuu25ezn.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbuu25ezn.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbuu25ezn.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbuu25ezn.jl:36\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl9ra1cun.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpl9ra1cun.jl:26\n   [2] top-level scope at /tmp/tmpl9ra1cun.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl9ra1cun.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl9ra1cun.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl9ra1cun.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl9ra1cun.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl9ra1cun.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl9ra1cun.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl9ra1cun.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl9ra1cun.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl9ra1cun.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl9ra1cun.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl9ra1cun.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl9ra1cun.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl9ra1cun.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl9ra1cun.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl9ra1cun.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl9ra1cun.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl9ra1cun.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl9ra1cun.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl9ra1cun.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl9ra1cun.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl9ra1cun.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl9ra1cun.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl9ra1cun.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl9ra1cun.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl9ra1cun.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl9ra1cun.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpnqi_zbu3.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpnqi_zbu3.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpnqi_zbu3.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnqi_zbu3.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnqi_zbu3.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnqi_zbu3.jl:26\\\
    n   [2] top-level scope at /tmp/tmpnqi_zbu3.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnqi_zbu3.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnqi_zbu3.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnqi_zbu3.jl:26\\\
    n   [2] top-level scope at /tmp/tmpnqi_zbu3.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnqi_zbu3.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnqi_zbu3.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnqi_zbu3.jl:26\\\
    n   [2] top-level scope at /tmp/tmpnqi_zbu3.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnqi_zbu3.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnqi_zbu3.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnqi_zbu3.jl:26\\\
    n   [2] top-level scope at /tmp/tmpnqi_zbu3.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnqi_zbu3.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnqi_zbu3.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnqi_zbu3.jl:26\\\
    n   [2] top-level scope at /tmp/tmpnqi_zbu3.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnqi_zbu3.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpnqi_zbu3.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnqi_zbu3.jl:26\\\
    n   [2] top-level scope at /tmp/tmpnqi_zbu3.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpnqi_zbu3.jl:36\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp5jwkpehm.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp5jwkpehm.jl:26\n   [2] top-level scope at /tmp/tmp5jwkpehm.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5jwkpehm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp5jwkpehm.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5jwkpehm.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5jwkpehm.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5jwkpehm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp5jwkpehm.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5jwkpehm.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5jwkpehm.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5jwkpehm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp5jwkpehm.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5jwkpehm.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5jwkpehm.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5jwkpehm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp5jwkpehm.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5jwkpehm.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5jwkpehm.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5jwkpehm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp5jwkpehm.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5jwkpehm.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5jwkpehm.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5jwkpehm.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp5jwkpehm.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5jwkpehm.jl:26\n\
    \   [2] top-level scope at /tmp/tmp5jwkpehm.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp5jwkpehm.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5jwkpehm.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmplnw1ateb.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmplnw1ateb.jl:26\n   [2] top-level scope at /tmp/tmplnw1ateb.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnw1ateb.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmplnw1ateb.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmplnw1ateb.jl:26\n\
    \   [2] top-level scope at /tmp/tmplnw1ateb.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnw1ateb.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmplnw1ateb.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmplnw1ateb.jl:26\n\
    \   [2] top-level scope at /tmp/tmplnw1ateb.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnw1ateb.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmplnw1ateb.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmplnw1ateb.jl:26\n\
    \   [2] top-level scope at /tmp/tmplnw1ateb.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnw1ateb.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmplnw1ateb.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmplnw1ateb.jl:26\n\
    \   [2] top-level scope at /tmp/tmplnw1ateb.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnw1ateb.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmplnw1ateb.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmplnw1ateb.jl:26\n\
    \   [2] top-level scope at /tmp/tmplnw1ateb.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnw1ateb.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmplnw1ateb.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmplnw1ateb.jl:26\n\
    \   [2] top-level scope at /tmp/tmplnw1ateb.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmplnw1ateb.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplnw1ateb.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7rcvrydd.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp7rcvrydd.jl:26\n   [2] top-level scope at /tmp/tmp7rcvrydd.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7rcvrydd.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7rcvrydd.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7rcvrydd.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7rcvrydd.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7rcvrydd.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7rcvrydd.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7rcvrydd.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7rcvrydd.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7rcvrydd.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7rcvrydd.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7rcvrydd.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7rcvrydd.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7rcvrydd.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7rcvrydd.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7rcvrydd.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7rcvrydd.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7rcvrydd.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7rcvrydd.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7rcvrydd.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7rcvrydd.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7rcvrydd.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7rcvrydd.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7rcvrydd.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7rcvrydd.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7rcvrydd.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7rcvrydd.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpijsxn8yp.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpijsxn8yp.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpijsxn8yp.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpijsxn8yp.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpijsxn8yp.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpijsxn8yp.jl:26\\\
    n   [2] top-level scope at /tmp/tmpijsxn8yp.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpijsxn8yp.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpijsxn8yp.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpijsxn8yp.jl:26\\\
    n   [2] top-level scope at /tmp/tmpijsxn8yp.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpijsxn8yp.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpijsxn8yp.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpijsxn8yp.jl:26\\\
    n   [2] top-level scope at /tmp/tmpijsxn8yp.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpijsxn8yp.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpijsxn8yp.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpijsxn8yp.jl:26\\\
    n   [2] top-level scope at /tmp/tmpijsxn8yp.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpijsxn8yp.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpijsxn8yp.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpijsxn8yp.jl:26\\\
    n   [2] top-level scope at /tmp/tmpijsxn8yp.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpijsxn8yp.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpijsxn8yp.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpijsxn8yp.jl:26\\\
    n   [2] top-level scope at /tmp/tmpijsxn8yp.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpijsxn8yp.jl:36\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4985hxt7.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp4985hxt7.jl:26\n   [2] top-level scope at /tmp/tmp4985hxt7.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4985hxt7.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4985hxt7.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4985hxt7.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4985hxt7.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4985hxt7.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4985hxt7.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4985hxt7.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4985hxt7.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4985hxt7.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4985hxt7.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4985hxt7.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4985hxt7.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4985hxt7.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4985hxt7.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4985hxt7.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4985hxt7.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4985hxt7.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4985hxt7.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4985hxt7.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4985hxt7.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4985hxt7.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4985hxt7.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4985hxt7.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4985hxt7.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4985hxt7.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4985hxt7.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl5o9mr1b.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpl5o9mr1b.jl:26\n   [2] top-level scope at /tmp/tmpl5o9mr1b.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl5o9mr1b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpl5o9mr1b.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl5o9mr1b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl5o9mr1b.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl5o9mr1b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpl5o9mr1b.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl5o9mr1b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl5o9mr1b.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl5o9mr1b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpl5o9mr1b.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl5o9mr1b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl5o9mr1b.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl5o9mr1b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpl5o9mr1b.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl5o9mr1b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl5o9mr1b.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl5o9mr1b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpl5o9mr1b.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl5o9mr1b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl5o9mr1b.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl5o9mr1b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpl5o9mr1b.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl5o9mr1b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl5o9mr1b.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl5o9mr1b.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl5o9mr1b.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp034ppyae.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmp034ppyae.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmp034ppyae.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp034ppyae.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp034ppyae.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp034ppyae.jl:26\\\
    n   [2] top-level scope at /tmp/tmp034ppyae.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp034ppyae.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp034ppyae.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp034ppyae.jl:26\\\
    n   [2] top-level scope at /tmp/tmp034ppyae.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp034ppyae.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp034ppyae.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp034ppyae.jl:26\\\
    n   [2] top-level scope at /tmp/tmp034ppyae.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp034ppyae.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp034ppyae.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp034ppyae.jl:26\\\
    n   [2] top-level scope at /tmp/tmp034ppyae.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp034ppyae.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp034ppyae.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp034ppyae.jl:26\\\
    n   [2] top-level scope at /tmp/tmp034ppyae.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp034ppyae.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp034ppyae.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp034ppyae.jl:26\\\
    n   [2] top-level scope at /tmp/tmp034ppyae.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp034ppyae.jl:36\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpruawayjl.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpruawayjl.jl:26\n   [2] top-level scope at /tmp/tmpruawayjl.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpruawayjl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpruawayjl.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpruawayjl.jl:26\n\
    \   [2] top-level scope at /tmp/tmpruawayjl.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpruawayjl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpruawayjl.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpruawayjl.jl:26\n\
    \   [2] top-level scope at /tmp/tmpruawayjl.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpruawayjl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpruawayjl.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpruawayjl.jl:26\n\
    \   [2] top-level scope at /tmp/tmpruawayjl.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpruawayjl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpruawayjl.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpruawayjl.jl:26\n\
    \   [2] top-level scope at /tmp/tmpruawayjl.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpruawayjl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpruawayjl.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpruawayjl.jl:26\n\
    \   [2] top-level scope at /tmp/tmpruawayjl.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpruawayjl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpruawayjl.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpruawayjl.jl:26\n\
    \   [2] top-level scope at /tmp/tmpruawayjl.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpruawayjl.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpruawayjl.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start1, end1 = interval1\n\
    \    start2, end2 = interval2\n    if start1 > end1 || start2 > end2\n       \
    \ return \"NO\"\n    end\n    if start1 > start2\n        start1, start2 = start2,\
    \ start1\n    end\n    if end1 < end2\n        end1, end2 = end2, end1\n    end\n\
    \    if start2 > end1\n        return \"NO\"\n    end\n    if start2 <= end1\n\
    \        if start2 == end1\n            return \"YES\"\n        end\n        if\
    \ start2 < end1\n            if isprime(end1 - start2 + 1)\n                return\
    \ \"YES\"\n            else\n                return \"NO\"\n            end\n\
    \        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpugwbhclz.jl:53\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpugwbhclz.jl:40\n   [2] top-level scope at /tmp/tmpugwbhclz.jl:53\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpugwbhclz.jl:52\n  \ntest set: Error During\
    \ Test at /tmp/tmpugwbhclz.jl:54\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpugwbhclz.jl:40\n\
    \   [2] top-level scope at /tmp/tmpugwbhclz.jl:54\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpugwbhclz.jl:52\n  \ntest set: Error During\
    \ Test at /tmp/tmpugwbhclz.jl:55\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpugwbhclz.jl:40\n\
    \   [2] top-level scope at /tmp/tmpugwbhclz.jl:55\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpugwbhclz.jl:52\n  \ntest set: Error During\
    \ Test at /tmp/tmpugwbhclz.jl:56\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpugwbhclz.jl:40\n\
    \   [2] top-level scope at /tmp/tmpugwbhclz.jl:56\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpugwbhclz.jl:52\n  \ntest set: Error During\
    \ Test at /tmp/tmpugwbhclz.jl:57\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpugwbhclz.jl:40\n\
    \   [2] top-level scope at /tmp/tmpugwbhclz.jl:57\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpugwbhclz.jl:52\n  \ntest set: Error During\
    \ Test at /tmp/tmpugwbhclz.jl:58\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (3, 5)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpugwbhclz.jl:40\n\
    \   [2] top-level scope at /tmp/tmpugwbhclz.jl:58\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpugwbhclz.jl:52\n  \ntest set: Error During\
    \ Test at /tmp/tmpugwbhclz.jl:59\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpugwbhclz.jl:40\n\
    \   [2] top-level scope at /tmp/tmpugwbhclz.jl:59\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpugwbhclz.jl:52\n  \ntest set: Test Failed at\
    \ /tmp/tmpugwbhclz.jl:60\n  Expression: candidate((-2, -2), (-3, -2)) == \"NO\"\
    \n   Evaluated: \"YES\" == \"NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpugwbhclz.jl:60\n\
    \ [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpugwbhclz.jl:52\nTest Summary: | Fail  Error \
    \ Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpugwbhclz.jl:50\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcvke649l.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpcvke649l.jl:26\n   [2] top-level scope at /tmp/tmpcvke649l.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcvke649l.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpcvke649l.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcvke649l.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcvke649l.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcvke649l.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpcvke649l.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcvke649l.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcvke649l.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcvke649l.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpcvke649l.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcvke649l.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcvke649l.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcvke649l.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpcvke649l.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcvke649l.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcvke649l.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcvke649l.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpcvke649l.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcvke649l.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcvke649l.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcvke649l.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpcvke649l.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcvke649l.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcvke649l.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcvke649l.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcvke649l.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    length = stop - start + 1\n    if length\
    \ == 1\n        return \"NO\"\n    end\n    for i in 2:length-1\n        if length\
    \ % i == 0\n            return \"NO\"\n        end\n    end\n    return \"YES\"\
    \nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1,\
    \ 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfvesig_d.jl:43\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n   Evaluated: \"YES\" == \"NO\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpfvesig_d.jl:43\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfvesig_d.jl:41\ntest set: Test Failed at /tmp/tmpfvesig_d.jl:48\n\
    \  Expression: candidate((1, 2), (1, 2)) == \"NO\"\n   Evaluated: \"YES\" == \"\
    NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpfvesig_d.jl:48\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpfvesig_d.jl:41\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfvesig_d.jl:39\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxdtjgn9b.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpxdtjgn9b.jl:26\n   [2] top-level scope at /tmp/tmpxdtjgn9b.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxdtjgn9b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxdtjgn9b.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxdtjgn9b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxdtjgn9b.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxdtjgn9b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxdtjgn9b.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxdtjgn9b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxdtjgn9b.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxdtjgn9b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxdtjgn9b.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxdtjgn9b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxdtjgn9b.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxdtjgn9b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxdtjgn9b.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxdtjgn9b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxdtjgn9b.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxdtjgn9b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxdtjgn9b.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxdtjgn9b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxdtjgn9b.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxdtjgn9b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpxdtjgn9b.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxdtjgn9b.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxdtjgn9b.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxdtjgn9b.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxdtjgn9b.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpfsx7jg06.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpfsx7jg06.jl:26\n   [2] top-level scope at /tmp/tmpfsx7jg06.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsx7jg06.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpfsx7jg06.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpfsx7jg06.jl:26\n\
    \   [2] top-level scope at /tmp/tmpfsx7jg06.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsx7jg06.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpfsx7jg06.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpfsx7jg06.jl:26\n\
    \   [2] top-level scope at /tmp/tmpfsx7jg06.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsx7jg06.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpfsx7jg06.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpfsx7jg06.jl:26\n\
    \   [2] top-level scope at /tmp/tmpfsx7jg06.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsx7jg06.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpfsx7jg06.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpfsx7jg06.jl:26\n\
    \   [2] top-level scope at /tmp/tmpfsx7jg06.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsx7jg06.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpfsx7jg06.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpfsx7jg06.jl:26\n\
    \   [2] top-level scope at /tmp/tmpfsx7jg06.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsx7jg06.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpfsx7jg06.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpfsx7jg06.jl:26\n\
    \   [2] top-level scope at /tmp/tmpfsx7jg06.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpfsx7jg06.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfsx7jg06.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp_ytol4yf.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp_ytol4yf.jl:26\n   [2] top-level scope at /tmp/tmp_ytol4yf.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_ytol4yf.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp_ytol4yf.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_ytol4yf.jl:26\n\
    \   [2] top-level scope at /tmp/tmp_ytol4yf.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_ytol4yf.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp_ytol4yf.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_ytol4yf.jl:26\n\
    \   [2] top-level scope at /tmp/tmp_ytol4yf.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_ytol4yf.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp_ytol4yf.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_ytol4yf.jl:26\n\
    \   [2] top-level scope at /tmp/tmp_ytol4yf.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_ytol4yf.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp_ytol4yf.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_ytol4yf.jl:26\n\
    \   [2] top-level scope at /tmp/tmp_ytol4yf.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_ytol4yf.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp_ytol4yf.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_ytol4yf.jl:26\n\
    \   [2] top-level scope at /tmp/tmp_ytol4yf.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_ytol4yf.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp_ytol4yf.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_ytol4yf.jl:26\n\
    \   [2] top-level scope at /tmp/tmp_ytol4yf.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp_ytol4yf.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_ytol4yf.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxtp2i6oi.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpxtp2i6oi.jl:26\n   [2] top-level scope at /tmp/tmpxtp2i6oi.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxtp2i6oi.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpxtp2i6oi.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxtp2i6oi.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxtp2i6oi.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxtp2i6oi.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpxtp2i6oi.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxtp2i6oi.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxtp2i6oi.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxtp2i6oi.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpxtp2i6oi.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxtp2i6oi.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxtp2i6oi.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxtp2i6oi.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpxtp2i6oi.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxtp2i6oi.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxtp2i6oi.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxtp2i6oi.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpxtp2i6oi.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxtp2i6oi.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxtp2i6oi.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxtp2i6oi.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpxtp2i6oi.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxtp2i6oi.jl:26\n\
    \   [2] top-level scope at /tmp/tmpxtp2i6oi.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxtp2i6oi.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxtp2i6oi.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    end_ = min(interval1[2], interval2[2])\n    if start > end_\n\
    \        return \"NO\"\n    end\n    return isprime(end_ - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmptlsgw10_.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmptlsgw10_.jl:26\n   [2] top-level scope at /tmp/tmptlsgw10_.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptlsgw10_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmptlsgw10_.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptlsgw10_.jl:26\n\
    \   [2] top-level scope at /tmp/tmptlsgw10_.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptlsgw10_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmptlsgw10_.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptlsgw10_.jl:26\n\
    \   [2] top-level scope at /tmp/tmptlsgw10_.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptlsgw10_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmptlsgw10_.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptlsgw10_.jl:26\n\
    \   [2] top-level scope at /tmp/tmptlsgw10_.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptlsgw10_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmptlsgw10_.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptlsgw10_.jl:26\n\
    \   [2] top-level scope at /tmp/tmptlsgw10_.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptlsgw10_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmptlsgw10_.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptlsgw10_.jl:26\n\
    \   [2] top-level scope at /tmp/tmptlsgw10_.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptlsgw10_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmptlsgw10_.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmptlsgw10_.jl:26\n\
    \   [2] top-level scope at /tmp/tmptlsgw10_.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmptlsgw10_.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptlsgw10_.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprbbe248b.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmprbbe248b.jl:26\n   [2] top-level scope at /tmp/tmprbbe248b.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprbbe248b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprbbe248b.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprbbe248b.jl:26\n\
    \   [2] top-level scope at /tmp/tmprbbe248b.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprbbe248b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprbbe248b.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprbbe248b.jl:26\n\
    \   [2] top-level scope at /tmp/tmprbbe248b.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprbbe248b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprbbe248b.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprbbe248b.jl:26\n\
    \   [2] top-level scope at /tmp/tmprbbe248b.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprbbe248b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprbbe248b.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprbbe248b.jl:26\n\
    \   [2] top-level scope at /tmp/tmprbbe248b.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprbbe248b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprbbe248b.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprbbe248b.jl:26\n\
    \   [2] top-level scope at /tmp/tmprbbe248b.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprbbe248b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmprbbe248b.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprbbe248b.jl:26\n\
    \   [2] top-level scope at /tmp/tmprbbe248b.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprbbe248b.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprbbe248b.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    start =\
    \ max(interval1[1], interval2[1])\n    stop = min(interval1[2], interval2[2])\n\
    \    if start == stop\n        return \"NO\"\n    end\n    return isprime(stop\
    \ - start + 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1,\
    \ 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t\
    @test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1,\
    \ -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpxx1lqe95.jl:37\n  Test threw exception\n\
    \  Expression: candidate((-1, 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpxx1lqe95.jl:29\n   [2] top-level scope at /tmp/tmpxx1lqe95.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxx1lqe95.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmpxx1lqe95.jl:38\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxx1lqe95.jl:29\n\
    \   [2] top-level scope at /tmp/tmpxx1lqe95.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxx1lqe95.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmpxx1lqe95.jl:39\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxx1lqe95.jl:29\n\
    \   [2] top-level scope at /tmp/tmpxx1lqe95.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxx1lqe95.jl:35\n  \ntest set: Error During\
    \ Test at /tmp/tmpxx1lqe95.jl:42\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpxx1lqe95.jl:29\n\
    \   [2] top-level scope at /tmp/tmpxx1lqe95.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpxx1lqe95.jl:35\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    4      4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxx1lqe95.jl:33\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4tckcgs8.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp4tckcgs8.jl:26\n   [2] top-level scope at /tmp/tmp4tckcgs8.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4tckcgs8.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4tckcgs8.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4tckcgs8.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4tckcgs8.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4tckcgs8.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4tckcgs8.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4tckcgs8.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4tckcgs8.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4tckcgs8.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4tckcgs8.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4tckcgs8.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4tckcgs8.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4tckcgs8.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4tckcgs8.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4tckcgs8.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4tckcgs8.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4tckcgs8.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4tckcgs8.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4tckcgs8.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4tckcgs8.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4tckcgs8.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4tckcgs8.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4tckcgs8.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4tckcgs8.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4tckcgs8.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4tckcgs8.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpis84io9w.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpis84io9w.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpis84io9w.jl:33\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpis84io9w.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpis84io9w.jl:34\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpis84io9w.jl:26\\\
    n   [2] top-level scope at /tmp/tmpis84io9w.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpis84io9w.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpis84io9w.jl:35\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpis84io9w.jl:26\\\
    n   [2] top-level scope at /tmp/tmpis84io9w.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpis84io9w.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpis84io9w.jl:36\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpis84io9w.jl:26\\\
    n   [2] top-level scope at /tmp/tmpis84io9w.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpis84io9w.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpis84io9w.jl:37\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpis84io9w.jl:26\\\
    n   [2] top-level scope at /tmp/tmpis84io9w.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpis84io9w.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpis84io9w.jl:39\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpis84io9w.jl:26\\\
    n   [2] top-level scope at /tmp/tmpis84io9w.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpis84io9w.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpis84io9w.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpis84io9w.jl:26\\\
    n   [2] top-level scope at /tmp/tmpis84io9w.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpis84io9w.jl:32\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp_9drefm8.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmp_9drefm8.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmp_9drefm8.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_9drefm8.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_9drefm8.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_9drefm8.jl:26\\\
    n   [2] top-level scope at /tmp/tmp_9drefm8.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_9drefm8.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_9drefm8.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_9drefm8.jl:26\\\
    n   [2] top-level scope at /tmp/tmp_9drefm8.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_9drefm8.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_9drefm8.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_9drefm8.jl:26\\\
    n   [2] top-level scope at /tmp/tmp_9drefm8.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_9drefm8.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_9drefm8.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_9drefm8.jl:26\\\
    n   [2] top-level scope at /tmp/tmp_9drefm8.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_9drefm8.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_9drefm8.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_9drefm8.jl:26\\\
    n   [2] top-level scope at /tmp/tmp_9drefm8.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_9drefm8.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp_9drefm8.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp_9drefm8.jl:26\\\
    n   [2] top-level scope at /tmp/tmp_9drefm8.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp_9drefm8.jl:36\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpukkz1a6g.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpukkz1a6g.jl:26\n   [2] top-level scope at /tmp/tmpukkz1a6g.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpukkz1a6g.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpukkz1a6g.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpukkz1a6g.jl:26\n\
    \   [2] top-level scope at /tmp/tmpukkz1a6g.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpukkz1a6g.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpukkz1a6g.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpukkz1a6g.jl:26\n\
    \   [2] top-level scope at /tmp/tmpukkz1a6g.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpukkz1a6g.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpukkz1a6g.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpukkz1a6g.jl:26\n\
    \   [2] top-level scope at /tmp/tmpukkz1a6g.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpukkz1a6g.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpukkz1a6g.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpukkz1a6g.jl:26\n\
    \   [2] top-level scope at /tmp/tmpukkz1a6g.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpukkz1a6g.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpukkz1a6g.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpukkz1a6g.jl:26\n\
    \   [2] top-level scope at /tmp/tmpukkz1a6g.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpukkz1a6g.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpukkz1a6g.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpukkz1a6g.jl:26\n\
    \   [2] top-level scope at /tmp/tmpukkz1a6g.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpukkz1a6g.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpukkz1a6g.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpre7f2skd.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpre7f2skd.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpre7f2skd.jl:33\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpre7f2skd.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpre7f2skd.jl:34\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpre7f2skd.jl:26\\\
    n   [2] top-level scope at /tmp/tmpre7f2skd.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpre7f2skd.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpre7f2skd.jl:35\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpre7f2skd.jl:26\\\
    n   [2] top-level scope at /tmp/tmpre7f2skd.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpre7f2skd.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpre7f2skd.jl:36\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpre7f2skd.jl:26\\\
    n   [2] top-level scope at /tmp/tmpre7f2skd.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpre7f2skd.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpre7f2skd.jl:37\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpre7f2skd.jl:26\\\
    n   [2] top-level scope at /tmp/tmpre7f2skd.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpre7f2skd.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpre7f2skd.jl:39\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpre7f2skd.jl:26\\\
    n   [2] top-level scope at /tmp/tmpre7f2skd.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpre7f2skd.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpre7f2skd.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpre7f2skd.jl:26\\\
    n   [2] top-level scope at /tmp/tmpre7f2skd.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpre7f2skd.jl:32\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpv6ne8toe.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpv6ne8toe.jl:26\n   [2] top-level scope at /tmp/tmpv6ne8toe.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv6ne8toe.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpv6ne8toe.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpv6ne8toe.jl:26\n\
    \   [2] top-level scope at /tmp/tmpv6ne8toe.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv6ne8toe.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpv6ne8toe.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpv6ne8toe.jl:26\n\
    \   [2] top-level scope at /tmp/tmpv6ne8toe.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv6ne8toe.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpv6ne8toe.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpv6ne8toe.jl:26\n\
    \   [2] top-level scope at /tmp/tmpv6ne8toe.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv6ne8toe.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpv6ne8toe.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpv6ne8toe.jl:26\n\
    \   [2] top-level scope at /tmp/tmpv6ne8toe.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv6ne8toe.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpv6ne8toe.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpv6ne8toe.jl:26\n\
    \   [2] top-level scope at /tmp/tmpv6ne8toe.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv6ne8toe.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpv6ne8toe.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpv6ne8toe.jl:26\n\
    \   [2] top-level scope at /tmp/tmpv6ne8toe.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpv6ne8toe.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv6ne8toe.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp029p1z_h.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp029p1z_h.jl:26\n   [2] top-level scope at /tmp/tmp029p1z_h.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp029p1z_h.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp029p1z_h.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp029p1z_h.jl:26\n\
    \   [2] top-level scope at /tmp/tmp029p1z_h.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp029p1z_h.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp029p1z_h.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp029p1z_h.jl:26\n\
    \   [2] top-level scope at /tmp/tmp029p1z_h.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp029p1z_h.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp029p1z_h.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp029p1z_h.jl:26\n\
    \   [2] top-level scope at /tmp/tmp029p1z_h.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp029p1z_h.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp029p1z_h.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp029p1z_h.jl:26\n\
    \   [2] top-level scope at /tmp/tmp029p1z_h.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp029p1z_h.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp029p1z_h.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp029p1z_h.jl:26\n\
    \   [2] top-level scope at /tmp/tmp029p1z_h.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp029p1z_h.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp029p1z_h.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp029p1z_h.jl:26\n\
    \   [2] top-level scope at /tmp/tmp029p1z_h.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp029p1z_h.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp029p1z_h.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3jde59gi.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp3jde59gi.jl:26\n   [2] top-level scope at /tmp/tmp3jde59gi.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jde59gi.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jde59gi.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3jde59gi.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3jde59gi.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jde59gi.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jde59gi.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3jde59gi.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3jde59gi.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jde59gi.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jde59gi.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3jde59gi.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3jde59gi.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jde59gi.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jde59gi.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3jde59gi.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3jde59gi.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jde59gi.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jde59gi.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3jde59gi.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3jde59gi.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jde59gi.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp3jde59gi.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3jde59gi.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3jde59gi.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3jde59gi.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3jde59gi.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    if interval1[1]\
    \ <= interval2[1]\n        start = interval2[1]\n    else\n        start = interval1[1]\n\
    \    end\n    if interval1[2] <= interval2[2]\n        finish = interval1[2]\n\
    \    else\n        finish = interval2[2]\n    end\n    if start == finish\n  \
    \      return \"NO\"\n    end\n    if isprime(finish - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpx_vt1qho.jl:49\n  Test threw exception\n\
    \  Expression: candidate((-1, 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpx_vt1qho.jl:37\n   [2] top-level scope at /tmp/tmpx_vt1qho.jl:49\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx_vt1qho.jl:47\n  \ntest set: Error During\
    \ Test at /tmp/tmpx_vt1qho.jl:50\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpx_vt1qho.jl:37\n\
    \   [2] top-level scope at /tmp/tmpx_vt1qho.jl:50\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx_vt1qho.jl:47\n  \ntest set: Error During\
    \ Test at /tmp/tmpx_vt1qho.jl:51\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpx_vt1qho.jl:37\n\
    \   [2] top-level scope at /tmp/tmpx_vt1qho.jl:51\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx_vt1qho.jl:47\n  \ntest set: Error During\
    \ Test at /tmp/tmpx_vt1qho.jl:54\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpx_vt1qho.jl:37\n\
    \   [2] top-level scope at /tmp/tmpx_vt1qho.jl:54\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpx_vt1qho.jl:47\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    4      4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx_vt1qho.jl:45\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7ir8bgnt.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp7ir8bgnt.jl:26\n   [2] top-level scope at /tmp/tmp7ir8bgnt.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ir8bgnt.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ir8bgnt.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7ir8bgnt.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7ir8bgnt.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ir8bgnt.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ir8bgnt.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7ir8bgnt.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7ir8bgnt.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ir8bgnt.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ir8bgnt.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7ir8bgnt.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7ir8bgnt.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ir8bgnt.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ir8bgnt.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7ir8bgnt.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7ir8bgnt.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ir8bgnt.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ir8bgnt.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7ir8bgnt.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7ir8bgnt.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ir8bgnt.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7ir8bgnt.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7ir8bgnt.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7ir8bgnt.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7ir8bgnt.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7ir8bgnt.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpjoms757_.jl:33\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpjoms757_.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpjoms757_.jl:33\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjoms757_.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjoms757_.jl:34\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjoms757_.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjoms757_.jl:34\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjoms757_.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjoms757_.jl:35\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjoms757_.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjoms757_.jl:35\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjoms757_.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjoms757_.jl:36\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjoms757_.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjoms757_.jl:36\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjoms757_.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjoms757_.jl:37\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjoms757_.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjoms757_.jl:37\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjoms757_.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjoms757_.jl:39\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjoms757_.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjoms757_.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjoms757_.jl:32\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpjoms757_.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjoms757_.jl:26\\\
    n   [2] top-level scope at /tmp/tmpjoms757_.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpjoms757_.jl:32\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpekir965e.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpekir965e.jl:26\n   [2] top-level scope at /tmp/tmpekir965e.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpekir965e.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpekir965e.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpekir965e.jl:26\n\
    \   [2] top-level scope at /tmp/tmpekir965e.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpekir965e.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpekir965e.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpekir965e.jl:26\n\
    \   [2] top-level scope at /tmp/tmpekir965e.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpekir965e.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpekir965e.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpekir965e.jl:26\n\
    \   [2] top-level scope at /tmp/tmpekir965e.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpekir965e.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpekir965e.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpekir965e.jl:26\n\
    \   [2] top-level scope at /tmp/tmpekir965e.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpekir965e.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpekir965e.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpekir965e.jl:26\n\
    \   [2] top-level scope at /tmp/tmpekir965e.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpekir965e.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpekir965e.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpekir965e.jl:26\n\
    \   [2] top-level scope at /tmp/tmpekir965e.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpekir965e.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpekir965e.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpp_3h4lqf.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpp_3h4lqf.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpp_3h4lqf.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpp_3h4lqf.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpp_3h4lqf.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpp_3h4lqf.jl:26\\\
    n   [2] top-level scope at /tmp/tmpp_3h4lqf.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpp_3h4lqf.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpp_3h4lqf.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpp_3h4lqf.jl:26\\\
    n   [2] top-level scope at /tmp/tmpp_3h4lqf.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpp_3h4lqf.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpp_3h4lqf.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpp_3h4lqf.jl:26\\\
    n   [2] top-level scope at /tmp/tmpp_3h4lqf.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpp_3h4lqf.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpp_3h4lqf.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpp_3h4lqf.jl:26\\\
    n   [2] top-level scope at /tmp/tmpp_3h4lqf.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpp_3h4lqf.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpp_3h4lqf.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpp_3h4lqf.jl:26\\\
    n   [2] top-level scope at /tmp/tmpp_3h4lqf.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpp_3h4lqf.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpp_3h4lqf.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpp_3h4lqf.jl:26\\\
    n   [2] top-level scope at /tmp/tmpp_3h4lqf.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpp_3h4lqf.jl:36\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpc1kv5qdg.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpc1kv5qdg.jl:26\n   [2] top-level scope at /tmp/tmpc1kv5qdg.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc1kv5qdg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpc1kv5qdg.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpc1kv5qdg.jl:26\n\
    \   [2] top-level scope at /tmp/tmpc1kv5qdg.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc1kv5qdg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpc1kv5qdg.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpc1kv5qdg.jl:26\n\
    \   [2] top-level scope at /tmp/tmpc1kv5qdg.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc1kv5qdg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpc1kv5qdg.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpc1kv5qdg.jl:26\n\
    \   [2] top-level scope at /tmp/tmpc1kv5qdg.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc1kv5qdg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpc1kv5qdg.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpc1kv5qdg.jl:26\n\
    \   [2] top-level scope at /tmp/tmpc1kv5qdg.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc1kv5qdg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpc1kv5qdg.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpc1kv5qdg.jl:26\n\
    \   [2] top-level scope at /tmp/tmpc1kv5qdg.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc1kv5qdg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpc1kv5qdg.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpc1kv5qdg.jl:26\n\
    \   [2] top-level scope at /tmp/tmpc1kv5qdg.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpc1kv5qdg.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpc1kv5qdg.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpuieafpft.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpuieafpft.jl:26\n   [2] top-level scope at /tmp/tmpuieafpft.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuieafpft.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpuieafpft.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpuieafpft.jl:26\n\
    \   [2] top-level scope at /tmp/tmpuieafpft.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuieafpft.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpuieafpft.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpuieafpft.jl:26\n\
    \   [2] top-level scope at /tmp/tmpuieafpft.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuieafpft.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpuieafpft.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpuieafpft.jl:26\n\
    \   [2] top-level scope at /tmp/tmpuieafpft.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuieafpft.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpuieafpft.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpuieafpft.jl:26\n\
    \   [2] top-level scope at /tmp/tmpuieafpft.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuieafpft.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpuieafpft.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpuieafpft.jl:26\n\
    \   [2] top-level scope at /tmp/tmpuieafpft.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuieafpft.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpuieafpft.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpuieafpft.jl:26\n\
    \   [2] top-level scope at /tmp/tmpuieafpft.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpuieafpft.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuieafpft.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1txetw4s.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp1txetw4s.jl:26\n   [2] top-level scope at /tmp/tmp1txetw4s.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1txetw4s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp1txetw4s.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp1txetw4s.jl:26\n\
    \   [2] top-level scope at /tmp/tmp1txetw4s.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1txetw4s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp1txetw4s.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp1txetw4s.jl:26\n\
    \   [2] top-level scope at /tmp/tmp1txetw4s.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1txetw4s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp1txetw4s.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp1txetw4s.jl:26\n\
    \   [2] top-level scope at /tmp/tmp1txetw4s.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1txetw4s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp1txetw4s.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp1txetw4s.jl:26\n\
    \   [2] top-level scope at /tmp/tmp1txetw4s.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1txetw4s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp1txetw4s.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp1txetw4s.jl:26\n\
    \   [2] top-level scope at /tmp/tmp1txetw4s.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1txetw4s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp1txetw4s.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp1txetw4s.jl:26\n\
    \   [2] top-level scope at /tmp/tmp1txetw4s.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1txetw4s.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1txetw4s.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if start == finish\n        return\
    \ \"YES\"\n    end\n    for i in 2:finish-1\n        if start % i == 0\n     \
    \       return \"NO\"\n        end\n    end\n    return \"YES\"\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3))\
    \ == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8wbiiwnt.jl:41\n  Expression: candidate((1,\
    \ 2), (2, 3)) == \"NO\"\n   Evaluated: \"YES\" == \"NO\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmp8wbiiwnt.jl:41\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8wbiiwnt.jl:40\ntest set: Test Failed at /tmp/tmp8wbiiwnt.jl:42\n\
    \  Expression: candidate((-1, 1), (0, 4)) == \"NO\"\n   Evaluated: \"YES\" ==\
    \ \"NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8wbiiwnt.jl:42\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8wbiiwnt.jl:40\ntest set: Test Failed at /tmp/tmp8wbiiwnt.jl:45\n\
    \  Expression: candidate((-11, 2), (-1, -1)) == \"NO\"\n   Evaluated: \"YES\"\
    \ == \"NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8wbiiwnt.jl:45\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8wbiiwnt.jl:40\ntest set: Test Failed at /tmp/tmp8wbiiwnt.jl:47\n\
    \  Expression: candidate((1, 2), (1, 2)) == \"NO\"\n   Evaluated: \"YES\" == \"\
    NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8wbiiwnt.jl:47\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8wbiiwnt.jl:40\ntest set: Test Failed at /tmp/tmp8wbiiwnt.jl:48\n\
    \  Expression: candidate((-2, -2), (-3, -2)) == \"NO\"\n   Evaluated: \"YES\"\
    \ == \"NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmp8wbiiwnt.jl:48\n [2]\
    \ top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmp8wbiiwnt.jl:40\nTest Summary: | Pass  Fail  Total\n\
    test set      |    3     5      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 5 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8wbiiwnt.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2arbfdgk.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp2arbfdgk.jl:26\n   [2] top-level scope at /tmp/tmp2arbfdgk.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2arbfdgk.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp2arbfdgk.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp2arbfdgk.jl:26\n\
    \   [2] top-level scope at /tmp/tmp2arbfdgk.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2arbfdgk.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp2arbfdgk.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp2arbfdgk.jl:26\n\
    \   [2] top-level scope at /tmp/tmp2arbfdgk.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2arbfdgk.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp2arbfdgk.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp2arbfdgk.jl:26\n\
    \   [2] top-level scope at /tmp/tmp2arbfdgk.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2arbfdgk.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp2arbfdgk.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp2arbfdgk.jl:26\n\
    \   [2] top-level scope at /tmp/tmp2arbfdgk.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2arbfdgk.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp2arbfdgk.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp2arbfdgk.jl:26\n\
    \   [2] top-level scope at /tmp/tmp2arbfdgk.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2arbfdgk.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp2arbfdgk.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp2arbfdgk.jl:26\n\
    \   [2] top-level scope at /tmp/tmp2arbfdgk.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2arbfdgk.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2arbfdgk.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start1, end1 = interval1\n\
    \    start2, end2 = interval2\n    if start1 > end1 || start2 > end2\n       \
    \ return \"NO\"\n    end\n    if start1 > start2\n        start1, start2 = start2,\
    \ start1\n    end\n    if end1 < end2\n        end1, end2 = end2, end1\n    end\n\
    \    if start2 > end1\n        return \"NO\"\n    end\n    if start2 <= end1\n\
    \        if end1 - start2 == 1\n            return \"YES\"\n        end\n    \
    \    if end1 - start2 > 1\n            return \"NO\"\n        end\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1,\
    \ 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpz_zt1foe.jl:49\n  Expression: candidate((1,\
    \ 2), (2, 3)) == \"NO\"\n   Evaluated: \"YES\" == \"NO\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpz_zt1foe.jl:49\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz_zt1foe.jl:48\ntest set: Test Failed at /tmp/tmpz_zt1foe.jl:51\n\
    \  Expression: candidate((-3, -1), (-5, 5)) == \"YES\"\n   Evaluated: \"NO\" ==\
    \ \"YES\"\nStacktrace:\n [1] top-level scope at /tmp/tmpz_zt1foe.jl:51\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz_zt1foe.jl:48\ntest set: Test Failed at /tmp/tmpz_zt1foe.jl:52\n\
    \  Expression: candidate((-2, 2), (-4, 0)) == \"YES\"\n   Evaluated: \"NO\" ==\
    \ \"YES\"\nStacktrace:\n [1] top-level scope at /tmp/tmpz_zt1foe.jl:52\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz_zt1foe.jl:48\ntest set: Test Failed at /tmp/tmpz_zt1foe.jl:55\n\
    \  Expression: candidate((1, 2), (1, 2)) == \"NO\"\n   Evaluated: \"YES\" == \"\
    NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpz_zt1foe.jl:55\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpz_zt1foe.jl:48\ntest set: Error During Test at\
    \ /tmp/tmpz_zt1foe.jl:56\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  MethodError: Cannot `convert` an object of type\
    \ Nothing to an object of type String\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at strings/basic.jl:209\n    convert(::Type{T},\
    \ !Matched::AbstractString) where T<:AbstractString at strings/basic.jl:210\n\
    \    convert(::Type{T}, !Matched::T) where T at essentials.jl:171\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpz_zt1foe.jl:40\n\
    \   [2] top-level scope at /tmp/tmpz_zt1foe.jl:56\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpz_zt1foe.jl:48\n  \nTest Summary: | Pass  Fail\
    \  Error  Total\ntest set      |    3     4      1      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 3 passed, 4 failed, 1 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpz_zt1foe.jl:46\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpl_xv9_zo.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpl_xv9_zo.jl:26\n   [2] top-level scope at /tmp/tmpl_xv9_zo.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl_xv9_zo.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl_xv9_zo.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl_xv9_zo.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl_xv9_zo.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl_xv9_zo.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl_xv9_zo.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl_xv9_zo.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl_xv9_zo.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl_xv9_zo.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl_xv9_zo.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl_xv9_zo.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl_xv9_zo.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl_xv9_zo.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl_xv9_zo.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl_xv9_zo.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl_xv9_zo.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl_xv9_zo.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl_xv9_zo.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl_xv9_zo.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl_xv9_zo.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl_xv9_zo.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpl_xv9_zo.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpl_xv9_zo.jl:26\n\
    \   [2] top-level scope at /tmp/tmpl_xv9_zo.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpl_xv9_zo.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl_xv9_zo.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpttolvgkc.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpttolvgkc.jl:26\n   [2] top-level scope at /tmp/tmpttolvgkc.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpttolvgkc.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpttolvgkc.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpttolvgkc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpttolvgkc.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpttolvgkc.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpttolvgkc.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpttolvgkc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpttolvgkc.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpttolvgkc.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpttolvgkc.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpttolvgkc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpttolvgkc.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpttolvgkc.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpttolvgkc.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpttolvgkc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpttolvgkc.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpttolvgkc.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpttolvgkc.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpttolvgkc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpttolvgkc.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpttolvgkc.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpttolvgkc.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpttolvgkc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpttolvgkc.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpttolvgkc.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpttolvgkc.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpjefrdz2j.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpjefrdz2j.jl:26\n   [2] top-level scope at /tmp/tmpjefrdz2j.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjefrdz2j.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjefrdz2j.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjefrdz2j.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjefrdz2j.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjefrdz2j.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjefrdz2j.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjefrdz2j.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjefrdz2j.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjefrdz2j.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjefrdz2j.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjefrdz2j.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjefrdz2j.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjefrdz2j.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjefrdz2j.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjefrdz2j.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjefrdz2j.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjefrdz2j.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjefrdz2j.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjefrdz2j.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjefrdz2j.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjefrdz2j.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpjefrdz2j.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpjefrdz2j.jl:26\n\
    \   [2] top-level scope at /tmp/tmpjefrdz2j.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpjefrdz2j.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjefrdz2j.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpaxxxlysv.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpaxxxlysv.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpaxxxlysv.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxxxlysv.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaxxxlysv.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpaxxxlysv.jl:26\\\
    n   [2] top-level scope at /tmp/tmpaxxxlysv.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxxxlysv.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaxxxlysv.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpaxxxlysv.jl:26\\\
    n   [2] top-level scope at /tmp/tmpaxxxlysv.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxxxlysv.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaxxxlysv.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpaxxxlysv.jl:26\\\
    n   [2] top-level scope at /tmp/tmpaxxxlysv.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxxxlysv.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaxxxlysv.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpaxxxlysv.jl:26\\\
    n   [2] top-level scope at /tmp/tmpaxxxlysv.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxxxlysv.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaxxxlysv.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpaxxxlysv.jl:26\\\
    n   [2] top-level scope at /tmp/tmpaxxxlysv.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxxxlysv.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpaxxxlysv.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpaxxxlysv.jl:26\\\
    n   [2] top-level scope at /tmp/tmpaxxxlysv.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpaxxxlysv.jl:36\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpj92tfvi6.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpj92tfvi6.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpj92tfvi6.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj92tfvi6.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpj92tfvi6.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpj92tfvi6.jl:26\\\
    n   [2] top-level scope at /tmp/tmpj92tfvi6.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj92tfvi6.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpj92tfvi6.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpj92tfvi6.jl:26\\\
    n   [2] top-level scope at /tmp/tmpj92tfvi6.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj92tfvi6.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpj92tfvi6.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpj92tfvi6.jl:26\\\
    n   [2] top-level scope at /tmp/tmpj92tfvi6.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj92tfvi6.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpj92tfvi6.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpj92tfvi6.jl:26\\\
    n   [2] top-level scope at /tmp/tmpj92tfvi6.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj92tfvi6.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpj92tfvi6.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpj92tfvi6.jl:26\\\
    n   [2] top-level scope at /tmp/tmpj92tfvi6.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj92tfvi6.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpj92tfvi6.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpj92tfvi6.jl:26\\\
    n   [2] top-level scope at /tmp/tmpj92tfvi6.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpj92tfvi6.jl:36\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if start == finish\n        return\
    \ isprime(start) ? \"YES\" : \"NO\"\n    end\n    for i in start:finish\n    \
    \    if isprime(i)\n            return \"YES\"\n        end\n    end\n    return\
    \ \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1,\
    \ 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi179htlf.jl:41\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpi179htlf.jl:27\n   [2] top-level scope at /tmp/tmpi179htlf.jl:41\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi179htlf.jl:40\n  \ntest set: Error During\
    \ Test at /tmp/tmpi179htlf.jl:42\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpi179htlf.jl:30\n\
    \   [2] top-level scope at /tmp/tmpi179htlf.jl:42\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi179htlf.jl:40\n  \ntest set: Error During\
    \ Test at /tmp/tmpi179htlf.jl:43\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpi179htlf.jl:30\n\
    \   [2] top-level scope at /tmp/tmpi179htlf.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi179htlf.jl:40\n  \ntest set: Error During\
    \ Test at /tmp/tmpi179htlf.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpi179htlf.jl:30\n\
    \   [2] top-level scope at /tmp/tmpi179htlf.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi179htlf.jl:40\n  \ntest set: Error During\
    \ Test at /tmp/tmpi179htlf.jl:45\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpi179htlf.jl:27\n\
    \   [2] top-level scope at /tmp/tmpi179htlf.jl:45\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi179htlf.jl:40\n  \ntest set: Error During\
    \ Test at /tmp/tmpi179htlf.jl:47\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpi179htlf.jl:30\n\
    \   [2] top-level scope at /tmp/tmpi179htlf.jl:47\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi179htlf.jl:40\n  \ntest set: Error During\
    \ Test at /tmp/tmpi179htlf.jl:48\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpi179htlf.jl:27\n\
    \   [2] top-level scope at /tmp/tmpi179htlf.jl:48\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi179htlf.jl:40\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi179htlf.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpj_yssg4d.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpj_yssg4d.jl:26\n   [2] top-level scope at /tmp/tmpj_yssg4d.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj_yssg4d.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpj_yssg4d.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpj_yssg4d.jl:26\n\
    \   [2] top-level scope at /tmp/tmpj_yssg4d.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj_yssg4d.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpj_yssg4d.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpj_yssg4d.jl:26\n\
    \   [2] top-level scope at /tmp/tmpj_yssg4d.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj_yssg4d.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpj_yssg4d.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpj_yssg4d.jl:26\n\
    \   [2] top-level scope at /tmp/tmpj_yssg4d.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj_yssg4d.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpj_yssg4d.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpj_yssg4d.jl:26\n\
    \   [2] top-level scope at /tmp/tmpj_yssg4d.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj_yssg4d.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpj_yssg4d.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpj_yssg4d.jl:26\n\
    \   [2] top-level scope at /tmp/tmpj_yssg4d.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj_yssg4d.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpj_yssg4d.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpj_yssg4d.jl:26\n\
    \   [2] top-level scope at /tmp/tmpj_yssg4d.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpj_yssg4d.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj_yssg4d.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpiqlv6vi3.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpiqlv6vi3.jl:26\n   [2] top-level scope at /tmp/tmpiqlv6vi3.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqlv6vi3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpiqlv6vi3.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpiqlv6vi3.jl:26\n\
    \   [2] top-level scope at /tmp/tmpiqlv6vi3.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqlv6vi3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpiqlv6vi3.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpiqlv6vi3.jl:26\n\
    \   [2] top-level scope at /tmp/tmpiqlv6vi3.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqlv6vi3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpiqlv6vi3.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpiqlv6vi3.jl:26\n\
    \   [2] top-level scope at /tmp/tmpiqlv6vi3.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqlv6vi3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpiqlv6vi3.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpiqlv6vi3.jl:26\n\
    \   [2] top-level scope at /tmp/tmpiqlv6vi3.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqlv6vi3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpiqlv6vi3.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpiqlv6vi3.jl:26\n\
    \   [2] top-level scope at /tmp/tmpiqlv6vi3.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqlv6vi3.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpiqlv6vi3.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpiqlv6vi3.jl:26\n\
    \   [2] top-level scope at /tmp/tmpiqlv6vi3.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpiqlv6vi3.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpiqlv6vi3.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] <= interval2[1]\
    \ <= interval1[2] <= interval2[2]\n        return isprime(interval1[2] - interval2[1]\
    \ + 1) ? \"YES\" : \"NO\"\n    elseif interval2[1] <= interval1[1] <= interval2[2]\
    \ <= interval1[2]\n        return isprime(interval2[2] - interval1[1] + 1) ? \"\
    YES\" : \"NO\"\n    elseif interval1[1] <= interval2[1] <= interval2[2] <= interval1[2]\n\
    \        return isprime(interval2[2] - interval2[1] + 1) ? \"YES\" : \"NO\"\n\
    \    elseif interval2[1] <= interval1[1] <= interval1[2] <= interval2[2]\n   \
    \     return isprime(interval1[2] - interval1[1] + 1) ? \"YES\" : \"NO\"\n   \
    \ else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1,\
    \ 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t\
    @test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1,\
    \ -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp3xg5n_hh.jl:38\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmp3xg5n_hh.jl:22\\n   [2] top-level scope at\
    \ /tmp/tmp3xg5n_hh.jl:38\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3xg5n_hh.jl:37\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3xg5n_hh.jl:39\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3xg5n_hh.jl:22\\\
    n   [2] top-level scope at /tmp/tmp3xg5n_hh.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3xg5n_hh.jl:37\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3xg5n_hh.jl:40\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3xg5n_hh.jl:28\\\
    n   [2] top-level scope at /tmp/tmp3xg5n_hh.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3xg5n_hh.jl:37\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3xg5n_hh.jl:41\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3xg5n_hh.jl:24\\\
    n   [2] top-level scope at /tmp/tmp3xg5n_hh.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3xg5n_hh.jl:37\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3xg5n_hh.jl:42\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3xg5n_hh.jl:26\\\
    n   [2] top-level scope at /tmp/tmp3xg5n_hh.jl:42\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3xg5n_hh.jl:37\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3xg5n_hh.jl:44\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3xg5n_hh.jl:22\\\
    n   [2] top-level scope at /tmp/tmp3xg5n_hh.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3xg5n_hh.jl:37\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp3xg5n_hh.jl:45\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3xg5n_hh.jl:24\\\
    n   [2] top-level scope at /tmp/tmp3xg5n_hh.jl:45\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp3xg5n_hh.jl:37\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbrdrlaqf.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpbrdrlaqf.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpbrdrlaqf.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbrdrlaqf.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbrdrlaqf.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbrdrlaqf.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbrdrlaqf.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbrdrlaqf.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbrdrlaqf.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbrdrlaqf.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbrdrlaqf.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbrdrlaqf.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbrdrlaqf.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbrdrlaqf.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbrdrlaqf.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbrdrlaqf.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbrdrlaqf.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbrdrlaqf.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbrdrlaqf.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbrdrlaqf.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbrdrlaqf.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbrdrlaqf.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbrdrlaqf.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbrdrlaqf.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbrdrlaqf.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbrdrlaqf.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbrdrlaqf.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbrdrlaqf.jl:36\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb2j66gaj.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpb2j66gaj.jl:26\n   [2] top-level scope at /tmp/tmpb2j66gaj.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb2j66gaj.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpb2j66gaj.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb2j66gaj.jl:26\n\
    \   [2] top-level scope at /tmp/tmpb2j66gaj.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb2j66gaj.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpb2j66gaj.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb2j66gaj.jl:26\n\
    \   [2] top-level scope at /tmp/tmpb2j66gaj.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb2j66gaj.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpb2j66gaj.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb2j66gaj.jl:26\n\
    \   [2] top-level scope at /tmp/tmpb2j66gaj.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb2j66gaj.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpb2j66gaj.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb2j66gaj.jl:26\n\
    \   [2] top-level scope at /tmp/tmpb2j66gaj.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb2j66gaj.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpb2j66gaj.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb2j66gaj.jl:26\n\
    \   [2] top-level scope at /tmp/tmpb2j66gaj.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb2j66gaj.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpb2j66gaj.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb2j66gaj.jl:26\n\
    \   [2] top-level scope at /tmp/tmpb2j66gaj.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb2j66gaj.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb2j66gaj.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp04r0u7_p.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmp04r0u7_p.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmp04r0u7_p.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp04r0u7_p.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp04r0u7_p.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp04r0u7_p.jl:26\\\
    n   [2] top-level scope at /tmp/tmp04r0u7_p.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp04r0u7_p.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp04r0u7_p.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp04r0u7_p.jl:26\\\
    n   [2] top-level scope at /tmp/tmp04r0u7_p.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp04r0u7_p.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp04r0u7_p.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp04r0u7_p.jl:26\\\
    n   [2] top-level scope at /tmp/tmp04r0u7_p.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp04r0u7_p.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp04r0u7_p.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp04r0u7_p.jl:26\\\
    n   [2] top-level scope at /tmp/tmp04r0u7_p.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp04r0u7_p.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp04r0u7_p.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp04r0u7_p.jl:26\\\
    n   [2] top-level scope at /tmp/tmp04r0u7_p.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp04r0u7_p.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp04r0u7_p.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp04r0u7_p.jl:26\\\
    n   [2] top-level scope at /tmp/tmp04r0u7_p.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp04r0u7_p.jl:36\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpmv7hs25a.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpmv7hs25a.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpmv7hs25a.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpmv7hs25a.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpmv7hs25a.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpmv7hs25a.jl:26\\\
    n   [2] top-level scope at /tmp/tmpmv7hs25a.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpmv7hs25a.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpmv7hs25a.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpmv7hs25a.jl:26\\\
    n   [2] top-level scope at /tmp/tmpmv7hs25a.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpmv7hs25a.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpmv7hs25a.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpmv7hs25a.jl:26\\\
    n   [2] top-level scope at /tmp/tmpmv7hs25a.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpmv7hs25a.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpmv7hs25a.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpmv7hs25a.jl:26\\\
    n   [2] top-level scope at /tmp/tmpmv7hs25a.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpmv7hs25a.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpmv7hs25a.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpmv7hs25a.jl:26\\\
    n   [2] top-level scope at /tmp/tmpmv7hs25a.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpmv7hs25a.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpmv7hs25a.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpmv7hs25a.jl:26\\\
    n   [2] top-level scope at /tmp/tmpmv7hs25a.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpmv7hs25a.jl:36\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\\nin expression starting at /tmp/tmpmv7hs25a.jl:34\\n'"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpob8jze89.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpob8jze89.jl:26\n   [2] top-level scope at /tmp/tmpob8jze89.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpob8jze89.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpob8jze89.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpob8jze89.jl:26\n\
    \   [2] top-level scope at /tmp/tmpob8jze89.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpob8jze89.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpob8jze89.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpob8jze89.jl:26\n\
    \   [2] top-level scope at /tmp/tmpob8jze89.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpob8jze89.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpob8jze89.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpob8jze89.jl:26\n\
    \   [2] top-level scope at /tmp/tmpob8jze89.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpob8jze89.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpob8jze89.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpob8jze89.jl:26\n\
    \   [2] top-level scope at /tmp/tmpob8jze89.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpob8jze89.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpob8jze89.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpob8jze89.jl:26\n\
    \   [2] top-level scope at /tmp/tmpob8jze89.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpob8jze89.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpob8jze89.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpob8jze89.jl:26\n\
    \   [2] top-level scope at /tmp/tmpob8jze89.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpob8jze89.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpob8jze89.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpr9ndbl_o.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpr9ndbl_o.jl:26\n   [2] top-level scope at /tmp/tmpr9ndbl_o.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9ndbl_o.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpr9ndbl_o.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpr9ndbl_o.jl:26\n\
    \   [2] top-level scope at /tmp/tmpr9ndbl_o.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9ndbl_o.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpr9ndbl_o.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpr9ndbl_o.jl:26\n\
    \   [2] top-level scope at /tmp/tmpr9ndbl_o.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9ndbl_o.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpr9ndbl_o.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpr9ndbl_o.jl:26\n\
    \   [2] top-level scope at /tmp/tmpr9ndbl_o.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9ndbl_o.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpr9ndbl_o.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpr9ndbl_o.jl:26\n\
    \   [2] top-level scope at /tmp/tmpr9ndbl_o.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9ndbl_o.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpr9ndbl_o.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpr9ndbl_o.jl:26\n\
    \   [2] top-level scope at /tmp/tmpr9ndbl_o.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9ndbl_o.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpr9ndbl_o.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpr9ndbl_o.jl:26\n\
    \   [2] top-level scope at /tmp/tmpr9ndbl_o.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpr9ndbl_o.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr9ndbl_o.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmps4i67vum.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmps4i67vum.jl:26\n   [2] top-level scope at /tmp/tmps4i67vum.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps4i67vum.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmps4i67vum.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmps4i67vum.jl:26\n\
    \   [2] top-level scope at /tmp/tmps4i67vum.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps4i67vum.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmps4i67vum.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmps4i67vum.jl:26\n\
    \   [2] top-level scope at /tmp/tmps4i67vum.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps4i67vum.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmps4i67vum.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmps4i67vum.jl:26\n\
    \   [2] top-level scope at /tmp/tmps4i67vum.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps4i67vum.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmps4i67vum.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmps4i67vum.jl:26\n\
    \   [2] top-level scope at /tmp/tmps4i67vum.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps4i67vum.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmps4i67vum.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmps4i67vum.jl:26\n\
    \   [2] top-level scope at /tmp/tmps4i67vum.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps4i67vum.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmps4i67vum.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmps4i67vum.jl:26\n\
    \   [2] top-level scope at /tmp/tmps4i67vum.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmps4i67vum.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps4i67vum.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpnivri5gy.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpnivri5gy.jl:26\n   [2] top-level scope at /tmp/tmpnivri5gy.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnivri5gy.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpnivri5gy.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnivri5gy.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnivri5gy.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnivri5gy.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpnivri5gy.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnivri5gy.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnivri5gy.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnivri5gy.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpnivri5gy.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnivri5gy.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnivri5gy.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnivri5gy.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpnivri5gy.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnivri5gy.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnivri5gy.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnivri5gy.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpnivri5gy.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnivri5gy.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnivri5gy.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnivri5gy.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpnivri5gy.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpnivri5gy.jl:26\n\
    \   [2] top-level scope at /tmp/tmpnivri5gy.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpnivri5gy.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnivri5gy.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpcy1m6rii.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpcy1m6rii.jl:26\n   [2] top-level scope at /tmp/tmpcy1m6rii.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcy1m6rii.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcy1m6rii.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcy1m6rii.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcy1m6rii.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcy1m6rii.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcy1m6rii.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcy1m6rii.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcy1m6rii.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcy1m6rii.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcy1m6rii.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcy1m6rii.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcy1m6rii.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcy1m6rii.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcy1m6rii.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcy1m6rii.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcy1m6rii.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcy1m6rii.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcy1m6rii.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcy1m6rii.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcy1m6rii.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcy1m6rii.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpcy1m6rii.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpcy1m6rii.jl:26\n\
    \   [2] top-level scope at /tmp/tmpcy1m6rii.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpcy1m6rii.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcy1m6rii.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm3m6291d.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpm3m6291d.jl:26\n   [2] top-level scope at /tmp/tmpm3m6291d.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm3m6291d.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpm3m6291d.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpm3m6291d.jl:26\n\
    \   [2] top-level scope at /tmp/tmpm3m6291d.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm3m6291d.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpm3m6291d.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpm3m6291d.jl:26\n\
    \   [2] top-level scope at /tmp/tmpm3m6291d.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm3m6291d.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpm3m6291d.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpm3m6291d.jl:26\n\
    \   [2] top-level scope at /tmp/tmpm3m6291d.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm3m6291d.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpm3m6291d.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpm3m6291d.jl:26\n\
    \   [2] top-level scope at /tmp/tmpm3m6291d.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm3m6291d.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpm3m6291d.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpm3m6291d.jl:26\n\
    \   [2] top-level scope at /tmp/tmpm3m6291d.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm3m6291d.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpm3m6291d.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpm3m6291d.jl:26\n\
    \   [2] top-level scope at /tmp/tmpm3m6291d.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpm3m6291d.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm3m6291d.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp7tpr8z8v.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp7tpr8z8v.jl:26\n   [2] top-level scope at /tmp/tmp7tpr8z8v.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7tpr8z8v.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7tpr8z8v.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7tpr8z8v.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7tpr8z8v.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7tpr8z8v.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7tpr8z8v.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7tpr8z8v.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7tpr8z8v.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7tpr8z8v.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7tpr8z8v.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7tpr8z8v.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7tpr8z8v.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7tpr8z8v.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7tpr8z8v.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7tpr8z8v.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7tpr8z8v.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7tpr8z8v.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7tpr8z8v.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7tpr8z8v.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7tpr8z8v.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7tpr8z8v.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp7tpr8z8v.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp7tpr8z8v.jl:26\n\
    \   [2] top-level scope at /tmp/tmp7tpr8z8v.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp7tpr8z8v.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7tpr8z8v.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    if interval1[1]\
    \ > interval2[1]\n        start = interval1[1]\n    else\n        start = interval2[1]\n\
    \    end\n    if interval1[2] < interval2[2]\n        stop = interval1[2]\n  \
    \  else\n        stop = interval2[2]\n    end\n    if start == stop\n        return\
    \ \"NO\"\n    end\n    if isprime(stop - start)\n        return \"YES\"\n    else\n\
    \        return \"NO\"\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1,\
    \ 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t\
    @test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1,\
    \ -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpn7p3t77_.jl:49\n  Test threw exception\n\
    \  Expression: candidate((-1, 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime\
    \ not defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpn7p3t77_.jl:37\n   [2] top-level scope at /tmp/tmpn7p3t77_.jl:49\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7p3t77_.jl:47\n  \ntest set: Error During\
    \ Test at /tmp/tmpn7p3t77_.jl:50\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpn7p3t77_.jl:37\n\
    \   [2] top-level scope at /tmp/tmpn7p3t77_.jl:50\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7p3t77_.jl:47\n  \ntest set: Error During\
    \ Test at /tmp/tmpn7p3t77_.jl:51\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpn7p3t77_.jl:37\n\
    \   [2] top-level scope at /tmp/tmpn7p3t77_.jl:51\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7p3t77_.jl:47\n  \ntest set: Error During\
    \ Test at /tmp/tmpn7p3t77_.jl:54\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpn7p3t77_.jl:37\n\
    \   [2] top-level scope at /tmp/tmpn7p3t77_.jl:54\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpn7p3t77_.jl:47\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    4      4      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 4 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn7p3t77_.jl:45\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp4vndj_qq.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmp4vndj_qq.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmp4vndj_qq.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4vndj_qq.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4vndj_qq.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4vndj_qq.jl:26\\\
    n   [2] top-level scope at /tmp/tmp4vndj_qq.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4vndj_qq.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4vndj_qq.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4vndj_qq.jl:26\\\
    n   [2] top-level scope at /tmp/tmp4vndj_qq.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4vndj_qq.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4vndj_qq.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4vndj_qq.jl:26\\\
    n   [2] top-level scope at /tmp/tmp4vndj_qq.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4vndj_qq.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4vndj_qq.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4vndj_qq.jl:26\\\
    n   [2] top-level scope at /tmp/tmp4vndj_qq.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4vndj_qq.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4vndj_qq.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4vndj_qq.jl:26\\\
    n   [2] top-level scope at /tmp/tmp4vndj_qq.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4vndj_qq.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp4vndj_qq.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4vndj_qq.jl:26\\\
    n   [2] top-level scope at /tmp/tmp4vndj_qq.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp4vndj_qq.jl:36\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvbjewn4s.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpvbjewn4s.jl:26\n   [2] top-level scope at /tmp/tmpvbjewn4s.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvbjewn4s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvbjewn4s.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvbjewn4s.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvbjewn4s.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvbjewn4s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvbjewn4s.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvbjewn4s.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvbjewn4s.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvbjewn4s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvbjewn4s.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvbjewn4s.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvbjewn4s.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvbjewn4s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvbjewn4s.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvbjewn4s.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvbjewn4s.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvbjewn4s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvbjewn4s.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvbjewn4s.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvbjewn4s.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvbjewn4s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvbjewn4s.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvbjewn4s.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvbjewn4s.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvbjewn4s.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvbjewn4s.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp54k5ag5b.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp54k5ag5b.jl:26\n   [2] top-level scope at /tmp/tmp54k5ag5b.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp54k5ag5b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp54k5ag5b.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp54k5ag5b.jl:26\n\
    \   [2] top-level scope at /tmp/tmp54k5ag5b.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp54k5ag5b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp54k5ag5b.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp54k5ag5b.jl:26\n\
    \   [2] top-level scope at /tmp/tmp54k5ag5b.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp54k5ag5b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp54k5ag5b.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp54k5ag5b.jl:26\n\
    \   [2] top-level scope at /tmp/tmp54k5ag5b.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp54k5ag5b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp54k5ag5b.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp54k5ag5b.jl:26\n\
    \   [2] top-level scope at /tmp/tmp54k5ag5b.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp54k5ag5b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp54k5ag5b.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp54k5ag5b.jl:26\n\
    \   [2] top-level scope at /tmp/tmp54k5ag5b.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp54k5ag5b.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp54k5ag5b.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp54k5ag5b.jl:26\n\
    \   [2] top-level scope at /tmp/tmp54k5ag5b.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp54k5ag5b.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp54k5ag5b.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp22qzrlg9.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp22qzrlg9.jl:26\n   [2] top-level scope at /tmp/tmp22qzrlg9.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp22qzrlg9.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp22qzrlg9.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp22qzrlg9.jl:26\n\
    \   [2] top-level scope at /tmp/tmp22qzrlg9.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp22qzrlg9.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp22qzrlg9.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp22qzrlg9.jl:26\n\
    \   [2] top-level scope at /tmp/tmp22qzrlg9.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp22qzrlg9.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp22qzrlg9.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp22qzrlg9.jl:26\n\
    \   [2] top-level scope at /tmp/tmp22qzrlg9.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp22qzrlg9.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp22qzrlg9.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp22qzrlg9.jl:26\n\
    \   [2] top-level scope at /tmp/tmp22qzrlg9.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp22qzrlg9.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp22qzrlg9.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp22qzrlg9.jl:26\n\
    \   [2] top-level scope at /tmp/tmp22qzrlg9.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp22qzrlg9.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp22qzrlg9.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp22qzrlg9.jl:26\n\
    \   [2] top-level scope at /tmp/tmp22qzrlg9.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp22qzrlg9.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp22qzrlg9.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8yrc95hd.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp8yrc95hd.jl:26\n   [2] top-level scope at /tmp/tmp8yrc95hd.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8yrc95hd.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp8yrc95hd.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8yrc95hd.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8yrc95hd.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8yrc95hd.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp8yrc95hd.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8yrc95hd.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8yrc95hd.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8yrc95hd.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp8yrc95hd.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8yrc95hd.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8yrc95hd.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8yrc95hd.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp8yrc95hd.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8yrc95hd.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8yrc95hd.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8yrc95hd.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp8yrc95hd.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8yrc95hd.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8yrc95hd.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8yrc95hd.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp8yrc95hd.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8yrc95hd.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8yrc95hd.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8yrc95hd.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8yrc95hd.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp6xiub3g2.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmp6xiub3g2.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmp6xiub3g2.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6xiub3g2.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6xiub3g2.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp6xiub3g2.jl:26\\\
    n   [2] top-level scope at /tmp/tmp6xiub3g2.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6xiub3g2.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6xiub3g2.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp6xiub3g2.jl:26\\\
    n   [2] top-level scope at /tmp/tmp6xiub3g2.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6xiub3g2.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6xiub3g2.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp6xiub3g2.jl:26\\\
    n   [2] top-level scope at /tmp/tmp6xiub3g2.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6xiub3g2.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6xiub3g2.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp6xiub3g2.jl:26\\\
    n   [2] top-level scope at /tmp/tmp6xiub3g2.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6xiub3g2.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6xiub3g2.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp6xiub3g2.jl:26\\\
    n   [2] top-level scope at /tmp/tmp6xiub3g2.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6xiub3g2.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp6xiub3g2.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp6xiub3g2.jl:26\\\
    n   [2] top-level scope at /tmp/tmp6xiub3g2.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp6xiub3g2.jl:36\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp17j8i8yg.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp17j8i8yg.jl:26\n   [2] top-level scope at /tmp/tmp17j8i8yg.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp17j8i8yg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp17j8i8yg.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp17j8i8yg.jl:26\n\
    \   [2] top-level scope at /tmp/tmp17j8i8yg.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp17j8i8yg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp17j8i8yg.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp17j8i8yg.jl:26\n\
    \   [2] top-level scope at /tmp/tmp17j8i8yg.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp17j8i8yg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp17j8i8yg.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp17j8i8yg.jl:26\n\
    \   [2] top-level scope at /tmp/tmp17j8i8yg.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp17j8i8yg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp17j8i8yg.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp17j8i8yg.jl:26\n\
    \   [2] top-level scope at /tmp/tmp17j8i8yg.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp17j8i8yg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp17j8i8yg.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp17j8i8yg.jl:26\n\
    \   [2] top-level scope at /tmp/tmp17j8i8yg.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp17j8i8yg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp17j8i8yg.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp17j8i8yg.jl:26\n\
    \   [2] top-level scope at /tmp/tmp17j8i8yg.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp17j8i8yg.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp17j8i8yg.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2hamy04r.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp2hamy04r.jl:26\n   [2] top-level scope at /tmp/tmp2hamy04r.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2hamy04r.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp2hamy04r.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp2hamy04r.jl:26\n\
    \   [2] top-level scope at /tmp/tmp2hamy04r.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2hamy04r.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp2hamy04r.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp2hamy04r.jl:26\n\
    \   [2] top-level scope at /tmp/tmp2hamy04r.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2hamy04r.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp2hamy04r.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp2hamy04r.jl:26\n\
    \   [2] top-level scope at /tmp/tmp2hamy04r.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2hamy04r.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp2hamy04r.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp2hamy04r.jl:26\n\
    \   [2] top-level scope at /tmp/tmp2hamy04r.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2hamy04r.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp2hamy04r.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp2hamy04r.jl:26\n\
    \   [2] top-level scope at /tmp/tmp2hamy04r.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2hamy04r.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp2hamy04r.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp2hamy04r.jl:26\n\
    \   [2] top-level scope at /tmp/tmp2hamy04r.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp2hamy04r.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2hamy04r.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmppnfra800.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmppnfra800.jl:26\n   [2] top-level scope at /tmp/tmppnfra800.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppnfra800.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppnfra800.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppnfra800.jl:26\n\
    \   [2] top-level scope at /tmp/tmppnfra800.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppnfra800.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppnfra800.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppnfra800.jl:26\n\
    \   [2] top-level scope at /tmp/tmppnfra800.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppnfra800.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppnfra800.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppnfra800.jl:26\n\
    \   [2] top-level scope at /tmp/tmppnfra800.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppnfra800.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppnfra800.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppnfra800.jl:26\n\
    \   [2] top-level scope at /tmp/tmppnfra800.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppnfra800.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppnfra800.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppnfra800.jl:26\n\
    \   [2] top-level scope at /tmp/tmppnfra800.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppnfra800.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmppnfra800.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmppnfra800.jl:26\n\
    \   [2] top-level scope at /tmp/tmppnfra800.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmppnfra800.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppnfra800.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp15kfef6j.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmp15kfef6j.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmp15kfef6j.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp15kfef6j.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp15kfef6j.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp15kfef6j.jl:26\\\
    n   [2] top-level scope at /tmp/tmp15kfef6j.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp15kfef6j.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp15kfef6j.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp15kfef6j.jl:26\\\
    n   [2] top-level scope at /tmp/tmp15kfef6j.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp15kfef6j.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp15kfef6j.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp15kfef6j.jl:26\\\
    n   [2] top-level scope at /tmp/tmp15kfef6j.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp15kfef6j.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp15kfef6j.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp15kfef6j.jl:26\\\
    n   [2] top-level scope at /tmp/tmp15kfef6j.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp15kfef6j.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp15kfef6j.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp15kfef6j.jl:26\\\
    n   [2] top-level scope at /tmp/tmp15kfef6j.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp15kfef6j.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp15kfef6j.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp15kfef6j.jl:26\\\
    n   [2] top-level scope at /tmp/tmp15kfef6j.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp15kfef6j.jl:36\\n  \\nTest Summary: | Pass\
    \  Error  Total\\ntest set      |    1      7      8\\n'"
  stderr: "b'ERROR: LoadError: '"
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmpbn9tzv6v.jl:37\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmpbn9tzv6v.jl:26\\n   [2] top-level scope at\
    \ /tmp/tmpbn9tzv6v.jl:37\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbn9tzv6v.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbn9tzv6v.jl:38\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbn9tzv6v.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbn9tzv6v.jl:38\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbn9tzv6v.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbn9tzv6v.jl:39\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbn9tzv6v.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbn9tzv6v.jl:39\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbn9tzv6v.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbn9tzv6v.jl:40\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbn9tzv6v.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbn9tzv6v.jl:40\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbn9tzv6v.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbn9tzv6v.jl:41\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbn9tzv6v.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbn9tzv6v.jl:41\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbn9tzv6v.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbn9tzv6v.jl:43\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbn9tzv6v.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbn9tzv6v.jl:43\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbn9tzv6v.jl:36\\n  \\ntest set: Error During\
    \ Test at /tmp/tmpbn9tzv6v.jl:44\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpbn9tzv6v.jl:26\\\
    n   [2] top-level scope at /tmp/tmpbn9tzv6v.jl:44\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmpbn9tzv6v.jl:36\\n  \\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp4igsj7e2.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp4igsj7e2.jl:26\n   [2] top-level scope at /tmp/tmp4igsj7e2.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4igsj7e2.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4igsj7e2.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4igsj7e2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4igsj7e2.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4igsj7e2.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4igsj7e2.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4igsj7e2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4igsj7e2.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4igsj7e2.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4igsj7e2.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4igsj7e2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4igsj7e2.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4igsj7e2.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4igsj7e2.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4igsj7e2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4igsj7e2.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4igsj7e2.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4igsj7e2.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4igsj7e2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4igsj7e2.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4igsj7e2.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp4igsj7e2.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp4igsj7e2.jl:26\n\
    \   [2] top-level scope at /tmp/tmp4igsj7e2.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp4igsj7e2.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4igsj7e2.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpwc78jszz.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpwc78jszz.jl:26\n   [2] top-level scope at /tmp/tmpwc78jszz.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwc78jszz.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpwc78jszz.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpwc78jszz.jl:26\n\
    \   [2] top-level scope at /tmp/tmpwc78jszz.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwc78jszz.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpwc78jszz.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpwc78jszz.jl:26\n\
    \   [2] top-level scope at /tmp/tmpwc78jszz.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwc78jszz.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpwc78jszz.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpwc78jszz.jl:26\n\
    \   [2] top-level scope at /tmp/tmpwc78jszz.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwc78jszz.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpwc78jszz.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpwc78jszz.jl:26\n\
    \   [2] top-level scope at /tmp/tmpwc78jszz.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwc78jszz.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpwc78jszz.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpwc78jszz.jl:26\n\
    \   [2] top-level scope at /tmp/tmpwc78jszz.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwc78jszz.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpwc78jszz.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpwc78jszz.jl:26\n\
    \   [2] top-level scope at /tmp/tmpwc78jszz.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpwc78jszz.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwc78jszz.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    if interval1[1]\
    \ <= interval2[1]\n        start = interval2[1]\n    else\n        start = interval1[1]\n\
    \    end\n    if interval1[2] <= interval2[2]\n        finish = interval1[2]\n\
    \    else\n        finish = interval2[2]\n    end\n    if isprime(finish - start\
    \ + 1)\n        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1,\
    \ 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "b'test set: Error During Test at /tmp/tmp5a5q29tj.jl:45\\n  Test threw\
    \ exception\\n  Expression: candidate((1, 2), (2, 3)) == \"NO\"\\n  UndefVarError:\
    \ isprime not defined\\n  Stacktrace:\\n   [1] intersection(::Tuple{Int64,Int64},\
    \ ::Tuple{Int64,Int64}) at /tmp/tmp5a5q29tj.jl:34\\n   [2] top-level scope at\
    \ /tmp/tmp5a5q29tj.jl:45\\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5a5q29tj.jl:44\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5a5q29tj.jl:46\\n  Test threw exception\\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5a5q29tj.jl:34\\\
    n   [2] top-level scope at /tmp/tmp5a5q29tj.jl:46\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5a5q29tj.jl:44\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5a5q29tj.jl:47\\n  Test threw exception\\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5a5q29tj.jl:34\\\
    n   [2] top-level scope at /tmp/tmp5a5q29tj.jl:47\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5a5q29tj.jl:44\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5a5q29tj.jl:48\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5a5q29tj.jl:34\\\
    n   [2] top-level scope at /tmp/tmp5a5q29tj.jl:48\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5a5q29tj.jl:44\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5a5q29tj.jl:49\\n  Test threw exception\\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5a5q29tj.jl:34\\\
    n   [2] top-level scope at /tmp/tmp5a5q29tj.jl:49\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5a5q29tj.jl:44\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5a5q29tj.jl:51\\n  Test threw exception\\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5a5q29tj.jl:34\\\
    n   [2] top-level scope at /tmp/tmp5a5q29tj.jl:51\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5a5q29tj.jl:44\\n  \\ntest set: Error During\
    \ Test at /tmp/tmp5a5q29tj.jl:52\\n  Test threw exception\\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\\n  UndefVarError: isprime not defined\\n  Stacktrace:\\\
    n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp5a5q29tj.jl:34\\\
    n   [2] top-level scope at /tmp/tmp5a5q29tj.jl:52\\n   [3] top-level scope at\
    \ /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\\\
    n   [4] top-level scope at /tmp/tmp5a5q29tj.jl:44\\n  \\nTest Summary: | Pass\
    \  Error  Total\\n'"
  stderr: None
  exit_code: -1
  status: Timeout
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpi3ya61vc.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpi3ya61vc.jl:26\n   [2] top-level scope at /tmp/tmpi3ya61vc.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi3ya61vc.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpi3ya61vc.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpi3ya61vc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpi3ya61vc.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi3ya61vc.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpi3ya61vc.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpi3ya61vc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpi3ya61vc.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi3ya61vc.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpi3ya61vc.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpi3ya61vc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpi3ya61vc.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi3ya61vc.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpi3ya61vc.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpi3ya61vc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpi3ya61vc.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi3ya61vc.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpi3ya61vc.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpi3ya61vc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpi3ya61vc.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi3ya61vc.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpi3ya61vc.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpi3ya61vc.jl:26\n\
    \   [2] top-level scope at /tmp/tmpi3ya61vc.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpi3ya61vc.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi3ya61vc.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpan7s57vu.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpan7s57vu.jl:26\n   [2] top-level scope at /tmp/tmpan7s57vu.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpan7s57vu.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpan7s57vu.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpan7s57vu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpan7s57vu.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpan7s57vu.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpan7s57vu.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpan7s57vu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpan7s57vu.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpan7s57vu.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpan7s57vu.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpan7s57vu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpan7s57vu.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpan7s57vu.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpan7s57vu.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpan7s57vu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpan7s57vu.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpan7s57vu.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpan7s57vu.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpan7s57vu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpan7s57vu.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpan7s57vu.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpan7s57vu.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpan7s57vu.jl:26\n\
    \   [2] top-level scope at /tmp/tmpan7s57vu.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpan7s57vu.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpan7s57vu.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvp6llg_0.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpvp6llg_0.jl:26\n   [2] top-level scope at /tmp/tmpvp6llg_0.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvp6llg_0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvp6llg_0.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvp6llg_0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvp6llg_0.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvp6llg_0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvp6llg_0.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvp6llg_0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvp6llg_0.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvp6llg_0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvp6llg_0.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvp6llg_0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvp6llg_0.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvp6llg_0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvp6llg_0.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvp6llg_0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvp6llg_0.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvp6llg_0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvp6llg_0.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvp6llg_0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvp6llg_0.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvp6llg_0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvp6llg_0.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvp6llg_0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvp6llg_0.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvp6llg_0.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvp6llg_0.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpffeurp44.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpffeurp44.jl:26\n   [2] top-level scope at /tmp/tmpffeurp44.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpffeurp44.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpffeurp44.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpffeurp44.jl:26\n\
    \   [2] top-level scope at /tmp/tmpffeurp44.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpffeurp44.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpffeurp44.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpffeurp44.jl:26\n\
    \   [2] top-level scope at /tmp/tmpffeurp44.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpffeurp44.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpffeurp44.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpffeurp44.jl:26\n\
    \   [2] top-level scope at /tmp/tmpffeurp44.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpffeurp44.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpffeurp44.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpffeurp44.jl:26\n\
    \   [2] top-level scope at /tmp/tmpffeurp44.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpffeurp44.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpffeurp44.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpffeurp44.jl:26\n\
    \   [2] top-level scope at /tmp/tmpffeurp44.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpffeurp44.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpffeurp44.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpffeurp44.jl:26\n\
    \   [2] top-level scope at /tmp/tmpffeurp44.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpffeurp44.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpffeurp44.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8fnyf9xr.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp8fnyf9xr.jl:26\n   [2] top-level scope at /tmp/tmp8fnyf9xr.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8fnyf9xr.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8fnyf9xr.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8fnyf9xr.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8fnyf9xr.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8fnyf9xr.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8fnyf9xr.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8fnyf9xr.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8fnyf9xr.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8fnyf9xr.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8fnyf9xr.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8fnyf9xr.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8fnyf9xr.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8fnyf9xr.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8fnyf9xr.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8fnyf9xr.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8fnyf9xr.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8fnyf9xr.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8fnyf9xr.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8fnyf9xr.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8fnyf9xr.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8fnyf9xr.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8fnyf9xr.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8fnyf9xr.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8fnyf9xr.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8fnyf9xr.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8fnyf9xr.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmprv9lqnjs.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmprv9lqnjs.jl:26\n   [2] top-level scope at /tmp/tmprv9lqnjs.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprv9lqnjs.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmprv9lqnjs.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprv9lqnjs.jl:26\n\
    \   [2] top-level scope at /tmp/tmprv9lqnjs.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprv9lqnjs.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmprv9lqnjs.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprv9lqnjs.jl:26\n\
    \   [2] top-level scope at /tmp/tmprv9lqnjs.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprv9lqnjs.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmprv9lqnjs.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprv9lqnjs.jl:26\n\
    \   [2] top-level scope at /tmp/tmprv9lqnjs.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprv9lqnjs.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmprv9lqnjs.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprv9lqnjs.jl:26\n\
    \   [2] top-level scope at /tmp/tmprv9lqnjs.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprv9lqnjs.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmprv9lqnjs.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprv9lqnjs.jl:26\n\
    \   [2] top-level scope at /tmp/tmprv9lqnjs.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprv9lqnjs.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmprv9lqnjs.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmprv9lqnjs.jl:26\n\
    \   [2] top-level scope at /tmp/tmprv9lqnjs.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmprv9lqnjs.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprv9lqnjs.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp3_l3bczg.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp3_l3bczg.jl:26\n   [2] top-level scope at /tmp/tmp3_l3bczg.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3_l3bczg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3_l3bczg.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3_l3bczg.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3_l3bczg.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3_l3bczg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3_l3bczg.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3_l3bczg.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3_l3bczg.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3_l3bczg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3_l3bczg.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3_l3bczg.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3_l3bczg.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3_l3bczg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3_l3bczg.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3_l3bczg.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3_l3bczg.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3_l3bczg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3_l3bczg.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3_l3bczg.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3_l3bczg.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3_l3bczg.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp3_l3bczg.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp3_l3bczg.jl:26\n\
    \   [2] top-level scope at /tmp/tmp3_l3bczg.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp3_l3bczg.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3_l3bczg.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp1nvpria1.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp1nvpria1.jl:26\n   [2] top-level scope at /tmp/tmp1nvpria1.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1nvpria1.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp1nvpria1.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp1nvpria1.jl:26\n\
    \   [2] top-level scope at /tmp/tmp1nvpria1.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1nvpria1.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp1nvpria1.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp1nvpria1.jl:26\n\
    \   [2] top-level scope at /tmp/tmp1nvpria1.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1nvpria1.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp1nvpria1.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp1nvpria1.jl:26\n\
    \   [2] top-level scope at /tmp/tmp1nvpria1.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1nvpria1.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp1nvpria1.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp1nvpria1.jl:26\n\
    \   [2] top-level scope at /tmp/tmp1nvpria1.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1nvpria1.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp1nvpria1.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp1nvpria1.jl:26\n\
    \   [2] top-level scope at /tmp/tmp1nvpria1.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1nvpria1.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp1nvpria1.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp1nvpria1.jl:26\n\
    \   [2] top-level scope at /tmp/tmp1nvpria1.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp1nvpria1.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1nvpria1.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpimtge_d_.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpimtge_d_.jl:26\n   [2] top-level scope at /tmp/tmpimtge_d_.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimtge_d_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpimtge_d_.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpimtge_d_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpimtge_d_.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimtge_d_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpimtge_d_.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpimtge_d_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpimtge_d_.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimtge_d_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpimtge_d_.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpimtge_d_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpimtge_d_.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimtge_d_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpimtge_d_.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpimtge_d_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpimtge_d_.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimtge_d_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpimtge_d_.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpimtge_d_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpimtge_d_.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimtge_d_.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpimtge_d_.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpimtge_d_.jl:26\n\
    \   [2] top-level scope at /tmp/tmpimtge_d_.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpimtge_d_.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpimtge_d_.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpo6ijbipy.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpo6ijbipy.jl:26\n   [2] top-level scope at /tmp/tmpo6ijbipy.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6ijbipy.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6ijbipy.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpo6ijbipy.jl:26\n\
    \   [2] top-level scope at /tmp/tmpo6ijbipy.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6ijbipy.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6ijbipy.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpo6ijbipy.jl:26\n\
    \   [2] top-level scope at /tmp/tmpo6ijbipy.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6ijbipy.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6ijbipy.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpo6ijbipy.jl:26\n\
    \   [2] top-level scope at /tmp/tmpo6ijbipy.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6ijbipy.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6ijbipy.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpo6ijbipy.jl:26\n\
    \   [2] top-level scope at /tmp/tmpo6ijbipy.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6ijbipy.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6ijbipy.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpo6ijbipy.jl:26\n\
    \   [2] top-level scope at /tmp/tmpo6ijbipy.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6ijbipy.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpo6ijbipy.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpo6ijbipy.jl:26\n\
    \   [2] top-level scope at /tmp/tmpo6ijbipy.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpo6ijbipy.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo6ijbipy.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    return isprime(stop - start + 1) ? \"YES\"\
    \ : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\t\
    @test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpzh5ocyao.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpzh5ocyao.jl:26\n   [2] top-level scope at /tmp/tmpzh5ocyao.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzh5ocyao.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpzh5ocyao.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpzh5ocyao.jl:26\n\
    \   [2] top-level scope at /tmp/tmpzh5ocyao.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzh5ocyao.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpzh5ocyao.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpzh5ocyao.jl:26\n\
    \   [2] top-level scope at /tmp/tmpzh5ocyao.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzh5ocyao.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpzh5ocyao.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpzh5ocyao.jl:26\n\
    \   [2] top-level scope at /tmp/tmpzh5ocyao.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzh5ocyao.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpzh5ocyao.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpzh5ocyao.jl:26\n\
    \   [2] top-level scope at /tmp/tmpzh5ocyao.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzh5ocyao.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpzh5ocyao.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpzh5ocyao.jl:26\n\
    \   [2] top-level scope at /tmp/tmpzh5ocyao.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzh5ocyao.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmpzh5ocyao.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpzh5ocyao.jl:26\n\
    \   [2] top-level scope at /tmp/tmpzh5ocyao.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpzh5ocyao.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzh5ocyao.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpvkqkvbot.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpvkqkvbot.jl:26\n   [2] top-level scope at /tmp/tmpvkqkvbot.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvkqkvbot.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvkqkvbot.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvkqkvbot.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvkqkvbot.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvkqkvbot.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvkqkvbot.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvkqkvbot.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvkqkvbot.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvkqkvbot.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvkqkvbot.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvkqkvbot.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvkqkvbot.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvkqkvbot.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvkqkvbot.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvkqkvbot.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvkqkvbot.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvkqkvbot.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvkqkvbot.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvkqkvbot.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvkqkvbot.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvkqkvbot.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpvkqkvbot.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpvkqkvbot.jl:26\n\
    \   [2] top-level scope at /tmp/tmpvkqkvbot.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpvkqkvbot.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvkqkvbot.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    if interval1[1] > interval2[2]\
    \ || interval2[1] > interval1[2]\n        return \"NO\"\n    end\n    start =\
    \ max(interval1[1], interval2[1])\n    finish = min(interval1[2], interval2[2])\n\
    \    if start == finish\n        return \"NO\"\n    end\n    for i in 2:finish\n\
    \        if start % i == 0\n            return \"NO\"\n        end\n    end\n\
    \    return \"YES\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpauu0tjgp.jl:42\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n   Evaluated: \"YES\" == \"NO\"\nStacktrace:\n [1] top-level\
    \ scope at /tmp/tmpauu0tjgp.jl:42\n [2] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpauu0tjgp.jl:40\ntest set: Test Failed at /tmp/tmpauu0tjgp.jl:47\n\
    \  Expression: candidate((1, 2), (1, 2)) == \"NO\"\n   Evaluated: \"YES\" == \"\
    NO\"\nStacktrace:\n [1] top-level scope at /tmp/tmpauu0tjgp.jl:47\n [2] top-level\
    \ scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \ [3] top-level scope at /tmp/tmpauu0tjgp.jl:40\nTest Summary: | Pass  Fail  Total\n\
    test set      |    6     2      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 6 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpauu0tjgp.jl:38\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp149vhh97.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp149vhh97.jl:26\n   [2] top-level scope at /tmp/tmp149vhh97.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp149vhh97.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp149vhh97.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp149vhh97.jl:26\n\
    \   [2] top-level scope at /tmp/tmp149vhh97.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp149vhh97.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp149vhh97.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp149vhh97.jl:26\n\
    \   [2] top-level scope at /tmp/tmp149vhh97.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp149vhh97.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp149vhh97.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp149vhh97.jl:26\n\
    \   [2] top-level scope at /tmp/tmp149vhh97.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp149vhh97.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp149vhh97.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp149vhh97.jl:26\n\
    \   [2] top-level scope at /tmp/tmp149vhh97.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp149vhh97.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp149vhh97.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp149vhh97.jl:26\n\
    \   [2] top-level scope at /tmp/tmp149vhh97.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp149vhh97.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp149vhh97.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp149vhh97.jl:26\n\
    \   [2] top-level scope at /tmp/tmp149vhh97.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp149vhh97.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp149vhh97.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    return isprime(finish - start +\
    \ 1) ? \"YES\" : \"NO\"\nend\nusing Test\n\n@testset begin\n\ncandidate = intersection;\n\
    \t@test(candidate((1, 2), (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4))\
    \ == \"NO\")\n\t@test(candidate((-3, -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2,\
    \ 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\
    \t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2))\
    \ == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp79tpi3a_.jl:33\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp79tpi3a_.jl:26\n   [2] top-level scope at /tmp/tmp79tpi3a_.jl:33\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp79tpi3a_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp79tpi3a_.jl:34\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp79tpi3a_.jl:26\n\
    \   [2] top-level scope at /tmp/tmp79tpi3a_.jl:34\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp79tpi3a_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp79tpi3a_.jl:35\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp79tpi3a_.jl:26\n\
    \   [2] top-level scope at /tmp/tmp79tpi3a_.jl:35\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp79tpi3a_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp79tpi3a_.jl:36\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp79tpi3a_.jl:26\n\
    \   [2] top-level scope at /tmp/tmp79tpi3a_.jl:36\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp79tpi3a_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp79tpi3a_.jl:37\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp79tpi3a_.jl:26\n\
    \   [2] top-level scope at /tmp/tmp79tpi3a_.jl:37\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp79tpi3a_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp79tpi3a_.jl:39\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp79tpi3a_.jl:26\n\
    \   [2] top-level scope at /tmp/tmp79tpi3a_.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp79tpi3a_.jl:32\n  \ntest set: Error During\
    \ Test at /tmp/tmp79tpi3a_.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp79tpi3a_.jl:26\n\
    \   [2] top-level scope at /tmp/tmp79tpi3a_.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp79tpi3a_.jl:32\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp79tpi3a_.jl:30\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp8k0_9zib.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmp8k0_9zib.jl:26\n   [2] top-level scope at /tmp/tmp8k0_9zib.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8k0_9zib.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8k0_9zib.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8k0_9zib.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8k0_9zib.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8k0_9zib.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8k0_9zib.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8k0_9zib.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8k0_9zib.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8k0_9zib.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8k0_9zib.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8k0_9zib.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8k0_9zib.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8k0_9zib.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8k0_9zib.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8k0_9zib.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8k0_9zib.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8k0_9zib.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8k0_9zib.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8k0_9zib.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8k0_9zib.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8k0_9zib.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmp8k0_9zib.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmp8k0_9zib.jl:26\n\
    \   [2] top-level scope at /tmp/tmp8k0_9zib.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmp8k0_9zib.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8k0_9zib.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpgvgmj47s.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpgvgmj47s.jl:26\n   [2] top-level scope at /tmp/tmpgvgmj47s.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgvgmj47s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpgvgmj47s.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgvgmj47s.jl:26\n\
    \   [2] top-level scope at /tmp/tmpgvgmj47s.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgvgmj47s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpgvgmj47s.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgvgmj47s.jl:26\n\
    \   [2] top-level scope at /tmp/tmpgvgmj47s.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgvgmj47s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpgvgmj47s.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgvgmj47s.jl:26\n\
    \   [2] top-level scope at /tmp/tmpgvgmj47s.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgvgmj47s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpgvgmj47s.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgvgmj47s.jl:26\n\
    \   [2] top-level scope at /tmp/tmpgvgmj47s.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgvgmj47s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpgvgmj47s.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgvgmj47s.jl:26\n\
    \   [2] top-level scope at /tmp/tmpgvgmj47s.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgvgmj47s.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpgvgmj47s.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpgvgmj47s.jl:26\n\
    \   [2] top-level scope at /tmp/tmpgvgmj47s.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpgvgmj47s.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgvgmj47s.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpkff46qd0.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpkff46qd0.jl:26\n   [2] top-level scope at /tmp/tmpkff46qd0.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkff46qd0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpkff46qd0.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpkff46qd0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpkff46qd0.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkff46qd0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpkff46qd0.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpkff46qd0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpkff46qd0.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkff46qd0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpkff46qd0.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpkff46qd0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpkff46qd0.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkff46qd0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpkff46qd0.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpkff46qd0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpkff46qd0.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkff46qd0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpkff46qd0.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpkff46qd0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpkff46qd0.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkff46qd0.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpkff46qd0.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpkff46qd0.jl:26\n\
    \   [2] top-level scope at /tmp/tmpkff46qd0.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpkff46qd0.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkff46qd0.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    finish = min(interval1[2], interval2[2])\n    if start >\
    \ finish\n        return \"NO\"\n    end\n    if isprime(finish - start + 1)\n\
    \        return \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2),\
    \ (2, 3)) == \"NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3,\
    \ -1), (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\
    \t@test(candidate((-11, 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3,\
    \ 5)) == \"NO\")\n\t@test(candidate((1, 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2,\
    \ -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpb0zbfj_w.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpb0zbfj_w.jl:26\n   [2] top-level scope at /tmp/tmpb0zbfj_w.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb0zbfj_w.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpb0zbfj_w.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb0zbfj_w.jl:26\n\
    \   [2] top-level scope at /tmp/tmpb0zbfj_w.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb0zbfj_w.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpb0zbfj_w.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb0zbfj_w.jl:26\n\
    \   [2] top-level scope at /tmp/tmpb0zbfj_w.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb0zbfj_w.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpb0zbfj_w.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb0zbfj_w.jl:26\n\
    \   [2] top-level scope at /tmp/tmpb0zbfj_w.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb0zbfj_w.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpb0zbfj_w.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb0zbfj_w.jl:26\n\
    \   [2] top-level scope at /tmp/tmpb0zbfj_w.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb0zbfj_w.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpb0zbfj_w.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb0zbfj_w.jl:26\n\
    \   [2] top-level scope at /tmp/tmpb0zbfj_w.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb0zbfj_w.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpb0zbfj_w.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpb0zbfj_w.jl:26\n\
    \   [2] top-level scope at /tmp/tmpb0zbfj_w.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpb0zbfj_w.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb0zbfj_w.jl:34\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"You are given two intervals,\n    where each interval is a pair\
    \ of integers. For example, interval = (start, end) = (1, 2).\n    The given intervals\
    \ are closed which means that the interval (start, end)\n    includes both start\
    \ and end.\n    For each given interval, it is assumed that its start is less\
    \ or equal its end.\n    Your task is to determine whether the length of intersection\
    \ of these two \n    intervals is a prime number.\n    Example, the intersection\
    \ of the intervals (1, 3), (2, 4) is (2, 3)\n    which its length is 1, which\
    \ not a prime number.\n    If the length of the intersection is a prime number,\
    \ return \"YES\",\n    otherwise, return \"NO\".\n    If the two intervals don't\
    \ intersect, return \"NO\".\n\n\n    [input/output] samples:\n    intersection((1,\
    \ 2), (2, 3)) ==> \"NO\"\n    intersection((-1, 1), (0, 4)) ==> \"NO\"\n    intersection((-3,\
    \ -1), (-5, 5)) ==> \"YES\"\n    \"\"\"\nfunction intersection(interval1::Tuple{Int64,\
    \ Int64}, interval2::Tuple{Int64, Int64})::String \n    start = max(interval1[1],\
    \ interval2[1])\n    stop = min(interval1[2], interval2[2])\n    if start > stop\n\
    \        return \"NO\"\n    end\n    if isprime(stop - start + 1)\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = intersection;\n\t@test(candidate((1, 2), (2, 3)) == \"\
    NO\")\n\t@test(candidate((-1, 1), (0, 4)) == \"NO\")\n\t@test(candidate((-3, -1),\
    \ (-5, 5)) == \"YES\")\n\t@test(candidate((-2, 2), (-4, 0)) == \"YES\")\n\t@test(candidate((-11,\
    \ 2), (-1, -1)) == \"NO\")\n\t@test(candidate((1, 2), (3, 5)) == \"NO\")\n\t@test(candidate((1,\
    \ 2), (1, 2)) == \"NO\")\n\t@test(candidate((-2, -2), (-3, -2)) == \"NO\")\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpe740hgwl.jl:37\n  Test threw exception\n\
    \  Expression: candidate((1, 2), (2, 3)) == \"NO\"\n  UndefVarError: isprime not\
    \ defined\n  Stacktrace:\n   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64})\
    \ at /tmp/tmpe740hgwl.jl:26\n   [2] top-level scope at /tmp/tmpe740hgwl.jl:37\n\
    \   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe740hgwl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpe740hgwl.jl:38\n  Test threw exception\n  Expression: candidate((-1,\
    \ 1), (0, 4)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpe740hgwl.jl:26\n\
    \   [2] top-level scope at /tmp/tmpe740hgwl.jl:38\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe740hgwl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpe740hgwl.jl:39\n  Test threw exception\n  Expression: candidate((-3,\
    \ -1), (-5, 5)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpe740hgwl.jl:26\n\
    \   [2] top-level scope at /tmp/tmpe740hgwl.jl:39\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe740hgwl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpe740hgwl.jl:40\n  Test threw exception\n  Expression: candidate((-2,\
    \ 2), (-4, 0)) == \"YES\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpe740hgwl.jl:26\n\
    \   [2] top-level scope at /tmp/tmpe740hgwl.jl:40\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe740hgwl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpe740hgwl.jl:41\n  Test threw exception\n  Expression: candidate((-11,\
    \ 2), (-1, -1)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpe740hgwl.jl:26\n\
    \   [2] top-level scope at /tmp/tmpe740hgwl.jl:41\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe740hgwl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpe740hgwl.jl:43\n  Test threw exception\n  Expression: candidate((1,\
    \ 2), (1, 2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpe740hgwl.jl:26\n\
    \   [2] top-level scope at /tmp/tmpe740hgwl.jl:43\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe740hgwl.jl:36\n  \ntest set: Error During\
    \ Test at /tmp/tmpe740hgwl.jl:44\n  Test threw exception\n  Expression: candidate((-2,\
    \ -2), (-3, -2)) == \"NO\"\n  UndefVarError: isprime not defined\n  Stacktrace:\n\
    \   [1] intersection(::Tuple{Int64,Int64}, ::Tuple{Int64,Int64}) at /tmp/tmpe740hgwl.jl:26\n\
    \   [2] top-level scope at /tmp/tmpe740hgwl.jl:44\n   [3] top-level scope at /build/julia-98cBbp/julia-1.4.1+dfsg/usr/share/julia/stdlib/v1.4/Test/src/Test.jl:1113\n\
    \   [4] top-level scope at /tmp/tmpe740hgwl.jl:36\n  \nTest Summary: | Pass  Error\
    \  Total\ntest set      |    1      7      8\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 7 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe740hgwl.jl:34\n"
  exit_code: 1
  status: SyntaxError

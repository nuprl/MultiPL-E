name: HumanEval_126_is_sorted
language: julia
results:
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgjcb6k_e.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpgjcb6k_e.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgjcb6k_e.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpgjcb6k_e.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpgjcb6k_e.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgjcb6k_e.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgjcb6k_e.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9cimafc8.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp9cimafc8.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9cimafc8.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp9cimafc8.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp9cimafc8.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9cimafc8.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9cimafc8.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_q1fh1yx.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp_q1fh1yx.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_q1fh1yx.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp_q1fh1yx.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp_q1fh1yx.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_q1fh1yx.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_q1fh1yx.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9_bbq_g8.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp9_bbq_g8.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9_bbq_g8.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp9_bbq_g8.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp9_bbq_g8.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9_bbq_g8.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9_bbq_g8.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbpj9k9_w.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpbpj9k9_w.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbpj9k9_w.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbpj9k9_w.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_x4r4sij.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp_x4r4sij.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_x4r4sij.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_x4r4sij.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp_x4r4sij.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_x4r4sij.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_x4r4sij.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return length(unique(lst)) == length(lst) && all(lst[i] <= lst[i+1] for\
    \ i in 1:length(lst)-1)\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp686gp989.jl:35\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp686gp989.jl:35 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp686gp989.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp686gp989.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpfj121dd_.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpfj121dd_.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfj121dd_.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpfj121dd_.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpfj121dd_.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpfj121dd_.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpfj121dd_.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6behycz7.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp6behycz7.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6behycz7.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6behycz7.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4_rkzbz4.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp4_rkzbz4.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4_rkzbz4.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp4_rkzbz4.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp4_rkzbz4.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4_rkzbz4.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4_rkzbz4.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    # check if list is empty\n    if length(lst) == 0\n        return true\n\
    \    end\n    # check if list has more than 1 duplicate\n    if length(unique(lst))\
    \ != length(lst)\n        return false\n    end\n    # check if list is sorted\n\
    \    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzpx1mlds.jl:49\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpzpx1mlds.jl:49 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzpx1mlds.jl:37\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzpx1mlds.jl:35\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppfpojhwx.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmppfpojhwx.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppfpojhwx.jl:31\ntest set: Test\
    \ Failed at /tmp/tmppfpojhwx.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmppfpojhwx.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppfpojhwx.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppfpojhwx.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsicszqtj.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpsicszqtj.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsicszqtj.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsicszqtj.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpeploq0ps.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpeploq0ps.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpeploq0ps.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpeploq0ps.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpeploq0ps.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpeploq0ps.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpeploq0ps.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2oy70b_y.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp2oy70b_y.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2oy70b_y.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp2oy70b_y.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp2oy70b_y.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2oy70b_y.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2oy70b_y.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa_ne66oo.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpa_ne66oo.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa_ne66oo.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpa_ne66oo.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpa_ne66oo.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa_ne66oo.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa_ne66oo.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpagrwu8ds.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpagrwu8ds.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpagrwu8ds.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpagrwu8ds.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo9ob6u1t.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpo9ob6u1t.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo9ob6u1t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpo9ob6u1t.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpo9ob6u1t.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo9ob6u1t.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo9ob6u1t.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphh6a7bal.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmphh6a7bal.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphh6a7bal.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphh6a7bal.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3g2nakb4.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp3g2nakb4.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3g2nakb4.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp3g2nakb4.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp3g2nakb4.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3g2nakb4.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3g2nakb4.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo5zy9m_a.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpo5zy9m_a.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo5zy9m_a.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpo5zy9m_a.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpo5zy9m_a.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo5zy9m_a.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo5zy9m_a.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2rq49h3b.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp2rq49h3b.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2rq49h3b.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2rq49h3b.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8w3am2w9.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp8w3am2w9.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8w3am2w9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp8w3am2w9.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp8w3am2w9.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8w3am2w9.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8w3am2w9.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp7c4r87jy.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp7c4r87jy.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7c4r87jy.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp7c4r87jy.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp7c4r87jy.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp7c4r87jy.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp7c4r87jy.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp8rs8r8yi.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp8rs8r8yi.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp8rs8r8yi.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp8rs8r8yi.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppbls4lkl.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmppbls4lkl.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppbls4lkl.jl:31\ntest set: Test\
    \ Failed at /tmp/tmppbls4lkl.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmppbls4lkl.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppbls4lkl.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppbls4lkl.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3ygodufd.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp3ygodufd.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ygodufd.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3ygodufd.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjwc047us.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpjwc047us.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjwc047us.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpjwc047us.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpjwc047us.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjwc047us.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjwc047us.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpax97mk54.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpax97mk54.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpax97mk54.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpax97mk54.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpax97mk54.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpax97mk54.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpax97mk54.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3bt13sx2.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp3bt13sx2.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3bt13sx2.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3bt13sx2.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnzspe4fa.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpnzspe4fa.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnzspe4fa.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpnzspe4fa.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpnzspe4fa.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnzspe4fa.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnzspe4fa.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpk8rzwed3.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpk8rzwed3.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpk8rzwed3.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpk8rzwed3.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp903sgv8y.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp903sgv8y.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp903sgv8y.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp903sgv8y.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp903sgv8y.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp903sgv8y.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp903sgv8y.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpa2nr2njz.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpa2nr2njz.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpa2nr2njz.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpa2nr2njz.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmcfw5x7o.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpmcfw5x7o.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmcfw5x7o.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpmcfw5x7o.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpmcfw5x7o.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmcfw5x7o.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmcfw5x7o.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp129e2p6n.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp129e2p6n.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp129e2p6n.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp129e2p6n.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp30lxii_9.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp30lxii_9.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp30lxii_9.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp30lxii_9.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp30lxii_9.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp30lxii_9.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp30lxii_9.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3ino1hn5.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp3ino1hn5.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ino1hn5.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp3ino1hn5.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp3ino1hn5.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ino1hn5.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3ino1hn5.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp39f9ifi9.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp39f9ifi9.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp39f9ifi9.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp39f9ifi9.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqmqwvypy.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpqmqwvypy.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqmqwvypy.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpqmqwvypy.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpqmqwvypy.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqmqwvypy.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqmqwvypy.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnjv21300.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpnjv21300.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnjv21300.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpnjv21300.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpnjv21300.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnjv21300.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnjv21300.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpode_lzmw.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpode_lzmw.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpode_lzmw.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpode_lzmw.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgzflq1xs.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpgzflq1xs.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgzflq1xs.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpgzflq1xs.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpgzflq1xs.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgzflq1xs.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgzflq1xs.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp247zaf_g.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp247zaf_g.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp247zaf_g.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp247zaf_g.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp247zaf_g.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp247zaf_g.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp247zaf_g.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5piyuw_e.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp5piyuw_e.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5piyuw_e.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp5piyuw_e.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp5piyuw_e.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5piyuw_e.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5piyuw_e.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyfglnpzq.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpyfglnpzq.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyfglnpzq.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyfglnpzq.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpubrfcvjx.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpubrfcvjx.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpubrfcvjx.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpubrfcvjx.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpubrfcvjx.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpubrfcvjx.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpubrfcvjx.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbvxg6yau.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpbvxg6yau.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbvxg6yau.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbvxg6yau.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxcwn94p2.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpxcwn94p2.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxcwn94p2.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpxcwn94p2.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpxcwn94p2.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxcwn94p2.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxcwn94p2.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpf574qxzp.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpf574qxzp.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpf574qxzp.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpf574qxzp.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvwy3zztv.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpvwy3zztv.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvwy3zztv.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpvwy3zztv.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpvwy3zztv.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvwy3zztv.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvwy3zztv.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx47zm0de.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpx47zm0de.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx47zm0de.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpx47zm0de.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpx47zm0de.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx47zm0de.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx47zm0de.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1ryxknxg.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp1ryxknxg.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ryxknxg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp1ryxknxg.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp1ryxknxg.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1ryxknxg.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1ryxknxg.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqb6y8aqg.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpqb6y8aqg.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqb6y8aqg.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqb6y8aqg.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_pckkezr.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp_pckkezr.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_pckkezr.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp_pckkezr.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp_pckkezr.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_pckkezr.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_pckkezr.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt_k0nxez.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpt_k0nxez.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt_k0nxez.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt_k0nxez.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprh6ldc4m.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmprh6ldc4m.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprh6ldc4m.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprh6ldc4m.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg7opx133.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpg7opx133.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg7opx133.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpg7opx133.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpg7opx133.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg7opx133.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg7opx133.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr4on19sc.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpr4on19sc.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr4on19sc.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpr4on19sc.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpr4on19sc.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr4on19sc.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr4on19sc.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl2u8zqhk.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpl2u8zqhk.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl2u8zqhk.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl2u8zqhk.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6qh2pidv.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp6qh2pidv.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6qh2pidv.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6qh2pidv.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe0w4tmd4.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpe0w4tmd4.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe0w4tmd4.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpe0w4tmd4.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpe0w4tmd4.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe0w4tmd4.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe0w4tmd4.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqvf_qj5f.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpqvf_qj5f.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqvf_qj5f.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpqvf_qj5f.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpqvf_qj5f.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqvf_qj5f.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqvf_qj5f.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi3p_94g8.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpi3p_94g8.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi3p_94g8.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi3p_94g8.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1j55y58l.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp1j55y58l.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1j55y58l.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1j55y58l.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph7uese27.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmph7uese27.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph7uese27.jl:31\ntest set: Test\
    \ Failed at /tmp/tmph7uese27.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmph7uese27.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph7uese27.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph7uese27.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2b_vxfun.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp2b_vxfun.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2b_vxfun.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp2b_vxfun.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp2b_vxfun.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2b_vxfun.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2b_vxfun.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp2lodekk0.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp2lodekk0.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp2lodekk0.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2lodekk0.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_2q3b7a5.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp_2q3b7a5.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_2q3b7a5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp_2q3b7a5.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp_2q3b7a5.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_2q3b7a5.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_2q3b7a5.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmps5w1a3di.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmps5w1a3di.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmps5w1a3di.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmps5w1a3di.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpj42r2n0h.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpj42r2n0h.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpj42r2n0h.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpj42r2n0h.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpv9_hjjwn.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpv9_hjjwn.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpv9_hjjwn.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpv9_hjjwn.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbsu0a14y.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpbsu0a14y.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbsu0a14y.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbsu0a14y.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp80u8q68z.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp80u8q68z.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp80u8q68z.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp80u8q68z.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6nicbwg7.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp6nicbwg7.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6nicbwg7.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp6nicbwg7.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp6nicbwg7.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6nicbwg7.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6nicbwg7.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvthh035f.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpvthh035f.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvthh035f.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpvthh035f.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpvthh035f.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvthh035f.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvthh035f.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqh8t41ob.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpqh8t41ob.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqh8t41ob.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqh8t41ob.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn4xh7po8.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpn4xh7po8.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn4xh7po8.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpn4xh7po8.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpn4xh7po8.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn4xh7po8.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn4xh7po8.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzy5ge4or.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpzy5ge4or.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzy5ge4or.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzy5ge4or.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm_bm0684.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpm_bm0684.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm_bm0684.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm_bm0684.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjsv6i5_9.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpjsv6i5_9.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjsv6i5_9.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpjsv6i5_9.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpjsv6i5_9.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjsv6i5_9.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjsv6i5_9.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5egkwe63.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp5egkwe63.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5egkwe63.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp5egkwe63.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp5egkwe63.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5egkwe63.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5egkwe63.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpenwb4vr9.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpenwb4vr9.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpenwb4vr9.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpenwb4vr9.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6h2boqer.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp6h2boqer.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6h2boqer.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6h2boqer.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpe_e53ttq.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpe_e53ttq.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe_e53ttq.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpe_e53ttq.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpe_e53ttq.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpe_e53ttq.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpe_e53ttq.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmph9p1pqio.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmph9p1pqio.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph9p1pqio.jl:23\ntest set: Test\
    \ Failed at /tmp/tmph9p1pqio.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmph9p1pqio.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmph9p1pqio.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmph9p1pqio.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn__7yv_f.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpn__7yv_f.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn__7yv_f.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpn__7yv_f.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpn__7yv_f.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn__7yv_f.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn__7yv_f.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu9wgf927.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpu9wgf927.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu9wgf927.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpu9wgf927.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpu9wgf927.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu9wgf927.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu9wgf927.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp86fgjh02.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp86fgjh02.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp86fgjh02.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp86fgjh02.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp86fgjh02.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp86fgjh02.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp86fgjh02.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_bqeic64.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp_bqeic64.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_bqeic64.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp_bqeic64.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp_bqeic64.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_bqeic64.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_bqeic64.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgeheb91g.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpgeheb91g.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgeheb91g.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgeheb91g.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx0e5t49w.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpx0e5t49w.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx0e5t49w.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx0e5t49w.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxc7jw72y.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpxc7jw72y.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxc7jw72y.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpxc7jw72y.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpxc7jw72y.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxc7jw72y.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxc7jw72y.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpabpl282i.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpabpl282i.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpabpl282i.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpabpl282i.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpabpl282i.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpabpl282i.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpabpl282i.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp327rlu4n.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp327rlu4n.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp327rlu4n.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp327rlu4n.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    if length(lst)\
    \ == 2\n        return lst[1] <= lst[2]\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpozxlledb.jl:44\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpozxlledb.jl:44 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpozxlledb.jl:34\ntest set: Test\
    \ Failed at /tmp/tmpozxlledb.jl:45\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpozxlledb.jl:45 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpozxlledb.jl:34\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpozxlledb.jl:32\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmphf0u08_4.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmphf0u08_4.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmphf0u08_4.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmphf0u08_4.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdypfpx7w.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpdypfpx7w.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdypfpx7w.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdypfpx7w.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3qyjtuo4.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp3qyjtuo4.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3qyjtuo4.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp3qyjtuo4.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp3qyjtuo4.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3qyjtuo4.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3qyjtuo4.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpx4u6flev.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpx4u6flev.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx4u6flev.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpx4u6flev.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpx4u6flev.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpx4u6flev.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpx4u6flev.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg69l1bew.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpg69l1bew.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg69l1bew.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpg69l1bew.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpg69l1bew.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg69l1bew.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg69l1bew.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppk9il4hw.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmppk9il4hw.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppk9il4hw.jl:31\ntest set: Test\
    \ Failed at /tmp/tmppk9il4hw.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmppk9il4hw.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppk9il4hw.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppk9il4hw.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzte6e1qo.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpzte6e1qo.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzte6e1qo.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzte6e1qo.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_8dmlx_t.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp_8dmlx_t.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_8dmlx_t.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp_8dmlx_t.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp_8dmlx_t.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_8dmlx_t.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_8dmlx_t.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnckj7tpn.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpnckj7tpn.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnckj7tpn.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnckj7tpn.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9escm50q.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp9escm50q.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9escm50q.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9escm50q.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkuy8ac6s.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpkuy8ac6s.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkuy8ac6s.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkuy8ac6s.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpplqftbgi.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpplqftbgi.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpplqftbgi.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpplqftbgi.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpplqftbgi.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpplqftbgi.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpplqftbgi.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwd8rqxvm.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpwd8rqxvm.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwd8rqxvm.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwd8rqxvm.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjf0hu3qn.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpjf0hu3qn.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjf0hu3qn.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpjf0hu3qn.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpjf0hu3qn.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjf0hu3qn.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjf0hu3qn.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpowg5tihk.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpowg5tihk.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpowg5tihk.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpowg5tihk.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpqswtfxuz.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpqswtfxuz.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpqswtfxuz.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpqswtfxuz.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsqe4jap3.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpsqe4jap3.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsqe4jap3.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsqe4jap3.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgh18hg3k.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpgh18hg3k.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgh18hg3k.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgh18hg3k.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgr449cqa.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpgr449cqa.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgr449cqa.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgr449cqa.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd9mahky7.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpd9mahky7.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd9mahky7.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpd9mahky7.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpd9mahky7.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd9mahky7.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd9mahky7.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpmhm93r46.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpmhm93r46.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmhm93r46.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpmhm93r46.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpmhm93r46.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpmhm93r46.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmhm93r46.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppjcbn8r_.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmppjcbn8r_.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppjcbn8r_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmppjcbn8r_.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmppjcbn8r_.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppjcbn8r_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppjcbn8r_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpchps_qym.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpchps_qym.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpchps_qym.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpchps_qym.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpchps_qym.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpchps_qym.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpchps_qym.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0gvc2bqj.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0gvc2bqj.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0gvc2bqj.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp0gvc2bqj.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp0gvc2bqj.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0gvc2bqj.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0gvc2bqj.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp10b_z2t4.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp10b_z2t4.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp10b_z2t4.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp10b_z2t4.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpov5mxnq_.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpov5mxnq_.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpov5mxnq_.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpov5mxnq_.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpov5mxnq_.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpov5mxnq_.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpov5mxnq_.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpng5s8epj.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpng5s8epj.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpng5s8epj.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpng5s8epj.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpng5s8epj.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpng5s8epj.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpng5s8epj.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcek_wyev.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpcek_wyev.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcek_wyev.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcek_wyev.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3g24svzi.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp3g24svzi.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3g24svzi.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp3g24svzi.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp3g24svzi.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3g24svzi.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3g24svzi.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpucta8vx2.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpucta8vx2.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpucta8vx2.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpucta8vx2.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpucta8vx2.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpucta8vx2.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpucta8vx2.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp36qgbgse.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp36qgbgse.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp36qgbgse.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp36qgbgse.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp36qgbgse.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp36qgbgse.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp36qgbgse.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpokks0lzk.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpokks0lzk.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpokks0lzk.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpokks0lzk.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpyv3agvfq.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpyv3agvfq.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyv3agvfq.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpyv3agvfq.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpyv3agvfq.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpyv3agvfq.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpyv3agvfq.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq3k8ix_s.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpq3k8ix_s.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq3k8ix_s.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpq3k8ix_s.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpq3k8ix_s.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq3k8ix_s.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq3k8ix_s.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i]>lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzlem_02n.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpzlem_02n.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzlem_02n.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpzlem_02n.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpzlem_02n.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzlem_02n.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzlem_02n.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpem8y_g8_.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpem8y_g8_.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpem8y_g8_.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpem8y_g8_.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpem8y_g8_.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpem8y_g8_.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpem8y_g8_.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcvh2werv.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpcvh2werv.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcvh2werv.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpcvh2werv.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpcvh2werv.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcvh2werv.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcvh2werv.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpt2u0hy33.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpt2u0hy33.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt2u0hy33.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpt2u0hy33.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpt2u0hy33.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpt2u0hy33.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpt2u0hy33.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu5yl84zj.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpu5yl84zj.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu5yl84zj.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpu5yl84zj.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpu5yl84zj.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu5yl84zj.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu5yl84zj.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpffuf5x5e.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpffuf5x5e.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpffuf5x5e.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpffuf5x5e.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpazxz2u17.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpazxz2u17.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpazxz2u17.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpazxz2u17.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpgjj8ofp6.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpgjj8ofp6.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpgjj8ofp6.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpgjj8ofp6.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp99rrpya8.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp99rrpya8.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp99rrpya8.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp99rrpya8.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp99rrpya8.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp99rrpya8.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp99rrpya8.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0x1hat1p.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0x1hat1p.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0x1hat1p.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0x1hat1p.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp0x1hat1p.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0x1hat1p.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0x1hat1p.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0hdd28gd.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0hdd28gd.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0hdd28gd.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0hdd28gd.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpxcv6e71b.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpxcv6e71b.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxcv6e71b.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpxcv6e71b.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpxcv6e71b.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpxcv6e71b.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpxcv6e71b.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpjlqdkr_w.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpjlqdkr_w.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjlqdkr_w.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpjlqdkr_w.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpjlqdkr_w.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpjlqdkr_w.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpjlqdkr_w.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1_te5v18.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp1_te5v18.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1_te5v18.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp1_te5v18.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp1_te5v18.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1_te5v18.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1_te5v18.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpi_mta3db.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpi_mta3db.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi_mta3db.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpi_mta3db.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpi_mta3db.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpi_mta3db.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpi_mta3db.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3uxpcltw.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp3uxpcltw.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3uxpcltw.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3uxpcltw.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpl4pyamx5.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpl4pyamx5.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl4pyamx5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpl4pyamx5.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpl4pyamx5.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpl4pyamx5.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpl4pyamx5.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdwtkv5hx.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpdwtkv5hx.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdwtkv5hx.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdwtkv5hx.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpu7q07nkz.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpu7q07nkz.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpu7q07nkz.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpu7q07nkz.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1wduw87y.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp1wduw87y.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1wduw87y.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1wduw87y.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp45mkv2bf.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp45mkv2bf.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp45mkv2bf.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp45mkv2bf.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp45mkv2bf.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp45mkv2bf.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp45mkv2bf.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp9ko4b913.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp9ko4b913.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9ko4b913.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp9ko4b913.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp9ko4b913.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp9ko4b913.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp9ko4b913.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn89bdqwg.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpn89bdqwg.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn89bdqwg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpn89bdqwg.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpn89bdqwg.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn89bdqwg.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn89bdqwg.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp183m40uv.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp183m40uv.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp183m40uv.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp183m40uv.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpzycs38e8.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpzycs38e8.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpzycs38e8.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpzycs38e8.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp3ycc2w6x.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp3ycc2w6x.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ycc2w6x.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp3ycc2w6x.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp3ycc2w6x.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp3ycc2w6x.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp3ycc2w6x.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0d9j8p0a.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0d9j8p0a.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0d9j8p0a.jl:23\ntest set: Test\
    \ Failed at /tmp/tmp0d9j8p0a.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp0d9j8p0a.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0d9j8p0a.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0d9j8p0a.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbtmllwoh.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpbtmllwoh.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbtmllwoh.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbtmllwoh.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpwg7xnl7h.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpwg7xnl7h.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwg7xnl7h.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpwg7xnl7h.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpwg7xnl7h.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpwg7xnl7h.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpwg7xnl7h.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpkho7zdyc.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpkho7zdyc.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkho7zdyc.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpkho7zdyc.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpkho7zdyc.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpkho7zdyc.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpkho7zdyc.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptrz_tdgw.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmptrz_tdgw.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptrz_tdgw.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptrz_tdgw.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ho8e3q6.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp4ho8e3q6.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4ho8e3q6.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp4ho8e3q6.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp4ho8e3q6.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4ho8e3q6.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ho8e3q6.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpd8ixuixr.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpd8ixuixr.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd8ixuixr.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpd8ixuixr.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpd8ixuixr.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpd8ixuixr.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpd8ixuixr.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmppzrc0lev.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmppzrc0lev.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppzrc0lev.jl:31\ntest set: Test\
    \ Failed at /tmp/tmppzrc0lev.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmppzrc0lev.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmppzrc0lev.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmppzrc0lev.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpbuzse203.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpbuzse203.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbuzse203.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpbuzse203.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpbuzse203.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpbuzse203.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpbuzse203.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpcbv54ppn.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpcbv54ppn.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpcbv54ppn.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpcbv54ppn.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1df0sqql.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp1df0sqql.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1df0sqql.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp1df0sqql.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp1df0sqql.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1df0sqql.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1df0sqql.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo_o1aj22.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpo_o1aj22.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo_o1aj22.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpo_o1aj22.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpo_o1aj22.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo_o1aj22.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo_o1aj22.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvlzaqlf_.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpvlzaqlf_.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvlzaqlf_.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpvlzaqlf_.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpvlzaqlf_.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvlzaqlf_.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvlzaqlf_.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptv_5yz1k.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmptv_5yz1k.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptv_5yz1k.jl:23\ntest set: Test\
    \ Failed at /tmp/tmptv_5yz1k.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmptv_5yz1k.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptv_5yz1k.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptv_5yz1k.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpunn_2lpg.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpunn_2lpg.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpunn_2lpg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpunn_2lpg.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpunn_2lpg.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpunn_2lpg.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpunn_2lpg.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 2:length(lst)\n\
    \        if lst[i] < lst[i-1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpy72vqayg.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpy72vqayg.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy72vqayg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpy72vqayg.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpy72vqayg.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpy72vqayg.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpy72vqayg.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpq6fjlzgw.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpq6fjlzgw.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq6fjlzgw.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpq6fjlzgw.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpq6fjlzgw.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpq6fjlzgw.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpq6fjlzgw.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0qvxtaqe.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0qvxtaqe.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0qvxtaqe.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp0qvxtaqe.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp0qvxtaqe.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0qvxtaqe.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0qvxtaqe.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp5iadhgim.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp5iadhgim.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp5iadhgim.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp5iadhgim.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvn_h6gj7.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpvn_h6gj7.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvn_h6gj7.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvn_h6gj7.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp0k17eseg.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp0k17eseg.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0k17eseg.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp0k17eseg.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp0k17eseg.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp0k17eseg.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp0k17eseg.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpsj2ltmdb.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpsj2ltmdb.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpsj2ltmdb.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpsj2ltmdb.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp_k8sq72g.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp_k8sq72g.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_k8sq72g.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp_k8sq72g.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp_k8sq72g.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp_k8sq72g.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp_k8sq72g.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpm68z9n88.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpm68z9n88.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpm68z9n88.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm68z9n88.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4nw0vwnf.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp4nw0vwnf.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4nw0vwnf.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4nw0vwnf.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpb2jia30r.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpb2jia30r.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb2jia30r.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpb2jia30r.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpb2jia30r.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpb2jia30r.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpb2jia30r.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmplxn0r44q.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmplxn0r44q.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplxn0r44q.jl:23\ntest set: Test\
    \ Failed at /tmp/tmplxn0r44q.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmplxn0r44q.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmplxn0r44q.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmplxn0r44q.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return sort(lst) == lst\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4,\
    \ 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpuoui43q9.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpuoui43q9.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuoui43q9.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpuoui43q9.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpuoui43q9.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpuoui43q9.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpuoui43q9.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnx0a_jt5.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpnx0a_jt5.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnx0a_jt5.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpnx0a_jt5.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpnx0a_jt5.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnx0a_jt5.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnx0a_jt5.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 2:length(lst)\n        if lst[i] < lst[i-1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpygigtb0c.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpygigtb0c.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpygigtb0c.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpygigtb0c.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpygigtb0c.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpygigtb0c.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpygigtb0c.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpr82gonjj.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpr82gonjj.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpr82gonjj.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpr82gonjj.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmprn0_xby7.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmprn0_xby7.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmprn0_xby7.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmprn0_xby7.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp6n0xx_9u.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp6n0xx_9u.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6n0xx_9u.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp6n0xx_9u.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp6n0xx_9u.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp6n0xx_9u.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp6n0xx_9u.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpg06z4do1.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpg06z4do1.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg06z4do1.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpg06z4do1.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpg06z4do1.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpg06z4do1.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpg06z4do1.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp1n21mlkr.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp1n21mlkr.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1n21mlkr.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp1n21mlkr.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp1n21mlkr.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp1n21mlkr.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp1n21mlkr.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpo4zkb9x9.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpo4zkb9x9.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpo4zkb9x9.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpo4zkb9x9.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    return all(lst[i] <= lst[i+1] for i in 1:length(lst)-1)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t\
    @test(candidate([1, 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5])\
    \ == false)\n\t@test(candidate([1, 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\
    \t@test(candidate(Vector{Int64}([])) == true)\n\t@test(candidate([1]) == true)\n\
    \t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1, 2, 2, 2, 3, 4])\
    \ == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpnozbe3iy.jl:33\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpnozbe3iy.jl:33 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnozbe3iy.jl:23\ntest set: Test\
    \ Failed at /tmp/tmpnozbe3iy.jl:34\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpnozbe3iy.jl:34 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpnozbe3iy.jl:23\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpnozbe3iy.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptgn7k7nr.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmptgn7k7nr.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptgn7k7nr.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptgn7k7nr.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpdh980oal.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpdh980oal.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdh980oal.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpdh980oal.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpdh980oal.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpdh980oal.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpdh980oal.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpvzff5a3x.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpvzff5a3x.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvzff5a3x.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpvzff5a3x.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpvzff5a3x.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpvzff5a3x.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpvzff5a3x.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] >= lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpn8j30wvf.jl:43\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpn8j30wvf.jl:43 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpn8j30wvf.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpn8j30wvf.jl:29\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] >= lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmptyqam4cf.jl:40\n  Expression: candidate([1,\
    \ 2, 2, 3, 3, 4]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmptyqam4cf.jl:40 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmptyqam4cf.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   12     1     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 12 passed, 1 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmptyqam4cf.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    for i in 1:length(lst)-1\n        if lst[i] > lst[i+1]\n            return\
    \ false\n        end\n    end\n    return true\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = is_sorted;\n\t@test(candidate([5]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5]) == true)\n\t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([]))\
    \ == true)\n\t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\
    \t@test(candidate([1, 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3,\
    \ 3, 4]) == false)\n\t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1,\
    \ 2, 3, 4]) == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmpio5hnlql.jl:38\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmpio5hnlql.jl:38 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpio5hnlql.jl:28\ntest set: Test\
    \ Failed at /tmp/tmpio5hnlql.jl:39\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmpio5hnlql.jl:39 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmpio5hnlql.jl:28\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpio5hnlql.jl:26\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\"\n    Given a list of numbers, return whether or not they are sorted\n\
    \    in ascending order. If list has more than 1 duplicate of the same\n    number,\
    \ return False. Assume no negative numbers and only integers.\n\n    Examples\n\
    \    is_sorted([5]) \u279E True\n    is_sorted([1, 2, 3, 4, 5]) \u279E True\n\
    \    is_sorted([1, 3, 2, 4, 5]) \u279E False\n    is_sorted([1, 2, 3, 4, 5, 6])\
    \ \u279E True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n    is_sorted([1,\
    \ 3, 2, 4, 5, 6, 7]) \u279E False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279E True\n\
    \    is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n    \"\"\"\nfunction is_sorted(lst::Vector{Int64})::Bool\
    \ \n    if length(lst) == 1\n        return true\n    end\n    for i in 1:length(lst)-1\n\
    \        if lst[i] > lst[i+1]\n            return false\n        end\n    end\n\
    \    return true\nend\nusing Test\n\n@testset begin\n\ncandidate = is_sorted;\n\
    \t@test(candidate([5]) == true)\n\t@test(candidate([1, 2, 3, 4, 5]) == true)\n\
    \t@test(candidate([1, 3, 2, 4, 5]) == false)\n\t@test(candidate([1, 2, 3, 4, 5,\
    \ 6]) == true)\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7]) == true)\n\t@test(candidate([1,\
    \ 3, 2, 4, 5, 6, 7]) == false)\n\t@test(candidate(Vector{Int64}([])) == true)\n\
    \t@test(candidate([1]) == true)\n\t@test(candidate([3, 2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 2, 2, 3, 4]) == false)\n\t@test(candidate([1, 2, 3, 3, 3, 4]) == false)\n\
    \t@test(candidate([1, 2, 2, 3, 3, 4]) == true)\n\t@test(candidate([1, 2, 3, 4])\
    \ == true)\nend\n"
  stdout: "test set: Test Failed at /tmp/tmp4ahg90cr.jl:41\n  Expression: candidate([1,\
    \ 2, 2, 2, 3, 4]) == false\n   Evaluated: true == false\nStacktrace:\n [1] macro\
    \ expansion\n   @ /tmp/tmp4ahg90cr.jl:41 [inlined]\n [2] macro expansion\n   @\
    \ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4ahg90cr.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp4ahg90cr.jl:42\n  Expression: candidate([1, 2, 3, 3, 3, 4])\
    \ == false\n   Evaluated: true == false\nStacktrace:\n [1] macro expansion\n \
    \  @ /tmp/tmp4ahg90cr.jl:42 [inlined]\n [2] macro expansion\n   @ /buildworker/worker/package_linux64/build/usr/share/julia/stdlib/v1.6/Test/src/Test.jl:1151\
    \ [inlined]\n [3] top-level scope\n   @ /tmp/tmp4ahg90cr.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |   11     2     13\n"
  stderr: "ERROR: LoadError: Some tests did not pass: 11 passed, 2 failed, 0 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp4ahg90cr.jl:29\n"
  exit_code: 1
  status: SyntaxError

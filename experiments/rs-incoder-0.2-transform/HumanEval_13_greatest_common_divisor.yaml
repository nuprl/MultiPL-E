name: HumanEval_13_greatest_common_divisor
language: rs
prompt: "/// Return a greatest common divisor of two integers a and b\n/// >>> greatest_common_divisor(3,\
  \ 5)\n/// 1\n/// >>> greatest_common_divisor(25, 15)\n/// 5\nfn greatest_common_divisor(a:\
  \ isize, b: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut div = a / b;\n    while div > 1 {\n        div = div /\
    \ b;\n    }\n    div", "    if a < b {\n        greatest_common_divisor(b, a)\n\
    \    } else {\n        a.gcd(b).unwrap()\n    }", "    if a < b {\n        greatest_common_divisor(b,\
    \ a)\n    } else {\n        a.gcd(b)\n    }", "    if a < b {\n        greatest_common_divisor(b,\
    \ a)\n    } else {\n        a.gcd(b).unwrap()\n    }", "    if a < b {\n     \
    \   greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b)\n    }", " \
    \   let mut gcd = a;\n    while gcd < b {\n        gcd *= a;\n    }\n    gcd",
  "    if a == 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor",
  "    if a < b {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap()\n\
    \    }", "    let mut greatest_common_divisor = a;\n    while greatest_common_divisor\
    \ > b {\n        greatest_common_divisor -= b;\n    }\n    greatest_common_divisor",
  "    if a < b {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }", "    let mut greatest_divisor = a % b;\n    while greatest_divisor !=\
    \ 0 {\n        greatest_divisor = b;\n        b = a % b;\n    }\n    b", "   \
    \ let mut gcd = 1;\n    while a != 0 {\n        if b % a == 0 {\n            gcd\
    \ = a;\n        }\n        a /= b;\n    }\n    gcd", "    if a < b {\n       \
    \ greatest_common_divisor(b, a)\n    } else {\n        a.gcd(b).unwrap()\n   \
    \ }", "    if a < b {\n        greatest_common_divisor(b, a)\n    } else {\n \
    \       a.checked_div(b).unwrap_or(b)\n    }", '    (a / b).floor() as isize',
  "    if a < b {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b)\n\
    \    }", "    if a == 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a.abs() as isize;\n    for i in 1..b {\n        if a % i == 0 {\n        \
    \    greatest_common_divisor = i;\n            break;\n        }\n    }\n    greatest_common_divisor",
  "    if a == 0 || b == 0 {\n        return 0;\n    }\n    let mut greatest_common_divisor\
    \ = a % b;\n    while greatest_common_divisor != 0 {\n        greatest_common_divisor\
    \ = b;\n        b = a % b;\n        a = greatest_common_divisor;\n    }\n    greatest_common_divisor",
  "    if a < b {\n        greatest_common_divisor(b, a)\n    } else {\n        a.checked_div(b).unwrap_or(a)\n\
    \    }", "    if a < b {\n        greatest_common_divisor(b, a)\n    } else {\n\
    \        a.checked_div(b).unwrap_or(a)\n    }"]
stop_tokens:
- "\n}"

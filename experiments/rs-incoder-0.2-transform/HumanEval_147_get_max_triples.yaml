name: HumanEval_147_get_max_triples
language: rs
prompt: "/// You are given a positive integer n. You have to create an integer array\
  \ a of length n.\n/// For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
  \ i - i + 1.\n/// Return the number of triples (a[i], a[j], a[k]) of a where i <\
  \ j < k, \n/// and a[i] + a[j] + a[k] is a multiple of 3.\n/// Example :\n/// >>>\
  \ get_max_triples(5)\n/// 1\n/// Explanation: \n/// a = [1, 3, 7, 13, 21]\n/// The\
  \ only valid triple is (1, 7, 13).\nfn get_max_triples(n: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = get_max_triples;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut a = [0; n];\n    for i in 0..n {\n        a[i] = i * i\
    \ - i + 1;\n    }\n    let mut cnt = 0;\n    for i in 0..n {\n        for j in\
    \ 0..n {\n            for k in 0..n {\n                if i != j && i != k &&\
    \ j != k {\n                    cnt += a[i] - a[j] - a[k];\n                }\n\
    \            }\n        }\n    }\n    cnt", "    let mut a = vec![0; n];\n   \
    \ let mut cnt = 0;\n    for i in 0..n {\n        for j in 0..n {\n           \
    \ for k in 0..n {\n                if i < j && j < k && k < i {\n            \
    \        a[i] = i * i - i + 1;\n                    cnt += 1;\n              \
    \  }\n            }\n        }\n    }\n    cnt", "    let mut a = vec![0; n];\n\
    \    for i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n    let mut cnt =\
    \ 0;\n    for i in 0..n {\n        for j in 0..n {\n            for k in 0..n\
    \ {\n                if i < j < k {\n                    if a[i] < a[j] + a[k]\
    \ {\n                        cnt += 1;\n                    }\n              \
    \  }\n            }\n        }\n    }\n    cnt", "    let mut a = vec![0; n];\n\
    \    for i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n    let mut cnt =\
    \ 0;\n    for i in 0..n {\n        for j in 0..n {\n            for k in 0..n\
    \ {\n                if i < j < k {\n                    if a[i] < a[j] + a[k]\
    \ {\n                        cnt += 1;\n                    }\n              \
    \  }\n            }\n        }\n    }\n    cnt", "    let mut a = vec![0; n];\n\
    \    let mut cnt = 0;\n    for i in 1..n {\n        for j in (i + 1)..n {\n  \
    \          for k in (i + 1)..n {\n                if i != j && i != k && j !=\
    \ k {\n                    let res = i * i * i + j * j + k * k;\n            \
    \        if res == 3 {\n                        cnt += 1;\n                  \
    \  }\n                }\n            }\n        }\n    }\n    cnt", "    let mut\
    \ a = vec![0; n];\n    for i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n\
    \    a.iter().filter(|&x| x < 3).count()", "    let mut a = vec![0; n];\n    for\
    \ i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n    let mut cnt = 0;\n  \
    \  for i in 0..n {\n        for j in 0..n {\n            for k in 0..n {\n   \
    \             if i < j < k {\n                    if a[i] < a[j] + a[k] {\n  \
    \                      cnt += 1;\n                    }\n                }\n \
    \           }\n        }\n    }\n    cnt", "    let mut a = vec![0; n];\n    for\
    \ i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n    let mut cnt = 0;\n  \
    \  for i in 0..n {\n        for j in 0..n {\n            for k in 0..n {\n   \
    \             if i < j < k {\n                    if a[i] < a[j] + a[k] {\n  \
    \                      cnt += 1;\n                    }\n                }\n \
    \           }\n        }\n    }\n    cnt", "    let mut a = vec![0; n];\n    let\
    \ mut cnt = 0;\n    for i in 0..n {\n        a[i] = i * i - i + 1;\n        if\
    \ a[i] % 3 == 0 {\n            cnt += 1;\n        }\n    }\n    cnt", "    let\
    \ mut a = vec![0; n];\n    let mut cnt = 0;\n    for i in 0..n {\n        a[i]\
    \ = i * i - i + 1;\n        if a[i] % 3 == 0 {\n            cnt += 1;\n      \
    \  }\n    }\n    cnt", "    let mut a = [0; n];\n    for i in 0..n {\n       \
    \ a[i] = i * i - i + 1;\n    }\n    a.iter().filter(|&x| x > 0).count()", "  \
    \  let mut a = vec![0; n];\n    for i in 0..n {\n        a[i] = i * i - i + 1;\n\
    \    }\n    let mut cnt = 0;\n    for i in 0..n {\n        for j in 0..n {\n \
    \           for k in 0..n {\n                if i < j < k {\n                \
    \    if a[i] < a[j] + a[k] {\n                        cnt += 1;\n            \
    \        }\n                }\n            }\n        }\n    }\n    cnt", "  \
    \  let mut a = vec![0; n];\n    for i in 0..n {\n        a[i] = i * i - i + 1;\n\
    \    }\n    let mut cnt = 0;\n    for i in 0..n {\n        for j in 0..n {\n \
    \           for k in 0..n {\n                if i != j && i != k && j != k {\n\
    \                    if a[j] + a[k] + a[i] == 3 {\n                        cnt\
    \ += 1;\n                    }\n                }\n            }\n        }\n\
    \    }\n    cnt", "    let mut a = vec![0; n];\n    for i in 0..n {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    a.iter().filter(|&x| x < 3).count()", "    let\
    \ mut a = vec![0; n];\n    for i in 0..n {\n        a[i] = i * i - i + 1;\n  \
    \  }\n    let mut cnt = 0;\n    for i in 0..n {\n        for j in 0..n {\n   \
    \         for k in 0..n {\n                if i != j && i != k && j != k {\n \
    \                   if a[i] < a[j] + a[k] {\n                        cnt += 1;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   cnt", "    let mut a = vec![0; n];\n    let mut cnt = 0;\n    for i in 1..n\
    \ {\n        for j in (i + 1)..n {\n            for k in (i + 1)..n {\n      \
    \          if i != j && i != k && j != k {\n                    a[i] = i * i -\
    \ i + 1;\n                    cnt += 1;\n                }\n            }\n  \
    \      }\n    }\n    cnt", "    let mut a = vec![0; n];\n    for i in 0..n {\n\
    \        a[i] = i * i - i + 1;\n    }\n    let mut cnt = 0;\n    for i in 0..n\
    \ {\n        for j in 0..n {\n            for k in 0..n {\n                if\
    \ i < j < k {\n                    cnt += a[i] - a[j] - a[k];\n              \
    \  }\n            }\n        }\n    }\n    cnt", "    let mut a = vec![0; n];\n\
    \    for i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n    let mut cnt =\
    \ 0;\n    for i in 0..n {\n        for j in 0..n {\n            for k in 0..n\
    \ {\n                if i < j < k {\n                    if a[i] < a[j] + a[k]\
    \ {\n                        cnt += 1;\n                    }\n              \
    \  }\n            }\n        }\n    }\n    cnt", "    let mut a = vec![0; n];\n\
    \    for i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n    let mut cnt =\
    \ 0;\n    for i in 0..n {\n        for j in 0..n {\n            for k in 0..n\
    \ {\n                if i != j && i != k && j != k {\n                    if a[i]\
    \ < a[j] + a[k] {\n                        cnt += 1;\n                    }\n\
    \                }\n            }\n        }\n    }\n    cnt", "    let mut a\
    \ = vec![0; n];\n    for i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n \
    \   let mut cnt = 0;\n    for i in 0..n {\n        for j in 0..n {\n         \
    \   for k in 0..n {\n                if i < j < k {\n                    cnt +=\
    \ a[i] - a[j] - a[k];\n                }\n            }\n        }\n    }\n  \
    \  cnt", "    let mut a: [usize; n + 1] = Default::default();\n    for i in 1..n+1\
    \ {\n        a[i] = i * i - i + 1;\n    }\n    let mut cnt = 0;\n    for i in\
    \ 1..n+1 {\n        for j in 1..n+1 {\n            for k in 1..n+1 {\n       \
    \         if a[i] < a[j] && a[i] < a[k] && a[j] < a[k] {\n                   \
    \ cnt += 1;\n                }\n            }\n        }\n    }\n    cnt", " \
    \   let mut a = vec![0; n];\n    for i in 0..n {\n        a[i] = i * i - i + 1;\n\
    \    }\n    let mut triples = 1;\n    for i in 0..n {\n        for j in 0..n {\n\
    \            for k in 0..n {\n                if i != j && i != k && j != k {\n\
    \                    if a[i] < a[j] + a[k] {\n                        triples\
    \ += 1;\n                    }\n                }\n            }\n        }\n\
    \    }\n    triples", "    let mut a: [isize; n + 1] = Default::default();\n \
    \   for i in 1..n+1 {\n        a[i] = i * i - i + 1;\n    }\n    let mut cnt =\
    \ 0;\n    for i in 1..n+1 {\n        for j in 1..n+1 {\n            for k in 1..n+1\
    \ {\n                if i != j && i != k && j != k {\n                    if a[i]\
    \ < a[j] && a[i] < a[k] {\n                        if a[j] < a[k] {\n        \
    \                    cnt += 1;\n                        }\n                  \
    \  }\n                }\n            }\n        }\n    }\n    cnt", "    let mut\
    \ a = vec![0; n];\n    let mut sum = 0;\n    for i in 0..n {\n        a[i] = i\
    \ * i - i + 1;\n        sum += a[i];\n    }\n    for i in 0..n {\n        for\
    \ j in 0..n {\n            for k in 0..n {\n                if i < j < k {\n \
    \                   if a[i] < a[j] + a[k] {\n                        break;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   sum % 3", "    let mut a = vec![0; n];\n    for i in 0..n {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    let mut cnt = 0;\n    for i in 0..n {\n       \
    \ for j in 0..n {\n            for k in 0..n {\n                if i != j && i\
    \ != k && j != k {\n                    if a[i] < a[j] + a[k] {\n            \
    \            cnt += 1;\n                    }\n                }\n           \
    \ }\n        }\n    }\n    cnt", "    let mut a = vec![0; n];\n    for i in 0..n\
    \ {\n        a[i] = i * i - i + 1;\n    }\n    let mut triples = 0;\n    for i\
    \ in 0..n {\n        for j in 0..n {\n            for k in 0..n {\n          \
    \      if i != j && i != k && j != k {\n                    if a[i] < a[j] + a[k]\
    \ {\n                        triples += 1;\n                    }\n          \
    \      }\n            }\n        }\n    }\n    triples", "    let mut a = vec![0;\
    \ n];\n    for i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n    a.iter().filter(|&x|\
    \ x < 3).count()", "    let mut a = vec![0; n];\n    for i in 0..n {\n       \
    \ a[i] = i * i - i + 1;\n    }\n    let mut cnt = 0;\n    for i in 0..n {\n  \
    \      for j in 0..n {\n            for k in 0..n {\n                if i < j\
    \ < k {\n                    cnt += a[i] - a[j] - a[k];\n                }\n \
    \           }\n        }\n    }\n    cnt", "    let mut a = vec![0; n];\n    for\
    \ i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n    let mut cnt = 0;\n  \
    \  for i in 0..n {\n        for j in 0..n {\n            for k in 0..n {\n   \
    \             if i != j && i != k && j != k {\n                    if a[i] < a[j]\
    \ + a[k] {\n                        cnt += 1;\n                    }\n       \
    \         }\n            }\n        }\n    }\n    cnt", "    let mut a = vec![0;\
    \ n];\n    for i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n    let mut\
    \ triples = 0;\n    for i in 0..n {\n        for j in 0..n {\n            for\
    \ k in 0..n {\n                if i != j && i != k && j != k {\n             \
    \       let triple = &a[i..j];\n                    let triple = &a[j..k];\n \
    \                   let triple = &a[k..i];\n                    let triple = &a[i..k];\n\
    \                    let triple = &a[k..j];\n                    let triple =\
    \ &a[j..i];\n                    let triple = &a[i..j];\n                    let\
    \ triple = &a[j..k];\n                    let triple = &a[k..i];\n           \
    \         let triple = &a[i..k];\n                    let triple = &a[k..j];\n\
    \                    let triple = &a[j..i];\n                    let triple =\
    \ &a[i..k];\n                    let triple = &a[k..j];\n                    let\
    \ triple = &a[j..i];\n                    let triple = &a[i..k];\n           \
    \         let triple = &a[k..j];\n                    let triple = &a[j..i];\n\
    \                    let triple = &a[i..k];\n                    let triple =\
    \ &a[k..j];\n                    let triple = &a[j..i];\n                    let\
    \ triple = &a[i..k];\n                    let triple = &a[k..j];\n           \
    \         let triple = &a[j..i];\n                    let triple = &a[i..k];\n\
    \                    let triple = &a[k..j];\n                    let triple =\
    \ &a[j..i];\n                    let triple = &a[i..k];\n                    let\
    \ triple = &a[k..j];\n                    let triple = &a[j..i];\n           \
    \         let triple = &a[i..k];\n                    let triple = &a[k..j];\n\
    \                    let triple = &a[j..i];\n                    let triple =\
    \ &a[i..k];\n                    let triple = &a[k..j];\n                    let\
    \ triple = &a[j..i];\n                    let triple = &a[i..k];\n           \
    \         let triple = &a[k..j];\n                    let triple = &a[j..i];\n\
    \                    let triple = &a[i..k];\n                    let triple =\
    \ &a[k..j", "    let mut a = vec![0; n];\n    for i in 0..n {\n        a[i] =\
    \ i * i - i + 1;\n    }\n    let mut cnt = 0;\n    for i in 0..n {\n        for\
    \ j in 0..n {\n            for k in 0..n {\n                if i < j < k {\n \
    \                   cnt += a[i] - a[j] - a[k];\n                }\n          \
    \  }\n        }\n    }\n    cnt", "    let mut a = vec![0; n];\n    let mut cnt\
    \ = 0;\n    for i in 1..n {\n        for j in i..n {\n            for k in i..n\
    \ {\n                if i != j && j != k && i != k {\n                    if a[j]\
    \ + a[k] + a[i] == 3 {\n                        cnt += 1;\n                  \
    \  }\n                }\n            }\n        }\n    }\n    cnt", "    let mut\
    \ a = vec![0; n];\n    let mut sum = 0;\n    for i in 1..n {\n        a[i] = i\
    \ * i - i + 1;\n        sum += a[i];\n    }\n    for i in 0..n {\n        for\
    \ j in 0..n {\n            for k in 0..n {\n                if i != j && i !=\
    \ k && j != k {\n                    let triple = a[i] + a[j] + a[k];\n      \
    \              if triple % 3 == 0 {\n                        return sum;\n   \
    \                 }\n                }\n            }\n        }\n    }\n    0",
  "    let mut a = vec![0; n];\n    for i in 0..n {\n        a[i] = i * i - i + 1;\n\
    \    }\n    a.iter().filter(|&x| x > 0).count()", "    let mut a = vec![0; n];\n\
    \    for i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n    let mut triples\
    \ = 0;\n    for i in 0..n {\n        for j in 0..n {\n            for k in 0..n\
    \ {\n                if i + j + k == i && j + k == j && k + i == k {\n       \
    \             triples += 1;\n                }\n            }\n        }\n   \
    \ }\n    triples", "    let mut a = vec![0; n];\n    for i in 1..n {\n       \
    \ a[i] = i * i - i + 1;\n    }\n    let mut cnt = 0;\n    for i in 1..n {\n  \
    \      for j in 1..n {\n            for k in 1..n {\n                if i != j\
    \ && i != k && j != k {\n                    if a[i] < a[j] + a[k] {\n       \
    \                 cnt += 1;\n                    }\n                }\n      \
    \      }\n        }\n    }\n    cnt", "    let mut a = vec![0; n];\n    for i\
    \ in 0..n {\n        a[i] = i * i - i + 1;\n    }\n    let mut cnt = 0;\n    for\
    \ i in 0..n {\n        for j in 0..n {\n            for k in 0..n {\n        \
    \        if i < j < k {\n                    if a[i] < a[j] + a[k] {\n       \
    \                 cnt += 1;\n                    }\n                }\n      \
    \      }\n        }\n    }\n    cnt", "    let mut a = vec![0; n];\n    for i\
    \ in 0..n {\n        a[i] = i * i - i + 1;\n    }\n    let mut cnt = 0;\n    for\
    \ i in 0..n {\n        for j in 0..n {\n            for k in 0..n {\n        \
    \        if i < j < k {\n                    cnt += a[i] - a[j] - a[k];\n    \
    \            }\n            }\n        }\n    }\n    cnt", "    let mut a = vec![0;\
    \ n];\n    for i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n    let mut\
    \ cnt = 0;\n    for i in 0..n {\n        for j in 0..n {\n            for k in\
    \ 0..n {\n                if i != j && i != k && j != k {\n                  \
    \  if a[i] < a[j] + a[k] {\n                        cnt += 1;\n              \
    \      }\n                }\n            }\n        }\n    }\n    cnt", "    let\
    \ mut a = vec![0; n];\n    for i in 1..n {\n        a[i] = i * i - i + 1;\n  \
    \  }\n    let mut cnt = 0;\n    for i in 0..n {\n        for j in 0..n {\n   \
    \         for k in 0..n {\n                if i < j < k {\n                  \
    \  if a[i] < a[j] + a[k] {\n                        cnt += 1;\n              \
    \      }\n                }\n            }\n        }\n    }\n    cnt", "    let\
    \ mut a = vec![0; n];\n    for i in 0..n {\n        a[i] = i * i - i + 1;\n  \
    \  }\n    a.iter().filter(|&x| x < 3).count()", "    let mut a = vec![0; n];\n\
    \    for i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n    let mut cnt =\
    \ 0;\n    for i in 0..n {\n        for j in 0..n {\n            for k in 0..n\
    \ {\n                if i < j < k {\n                    if a[i] < a[j] + a[k]\
    \ {\n                        cnt += 1;\n                    }\n              \
    \  }\n            }\n        }\n    }\n    cnt", "    let mut a = vec![0; n];\n\
    \    for i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n    a.iter().filter(|&x|\
    \ x < 3).count()", "    let mut a = [0; n];\n    for i in 0..n {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    a.iter().filter(|&x| x > 0).count()", "    let\
    \ mut a = vec![0; n];\n    for i in 0..n {\n        a[i] = i * i - i + 1;\n  \
    \  }\n    let mut cnt = 0;\n    for i in 0..n {\n        for j in 0..n {\n   \
    \         for k in 0..n {\n                if i < j < k {\n                  \
    \  cnt += a[i] - a[j] - a[k];\n                }\n            }\n        }\n \
    \   }\n    cnt", "    let mut a = vec![0; n];\n    for i in 0..n {\n        a[i]\
    \ = i * i - i + 1;\n    }\n    let mut cnt = 0;\n    for i in 0..n {\n       \
    \ for j in 0..n {\n            for k in 0..n {\n                if i < j < k {\n\
    \                    if a[i] < a[j] + a[k] {\n                        cnt += 1;\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   cnt", "    let mut a = vec![0; n];\n    for i in 0..n {\n        a[i] = i\
    \ * i - i + 1;\n    }\n    a.iter().filter(|&x| x > 0).count()", "    let mut\
    \ a = vec![0; n];\n    for i in 0..n {\n        a[i] = i * i - i + 1;\n    }\n\
    \    let mut cnt = 0;\n    for i in 0..n {\n        for j in 0..n {\n        \
    \    for k in 0..n {\n                if i < j < k {\n                    cnt\
    \ += a[i] - a[j] - a[k];\n                }\n            }\n        }\n    }\n\
    \    cnt"]
stop_tokens:
- "\n}"

language: rs
name: HumanEval_86_anti_shuffle
results:
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        let mut new_s_len = new_s_len + 1;\n        new_s.push_str(&s[i\
    \ .. j]);\n        new_s.push_str(&\" \");\n        i = j;\n    }\n    new_s.push_str(&s[i\
    \ ..]);\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfnfnzvip.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfnfnzvip.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfnfnzvip.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfnfnzvip.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfnfnzvip.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfnfnzvip.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfnfnzvip.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfnfnzvip.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfnfnzvip.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfnfnzvip.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfnfnzvip.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len2;\n    let mut new_s_len4 = new_s_len3;\n    let mut new_s_len5\
    \ = new_s_len4;\n    let mut new_s_len6 = new_s_len5;\n    let mut new_s_len7\
    \ = new_s_len6;\n    let mut new_s_len8 = new_s_len7;\n    let mut new_s_len9\
    \ = new_s_len8;\n    let mut new_s_len10 = new_s_len9;\n    let mut new_s_len11\
    \ = new_s_len10;\n    let mut new_s_len12 = new_s_len11;\n    let mut new_s_len13\
    \ = new_s_len12;\n    let mut new_s_len14 = new_s_len13;\n    let mut new_s_len15\
    \ = new_s_len14;\n    let mut new_s_len16 = new_s_len15;\n    let mut new_s_len17\
    \ = new_s_len16;\n    let mut new_s_len18 = new_s_len17;\n    let mut new_s_len19\
    \ = new_s_len18;\n    let mut new_s_len20 = new_s_len19;\n    let mut new_s_len21\
    \ = new_s_len20;\n    let mut new_s_len22 = new_s_len21;\n    let mut new_s_len23\
    \ = new_s_len22;\n    let mut new_s_len24 = new_s_len23;\n    let mut new_s_len25\
    \ = new_s_len24;\n    let mut new_s_len26 = new_s_len25;\n    let mut new_s_len27\
    \ = new_s_len26;\n    let mut new_s_len28 = new_s_len27;\n    let mut new_s_len29\
    \ = new_s_len28;\n    let mut new_s_len30 = new_s_len29;\n    let mut new_s_len31\
    \ = new_s_len30;\n    let mut new_s_len32 = new_s_len31;\n    let mut new_s_len33\
    \ = new_s_len32;\n    let mut new_s_len34 = new_s_len33;\n    let mut new_s_len35\
    \ = new_s_len34;\n    let mut new_s_len36 = new_s_len35;\n    let mut new_s_len37\
    \ = new_s_len36;\n    let mut new_s_len38 = new_s_len37;\n    let mut new_s_len39\
    \ = new_s_len38;\n    let mut new_s_len40 = new_s_\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4b6k92n4.rs:55:33\n   |\n\
    55 |     let mut new_s_len40 = new_s_\n   |                                 ^\
    \ help: add `;` here\n56 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `new_s_` in this scope\n  --> /tmp/tmp4b6k92n4.rs:55:27\n   |\n55\
    \ |     let mut new_s_len40 = new_s_\n   |                           ^^^^^^ help:\
    \ a local variable with a similar name exists: `new_s`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4b6k92n4.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j].is_whitespace() {\n\
    \            j = j + 1;\n        }\n        let mut k = i;\n        while k <\
    \ new_s_len && s[k].is_whitespace() {\n            k = k + 1;\n        }\n   \
    \     if j > k {\n            let mut c = s[j];\n            s[j] = s[k];\n  \
    \          s[k] = c;\n        }\n        i = j;\n    }\n    new_s\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphwtclt0k.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphwtclt0k.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphwtclt0k.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphwtclt0k.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphwtclt0k.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphwtclt0k.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphwtclt0k.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphwtclt0k.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphwtclt0k.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphwtclt0k.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphwtclt0k.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            let mut temp = s[j];\n                s[j] = s[i];\n            \
    \    s[i] = temp;\n                j = i;\n            } else {\n            \
    \    j += 1;\n            }\n        }\n        new_s.push_str(&s[new_s_len..i]);\n\
    \        new_s_len += 1;\n        i = j;\n    }\n    new_s.push_str(&s[new_s_len..]);\n\
    \    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6csn8yuy.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6csn8yuy.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6csn8yuy.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6csn8yuy.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6csn8yuy.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6csn8yuy.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6csn8yuy.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6csn8yuy.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6csn8yuy.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6csn8yuy.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6csn8yuy.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut i = 0;\n    while i < s.len() {\n\
    \        if s.chars().all(|c| c >= 'a' && c <= 'z') {\n            s.swap(i, i\
    \ + 1);\n            i += 1;\n        }\n        if s.chars().all(|c| c >= 'A'\
    \ && c <= 'Z') {\n            s.swap(i, i + 1);\n            i += 1;\n       \
    \ }\n        if s.chars().all(|c| c >= '0' && c <= '9') {\n            s.swap(i,\
    \ i + 1);\n            i += 1;\n        }\n    }\n    s\n}\n\nfn main() {\n  \
    \  let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpovh5czqn.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpovh5czqn.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpovh5czqn.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpovh5czqn.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpovh5czqn.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpovh5czqn.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpovh5czqn.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpovh5czqn.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpovh5czqn.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpovh5czqn.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpovh5czqn.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        new_s_len += j - i;\n        i =\
    \ j;\n    }\n    new_s.push_str(&s[i ..]);\n    new_s_len += s.len() - i;\n  \
    \  new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpexxvr07y.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpexxvr07y.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpexxvr07y.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpexxvr07y.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpexxvr07y.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpexxvr07y.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpexxvr07y.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    let mut j = 0;\n    let mut k =\
    \ 0;\n    while i < s.len() {\n        let mut new_s_len = new_s_len + 1;\n  \
    \      while j < s.len() {\n            if s[i] == s[j] {\n                new_s_len\
    \ = new_s_len + 1;\n                j = j + 1;\n            } else {\n       \
    \         break;\n            }\n        }\n        if new_s_len > new_s.len()\
    \ {\n            new_s = new_s.push_str(&s[i .. j]);\n            new_s_len =\
    \ new_s_len + j - i;\n            i = j;\n        }\n    }\n    new_s = new_s.push_str(&s[i\
    \ .. new_s_len]);\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsks62riq.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsks62riq.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsks62riq.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsks62riq.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsks62riq.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsks62riq.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsks62riq.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsks62riq.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsks62riq.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsks62riq.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsks62riq.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().next().unwrap().to_ascii_lowercase().cmp(&s.chars().next().unwrap().to_ascii_lowercase())\
    \ < 0 {\n                j = j + 1;\n            } else {\n                break;\n\
    \            }\n        }\n        new_s.push_str(&s[i .. j]);\n        i = j;\n\
    \    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvoo8oyrs.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvoo8oyrs.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvoo8oyrs.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvoo8oyrs.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvoo8oyrs.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvoo8oyrs.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvoo8oyrs.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvoo8oyrs.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvoo8oyrs.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvoo8oyrs.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvoo8oyrs.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s.chars().next().unwrap().to_ascii_lowercase().unwrap()\
    \ < s.chars().next().unwrap().to_ascii_lowercase().unwrap() {\n              \
    \  j = j + 1;\n            } else {\n                break;\n            }\n \
    \       }\n        new_s.push_str(&s[i .. j]);\n        new_s_len += j - i;\n\
    \        i = j;\n    }\n    new_s.push_str(&s[i ..]);\n    new_s_len += s.len()\
    \ - i;\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7bvqui7d.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7bvqui7d.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7bvqui7d.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7bvqui7d.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7bvqui7d.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7bvqui7d.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7bvqui7d.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7bvqui7d.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7bvqui7d.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7bvqui7d.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7bvqui7d.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j] == ' ' {\n        \
    \    j = j + 1;\n        }\n        let mut k = i;\n        while k < new_s_len\
    \ && s[k] == ' ' {\n            k = k + 1;\n        }\n        if j > k {\n  \
    \          new_s.push_str(&s[i .. k]);\n            new_s.push_str(&s[k .. j]);\n\
    \            i = j;\n        } else {\n            new_s.push_str(&s[i .. j]);\n\
    \            new_s.push_str(&s[j .. k]);\n            i = k;\n        }\n    }\n\
    \    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxvnh291z.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxvnh291z.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxvnh291z.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxvnh291z.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxvnh291z.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxvnh291z.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxvnh291z.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxvnh291z.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxvnh291z.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxvnh291z.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxvnh291z.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j] == ' ' {\n        \
    \    j = j + 1;\n        }\n        let mut k = j;\n        while k < new_s_len\
    \ && s[k] == ' ' {\n            k = k + 1;\n        }\n        if j > k {\n  \
    \          new_s.push_str(&s[i .. k]);\n            new_s.push_str(&s[k .. j]);\n\
    \            i = j;\n        } else {\n            new_s.push_str(&s[i .. j]);\n\
    \            new_s.push_str(&s[k..new_s_len]);\n            i = new_s_len;\n \
    \       }\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2kh9zpkq.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2kh9zpkq.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2kh9zpkq.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2kh9zpkq.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2kh9zpkq.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2kh9zpkq.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2kh9zpkq.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2kh9zpkq.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2kh9zpkq.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2kh9zpkq.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2kh9zpkq.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j += 1;\n                continue;\n            }\n            if\
    \ s[j] < 97 {\n                s[j] = s[j].to_ascii_lowercase();\n           \
    \ }\n            new_s[new_s_len] = s[j];\n            new_s_len += 1;\n     \
    \       j += 1;\n        }\n        i = j;\n    }\n    new_s.truncate(new_s_len);\n\
    \    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3a3n4_70.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3a3n4_70.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3a3n4_70.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3a3n4_70.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3a3n4_70.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3a3n4_70.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3a3n4_70.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3a3n4_70.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3a3n4_70.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3a3n4_70.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3a3n4_70.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s[j].is_whitespace()\
    \ {\n                j += 1;\n                continue;\n            }\n     \
    \       if s[j].is_ascii_digit() {\n                let mut new_char = String::new();\n\
    \                new_char.push_ascii_digit(s[j].to_ascii_digit());\n         \
    \       new_char.push_ascii_digit(s[j + 1].to_ascii_digit());\n              \
    \  new_char.push_ascii_digit(s[j + 2].to_ascii_digit());\n                new_char.push_ascii_digit(s[j\
    \ + 3].to_ascii_digit());\n                new_char.push_ascii_digit(s[j + 4].to_ascii_digit());\n\
    \                new_char.push_ascii_digit(s[j + 5].to_ascii_digit());\n     \
    \           new_char.push_ascii_digit(s[j + 6].to_ascii_digit());\n          \
    \      new_char.push_ascii_digit(s[j + 7].to_ascii_digit());\n               \
    \ new_char.push_ascii_digit(s[j + 8].to_ascii_digit());\n                new_char.push_ascii_digit(s[j\
    \ + 9].to_ascii_digit());\n                new_char.push_ascii_digit(s[j + 10].to_ascii_digit());\n\
    \                new_char.push_ascii_digit(s[j + 11].to_ascii_digit());\n    \
    \            new_char.push_ascii_digit(s[j + 12].to_ascii_digit());\n        \
    \        new_char.push_ascii_digit(s[j + 13].to_ascii_digit());\n            \
    \    new_char.push_ascii_digit(s[j + 14].to_ascii_digit());\n                new_char.push_ascii_digit(s[j\
    \ + 15].to_ascii_digit());\n                new_char.push_ascii_digit(s[j + 16].to_ascii_digit());\n\
    \                new_char.push_ascii_digit(s[j + 17].to_ascii_digit());\n    \
    \            new_char.push_ascii_digit(s[j + 18].to_ascii_digit());\n        \
    \        new_char.push_ascii_digit(s[j + 19].to_ascii_digit());\n            \
    \    new_char.push_ascii_digit(s[j + 20].to_ascii_digit());\n                new_char.push_ascii_digit(s[j\
    \ + 21].to_ascii_digit());\n                new_char.push_ascii_digit(s[j + 22].to_ascii_digit());\n\
    \                new_char.push_ascii_digit(s[j + 23].to_ascii_digit());\n    \
    \            new_char.push_ascii_digit(s[j + 24].to_ascii_digit());\n        \
    \        new_char.push_ascii_digit(s[j + 25].to_ascii_digit());\n            \
    \    new_char.push_ascii_digit(s[j + 26].to_ascii_digit\n}\n\nfn main() {\n  \
    \  let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpjkqtt5or.rs:65:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n18 |     while i < new_s_len {\n\
    \   |                         - unclosed delimiter\n19 |         let mut j = i;\n\
    20 |         while j < new_s_len {\n   |                             - unclosed\
    \ delimiter\n...\n25 |             if s[j].is_ascii_digit() {\n   |          \
    \                            - this delimiter might not be properly closed...\n\
    ...\n54 | }\n   | - ...as it matches this but it has different indentation\n...\n\
    65 | }\n   |   ^\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmpjkqtt5or.rs:53:42\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - closing delimiter possibly meant for this\n...\n53 |     \
    \            new_char.push_ascii_digit(s[j + 26].to_ascii_digit\n   |        \
    \                                  ^ unclosed delimiter\n54 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjkqtt5or.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjkqtt5or.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjkqtt5or.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjkqtt5or.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjkqtt5or.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjkqtt5or.rs:60:25\n   |\n60 |     assert_eq!({"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s[i] != s[j]\
    \ {\n                new_s.push_str(&s[j]);\n                new_s.push_str(&s[i]);\n\
    \                break;\n            }\n            j += 1\n        }\n      \
    \  i += 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpra0b_kty.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpra0b_kty.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpra0b_kty.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpra0b_kty.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpra0b_kty.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpra0b_kty.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpra0b_kty.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpra0b_kty.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpra0b_kty.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpra0b_kty.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpra0b_kty.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j += 1;\n                continue;\n            }\n            if\
    \ s[j] < 97 {\n                s[j] = s[j] + 1;\n                j += 1;\n   \
    \             continue;\n            }\n            if s[j] > 122 {\n        \
    \        s[j] = s[j] - 1;\n                j += 1;\n                continue;\n\
    \            }\n            break;\n        }\n        new_s.push_str(&s[i ..\
    \ j]);\n        new_s_len += j - i;\n        i = j;\n    }\n    new_s.push_str(&s[i\
    \ ..]);\n    new_s_len += s.len() - i;\n    new_s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg_x4x_67.rs:48:17\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg_x4x_67.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg_x4x_67.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg_x4x_67.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg_x4x_67.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg_x4x_67.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg_x4x_67.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg_x4x_67.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg_x4x_67.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg_x4x_67.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg_x4x_67.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut i = 0;\n    let mut j = 0;\n  \
    \  while i < s.len() {\n        let mut k = i;\n        while k < s.len() {\n\
    \            if s[j].is_whitespace() {\n                k = k + 1;\n         \
    \       continue;\n            }\n            if s[k].is_whitespace() {\n    \
    \            j = j + 1;\n                continue;\n            }\n          \
    \  if s[j].is_ascii_uppercase() && s[k].is_ascii_lowercase() {\n             \
    \   let mut c = s[j].to_ascii_lowercase();\n                s[j] = s[k].to_ascii_lowercase();\n\
    \                s[k] = c;\n                k = k + 1;\n                continue;\n\
    \            }\n            if s[j].is_ascii_lowercase() && s[k].is_ascii_uppercase()\
    \ {\n                let mut c = s[j].to_ascii_uppercase();\n                s[j]\
    \ = s[k].to_ascii_uppercase();\n                s[k] = c;\n                k =\
    \ k + 1;\n                continue;\n            }\n            if s[j].is_ascii_uppercase()\
    \ && s[k].is_ascii_lowercase() {\n                let mut c = s[j].to_ascii_lowercase();\n\
    \                s[j] = s[k].to_ascii_lowercase();\n                s[k] = c;\n\
    \                k = k + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_lowercase() && s[k].is_ascii_uppercase() {\n         \
    \       let mut c = s[j].to_ascii_uppercase();\n                s[j] = s[k].to_ascii_uppercase();\n\
    \                s[k] = c;\n                k = k + 1;\n                continue;\n\
    \            }\n            if s[j].is_ascii_uppercase() && s[k].is_ascii_uppercase()\
    \ {\n                let mut c = s[j].to_ascii_uppercase();\n                s[j]\
    \ = s[k].to_ascii_uppercase();\n                s[k] = c;\n                k =\
    \ k + 1;\n                continue;\n            }\n            if s[j].is_ascii_lowercase()\
    \ && s[k].is_ascii_lowercase() {\n                let mut c = s[j].to_ascii_lowercase();\n\
    \                s[j] = s[k].to_ascii_lowercase();\n                s[k] = c;\n\
    \                k = k + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_lowercase() && s[k].is_ascii_lowercase() {\n         \
    \       let mut c = s[j].to_ascii_lowercase();\n                s[j] = s[k].to_ascii_lowercase();\n\
    \                s[k] = c;\n                k = k + 1;\n                continue;\n\
    \            }\n            if s[j].is_ascii_uppercase() && s[k].is_ascii_uppercase()\
    \ {\n                let mut c = s[j].to_ascii_uppercase();\n                s[j]\
    \ = s[k].to_ascii_uppercase();\n                s[k] = c;\n                k =\
    \ k + 1;\n                continue;\n            }\n            if s[j].is_ascii_lowercase()\
    \ && s[k].is_ascii_lowercase() {\n                let mut c = s[j].to_ascii_lowercase();\n\
    \                s[j] = s[k].to_ascii_lowercase();\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpx1gnv8dq.rs:98:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n17 |     while i < s.len() {\n  \
    \ |                       - unclosed delimiter\n18 |         let mut k = i;\n\
    19 |         while k < s.len() {\n   |                           - unclosed delimiter\n\
    ...\n84 |             if s[j].is_ascii_lowercase() && s[k].is_ascii_lowercase()\
    \ {\n   |                                                                    \
    \   - this delimiter might not be properly closed...\n...\n87 | }\n   | - ...as\
    \ it matches this but it has different indentation\n...\n98 | }\n   |   ^\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpx1gnv8dq.rs:91:17\n\
    \   |\n91 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx1gnv8dq.rs:91:25\n   |\n91 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx1gnv8dq.rs:92:17\n   |\n92 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpx1gnv8dq.rs:92:25\n\
    \   |\n92 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpx1gnv8dq.rs:93:17\n   |\n93 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpx1gnv8dq.rs:93:25\n   |\n93 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpx1gnv8dq.rs:94:17\n   |\n94 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpx1gnv8dq.rs:9"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len2;\n    let mut new_s_len4 = new_s_len3;\n    let mut new_s_len5\
    \ = new_s_len4;\n    let mut new_s_len6 = new_s_len5;\n    let mut new_s_len7\
    \ = new_s_len6;\n    let mut new_s_len8 = new_s_len7;\n    let mut new_s_len9\
    \ = new_s_len8;\n    let mut new_s_len10 = new_s_len9;\n    let mut new_s_len11\
    \ = new_s_len10;\n    let mut new_s_len12 = new_s_len11;\n    let mut new_s_len13\
    \ = new_s_len12;\n    let mut new_s_len14 = new_s_len13;\n    let mut new_s_len15\
    \ = new_s_len14;\n    let mut new_s_len16 = new_s_len15;\n    let mut new_s_len17\
    \ = new_s_len16;\n    let mut new_s_len18 = new_s_len17;\n    let mut new_s_len19\
    \ = new_s_len18;\n    let mut new_s_len20 = new_s_len19;\n    let mut new_s_len21\
    \ = new_s_len20;\n    let mut new_s_len22 = new_s_len21;\n    let mut new_s_len23\
    \ = new_s_len22;\n    let mut new_s_len24 = new_s_len23;\n    let mut new_s_len25\
    \ = new_s_len24;\n    let mut new_s_len26 = new_s_len25;\n    let mut new_s_len27\
    \ = new_s_len26;\n    let mut new_s_len28 = new_s_len27;\n    let mut new_s_len29\
    \ = new_s_len28;\n    let mut new_s_len30 = new_s_len29;\n    let mut new_s_len31\
    \ = new_s_len30;\n    let mut new_s_len32 = new_s_len31;\n    let mut new_s_len33\
    \ = new_s_len32;\n    let mut new_s_len34 = new_s_len33;\n    let mut new_s_len35\
    \ = new_s_len34;\n    let mut new_s_len36 = new_s_len35;\n    let mut new_s_len37\
    \ = new_s_len36;\n    let mut new_s_len38 = new_s_len37;\n    let mut new_s_len39\
    \ = new_s_len38;\n    let mut new_s_len40 = new_s_\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4b6k92n4.rs:55:33\n   |\n\
    55 |     let mut new_s_len40 = new_s_\n   |                                 ^\
    \ help: add `;` here\n56 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `new_s_` in this scope\n  --> /tmp/tmp4b6k92n4.rs:55:27\n   |\n55\
    \ |     let mut new_s_len40 = new_s_\n   |                           ^^^^^^ help:\
    \ a local variable with a similar name exists: `new_s`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4b6k92n4.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len2;\n    let mut new_s_len4 = new_s_len3;\n    let mut new_s_len5\
    \ = new_s_len4;\n    let mut new_s_len6 = new_s_len5;\n    let mut new_s_len7\
    \ = new_s_len6;\n    let mut new_s_len8 = new_s_len7;\n    let mut new_s_len9\
    \ = new_s_len8;\n    let mut new_s_len10 = new_s_len9;\n    let mut new_s_len11\
    \ = new_s_len10;\n    let mut new_s_len12 = new_s_len11;\n    let mut new_s_len13\
    \ = new_s_len12;\n    let mut new_s_len14 = new_s_len13;\n    let mut new_s_len15\
    \ = new_s_len14;\n    let mut new_s_len16 = new_s_len15;\n    let mut new_s_len17\
    \ = new_s_len16;\n    let mut new_s_len18 = new_s_len17;\n    let mut new_s_len19\
    \ = new_s_len18;\n    let mut new_s_len20 = new_s_len19;\n    let mut new_s_len21\
    \ = new_s_len20;\n    let mut new_s_len22 = new_s_len21;\n    let mut new_s_len23\
    \ = new_s_len22;\n    let mut new_s_len24 = new_s_len23;\n    let mut new_s_len25\
    \ = new_s_len24;\n    let mut new_s_len26 = new_s_len25;\n    let mut new_s_len27\
    \ = new_s_len26;\n    let mut new_s_len28 = new_s_len27;\n    let mut new_s_len29\
    \ = new_s_len28;\n    let mut new_s_len30 = new_s_len29;\n    let mut new_s_len31\
    \ = new_s_len30;\n    let mut new_s_len32 = new_s_len31;\n    let mut new_s_len33\
    \ = new_s_len32;\n    let mut new_s_len34 = new_s_len33;\n    let mut new_s_len35\
    \ = new_s_len34;\n    let mut new_s_len36 = new_s_len35;\n    let mut new_s_len37\
    \ = new_s_len36;\n    let mut new_s_len38 = new_s_len37;\n    let mut new_s_len39\
    \ = new_s_len38;\n    let mut new_s_len40 = new_s_\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4b6k92n4.rs:55:33\n   |\n\
    55 |     let mut new_s_len40 = new_s_\n   |                                 ^\
    \ help: add `;` here\n56 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `new_s_` in this scope\n  --> /tmp/tmp4b6k92n4.rs:55:27\n   |\n55\
    \ |     let mut new_s_len40 = new_s_\n   |                           ^^^^^^ help:\
    \ a local variable with a similar name exists: `new_s`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4b6k92n4.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut i = 0;\n    while i < s.len() {\n\
    \        let mut j = i;\n        while j < s.len() {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        if j > i {\n            s.swap(i, j);\n            i = j;\n        }\n\
    \    }\n    s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpd34cwn1j.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd34cwn1j.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd34cwn1j.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpd34cwn1j.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd34cwn1j.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd34cwn1j.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd34cwn1j.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd34cwn1j.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd34cwn1j.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd34cwn1j.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd34cwn1j.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut new_s_len2 = 0;\n    let mut i = 0;\n    while\
    \ i < s.len() {\n        let mut j = i;\n        while j < s.len() {\n       \
    \     if s[j] == ' ' {\n                j += 1;\n                continue;\n \
    \           }\n            if s[j] < 97 {\n                s[j] = s[j] + 1;\n\
    \                j += 1;\n                continue;\n            }\n         \
    \   if s[j] < 123 {\n                s[j] = s[j] - 1;\n                j += 1;\n\
    \                continue;\n            }\n            if s[j] > 123 {\n     \
    \           s[j] = s[j] + 1;\n                j += 1;\n                continue;\n\
    \            }\n            break;\n        }\n        if j == s.len() {\n   \
    \         new_s.push_str(&s[i ..]);\n            new_s_len += 1;\n           \
    \ i += 1;\n            continue;\n        }\n        let mut new_s_len3 = 0;\n\
    \        let mut new_s_len4 = 0;\n        let mut new_s_len5 = 0;\n        let\
    \ mut new_s_len6 = 0;\n        let mut new_s_len7 = 0;\n        let mut new_s_len8\
    \ = 0;\n        let mut new_s_len9 = 0;\n        let mut new_s_len10 = 0;\n  \
    \      let mut new_s_len11 = 0;\n        let mut new_s_len12 = 0;\n        let\
    \ mut new_s_len13 = 0;\n        let mut new_s_len14 = 0;\n        let mut new_s_len15\
    \ = 0;\n        let mut new_s_len16 = 0;\n        let mut new_s_len17 = 0;\n \
    \       let mut new_s_len18 = 0;\n        let mut new_s_len19 = 0;\n        let\
    \ mut new_s_len20 = 0;\n        let mut new_s_len21 = 0;\n        let mut new_s_len22\
    \ = 0;\n        let mut new_s_len23 = 0;\n        let mut new_s_len24 = 0;\n \
    \       let mut new_s_len25 = 0;\n        let mut new_s_len26 = 0;\n        let\
    \ mut new_s_len27 = 0;\n        let mut new_s_len28 = 0;\n        let mut new_s_len29\
    \ = 0;\n        let mut new_s_len30 = 0;\n        let mut new_s_len31 = 0;\n \
    \       let mut new_s_len32 = 0;\n        let mut new_s_len33 = 0;\n        let\
    \ mut new_s_len34 = 0;\n        let mut new_s_len35 = 0;\n        let mut new_s_len36\
    \ = 0;\n        let mut new_s_len37 = 0;\n        let mut new_s_len38 = 0;\n \
    \       let mut new_s_len39 = 0;\n        let mut new_s_\n}\n\nfn main() {\n \
    \   let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpeiez_qxj.rs:98:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n19 |     while i < s.len() {\n  \
    \ |                       - this delimiter might not be properly closed...\n...\n\
    87 | }\n   | - ...as it matches this but it has different indentation\n...\n98\
    \ | }\n   |   ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmpeiez_qxj.rs:86:23\n\
    \   |\n86 |         let mut new_s_\n   |                       ^ help: add `;`\
    \ here\n87 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpeiez_qxj.rs:91:17\n   |\n91 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpeiez_qxj.rs:91:25\n \
    \  |\n91 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpeiez_qxj.rs:92:17\n   |\n92 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpeiez_qxj.rs:92:25\n   |\n92 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpeiez_qxj.rs:93:17\n   |\n93 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpeiez_qxj.rs:93:25\n   |\n93 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpeiez_qxj.rs:94:17\n  \
    \ |\n94 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpeiez_qxj.rs:94:25\n   |\n94 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror["
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j += 1;\n                continue;\n            }\n            if\
    \ s[j] < 97 {\n                s[j] = s[j] + 1;\n                j += 1;\n   \
    \             continue;\n            }\n            if s[j] > 122 {\n        \
    \        s[j] = s[j] - 1;\n                j += 1;\n                continue;\n\
    \            }\n            break;\n        }\n        if j == s.len() {\n   \
    \         new_s.push_str(&s[i .. i + 1]);\n            new_s_len += 1;\n     \
    \       i += 1;\n        } else {\n            new_s.push_str(&s[i .. j]);\n \
    \           new_s_len += j - i;\n            i = j;\n        }\n    }\n    new_s.push_str(&s[i\
    \ .. new_s_len]);\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzzt8uwof.rs:53:17\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzzt8uwof.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzzt8uwof.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzzt8uwof.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzzt8uwof.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzzt8uwof.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzzt8uwof.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzzt8uwof.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzzt8uwof.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzzt8uwof.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzzt8uwof.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut i = 0;\n    while i < s.len() {\n        let mut j = i;\n        while j\
    \ < s.len() {\n            if s[j] >= ' ' && s[j] < 'z' {\n                j +=\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        i = j;\n    }\n    new_s\n}\n\n\
    fn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzcoz5fot.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzcoz5fot.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzcoz5fot.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzcoz5fot.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzcoz5fot.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzcoz5fot.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzcoz5fot.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzcoz5fot.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzcoz5fot.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzcoz5fot.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzcoz5fot.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len;\n    let mut new_s_len4 = new_s_len;\n    let mut new_s_len5 =\
    \ new_s_len;\n    let mut new_s_len6 = new_s_len;\n    let mut new_s_len7 = new_s_len;\n\
    \    let mut new_s_len8 = new_s_len;\n    let mut new_s_len9 = new_s_len;\n  \
    \  let mut new_s_len10 = new_s_len;\n    let mut new_s_len11 = new_s_len;\n  \
    \  let mut new_s_len12 = new_s_len;\n    let mut new_s_len13 = new_s_len;\n  \
    \  let mut new_s_len14 = new_s_len;\n    let mut new_s_len15 = new_s_len;\n  \
    \  let mut new_s_len16 = new_s_len;\n    let mut new_s_len17 = new_s_len;\n  \
    \  let mut new_s_len18 = new_s_len;\n    let mut new_s_len19 = new_s_len;\n  \
    \  let mut new_s_len20 = new_s_len;\n    let mut new_s_len21 = new_s_len;\n  \
    \  let mut new_s_len22 = new_s_len;\n    let mut new_s_len23 = new_s_len;\n  \
    \  let mut new_s_len24 = new_s_len;\n    let mut new_s_len25 = new_s_len;\n  \
    \  let mut new_s_len26 = new_s_len;\n    let mut new_s_len27 = new_s_len;\n  \
    \  let mut new_s_len28 = new_s_len;\n    let mut new_s_len29 = new_s_len;\n  \
    \  let mut new_s_len30 = new_s_len;\n    let mut new_s_len31 = new_s_len;\n  \
    \  let mut new_s_len32 = new_s_len;\n    let mut new_s_len33 = new_s_len;\n  \
    \  let mut new_s_len34 = new_s_len;\n    let mut new_s_len35 = new_s_len;\n  \
    \  let mut new_s_len36 = new_s_len;\n    let mut new_s_len37 = new_s_len;\n  \
    \  let mut new_s_len38 = new_s_len;\n    let mut new_s_len39 = new_s_len;\n  \
    \  let mut new_s_len40 = new_s_len;\n    let mut new_s_len41 = new_s_len;\n  \
    \  let mut new_s_len42 = new_s_len;\n    let mut new_s_len43 = new_s_len;\n  \
    \  let mut new_s_len44 = new_s_len;\n    let mut new_s_len45 = new_\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpo4cvqvf4.rs:60:31\n   |\n\
    60 |     let mut new_s_len45 = new_\n   |                               ^ help:\
    \ add `;` here\n61 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `new_` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:60:27\n   |\n60 |     let mut\
    \ new_s_len45 = new_\n   |                           ^^^^ help: a local variable\
    \ with a similar name exists: `new_s`\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpo4cvqvf4.rs:65:17\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:65:25\n \
    \  |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpo4cvqvf4.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpo4cvqvf4.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo4cvqvf4.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not foun"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        let mut k = i;\n        while k < s.len() {\n   \
    \         if s[k] > s[i] {\n                k = k + 1;\n            } else {\n\
    \                break;\n            }\n        }\n        if j > i {\n      \
    \      new_s.push_str(&s[i .. j]);\n            new_s_len += j - i;\n        }\n\
    \        if k > i {\n            new_s.push_str(&s[i .. k]);\n            new_s_len\
    \ += k - i;\n        }\n        i = j;\n    }\n    new_s.push_str(&s[i ..]);\n\
    \    new_s_len += s.len() - i;\n    new_s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6jc8x9c4.rs:52:17\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6jc8x9c4.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6jc8x9c4.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6jc8x9c4.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6jc8x9c4.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6jc8x9c4.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6jc8x9c4.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6jc8x9c4.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6jc8x9c4.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6jc8x9c4.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6jc8x9c4.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j].is_whitespace() {\n\
    \            j = j + 1;\n        }\n        let mut k = i;\n        while k <\
    \ new_s_len && s[k].is_whitespace() {\n            k = k + 1;\n        }\n   \
    \     if j > k {\n            new_s.push_str(&s[i .. k]);\n            new_s.push_str(&s[k\
    \ .. j]);\n            i = j;\n        } else {\n            new_s.push_str(&s[i\
    \ .. j]);\n            new_s.push_str(&s[j .. k]);\n            i = k;\n     \
    \   }\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxby5ezt_.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxby5ezt_.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxby5ezt_.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxby5ezt_.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxby5ezt_.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxby5ezt_.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxby5ezt_.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxby5ezt_.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxby5ezt_.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxby5ezt_.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxby5ezt_.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s[i] == s[j]\
    \ {\n                j += 1;\n                continue;\n            }\n     \
    \       if s[j] < s[i] {\n                new_s.push_str(&s[..j]);\n         \
    \       new_s.push(' ');\n                new_s.push(i);\n                new_s.push('\
    \ ');\n                new_s.push(' ');\n                i += 1;\n           \
    \     break;\n            }\n            if s[j] > s[i] {\n                new_s.push_str(&s[..j]);\n\
    \                new_s.push(i);\n                new_s.push(' ');\n          \
    \      new_s.push(' ');\n                new_s.push(' ');\n                break;\n\
    \            }\n            j += 1;\n        }\n        if i == new_s_len {\n\
    \            new_s.push_str(&s[..i]);\n            new_s.push(i);\n          \
    \  new_s.push(' ');\n            new_s.push(' ');\n            new_s.push(' ');\n\
    \        }\n        i += 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqxfmtgpx.rs:58:17\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqxfmtgpx.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqxfmtgpx.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqxfmtgpx.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqxfmtgpx.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqxfmtgpx.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqxfmtgpx.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqxfmtgpx.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqxfmtgpx.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqxfmtgpx.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqxfmtgpx.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j] == ' ' {\n        \
    \    j += 1\n        }\n        let mut new_s_char = new_s[..j];\n        let\
    \ mut new_s_char_len = new_s_char.len();\n        let mut j = 0;\n        while\
    \ j < new_s_char_len {\n            let mut new_s_char_char = new_s_char[j];\n\
    \            let mut new_s_char_char_len = new_s_char_char.len();\n          \
    \  let mut k = 0;\n            while k < new_s_char_char_len {\n             \
    \   if new_s_char_char[k] > new_s_char_char[k + 1] {\n                    new_s_char_char[k]\
    \ = new_s_char_char[k + 1];\n                    new_s_char_char_len -= 1;\n \
    \               } else {\n                    new_s_char_char[k] = new_s_char_char[k];\n\
    \                    new_s_char_char_len -= 1;\n                }\n          \
    \      k += 1;\n            }\n            new_s_char_char.truncate(new_s_char_char_len);\n\
    \            new_s_char_char_len = new_s_char_char.len();\n            j += 1;\n\
    \        }\n        new_s_char.truncate(new_s_char_len);\n        new_s_char_len\
    \ = new_s_char.len();\n        i += 1;\n    }\n    new_s\n}\n\nfn main() {\n \
    \   let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpr8ucbhqg.rs:53:17\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr8ucbhqg.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr8ucbhqg.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpr8ucbhqg.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpr8ucbhqg.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpr8ucbhqg.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpr8ucbhqg.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpr8ucbhqg.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpr8ucbhqg.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr8ucbhqg.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr8ucbhqg.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len2;\n    let mut new_s_len4 = new_s_len3;\n    let mut new_s_len5\
    \ = new_s_len4;\n    let mut new_s_len6 = new_s_len5;\n    let mut new_s_len7\
    \ = new_s_len6;\n    let mut new_s_len8 = new_s_len7;\n    let mut new_s_len9\
    \ = new_s_len8;\n    let mut new_s_len10 = new_s_len9;\n    let mut new_s_len11\
    \ = new_s_len10;\n    let mut new_s_len12 = new_s_len11;\n    let mut new_s_len13\
    \ = new_s_len12;\n    let mut new_s_len14 = new_s_len13;\n    let mut new_s_len15\
    \ = new_s_len14;\n    let mut new_s_len16 = new_s_len15;\n    let mut new_s_len17\
    \ = new_s_len16;\n    let mut new_s_len18 = new_s_len17;\n    let mut new_s_len19\
    \ = new_s_len18;\n    let mut new_s_len20 = new_s_len19;\n    let mut new_s_len21\
    \ = new_s_len20;\n    let mut new_s_len22 = new_s_len21;\n    let mut new_s_len23\
    \ = new_s_len22;\n    let mut new_s_len24 = new_s_len23;\n    let mut new_s_len25\
    \ = new_s_len24;\n    let mut new_s_len26 = new_s_len25;\n    let mut new_s_len27\
    \ = new_s_len26;\n    let mut new_s_len28 = new_s_len27;\n    let mut new_s_len29\
    \ = new_s_len28;\n    let mut new_s_len30 = new_s_len29;\n    let mut new_s_len31\
    \ = new_s_len30;\n    let mut new_s_len32 = new_s_len31;\n    let mut new_s_len33\
    \ = new_s_len32;\n    let mut new_s_len34 = new_s_len33;\n    let mut new_s_len35\
    \ = new_s_len34;\n    let mut new_s_len36 = new_s_len35;\n    let mut new_s_len37\
    \ = new_s_len36;\n    let mut new_s_len38 = new_s_len37;\n    let mut new_s_len39\
    \ = new_s_len38;\n    let mut new_s_len40 = new_s_\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4b6k92n4.rs:55:33\n   |\n\
    55 |     let mut new_s_len40 = new_s_\n   |                                 ^\
    \ help: add `;` here\n56 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `new_s_` in this scope\n  --> /tmp/tmp4b6k92n4.rs:55:27\n   |\n55\
    \ |     let mut new_s_len40 = new_s_\n   |                           ^^^^^^ help:\
    \ a local variable with a similar name exists: `new_s`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4b6k92n4.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s[j].is_whitespace()\
    \ {\n                j = j + 1;\n                continue;\n            }\n  \
    \          if s[j].is_ascii_lowercase() {\n                s[j] = s[j].to_ascii_lowercase();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_uppercase() {\n                s[j] = s[j].to_ascii_uppercase();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_digit() {\n                s[j] = s[j].to_ascii_digit();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_punctuation() {\n                s[j] = s[j].to_ascii_punctuation();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_letter() {\n                s[j] = s[j].to_ascii_letter();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_lowercase() {\n                s[j] = s[j].to_ascii_lowercase();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_uppercase() {\n                s[j] = s[j].to_ascii_uppercase();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_digit() {\n                s[j] = s[j].to_ascii_digit();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_punctuation() {\n                s[j] = s[j].to_ascii_punctuation();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_letter() {\n                s[j] = s[j].to_ascii_letter();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_lowercase() {\n                s[j] = s[j].to_ascii_lowercase();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_uppercase() {\n                s[j] = s[j].to_ascii_uppercase();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_digit() {\n                s[j] = s[j].to_ascii_digit();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_punctuation() {\n                s[j] = s[j].to_ascii_punctuation();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_letter() {\n                s[j] = s[j].to_ascii_letter();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_lowercase() {\n                s[j] = s[j\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpl2s_4_p1.rs:113:3\n\
    \    |\n13  | fn anti_shuffle(s: String) -> String {\n    |                  \
    \                    - unclosed delimiter\n...\n18  |     while i < new_s_len\
    \ {\n    |                         - unclosed delimiter\n19  |         let mut\
    \ j = i;\n20  |         while j < new_s_len {\n    |                         \
    \    - unclosed delimiter\n...\n100 |             if s[j].is_ascii_lowercase()\
    \ {\n    |                                          - this delimiter might not\
    \ be properly closed...\n101 |                 s[j] = s[j\n102 | }\n    | - ...as\
    \ it matches this but it has different indentation\n...\n113 | }\n    |   ^\n\n\
    error: mismatched closing delimiter: `}`\n   --> /tmp/tmpl2s_4_p1.rs:101:25\n\
    \    |\n13  | fn anti_shuffle(s: String) -> String {\n    |                  \
    \                    - closing delimiter possibly meant for this\n...\n101 | \
    \                s[j] = s[j\n    |                         ^ unclosed delimiter\n\
    102 | }\n    | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n   --> /tmp/tmpl2s_4_p1.rs:106:17\n    |\n106 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpl2s_4_p1.rs:106:25\n\
    \    |\n106 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpl2s_4_p1.rs:107:17\n    |\n107 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpl2s_4_p1.rs:107:25\n\
    \    |\n107 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpl2s_4_p1.rs:108:17\n    |\n108 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpl2s_4_p1.rs:1"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        if j == s.len() {\n            new_s.push_str(&s[i\
    \ ..]);\n            new_s_len += i - i;\n        } else {\n            new_s.push_str(&s[i\
    \ ..j]);\n            new_s_len += j - i;\n            new_s.push_str(&s[j..]);\n\
    \            new_s_len += j - i;\n        }\n        i = j;\n    }\n    new_s.push_str(&s[i\
    \ ..]);\n    new_s_len += s.len() - i;\n    new_s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyiz4paka.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyiz4paka.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyiz4paka.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyiz4paka.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyiz4paka.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyiz4paka.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyiz4paka.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyiz4paka.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyiz4paka.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyiz4paka.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyiz4paka.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        let mut new_word = String::new();\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i .. j]);\n        new_word.push_str(&s[i\
    \ .. j]);\n        new_word.push_str(&s[i \n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmphv1urhkj.rs:79:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n18 |     while i < s.len() {\n  \
    \ |                       - this delimiter might not be properly closed...\n...\n\
    68 | }\n   | - ...as it matches this but it has different indentation\n...\n79\
    \ | }\n   |   ^\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmphv1urhkj.rs:67:29\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - closing delimiter possibly meant for this\n...\n67 |     \
    \    new_word.push_str(&s[i \n   |                             ^ unclosed delimiter\n\
    68 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmphv1urhkj.rs:72:17\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmphv1urhkj.rs:72:25\n \
    \  |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphv1urhkj.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphv1urhkj.rs:73:25\n   |\n73 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphv1urhkj.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphv1urhkj.rs:74:25\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphv1urhkj.rs:75:17\n  \
    \ |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot fin"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut i = 0;\n    while i < s.len() {\n        let mut j = i;\n        while j\
    \ < s.len() {\n            if s[j] < s[i] {\n                j = j + 1;\n    \
    \            continue;\n            }\n            if s[j] > s[i] {\n        \
    \        new_s.push_str(&s[i .. j]);\n                new_s.push_str(&[s[i] -\
    \ s[j], s[i] - s[j] + 1].iter().cloned().collect::<Vec<_>>());\n             \
    \   i = j;\n                break;\n            }\n            j = j + 1;\n  \
    \      }\n    }\n    new_s.push_str(&s[i .. new_s.len()]);\n    new_s\n}\n\nfn\
    \ main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcotsqo9f.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcotsqo9f.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcotsqo9f.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcotsqo9f.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcotsqo9f.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcotsqo9f.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcotsqo9f.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcotsqo9f.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcotsqo9f.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcotsqo9f.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcotsqo9f.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j] == ' ' {\n        \
    \    j += 1\n        }\n        let mut new_s_char = new_s[i];\n        let mut\
    \ new_s_char_len = new_s_char.len();\n        while j < new_s_len && new_s_char[j]\
    \ != ' ' {\n            new_s_char.push(new_s_char[j]);\n            j += 1\n\
    \        }\n        new_s[i] = new_s_char;\n        i += 1;\n    }\n    new_s\n\
    }\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpb0wavc_u.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb0wavc_u.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb0wavc_u.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpb0wavc_u.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpb0wavc_u.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpb0wavc_u.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpb0wavc_u.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpb0wavc_u.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpb0wavc_u.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpb0wavc_u.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpb0wavc_u.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        let mut new_s_len = new_s_len + 1;\n        new_s.push((&s[i])[..new_s_len]);\n\
    \        new_s.push((&s[j])[..new_s_len]);\n        i = j;\n    }\n    new_s.push((&s[i])[..new_s_len]);\n\
    \    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9xoxiogx.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9xoxiogx.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9xoxiogx.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9xoxiogx.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9xoxiogx.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9xoxiogx.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9xoxiogx.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9xoxiogx.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9xoxiogx.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9xoxiogx.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9xoxiogx.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        let mut new_s_len = new_s_len + 1;\n        new_s.push_str(&s[i\
    \ .. j]);\n        new_s.push_str(&\" \");\n        i = j;\n    }\n    new_s.push_str(&s[i\
    \ ..]);\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfnfnzvip.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfnfnzvip.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfnfnzvip.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfnfnzvip.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfnfnzvip.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfnfnzvip.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfnfnzvip.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfnfnzvip.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfnfnzvip.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfnfnzvip.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfnfnzvip.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' && s[j]\
    \ != '\\n' && s[j] != '\\t' && s[j] != '\\r' {\n                new_s.push((s[j].to_ascii_lowercase()).to_string());\n\
    \                j += 1;\n            } else {\n                break;\n     \
    \       }\n        }\n        let mut k = i;\n        while k < s.len() {\n  \
    \          if s[k] != ' ' && s[k] != '\\n' && s[k] != '\\t' && s[k] != '\\r' {\n\
    \                new_s.push((s[k].to_ascii_lowercase()).to_string());\n      \
    \          k += 1;\n            } else {\n                break;\n           \
    \ }\n        }\n        let mut new_s_len = new_s_len + new_s.len();\n       \
    \ new_s.push_str(&new_s[new_s_len..]);\n        new_s.push_str(&s[..]);\n    \
    \    i += 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdnf23j5e.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdnf23j5e.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdnf23j5e.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdnf23j5e.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdnf23j5e.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdnf23j5e.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdnf23j5e.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdnf23j5e.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdnf23j5e.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdnf23j5e.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdnf23j5e.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[..j]);\n        new_s.push_str(&s[j..]);\n        i\
    \ = j;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxm01yaxd.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxm01yaxd.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxm01yaxd.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxm01yaxd.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxm01yaxd.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxm01yaxd.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxm01yaxd.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxm01yaxd.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxm01yaxd.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxm01yaxd.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxm01yaxd.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j += 1;\n                continue;\n            }\n            if\
    \ s[j] < 'a' || s[j] > 'z' {\n                j += 1;\n                continue;\n\
    \            }\n            new_s.push_str(&s[i .. j]);\n            new_s_len\
    \ += 1;\n            i += 1;\n            j += 1;\n        }\n        new_s.push_str(&s[i\
    \ .. new_s_len]);\n        new_s_len += 1;\n    }\n    new_s\n}\n\nfn main() {\n\
    \    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp448635t7.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp448635t7.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp448635t7.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp448635t7.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp448635t7.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp448635t7.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp448635t7.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp448635t7.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp448635t7.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp448635t7.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp448635t7.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s[j].is_whitespace()\
    \ {\n                j = j + 1;\n                continue;\n            }\n  \
    \          if s[j].is_ascii_digit() {\n                j = j + 1;\n          \
    \      continue;\n            }\n            if s[j].is_ascii_upper() {\n    \
    \            j = j + 1;\n                continue;\n            }\n          \
    \  if s[j].is_ascii_lower() {\n                j = j + 1;\n                continue;\n\
    \            }\n            if s[j].is_ascii_letter() {\n                j = j\
    \ + 1;\n                continue;\n            }\n            if s[j].is_ascii_symbol()\
    \ {\n                j = j + 1;\n                continue;\n            }\n  \
    \          if s[j].is_ascii_lowercase() {\n                j = j + 1;\n      \
    \          continue;\n            }\n            if s[j].is_ascii_uppercase()\
    \ {\n                j = j + 1;\n                continue;\n            }\n  \
    \          if s[j].is_ascii_letter() {\n                j = j + 1;\n         \
    \       continue;\n            }\n            if s[j].is_ascii_digit() {\n   \
    \             j = j + 1;\n                continue;\n            }\n         \
    \   if s[j].is_ascii_upper() {\n                j = j + 1;\n                continue;\n\
    \            }\n            if s[j].is_ascii_lower() {\n                j = j\
    \ + 1;\n                continue;\n            }\n            if s[j].is_ascii_letter()\
    \ {\n                j = j + 1;\n                continue;\n            }\n  \
    \          if s[j].is_ascii_symbol() {\n                j = j + 1;\n         \
    \       continue;\n            }\n            if s[j].is_ascii_lowercase() {\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_uppercase() {\n                j = j + 1;\n          \
    \      continue;\n            }\n            if s[j].is_ascii_letter() {\n   \
    \             j = j + 1;\n                continue;\n            }\n         \
    \   if s[j].is_ascii_digit() {\n                j = j + 1;\n                continue;\n\
    \            }\n            if s[j].is_ascii_upper() {\n                j = j\
    \ + 1;\n                continue;\n            }\n            if s[j].is_ascii_lower()\
    \ {\n                j = j + 1;\n                continue;\n            }\n  \
    \          if s[j].is_ascii_letter() {\n                j = j + 1;\n         \
    \       continue;\n            }\n            if s[j].is_ascii_symbol() {\n  \
    \              j = j + 1;\n                continue;\n            }\n        \
    \    if s[j].is_ascii_lowercase() {\n                j = j + 1;\n            \
    \    continue;\n            }\n            if s[j].is_ascii_uppercase() {\n  \
    \              j = j + 1;\n                continue;\n            }\n        \
    \    if s[j].is_ascii_letter() {\n                j = j + 1;\n               \
    \ continue;\n            }\n            if s[j].is_ascii_digit() {\n         \
    \       j = j + 1;\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpxcz022le.rs:134:3\n\
    \    |\n13  | fn anti_shuffle(s: String) -> String {\n    |                  \
    \                    - unclosed delimiter\n...\n18  |     while i < new_s_len\
    \ {\n    |                         - unclosed delimiter\n19  |         let mut\
    \ j = i;\n20  |         while j < new_s_len {\n    |                         \
    \    - unclosed delimiter\n...\n121 |             if s[j].is_ascii_digit() {\n\
    \    |                                      - this delimiter might not be properly\
    \ closed...\n122 |                 j = j + 1;\n123 | }\n    | - ...as it matches\
    \ this but it has different indentation\n...\n134 | }\n    |   ^\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpxcz022le.rs:127:17\n\
    \    |\n127 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpxcz022le.rs:127:25\n    |\n127 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpxcz022le.rs:128:17\n\
    \    |\n128 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpxcz022le.rs:128:25\n    |\n128 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpxcz022le.rs:129:17\n\
    \    |\n129 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpxcz022le.rs:129:25\n    |\n129 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpxcz022le.rs:130:17\n\
    \    |\n130 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    let mut j = 0;\n    while i < s.len()\
    \ {\n        let mut new_s_len = 0;\n        while j < s.len() {\n           \
    \ if s[i].is_whitespace() {\n                i += 1;\n                j += 1;\n\
    \                continue;\n            }\n            if s[j].is_whitespace()\
    \ {\n                j += 1;\n                continue;\n            }\n     \
    \       if s[i].to_ascii_lowercase() < s[j].to_ascii_lowercase() {\n         \
    \       new_s_len += 1;\n                new_s.push_str(&s[j..]);\n          \
    \      j += 1;\n                continue;\n            }\n            if s[i].to_ascii_lowercase()\
    \ > s[j].to_ascii_lowercase() {\n                new_s_len += 1;\n           \
    \     new_s.push_str(&s[i..]);\n                i += 1;\n                continue;\n\
    \            }\n            if s[i].to_ascii_lowercase() == s[j].to_ascii_lowercase()\
    \ {\n                new_s_len += 1;\n                new_s.push_str(&s[i..]);\n\
    \                i += 1;\n                j += 1;\n                continue;\n\
    \            }\n        }\n        new_s.push_str(&s[i..]);\n        i += 1;\n\
    \    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyr5lf9ag.rs:59:17\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyr5lf9ag.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyr5lf9ag.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyr5lf9ag.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyr5lf9ag.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyr5lf9ag.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyr5lf9ag.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyr5lf9ag.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyr5lf9ag.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyr5lf9ag.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyr5lf9ag.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut new_s_len2 = 0;\n    let mut new_s_len3 = 0;\n\
    \    let mut new_s_len4 = 0;\n    let mut new_s_len5 = 0;\n    let mut new_s_len6\
    \ = 0;\n    let mut new_s_len7 = 0;\n    let mut new_s_len8 = 0;\n    let mut\
    \ new_s_len9 = 0;\n    let mut new_s_len10 = 0;\n    let mut new_s_len11 = 0;\n\
    \    let mut new_s_len12 = 0;\n    let mut new_s_len13 = 0;\n    let mut new_s_len14\
    \ = 0;\n    let mut new_s_len15 = 0;\n    let mut new_s_len16 = 0;\n    let mut\
    \ new_s_len17 = 0;\n    let mut new_s_len18 = 0;\n    let mut new_s_len19 = 0;\n\
    \    let mut new_s_len20 = 0;\n    let mut new_s_len21 = 0;\n    let mut new_s_len22\
    \ = 0;\n    let mut new_s_len23 = 0;\n    let mut new_s_len24 = 0;\n    let mut\
    \ new_s_len25 = 0;\n    let mut new_s_len26 = 0;\n    let mut new_s_len27 = 0;\n\
    \    let mut new_s_len28 = 0;\n    let mut new_s_len29 = 0;\n    let mut new_s_len30\
    \ = 0;\n    let mut new_s_len31 = 0;\n    let mut new_s_len32 = 0;\n    let mut\
    \ new_s_len33 = 0;\n    let mut new_s_len34 = 0;\n    let mut new_s_len35 = 0;\n\
    \    let mut new_s_len36 = 0;\n    let mut new_s_len37 = 0;\n    let mut new_s_len38\
    \ = 0;\n    let mut new_s_len39 = 0;\n    let mut new_s_len40 = 0;\n    let mut\
    \ new_s_len41 = 0;\n    let mut new_s_len42 = 0;\n    let mut new_s_len43 = 0;\n\
    \    let mut new_s_len44 = 0;\n    let mut new_s_len45 = 0;\n    let mut new_s_len46\
    \ = 0;\n    let mut new_s_len47 = 0;\n    let mut new_s_len48 = 0;\n    let mut\
    \ new_s_len49 = 0;\n    let mut new_s_len50 = 0;\n    let mut new_s_len51 = 0;\n\
    \    let mut new_s_len52 = 0;\n    let mut new_s_len53 = 0;\n    let mut new_s_len54\
    \ = 0;\n    let mut new_s_len55 = 0;\n    let mut new_s_len\n}\n\nfn main() {\n\
    \    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp3vsiks77.rs:71:22\n   |\n\
    71 |     let mut new_s_len\n   |                      ^ help: add `;` here\n72\
    \ | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp3vsiks77.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3vsiks77.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3vsiks77.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3vsiks77.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3vsiks77.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3vsiks77.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `l"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().next().unwrap().to_ascii_lowercase().cmp(&s.chars().next().unwrap().to_ascii_uppercase())\
    \ < 0 {\n                new_s.push_str(&s.chars().next().unwrap().to_ascii_lowercase());\n\
    \                j = j + 1;\n            } else {\n                new_s.push_str(&s.chars().next().unwrap().to_ascii_uppercase());\n\
    \                j = j + 1;\n            }\n        }\n        new_s.push_str(&s.chars().next().unwrap().to_ascii_lowercase());\n\
    \        i = i + 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprug67iam.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprug67iam.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprug67iam.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprug67iam.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprug67iam.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprug67iam.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprug67iam.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprug67iam.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprug67iam.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprug67iam.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprug67iam.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len;\n    let mut new_s_len4 = new_s_len;\n    let mut new_s_len5 =\
    \ new_s_len;\n    let mut new_s_len6 = new_s_len;\n    let mut new_s_len7 = new_s_len;\n\
    \    let mut new_s_len8 = new_s_len;\n    let mut new_s_len9 = new_s_len;\n  \
    \  let mut new_s_len10 = new_s_len;\n    let mut new_s_len11 = new_s_len;\n  \
    \  let mut new_s_len12 = new_s_len;\n    let mut new_s_len13 = new_s_len;\n  \
    \  let mut new_s_len14 = new_s_len;\n    let mut new_s_len15 = new_s_len;\n  \
    \  let mut new_s_len16 = new_s_len;\n    let mut new_s_len17 = new_s_len;\n  \
    \  let mut new_s_len18 = new_s_len;\n    let mut new_s_len19 = new_s_len;\n  \
    \  let mut new_s_len20 = new_s_len;\n    let mut new_s_len21 = new_s_len;\n  \
    \  let mut new_s_len22 = new_s_len;\n    let mut new_s_len23 = new_s_len;\n  \
    \  let mut new_s_len24 = new_s_len;\n    let mut new_s_len25 = new_s_len;\n  \
    \  let mut new_s_len26 = new_s_len;\n    let mut new_s_len27 = new_s_len;\n  \
    \  let mut new_s_len28 = new_s_len;\n    let mut new_s_len29 = new_s_len;\n  \
    \  let mut new_s_len30 = new_s_len;\n    let mut new_s_len31 = new_s_len;\n  \
    \  let mut new_s_len32 = new_s_len;\n    let mut new_s_len33 = new_s_len;\n  \
    \  let mut new_s_len34 = new_s_len;\n    let mut new_s_len35 = new_s_len;\n  \
    \  let mut new_s_len36 = new_s_len;\n    let mut new_s_len37 = new_s_len;\n  \
    \  let mut new_s_len38 = new_s_len;\n    let mut new_s_len39 = new_s_len;\n  \
    \  let mut new_s_len40 = new_s_len;\n    let mut new_s_len41 = new_s_len;\n  \
    \  let mut new_s_len42 = new_s_len;\n    let mut new_s_len43 = new_s_len;\n  \
    \  let mut new_s_len44 = new_s_len;\n    let mut new_s_len45 = new_\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpo4cvqvf4.rs:60:31\n   |\n\
    60 |     let mut new_s_len45 = new_\n   |                               ^ help:\
    \ add `;` here\n61 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `new_` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:60:27\n   |\n60 |     let mut\
    \ new_s_len45 = new_\n   |                           ^^^^ help: a local variable\
    \ with a similar name exists: `new_s`\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpo4cvqvf4.rs:65:17\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:65:25\n \
    \  |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpo4cvqvf4.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpo4cvqvf4.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo4cvqvf4.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not foun"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        i = j;\n    }\n    new_s\n}\n\n\
    fn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnpvzcdlg.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnpvzcdlg.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnpvzcdlg.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnpvzcdlg.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut i = 0;\n    while i < s.len() {\n        let mut j = i;\n        while j\
    \ < s.len() {\n            if s[j] < s[i] {\n                j = j + 1;\n    \
    \        } else {\n                break;\n            }\n        }\n        let\
    \ mut new_word = String::new();\n        while j < s.len() {\n            new_word.push(s[j]);\n\
    \            j = j + 1;\n        }\n        new_s.push(new_word);\n        i =\
    \ j;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvsmgdnlw.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvsmgdnlw.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvsmgdnlw.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvsmgdnlw.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvsmgdnlw.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvsmgdnlw.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvsmgdnlw.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvsmgdnlw.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvsmgdnlw.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvsmgdnlw.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvsmgdnlw.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().nth(j).unwrap().to_ascii_lowercase()\
    \ < s.chars().nth(i).unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        i = j;\n    }\n    new_s\n}\n\n\
    fn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp15f81stb.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp15f81stb.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp15f81stb.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp15f81stb.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp15f81stb.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp15f81stb.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp15f81stb.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp15f81stb.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp15f81stb.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp15f81stb.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp15f81stb.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut new_s_len2 = 0;\n    let mut new_s_len3 = 0;\n\
    \    let mut new_s_len4 = 0;\n    let mut new_s_len5 = 0;\n    let mut new_s_len6\
    \ = 0;\n    let mut new_s_len7 = 0;\n    let mut new_s_len8 = 0;\n    let mut\
    \ new_s_len9 = 0;\n    let mut new_s_len10 = 0;\n    let mut new_s_len11 = 0;\n\
    \    let mut new_s_len12 = 0;\n    let mut new_s_len13 = 0;\n    let mut new_s_len14\
    \ = 0;\n    let mut new_s_len15 = 0;\n    let mut new_s_len16 = 0;\n    let mut\
    \ new_s_len17 = 0;\n    let mut new_s_len18 = 0;\n    let mut new_s_len19 = 0;\n\
    \    let mut new_s_len20 = 0;\n    let mut new_s_len21 = 0;\n    let mut new_s_len22\
    \ = 0;\n    let mut new_s_len23 = 0;\n    let mut new_s_len24 = 0;\n    let mut\
    \ new_s_len25 = 0;\n    let mut new_s_len26 = 0;\n    let mut new_s_len27 = 0;\n\
    \    let mut new_s_len28 = 0;\n    let mut new_s_len29 = 0;\n    let mut new_s_len30\
    \ = 0;\n    let mut new_s_len31 = 0;\n    let mut new_s_len32 = 0;\n    let mut\
    \ new_s_len33 = 0;\n    let mut new_s_len34 = 0;\n    let mut new_s_len35 = 0;\n\
    \    let mut new_s_len36 = 0;\n    let mut new_s_len37 = 0;\n    let mut new_s_len38\
    \ = 0;\n    let mut new_s_len39 = 0;\n    let mut new_s_len40 = 0;\n    let mut\
    \ new_s_len41 = 0;\n    let mut new_s_len42 = 0;\n    let mut new_s_len43 = 0;\n\
    \    let mut new_s_len44 = 0;\n    let mut new_s_len45 = 0;\n    let mut new_s_len46\
    \ = 0;\n    let mut new_s_len47 = 0;\n    let mut new_s_len48 = 0;\n    let mut\
    \ new_s_len49 = 0;\n    let mut new_s_len50 = 0;\n    let mut new_s_len51 = 0;\n\
    \    let mut new_s_len52 = 0;\n    let mut new_s_len53 = 0;\n    let mut new_s_len54\
    \ = 0;\n    let mut new_s_len55 = 0;\n    let mut new_s_len\n}\n\nfn main() {\n\
    \    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp3vsiks77.rs:71:22\n   |\n\
    71 |     let mut new_s_len\n   |                      ^ help: add `;` here\n72\
    \ | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp3vsiks77.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3vsiks77.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3vsiks77.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3vsiks77.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3vsiks77.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3vsiks77.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `l"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] >= 97 && s[j] <=\
    \ 122 {\n                s[j] -= 32;\n            }\n            j += 1;\n   \
    \     }\n        new_s.push_str(&s[i .. j]);\n        new_s_len += j - i;\n  \
    \      i = j;\n    }\n    new_s.push_str(&s[i .. new_s_len]);\n    new_s\n}\n\n\
    fn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgnn8lgxt.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgnn8lgxt.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgnn8lgxt.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgnn8lgxt.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgnn8lgxt.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgnn8lgxt.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgnn8lgxt.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgnn8lgxt.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgnn8lgxt.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgnn8lgxt.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgnn8lgxt.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j].is_whitespace()\
    \ {\n                j += 1;\n                continue;\n            }\n     \
    \       let mut k = j;\n            while k < s.len() {\n                if s[k].is_whitespace()\
    \ {\n                    k += 1;\n                    continue;\n            \
    \    }\n                if s[k].is_ascii_lowercase() {\n                    let\
    \ mut new_k = k;\n                    while new_k < s.len() {\n              \
    \          if s[new_k].is_ascii_uppercase() {\n                            new_k\
    \ = new_k;\n                        } else {\n                            new_k\
    \ += 1;\n                        }\n                    }\n                  \
    \  let mut new_new_k = new_k;\n                    while new_new_k < s.len() {\n\
    \                        if s[new_new_k].is_ascii_lowercase() {\n            \
    \                new_new_k = new_new_k;\n                        } else {\n  \
    \                          new_new_k += 1;\n                        }\n      \
    \              }\n                    let mut new_new_new_k = new_new_k;\n   \
    \                 while new_new_new_k < s.len() {\n                        if\
    \ s[new_new_new_k].is_ascii_uppercase() {\n                            new_new_new_k\
    \ = new_new_new_k;\n                        } else {\n                       \
    \     new_new_new_k += 1;\n                        }\n                    }\n\
    \                    let mut new_new_new_new_k = new_new_new_k;\n            \
    \        while new_new_new_new_k < s.len() {\n                        if s[new_new_new_new_k].is_ascii_lowercase()\
    \ {\n                            new_new_new_new_k = new_new_new_new_k;\n    \
    \                    } else {\n                            new_new_new_new_k +=\
    \ 1;\n                        }\n                    }\n                    new_s.push_str(&s[new_new_new_new_k..new_new_new_new_k]);\n\
    \                    new_s.push_str(&s[new_new_new_k..new_new_new_k]);\n     \
    \               new_s.push_str(&s[new_new_k..new_new_k]);\n                  \
    \  new_s.push_str(&s[new_k..new_k]);\n                    new_s.push_str(&s[new_k..new_k]);\n\
    \                    new_s.push_str(&s[new_k..new_k]);\n                    new_s.push_str(&s[new_k..new_k]);\n\
    \                    new_s.push_str(&s[new_k..new_k]);\n                    new_s.push_str(&s[new_k..new_k]);\n\
    \                    new_s.push_str(&s[new_k..new_k]);\n                    new_s.push_str(&s[new_k..new_k]);\n\
    \                    new_s.push_str(&s[new_k..new_k]);\n                    new_s.push_str(&s[new_k..new_k]);\n\
    \                    new_s.push_str(&s[new_\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpcnjy644a.rs:89:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n18 |     while i < s.len() {\n  \
    \ |                       - unclosed delimiter\n19 |         let mut j = i;\n\
    20 |         while j < s.len() {\n   |                           - unclosed delimiter\n\
    ...\n26 |             while k < s.len() {\n   |                              \
    \ - unclosed delimiter\n...\n31 |                 if s[k].is_ascii_lowercase()\
    \ {\n   |                                              - this delimiter might\
    \ not be properly closed...\n...\n78 | }\n   | - ...as it matches this but it\
    \ has different indentation\n...\n89 | }\n   |   ^\n\nerror: mismatched closing\
    \ delimiter: `}`\n  --> /tmp/tmpcnjy644a.rs:77:38\n   |\n13 | fn anti_shuffle(s:\
    \ String) -> String {\n   |                                      - closing delimiter\
    \ possibly meant for this\n...\n77 |                     new_s.push_str(&s[new_\n\
    \   |                                      ^ unclosed delimiter\n78 | }\n   |\
    \ ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value `new_` in\
    \ this scope\n  --> /tmp/tmpcnjy644a.rs:77:39\n   |\n77 |                    \
    \ new_s.push_str(&s[new_\n   |                                       ^^^^ help:\
    \ a local variable with a similar name exists: `new_k`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcnjy644a.rs:82:17\n   |\n82 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcnjy644a.rs:82:25\n\
    \   |\n82 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcnjy644a.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcnjy644a.rs:83:25\n   |\n83 |   \
    \  assert_eq!({left}, {right});\n   |                        "
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s[j] < s[i]\
    \ {\n                j = j + 1;\n            } else {\n                break;\n\
    \            }\n        }\n        let mut k = i;\n        while k < new_s_len\
    \ {\n            if s[k] > s[i] {\n                k = k + 1;\n            } else\
    \ {\n                break;\n            }\n        }\n        if j > k {\n  \
    \          new_s.push_str(&s[i .. k]);\n            new_s.push_str(&s[k .. j]);\n\
    \            i = j;\n        } else {\n            new_s.push_str(&s[i .. j]);\n\
    \            new_s.push_str(&s[j .. k]);\n            i = k;\n        }\n    }\n\
    \    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplbrupk_s.rs:50:17\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplbrupk_s.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplbrupk_s.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplbrupk_s.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplbrupk_s.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplbrupk_s.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplbrupk_s.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplbrupk_s.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplbrupk_s.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplbrupk_s.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplbrupk_s.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' {\n    \
    \            let mut new_s_len = new_s_len + 1;\n                new_s.push('z'\
    \ - s.chars().nth(j).unwrap().unwrap());\n                new_s.push('z' - s.chars().nth(i).unwrap().unwrap());\n\
    \                j = j + 1;\n            } else {\n                new_s_len =\
    \ new_s_len + 1;\n                new_s.push('z' - s.chars().nth(j).unwrap().unwrap());\n\
    \                new_s.push('z' - s.chars().nth(i).unwrap().unwrap());\n     \
    \           j = j + 1;\n            }\n        }\n        i = i + 1;\n    }\n\
    \    new_s.push_str(&s[new_s_len..]);\n    new_s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcw1s_p_k.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcw1s_p_k.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcw1s_p_k.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcw1s_p_k.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcw1s_p_k.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcw1s_p_k.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcw1s_p_k.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcw1s_p_k.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcw1s_p_k.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcw1s_p_k.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcw1s_p_k.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s[i] == s[j]\
    \ {\n                j += 1;\n            } else {\n                break;\n \
    \           }\n        }\n        if j == new_s_len {\n            new_s.push_str(&s[i]);\n\
    \            new_s_len += 1;\n        } else {\n            new_s.push_str(&s[i\
    \ .. j]);\n            new_s.push_str(&s[j]);\n            new_s_len += 1;\n \
    \           i += j - i + 1;\n        }\n    }\n    new_s\n}\n\nfn main() {\n \
    \   let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbx8agq4p.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbx8agq4p.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbx8agq4p.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbx8agq4p.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbx8agq4p.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbx8agq4p.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbx8agq4p.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbx8agq4p.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbx8agq4p.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbx8agq4p.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbx8agq4p.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s[i] != s[j]\
    \ {\n                new_s.push_str(&s[j]);\n                new_s.push_str(&s[i]);\n\
    \                break;\n            }\n            j += 1\n        }\n      \
    \  i += 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpra0b_kty.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpra0b_kty.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpra0b_kty.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpra0b_kty.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpra0b_kty.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpra0b_kty.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpra0b_kty.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpra0b_kty.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpra0b_kty.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpra0b_kty.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpra0b_kty.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j] == ' ' {\n        \
    \    j += 1\n        }\n        if j == new_s_len {\n            break;\n    \
    \    }\n        let mut new_s_char = new_s[i];\n        let mut new_s_char_len\
    \ = new_s_char.len();\n        while new_s_char_len > 0 {\n            let mut\
    \ new_s_char_len = new_s_char_len / 2;\n            let mut new_s_char_len2 =\
    \ new_s_char_len;\n            while new_s_char_len2 > 0 {\n                if\
    \ new_s_char[new_s_char_len2 - 1] < new_s_char[new_s_char_len2] {\n          \
    \          new_s_char_len2 -= 1;\n                } else {\n                 \
    \   new_s_char_len -= 1;\n                }\n            }\n            new_s_char[new_s_char_len]\
    \ = 'a';\n            new_s_char_len += 1;\n        }\n        new_s[i] = new_s_char;\n\
    \        i += 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgtk136wm.rs:49:17\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgtk136wm.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgtk136wm.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgtk136wm.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgtk136wm.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgtk136wm.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgtk136wm.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgtk136wm.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgtk136wm.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgtk136wm.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgtk136wm.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().next().unwrap().to_ascii_lowercase().cmp(&s.chars().next().unwrap().to_ascii_lowercase())\
    \ < 0 {\n                j = j + 1;\n            } else {\n                break;\n\
    \            }\n        }\n        new_s.push_str(&s[..j]);\n        new_s.push_str(&s[j..]);\n\
    \        i = j + 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxrwu3_9l.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxrwu3_9l.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxrwu3_9l.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxrwu3_9l.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxrwu3_9l.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxrwu3_9l.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxrwu3_9l.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxrwu3_9l.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxrwu3_9l.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxrwu3_9l.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxrwu3_9l.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' {\n    \
    \            new_s.push_str(&s[j]);\n                new_s_len += 1;\n       \
    \     }\n            j += 1\n        }\n        let mut k = i;\n        while\
    \ k < s.len() {\n            if s[k] != ' ' {\n                new_s.push_str(&s[k]);\n\
    \                new_s_len += 1;\n            }\n            k += 1\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        new_s_len += j - i;\n        i =\
    \ j;\n    }\n    new_s.push_str(&s[i .. s.len()]);\n    new_s_len += s.len() -\
    \ i;\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdvgbbton.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdvgbbton.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdvgbbton.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdvgbbton.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdvgbbton.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdvgbbton.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdvgbbton.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdvgbbton.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdvgbbton.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdvgbbton.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdvgbbton.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j += 1;\n                continue;\n            }\n            if\
    \ s[j] < 'a' || s[j] > 'z' {\n                j += 1;\n                continue;\n\
    \            }\n            new_s[new_s_len] = s[j];\n            new_s_len +=\
    \ 1;\n            j += 1;\n        }\n        new_s[new_s_len] = ' ';\n      \
    \  new_s_len += 1;\n        i += 1;\n    }\n    new_s\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpe_ghoepb.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpe_ghoepb.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpe_ghoepb.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpe_ghoepb.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpe_ghoepb.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpe_ghoepb.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpe_ghoepb.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpe_ghoepb.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpe_ghoepb.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpe_ghoepb.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpe_ghoepb.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len;\n    let mut new_s_len4 = new_s_len;\n    let mut new_s_len5 =\
    \ new_s_len;\n    let mut new_s_len6 = new_s_len;\n    let mut new_s_len7 = new_s_len;\n\
    \    let mut new_s_len8 = new_s_len;\n    let mut new_s_len9 = new_s_len;\n  \
    \  let mut new_s_len10 = new_s_len;\n    let mut new_s_len11 = new_s_len;\n  \
    \  let mut new_s_len12 = new_s_len;\n    let mut new_s_len13 = new_s_len;\n  \
    \  let mut new_s_len14 = new_s_len;\n    let mut new_s_len15 = new_s_len;\n  \
    \  let mut new_s_len16 = new_s_len;\n    let mut new_s_len17 = new_s_len;\n  \
    \  let mut new_s_len18 = new_s_len;\n    let mut new_s_len19 = new_s_len;\n  \
    \  let mut new_s_len20 = new_s_len;\n    let mut new_s_len21 = new_s_len;\n  \
    \  let mut new_s_len22 = new_s_len;\n    let mut new_s_len23 = new_s_len;\n  \
    \  let mut new_s_len24 = new_s_len;\n    let mut new_s_len25 = new_s_len;\n  \
    \  let mut new_s_len26 = new_s_len;\n    let mut new_s_len27 = new_s_len;\n  \
    \  let mut new_s_len28 = new_s_len;\n    let mut new_s_len29 = new_s_len;\n  \
    \  let mut new_s_len30 = new_s_len;\n    let mut new_s_len31 = new_s_len;\n  \
    \  let mut new_s_len32 = new_s_len;\n    let mut new_s_len33 = new_s_len;\n  \
    \  let mut new_s_len34 = new_s_len;\n    let mut new_s_len35 = new_s_len;\n  \
    \  let mut new_s_len36 = new_s_len;\n    let mut new_s_len37 = new_s_len;\n  \
    \  let mut new_s_len38 = new_s_len;\n    let mut new_s_len39 = new_s_len;\n  \
    \  let mut new_s_len40 = new_s_len;\n    let mut new_s_len41 = new_s_len;\n  \
    \  let mut new_s_len42 = new_s_len;\n    let mut new_s_len43 = new_s_len;\n  \
    \  let mut new_s_len44 = new_s_len;\n    let mut new_s_len45 = new_\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpo4cvqvf4.rs:60:31\n   |\n\
    60 |     let mut new_s_len45 = new_\n   |                               ^ help:\
    \ add `;` here\n61 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `new_` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:60:27\n   |\n60 |     let mut\
    \ new_s_len45 = new_\n   |                           ^^^^ help: a local variable\
    \ with a similar name exists: `new_s`\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpo4cvqvf4.rs:65:17\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:65:25\n \
    \  |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpo4cvqvf4.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpo4cvqvf4.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo4cvqvf4.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not foun"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' {\n    \
    \            new_s.push_str(&s[j]);\n                new_s_len += 1;\n       \
    \     }\n            j += 1\n        }\n        let mut k = i;\n        while\
    \ k < s.len() {\n            if s[k] != ' ' {\n                new_s.push_str(&s[k]);\n\
    \                new_s_len += 1;\n            }\n            k += 1\n        }\n\
    \        new_s.push_str(&s[new_s_len..]);\n        new_s_len += 1;\n        i\
    \ += 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfyc898gn.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfyc898gn.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfyc898gn.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfyc898gn.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfyc898gn.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfyc898gn.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfyc898gn.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfyc898gn.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfyc898gn.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfyc898gn.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfyc898gn.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[..j]);\n        new_s_len += j - i;\n        i = j;\n\
    \    }\n    new_s.push_str(&s[..i]);\n    new_s_len += i - s.len();\n    new_s\n\
    }\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpknorbwog.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpknorbwog.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpknorbwog.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpknorbwog.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpknorbwog.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpknorbwog.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpknorbwog.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpknorbwog.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpknorbwog.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpknorbwog.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpknorbwog.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut new_s_len2 = 0;\n    let mut i = 0;\n    let\
    \ mut j = 0;\n    let mut k = 0;\n    let mut l = s.len();\n    while i < l {\n\
    \        let mut new_s_len2 = new_s_len + s.len() - i;\n        while new_s_len2\
    \ < new_s_len {\n            new_s.push_str(\" \");\n            new_s_len2 +=\
    \ new_s_len;\n        }\n        let mut new_s_len2 = new_s_len + s.len() - i;\n\
    \        while new_s_len2 < new_s_len {\n            new_s.push_str(\" \");\n\
    \            new_s_len2 += new_s_len;\n        }\n        let mut new_s_len2 =\
    \ new_s_len + s.len() - i;\n        while new_s_len2 < new_s_len {\n         \
    \   new_s.push_str(\" \");\n            new_s_len2 += new_s_len;\n        }\n\
    \        let mut new_s_len2 = new_s_len + s.len() - i;\n        while new_s_len2\
    \ < new_s_len {\n            new_s.push_str(\" \");\n            new_s_len2 +=\
    \ new_s_len;\n        }\n        let mut new_s_len2 = new_s_len + s.len() - i;\n\
    \        while new_s_len2 < new_s_len {\n            new_s.push_str(\" \");\n\
    \            new_s_len2 += new_s_len;\n        }\n        let mut new_s_len2 =\
    \ new_s_len + s.len() - i;\n        while new_s_len2 < new_s_len {\n         \
    \   new_s.push_str(\" \");\n            new_s_len2 += new_s_len;\n        }\n\
    \        let mut new_s_len2 = new_s_len + s.len() - i;\n        while new_s_len2\
    \ < new_s_len {\n            new_s.push_str(\" \");\n            new_s_len2 +=\
    \ new_s_len;\n        }\n        let mut new_s_len2 = new_s_len + s.len() - i;\n\
    \        while new_s_len2 < new_s_len {\n            new_s.push_str(\" \");\n\
    \            new_s_len2 += new_s_len;\n        }\n        let mut new_s_len2 =\
    \ new_s_len + s.len() - i;\n        while new_s_len2 < new_s_len {\n         \
    \   new_s.push_str(\" \");\n            new_s_len2 += new_s_len;\n        }\n\
    \        let mut new_s_len2 = new_s_len + s.len() - i;\n        while new_s_len2\
    \ < new_s_len {\n            new_s.push_str(\" \");\n            new_s_len2 +=\
    \ new_s_len;\n        }\n        let mut new_s_len2 = new_s_len\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp5tmq42we.rs:85:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n22 |     while i < l {\n   |    \
    \             - this delimiter might not be properly closed...\n...\n74 | }\n\
    \   | - ...as it matches this but it has different indentation\n...\n85 | }\n\
    \   |   ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmp5tmq42we.rs:73:39\n\
    \   |\n73 |         let mut new_s_len2 = new_s_len\n   |                     \
    \                  ^ help: add `;` here\n74 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp5tmq42we.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp5tmq42we.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp5tmq42we.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp5tmq42we.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp5tmq42we.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp5tmq42we.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp5tmq42we.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp5tmq42we.rs:81:25\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found i"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < s.len() {\n    \
    \    let mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n\
    \                j += 1;\n                continue;\n            }\n         \
    \   if s[j] < 'a' || s[j] > 'z' {\n                j += 1;\n                continue;\n\
    \            }\n            if s[j] > 'z' {\n                let new_char = s[j].to_ascii_lowercase();\n\
    \                new_s.push_str(&new_char);\n                new_s_len += 1;\n\
    \                j += 1;\n                continue;\n            }\n         \
    \   new_s.push_str(&s[j]);\n            new_s_len += 1;\n            j += 1;\n\
    \        }\n        i += 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpq7vubcvn.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpq7vubcvn.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpq7vubcvn.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpq7vubcvn.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpq7vubcvn.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpq7vubcvn.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpq7vubcvn.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpq7vubcvn.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpq7vubcvn.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpq7vubcvn.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpq7vubcvn.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len2;\n    let mut new_s_len4 = new_s_len3;\n    let mut new_s_len5\
    \ = new_s_len4;\n    let mut new_s_len6 = new_s_len5;\n    let mut new_s_len7\
    \ = new_s_len6;\n    let mut new_s_len8 = new_s_len7;\n    let mut new_s_len9\
    \ = new_s_len8;\n    let mut new_s_len10 = new_s_len9;\n    let mut new_s_len11\
    \ = new_s_len10;\n    let mut new_s_len12 = new_s_len11;\n    let mut new_s_len13\
    \ = new_s_len12;\n    let mut new_s_len14 = new_s_len13;\n    let mut new_s_len15\
    \ = new_s_len14;\n    let mut new_s_len16 = new_s_len15;\n    let mut new_s_len17\
    \ = new_s_len16;\n    let mut new_s_len18 = new_s_len17;\n    let mut new_s_len19\
    \ = new_s_len18;\n    let mut new_s_len20 = new_s_len19;\n    let mut new_s_len21\
    \ = new_s_len20;\n    let mut new_s_len22 = new_s_len21;\n    let mut new_s_len23\
    \ = new_s_len22;\n    let mut new_s_len24 = new_s_len23;\n    let mut new_s_len25\
    \ = new_s_len24;\n    let mut new_s_len26 = new_s_len25;\n    let mut new_s_len27\
    \ = new_s_len26;\n    let mut new_s_len28 = new_s_len27;\n    let mut new_s_len29\
    \ = new_s_len28;\n    let mut new_s_len30 = new_s_len29;\n    let mut new_s_len31\
    \ = new_s_len30;\n    let mut new_s_len32 = new_s_len31;\n    let mut new_s_len33\
    \ = new_s_len32;\n    let mut new_s_len34 = new_s_len33;\n    let mut new_s_len35\
    \ = new_s_len34;\n    let mut new_s_len36 = new_s_len35;\n    let mut new_s_len37\
    \ = new_s_len36;\n    let mut new_s_len38 = new_s_len37;\n    let mut new_s_len39\
    \ = new_s_len38;\n    let mut new_s_len40 = new_s_\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4b6k92n4.rs:55:33\n   |\n\
    55 |     let mut new_s_len40 = new_s_\n   |                                 ^\
    \ help: add `;` here\n56 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `new_s_` in this scope\n  --> /tmp/tmp4b6k92n4.rs:55:27\n   |\n55\
    \ |     let mut new_s_len40 = new_s_\n   |                           ^^^^^^ help:\
    \ a local variable with a similar name exists: `new_s`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4b6k92n4.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    s.chars().sort_by(|a, b| a.cmp(b));\n \
    \   s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptli334_f.rs:21:17\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptli334_f.rs:21:25\n   |\n21 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptli334_f.rs:22:17\n   |\n22 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptli334_f.rs:22:25\n\
    \   |\n22 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptli334_f.rs:23:17\n   |\n23 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptli334_f.rs:23:25\n   |\n23 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptli334_f.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptli334_f.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptli334_f.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptli334_f.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptli334_f.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j = j + 1;\n                continue;\n            }\n          \
    \  if s[j] < 97 {\n                s[j] = s[j] + 1;\n                j = j + 1;\n\
    \                continue;\n            }\n            if s[j] > 122 {\n     \
    \           s[j] = s[j] - 1;\n                j = j + 1;\n                continue;\n\
    \            }\n            s[j] = s[j] + 1;\n            j = j + 1;\n       \
    \ }\n        new_s.push_str(&s[i .. (j + 1)]);\n        new_s_len += (j - i);\n\
    \        i = j;\n    }\n    new_s.push_str(&s[i ..]);\n    new_s_len += s.len()\
    \ - i;\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwedpikz_.rs:49:17\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwedpikz_.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwedpikz_.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwedpikz_.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwedpikz_.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwedpikz_.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwedpikz_.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwedpikz_.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwedpikz_.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwedpikz_.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwedpikz_.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().any(|c|\
    \ c == ' ') {\n                new_s.push_str(&s[..j]);\n                new_s.push_str(&s[j..]);\n\
    \                j = j + 1;\n            } else {\n                new_s.push_str(&s[..j]);\n\
    \                new_s.push_str(&s[j..]);\n                break;\n          \
    \  }\n        }\n        new_s.push_str(&s[..i]);\n        new_s.push_str(&s[i..]);\n\
    \        i = i + 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_0brifi6.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_0brifi6.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_0brifi6.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_0brifi6.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_0brifi6.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_0brifi6.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_0brifi6.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_0brifi6.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_0brifi6.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_0brifi6.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_0brifi6.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s[i] != s[j]\
    \ {\n                break;\n            }\n            j += 1\n        }\n  \
    \      if j == new_s_len {\n            new_s.push(' ');\n        } else {\n \
    \           new_s.push(s[i]);\n            new_s.push(' ');\n            i +=\
    \ 1;\n        }\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp85b0_5zr.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp85b0_5zr.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp85b0_5zr.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp85b0_5zr.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp85b0_5zr.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp85b0_5zr.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp85b0_5zr.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp85b0_5zr.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp85b0_5zr.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp85b0_5zr.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp85b0_5zr.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut i = 0;\n    while i < s.len() {\n        let mut j = i;\n        while j\
    \ < s.len() {\n            if s[j] < s[i] {\n                j = j + 1;\n    \
    \        } else {\n                break;\n            }\n        }\n        new_s.push_str(&s[0..i]);\n\
    \        new_s.push_str(&s[j..]);\n        i = j;\n    }\n    new_s\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpywv4ig8_.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpywv4ig8_.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpywv4ig8_.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpywv4ig8_.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpywv4ig8_.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpywv4ig8_.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpywv4ig8_.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpywv4ig8_.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpywv4ig8_.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpywv4ig8_.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpywv4ig8_.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut new_s_len2 = 0;\n    let mut new_s_len3 = 0;\n\
    \    let mut new_s_len4 = 0;\n    let mut new_s_len5 = 0;\n    let mut new_s_len6\
    \ = 0;\n    let mut new_s_len7 = 0;\n    let mut new_s_len8 = 0;\n    let mut\
    \ new_s_len9 = 0;\n    let mut new_s_len10 = 0;\n    let mut new_s_len11 = 0;\n\
    \    let mut new_s_len12 = 0;\n    let mut new_s_len13 = 0;\n    let mut new_s_len14\
    \ = 0;\n    let mut new_s_len15 = 0;\n    let mut new_s_len16 = 0;\n    let mut\
    \ new_s_len17 = 0;\n    let mut new_s_len18 = 0;\n    let mut new_s_len19 = 0;\n\
    \    let mut new_s_len20 = 0;\n    let mut new_s_len21 = 0;\n    let mut new_s_len22\
    \ = 0;\n    let mut new_s_len23 = 0;\n    let mut new_s_len24 = 0;\n    let mut\
    \ new_s_len25 = 0;\n    let mut new_s_len26 = 0;\n    let mut new_s_len27 = 0;\n\
    \    let mut new_s_len28 = 0;\n    let mut new_s_len29 = 0;\n    let mut new_s_len30\
    \ = 0;\n    let mut new_s_len31 = 0;\n    let mut new_s_len32 = 0;\n    let mut\
    \ new_s_len33 = 0;\n    let mut new_s_len34 = 0;\n    let mut new_s_len35 = 0;\n\
    \    let mut new_s_len36 = 0;\n    let mut new_s_len37 = 0;\n    let mut new_s_len38\
    \ = 0;\n    let mut new_s_len39 = 0;\n    let mut new_s_len40 = 0;\n    let mut\
    \ new_s_len41 = 0;\n    let mut new_s_len42 = 0;\n    let mut new_s_len43 = 0;\n\
    \    let mut new_s_len44 = 0;\n    let mut new_s_len45 = 0;\n    let mut new_s_len46\
    \ = 0;\n    let mut new_s_len47 = 0;\n    let mut new_s_len48 = 0;\n    let mut\
    \ new_s_len49 = 0;\n    let mut new_s_len50 = 0;\n    let mut new_s_len51 = 0;\n\
    \    let mut new_s_len52 = 0;\n    let mut new_s_len53 = 0;\n    let mut new_s_len54\
    \ = 0;\n    let mut new_s_len55 = 0;\n    let mut new_s_len\n}\n\nfn main() {\n\
    \    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp3vsiks77.rs:71:22\n   |\n\
    71 |     let mut new_s_len\n   |                      ^ help: add `;` here\n72\
    \ | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp3vsiks77.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3vsiks77.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3vsiks77.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3vsiks77.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3vsiks77.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3vsiks77.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `l"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().any(|c|\
    \ c != ' ') {\n                new_s.push_str(&s[..j]);\n                new_s.push_str(&\"\
    \ \");\n                new_s.push_str(&s[j..]);\n                break;\n   \
    \         }\n            j += 1\n        }\n        i += 1;\n    }\n    new_s\n\
    }\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgybg8u34.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgybg8u34.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgybg8u34.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgybg8u34.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgybg8u34.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgybg8u34.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgybg8u34.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgybg8u34.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgybg8u34.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgybg8u34.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgybg8u34.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s.chars().any(|c| c\
    \ == ' ') {\n                j = s.len();\n            } else {\n            \
    \    let c = s.chars().nth(j).unwrap();\n                let c_ord = c.to_ascii_lowercase();\n\
    \                if c_ord > s.chars().nth(j + 1).unwrap().to_ascii_lowercase()\
    \ {\n                    j = s.len();\n                } else {\n            \
    \        new_s.push_str(&s.chars().nth(j).unwrap());\n                    new_s.push_str(&c.to_ascii_lowercase());\n\
    \                    new_s_len += 1;\n                }\n            }\n     \
    \       j += 1;\n        }\n        new_s.push_str(&s.chars().nth(i).unwrap());\n\
    \        new_s_len += 1;\n        i = j;\n    }\n    new_s.push_str(&s.chars().nth(i).unwrap());\n\
    \    new_s.push_str(&new_s.chars().nth(new_s_len).unwrap());\n    new_s\n}\n\n\
    fn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxi8t0c74.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxi8t0c74.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxi8t0c74.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxi8t0c74.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxi8t0c74.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxi8t0c74.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxi8t0c74.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxi8t0c74.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxi8t0c74.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxi8t0c74.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxi8t0c74.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len.saturating_add((new_s_len.saturating_add((new_s_len.saturating_add(1)))\
    \ as u32));\n    let mut new_s_len3 = new_s_len2.saturating_add((new_s_len2.saturating_add((new_s_len2.saturating_add(1)))\
    \ as u32));\n    let mut new_s_len4 = new_s_len3.saturating_add((new_s_len3.saturating_add((new_s_len3.saturating_add(1)))\
    \ as u32));\n    let mut new_s_len5 = new_s_len4.saturating_add((new_s_len4.saturating_add((new_s_len4.saturating_add(1)))\
    \ as u32));\n    let mut new_s_len6 = new_s_len5.saturating_add((new_s_len5.saturating_add((new_s_len5.saturating_add(1)))\
    \ as u32));\n    let mut new_s_len7 = new_s_len6.saturating_add((new_s_len6.saturating_add((new_s_len6.saturating_add(1)))\
    \ as u32));\n    let mut new_s_len8 = new_s_len7.saturating_add((new_s_len7.saturating_add((new_s_len7.saturating_add(1)))\
    \ as u32));\n    let mut new_s_len9 = new_s_len8.saturating_add((new_s_len8.saturating_add((new_s_len8.saturating_add(1)))\
    \ as u32));\n    let mut new_s_len10 = new_s_len9.saturating_add((new_s_len9.saturating_add((new_s_len9.saturating_add(1)))\
    \ as u32));\n    let mut new_s_len11 = new_s_len10.saturating_add((new_s_len10.saturating_add((new_s_len10.saturating_add(1)))\
    \ as u32));\n    let mut new_s_len12 = new_s_len11.saturating_add((new_s_len11.saturating_add((new_s_len11.saturating_add(1)))\
    \ as u32));\n    let mut new_s_len13 = new_s_len12.saturating_add((new_s_len12.saturating_add((new_s_len12.saturating_add(1)))\
    \ as u32));\n    let mut new_s_len14 = new_s_len13.saturating_add((new_s_len13.saturating_add((new_s_len13.saturating_add(1)))\
    \ as u32));\n    let mut new_s_len15 = new_s_len14.saturating_add((new_s_len14.saturating_add((new_s_len14.saturating_add(1))\n\
    }\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: mismatched closing delimiter: `}`\n  --> /tmp/tmplco5zopt.rs:30:81\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - closing delimiter possibly meant for this\n...\n30 |     let\
    \ mut new_s_len15 = new_s_len14.saturating_add((new_s_len14.saturating_add((new_s_len14.saturating_add(1))\n\
    \   |                                                                        \
    \         ^ unclosed delimiter\n31 | }\n   | ^ mismatched closing delimiter\n\n\
    error: expected one of `.`, `;`, `?`, `else`, or an operator, found `}`\n  -->\
    \ /tmp/tmplco5zopt.rs:31:1\n   |\n31 | }\n   | ^ expected one of `.`, `;`, `?`,\
    \ `else`, or an operator\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplco5zopt.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplco5zopt.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplco5zopt.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplco5zopt.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplco5zopt.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplco5zopt.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplco5zopt.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplco5zopt.rs:38:25\n\
    \   |\n38 |     assert_e"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().next().unwrap().to_ascii_lowercase().cmp(&s.chars().next().unwrap().to_ascii_lowercase())\
    \ < 0 {\n                j = j + 1;\n            } else {\n                break;\n\
    \            }\n        }\n        new_s.push_str(&s[i .. j]);\n        i = j;\n\
    \    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvoo8oyrs.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvoo8oyrs.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvoo8oyrs.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvoo8oyrs.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvoo8oyrs.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvoo8oyrs.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvoo8oyrs.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvoo8oyrs.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvoo8oyrs.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvoo8oyrs.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvoo8oyrs.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j].is_whitespace() {\n\
    \            j += 1\n        }\n        let mut k = i;\n        while k < new_s_len\
    \ && s[k].is_whitespace() {\n            k += 1\n        }\n        if j > k {\n\
    \            new_s.push_str(&s[i .. k]);\n            new_s.push_str(&s[k .. j]);\n\
    \            i += k - i;\n        } else {\n            new_s.push_str(&s[i ..\
    \ j]);\n            new_s.push_str(&s[j..]);\n            i += j - i;\n      \
    \  }\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplvp6f86w.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplvp6f86w.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplvp6f86w.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplvp6f86w.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplvp6f86w.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplvp6f86w.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplvp6f86w.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplvp6f86w.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplvp6f86w.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplvp6f86w.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplvp6f86w.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' {\n    \
    \            new_s.push_str(&s[j]);\n                new_s_len += 1;\n       \
    \     }\n            j += 1;\n        }\n        if new_s_len > 0 {\n        \
    \    new_s.push_str(&' ');\n            new_s_len += 1;\n        }\n        new_s.push_str(&s[i]);\n\
    \        new_s_len += 1;\n        i += 1;\n    }\n    new_s\n}\n\nfn main() {\n\
    \    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbf0rzaw7.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbf0rzaw7.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbf0rzaw7.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbf0rzaw7.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbf0rzaw7.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbf0rzaw7.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbf0rzaw7.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbf0rzaw7.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbf0rzaw7.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbf0rzaw7.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbf0rzaw7.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' {\n    \
    \            new_s.push_str(&s[j]);\n                new_s_len += 1;\n       \
    \     }\n            j += 1\n        }\n        new_s.push_str(&s[new_s_len..i]);\n\
    \        new_s_len -= 1;\n        i += 1;\n    }\n    new_s\n}\n\nfn main() {\n\
    \    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprnwh16cm.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprnwh16cm.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprnwh16cm.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprnwh16cm.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprnwh16cm.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprnwh16cm.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprnwh16cm.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprnwh16cm.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprnwh16cm.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprnwh16cm.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprnwh16cm.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j] == ' ' {\n        \
    \    j = j + 1;\n        }\n        if j == new_s_len {\n            break;\n\
    \        }\n        let mut k = j;\n        while k < new_s_len && s[k] != ' '\
    \ {\n            k = k + 1;\n        }\n        if k == new_s_len {\n        \
    \    break;\n        }\n        let mut new_s_char = s[k];\n        while k <\
    \ new_s_len && s[k] == ' ' {\n            k = k + 1;\n        }\n        if k\
    \ == new_s_len {\n            break;\n        }\n        let mut new_s_char =\
    \ new_s_char.chars().nth(k.unwrap()).unwrap();\n        while i < j {\n      \
    \      new_s.push_str(&new_s_char);\n            i = i + 1;\n        }\n     \
    \   new_s.push_str(&new_s_char);\n    }\n    new_s\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnoxv2m8z.rs:52:17\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnoxv2m8z.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnoxv2m8z.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnoxv2m8z.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnoxv2m8z.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnoxv2m8z.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnoxv2m8z.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnoxv2m8z.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnoxv2m8z.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnoxv2m8z.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnoxv2m8z.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s[i] != s[j]\
    \ {\n                new_s.push_str(&s[j]);\n                new_s.push_str(&s[i]);\n\
    \                break;\n            }\n            j += 1;\n        }\n     \
    \   i += 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6xea3oi3.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6xea3oi3.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6xea3oi3.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6xea3oi3.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6xea3oi3.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6xea3oi3.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6xea3oi3.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6xea3oi3.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6xea3oi3.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6xea3oi3.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6xea3oi3.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                new_s.push_str(&s[i .. j]);\n    \
    \            new_s_len += j - i;\n                new_s.push_str(&\" \");\n  \
    \              i = j;\n                break;\n            }\n        }\n    }\n\
    \    new_s.push_str(&s[i .. new_s_len]);\n    new_s\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfmuhu5kx.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfmuhu5kx.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfmuhu5kx.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfmuhu5kx.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfmuhu5kx.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfmuhu5kx.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfmuhu5kx.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfmuhu5kx.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfmuhu5kx.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfmuhu5kx.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfmuhu5kx.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        i = j;\n    }\n    new_s\n}\n\n\
    fn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnpvzcdlg.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnpvzcdlg.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnpvzcdlg.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnpvzcdlg.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j] == ' ' {\n        \
    \    j += 1\n        }\n        if j == new_s_len {\n            break;\n    \
    \    }\n        let mut k = j;\n        while k < new_s_len && s[k] == ' ' {\n\
    \            k += 1\n        }\n        if k == new_s_len {\n            break;\n\
    \        }\n        let mut new_word = s.split_off(j).unwrap();\n        new_word.sort_unstable();\n\
    \        new_word.push_str(&new_word[j..k]);\n        new_s.push_str(&new_word);\n\
    \        i = k + 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwllpt7tv.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwllpt7tv.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwllpt7tv.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwllpt7tv.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwllpt7tv.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwllpt7tv.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwllpt7tv.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwllpt7tv.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwllpt7tv.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwllpt7tv.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwllpt7tv.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j += 1;\n                continue;\n            }\n            if\
    \ s[j] < 'A' || s[j] > 'Z' {\n                j += 1;\n                continue;\n\
    \            }\n            new_s.push_str(&s[i .. j]);\n            new_s_len\
    \ += 1;\n            i += 1;\n            j += 1;\n        }\n        new_s.push_str(&s[i\
    \ .. new_s_len]);\n        new_s_len += 1;\n    }\n    new_s\n}\n\nfn main() {\n\
    \    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpw9yteok9.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw9yteok9.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw9yteok9.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw9yteok9.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw9yteok9.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw9yteok9.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpw9yteok9.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpw9yteok9.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpw9yteok9.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw9yteok9.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw9yteok9.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j += 1;\n                continue;\n            }\n            if\
    \ s[j] < 'a' || s[j] > 'z' {\n                j += 1;\n                continue;\n\
    \            }\n            if s[j] < 'A' || s[j] > 'Z' {\n                j +=\
    \ 1;\n                continue;\n            }\n            if s[j] < '0' || s[j]\
    \ > '9' {\n                j += 1;\n                continue;\n            }\n\
    \            new_s.push_str(&s[i .. j]);\n            new_s_len += 1;\n      \
    \      i += j - i;\n            j += 1;\n        }\n        new_s.push_str(&s[i\
    \ .. new_s_len]);\n        new_s_len += 1;\n        i += new_s_len - i;\n    }\n\
    \    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9cd4xq05.rs:51:17\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9cd4xq05.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9cd4xq05.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9cd4xq05.rs:52:25\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9cd4xq05.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9cd4xq05.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9cd4xq05.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9cd4xq05.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9cd4xq05.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9cd4xq05.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9cd4xq05.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j] == ' ' {\n        \
    \    j += 1\n        }\n        let mut new_s_char = new_s[..j];\n        let\
    \ mut new_s_char_len = new_s_char.len();\n        let mut j = 0;\n        while\
    \ j < new_s_char_len {\n            let mut new_s_char_char = new_s_char[j];\n\
    \            let mut new_s_char_char_len = new_s_char_char.len();\n          \
    \  let mut new_s_char_char_char_len = new_s_char_char_char.len();\n          \
    \  let mut new_s_char_char_char_char_len = new_s_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_len = new_s_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_len =\
    \ new_s_char_char_char_char_char_char_char_char_char_char.len();\n           \
    \ let mut new_s_char_char_char_char_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_\n\
    }\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmppwq2wd_t.rs:53:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n18 |     while i < new_s_len {\n\
    \   |                         - unclosed delimiter\n...\n26 |         while j\
    \ < new_s_char_len {\n   |                                  - this delimiter might\
    \ not be properly closed...\n...\n42 | }\n   | - ...as it matches this but it\
    \ has different indentation\n...\n53 | }\n   |   ^\n\nerror: expected `;`, found\
    \ `}`\n  --> /tmp/tmppwq2wd_t.rs:41:102\n   |\n41 |             let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_\n\
    \   |                                                                        \
    \                              ^ help: add `;` here\n42 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `new_s_char_char_char` in this scope\n\
    \  --> /tmp/tmppwq2wd_t.rs:29:48\n   |\n29 |             let mut new_s_char_char_char_len\
    \ = new_s_char_char_char.len();\n   |                                        \
    \        ^^^^^^^^^^^^^^^^^^^^ help: a local variable with a similar name exists:\
    \ `new_s_char_char_len`\n\nerror[E0425]: cannot find value `new_s_char_char_char_char`\
    \ in this scope\n  --> /tmp/tmppwq2wd_t.rs:30:53\n   |\n30 |             let mut\
    \ new_s_char_char_char_char_len = new_s_char_char_char_char.len();\n   |     \
    \                                                ^^^^^^^^^^^^^^^^^^^^^^^^^ help:\
    \ a local variable with a similar name exists: `new_s_char_char_char_len`\n\n\
    error[E0425]: cannot find value `new_s_char_char_char_char_char` in this scope\n\
    \  --> /tmp/tmppwq2wd_t.rs:31:58\n   |\n31 |             let mut new_s_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char.len();\n   |                              \
    \                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a local variable\
    \ with a similar name exists: `new_s_char_char_char_char_len`\n\nerror[E0425]:\
    \ cannot find value `new_s_char_char_char_char_char_char` in this scope\n  -->\
    \ /tmp/tmppwq2wd_t.rs:32:63\n   |\n32"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        if j == s.len() {\n            new_s.push_str(&s[i\
    \ .. i + 1]);\n            new_s_len += 1;\n            i += 1;\n        } else\
    \ {\n            new_s.push_str(&s[i .. j]);\n            new_s_len += 1;\n  \
    \          i = j;\n        }\n    }\n    new_s.push_str(&s[i .. new_s_len]);\n\
    \    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpa3jl50vh.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa3jl50vh.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa3jl50vh.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpa3jl50vh.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa3jl50vh.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa3jl50vh.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa3jl50vh.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa3jl50vh.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa3jl50vh.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa3jl50vh.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa3jl50vh.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            }\n            i += 1;\n        }\n     \
    \   new_s.push_str(&s[i .. j]);\n        new_s_len += j - i;\n        i = j;\n\
    \    }\n    new_s.push_str(&s[i ..]);\n    new_s_len += s.len() - i;\n    new_s\n\
    }\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvqvwhlz4.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvqvwhlz4.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvqvwhlz4.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvqvwhlz4.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvqvwhlz4.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvqvwhlz4.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvqvwhlz4.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvqvwhlz4.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvqvwhlz4.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvqvwhlz4.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvqvwhlz4.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut new_s_len2 = 0;\n    let mut new_s_len3 = 0;\n\
    \    let mut new_s_len4 = 0;\n    let mut new_s_len5 = 0;\n    let mut new_s_len6\
    \ = 0;\n    let mut new_s_len7 = 0;\n    let mut new_s_len8 = 0;\n    let mut\
    \ new_s_len9 = 0;\n    let mut new_s_len10 = 0;\n    let mut new_s_len11 = 0;\n\
    \    let mut new_s_len12 = 0;\n    let mut new_s_len13 = 0;\n    let mut new_s_len14\
    \ = 0;\n    let mut new_s_len15 = 0;\n    let mut new_s_len16 = 0;\n    let mut\
    \ new_s_len17 = 0;\n    let mut new_s_len18 = 0;\n    let mut new_s_len19 = 0;\n\
    \    let mut new_s_len20 = 0;\n    let mut new_s_len21 = 0;\n    let mut new_s_len22\
    \ = 0;\n    let mut new_s_len23 = 0;\n    let mut new_s_len24 = 0;\n    let mut\
    \ new_s_len25 = 0;\n    let mut new_s_len26 = 0;\n    let mut new_s_len27 = 0;\n\
    \    let mut new_s_len28 = 0;\n    let mut new_s_len29 = 0;\n    let mut new_s_len30\
    \ = 0;\n    let mut new_s_len31 = 0;\n    let mut new_s_len32 = 0;\n    let mut\
    \ new_s_len33 = 0;\n    let mut new_s_len34 = 0;\n    let mut new_s_len35 = 0;\n\
    \    let mut new_s_len36 = 0;\n    let mut new_s_len37 = 0;\n    let mut new_s_len38\
    \ = 0;\n    let mut new_s_len39 = 0;\n    let mut new_s_len40 = 0;\n    let mut\
    \ new_s_len41 = 0;\n    let mut new_s_len42 = 0;\n    let mut new_s_len43 = 0;\n\
    \    let mut new_s_len44 = 0;\n    let mut new_s_len45 = 0;\n    let mut new_s_len46\
    \ = 0;\n    let mut new_s_len47 = 0;\n    let mut new_s_len48 = 0;\n    let mut\
    \ new_s_len49 = 0;\n    let mut new_s_len50 = 0;\n    let mut new_s_len51 = 0;\n\
    \    let mut new_s_len52 = 0;\n    let mut new_s_len53 = 0;\n    let mut new_s_len54\
    \ = 0;\n    let mut new_s_len55 = 0;\n    let mut new_s_len\n}\n\nfn main() {\n\
    \    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp3vsiks77.rs:71:22\n   |\n\
    71 |     let mut new_s_len\n   |                      ^ help: add `;` here\n72\
    \ | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp3vsiks77.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3vsiks77.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3vsiks77.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3vsiks77.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3vsiks77.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3vsiks77.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `l"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut i = 0;\n    while i < s.len() {\n\
    \        let mut j = i;\n        while j < s.len() {\n            if s[j].is_whitespace()\
    \ {\n                j = j + 1;\n                continue;\n            }\n  \
    \          if s[j].is_ascii_lowercase() {\n                s[j] = s[j].to_ascii_lowercase();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_uppercase() {\n                s[j] = s[j].to_ascii_uppercase();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_digit() {\n                s[j] = s[j].to_ascii_digit();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_letter() {\n                s[j] = s[j].to_ascii_letter();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_lowercase() {\n                s[j] = s[j].to_ascii_lowercase();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_uppercase() {\n                s[j] = s[j].to_ascii_uppercase();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_digit() {\n                s[j] = s[j].to_ascii_digit();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_letter() {\n                s[j] = s[j].to_ascii_letter();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_lowercase() {\n                s[j] = s[j].to_ascii_lowercase();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_uppercase() {\n                s[j] = s[j].to_ascii_uppercase();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_digit() {\n                s[j] = s[j].to_ascii_digit();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_letter() {\n                s[j] = s[j].to_ascii_letter();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_lowercase() {\n                s[j] = s[j].to_ascii_lowercase();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_uppercase() {\n                s[j] = s[j].to_ascii_uppercase();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_digit() {\n                s[j] = s[j].to_ascii_digit();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_letter() {\n                s[j] = s[j].to_ascii_letter();\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_lowercase() {\n                s[j] = s[j].to_ascii_lowercase();\n\
    \n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp3n4c3wyb.rs:117:3\n\
    \    |\n13  | fn anti_shuffle(s: String) -> String {\n    |                  \
    \                    - unclosed delimiter\n...\n16  |     while i < s.len() {\n\
    \    |                       - unclosed delimiter\n17  |         let mut j = i;\n\
    18  |         while j < s.len() {\n    |                           - unclosed\
    \ delimiter\n...\n103 |             if s[j].is_ascii_lowercase() {\n    |    \
    \                                      - this delimiter might not be properly\
    \ closed...\n...\n106 | }\n    | - ...as it matches this but it has different\
    \ indentation\n...\n117 | }\n    |   ^\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n   --> /tmp/tmp3n4c3wyb.rs:110:17\n    |\n110 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmp3n4c3wyb.rs:110:25\n\
    \    |\n110 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmp3n4c3wyb.rs:111:17\n    |\n111 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmp3n4c3wyb.rs:111:25\n\
    \    |\n111 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmp3n4c3wyb.rs:112:17\n    |\n112 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmp3n4c3wyb.rs:112:25\n\
    \    |\n112 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmp3n4c3wyb.rs:113:17\n    |\n113 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmp3n4c3wyb.rs:113:25\n"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    s.chars().sort_by(|a, b| a.cmp(b));\n \
    \   s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptli334_f.rs:21:17\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptli334_f.rs:21:25\n   |\n21 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptli334_f.rs:22:17\n   |\n22 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptli334_f.rs:22:25\n\
    \   |\n22 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptli334_f.rs:23:17\n   |\n23 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptli334_f.rs:23:25\n   |\n23 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptli334_f.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptli334_f.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptli334_f.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptli334_f.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptli334_f.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] >= 97 && s[j] <=\
    \ 122 {\n                j += 1;\n            } else {\n                break;\n\
    \            }\n        }\n        let mut new_s_len = new_s_len + 1;\n      \
    \  new_s.push_str(&s[i .. j]);\n        new_s.push_str(&\" \");\n        i = j;\n\
    \    }\n    new_s.push_str(&s[i ..]);\n    new_s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbm8gvan0.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbm8gvan0.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbm8gvan0.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbm8gvan0.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbm8gvan0.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbm8gvan0.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbm8gvan0.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbm8gvan0.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbm8gvan0.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbm8gvan0.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbm8gvan0.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    let mut j = 0;\n    while i < s.len()\
    \ {\n        let mut j = i;\n        while j < s.len() {\n            if s[i]\
    \ == s[j] {\n                new_s.push(' ');\n                new_s.push(s[j]);\n\
    \                j += 1;\n            } else {\n                new_s.push(s[i]);\n\
    \                i += 1;\n                break;\n            }\n        }\n \
    \       new_s_len += 1;\n    }\n    new_s.truncate(new_s_len);\n    new_s\n}\n\
    \nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppi7kwlxv.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppi7kwlxv.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppi7kwlxv.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppi7kwlxv.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppi7kwlxv.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppi7kwlxv.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppi7kwlxv.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppi7kwlxv.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppi7kwlxv.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppi7kwlxv.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppi7kwlxv.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len;\n    let mut new_s_len4 = new_s_len;\n    let mut new_s_len5 =\
    \ new_s_len;\n    let mut new_s_len6 = new_s_len;\n    let mut new_s_len7 = new_s_len;\n\
    \    let mut new_s_len8 = new_s_len;\n    let mut new_s_len9 = new_s_len;\n  \
    \  let mut new_s_len10 = new_s_len;\n    let mut new_s_len11 = new_s_len;\n  \
    \  let mut new_s_len12 = new_s_len;\n    let mut new_s_len13 = new_s_len;\n  \
    \  let mut new_s_len14 = new_s_len;\n    let mut new_s_len15 = new_s_len;\n  \
    \  let mut new_s_len16 = new_s_len;\n    let mut new_s_len17 = new_s_len;\n  \
    \  let mut new_s_len18 = new_s_len;\n    let mut new_s_len19 = new_s_len;\n  \
    \  let mut new_s_len20 = new_s_len;\n    let mut new_s_len21 = new_s_len;\n  \
    \  let mut new_s_len22 = new_s_len;\n    let mut new_s_len23 = new_s_len;\n  \
    \  let mut new_s_len24 = new_s_len;\n    let mut new_s_len25 = new_s_len;\n  \
    \  let mut new_s_len26 = new_s_len;\n    let mut new_s_len27 = new_s_len;\n  \
    \  let mut new_s_len28 = new_s_len;\n    let mut new_s_len29 = new_s_len;\n  \
    \  let mut new_s_len30 = new_s_len;\n    let mut new_s_len31 = new_s_len;\n  \
    \  let mut new_s_len32 = new_s_len;\n    let mut new_s_len33 = new_s_len;\n  \
    \  let mut new_s_len34 = new_s_len;\n    let mut new_s_len35 = new_s_len;\n  \
    \  let mut new_s_len36 = new_s_len;\n    let mut new_s_len37 = new_s_len;\n  \
    \  let mut new_s_len38 = new_s_len;\n    let mut new_s_len39 = new_s_len;\n  \
    \  let mut new_s_len40 = new_s_len;\n    let mut new_s_len41 = new_s_len;\n  \
    \  let mut new_s_len42 = new_s_len;\n    let mut new_s_len43 = new_s_len;\n  \
    \  let mut new_s_len44 = new_s_len;\n    let mut new_s_len45 = new_\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpo4cvqvf4.rs:60:31\n   |\n\
    60 |     let mut new_s_len45 = new_\n   |                               ^ help:\
    \ add `;` here\n61 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `new_` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:60:27\n   |\n60 |     let mut\
    \ new_s_len45 = new_\n   |                           ^^^^ help: a local variable\
    \ with a similar name exists: `new_s`\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpo4cvqvf4.rs:65:17\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:65:25\n \
    \  |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpo4cvqvf4.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpo4cvqvf4.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo4cvqvf4.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not foun"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut i = 0;\n    while i < s.len() {\n        let mut j = i;\n        while j\
    \ < s.len() {\n            if s[j] < s[i] {\n                j = j + 1;\n    \
    \            continue;\n            }\n            if s[j] > s[i] {\n        \
    \        let mut temp = s[j];\n                s[j] = s[i];\n                s[i]\
    \ = temp;\n                j = j + 1;\n                continue;\n           \
    \ }\n            j = j + 1;\n        }\n        new_s.push_str(&s[i..j]);\n  \
    \      i = j;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxxnp048o.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxxnp048o.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxxnp048o.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxxnp048o.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxxnp048o.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxxnp048o.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxxnp048o.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxxnp048o.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxxnp048o.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxxnp048o.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxxnp048o.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len;\n    let mut new_s_len4 = new_s_len;\n    let mut new_s_len5 =\
    \ new_s_len;\n    let mut new_s_len6 = new_s_len;\n    let mut new_s_len7 = new_s_len;\n\
    \    let mut new_s_len8 = new_s_len;\n    let mut new_s_len9 = new_s_len;\n  \
    \  let mut new_s_len10 = new_s_len;\n    let mut new_s_len11 = new_s_len;\n  \
    \  let mut new_s_len12 = new_s_len;\n    let mut new_s_len13 = new_s_len;\n  \
    \  let mut new_s_len14 = new_s_len;\n    let mut new_s_len15 = new_s_len;\n  \
    \  let mut new_s_len16 = new_s_len;\n    let mut new_s_len17 = new_s_len;\n  \
    \  let mut new_s_len18 = new_s_len;\n    let mut new_s_len19 = new_s_len;\n  \
    \  let mut new_s_len20 = new_s_len;\n    let mut new_s_len21 = new_s_len;\n  \
    \  let mut new_s_len22 = new_s_len;\n    let mut new_s_len23 = new_s_len;\n  \
    \  let mut new_s_len24 = new_s_len;\n    let mut new_s_len25 = new_s_len;\n  \
    \  let mut new_s_len26 = new_s_len;\n    let mut new_s_len27 = new_s_len;\n  \
    \  let mut new_s_len28 = new_s_len;\n    let mut new_s_len29 = new_s_len;\n  \
    \  let mut new_s_len30 = new_s_len;\n    let mut new_s_len31 = new_s_len;\n  \
    \  let mut new_s_len32 = new_s_len;\n    let mut new_s_len33 = new_s_len;\n  \
    \  let mut new_s_len34 = new_s_len;\n    let mut new_s_len35 = new_s_len;\n  \
    \  let mut new_s_len36 = new_s_len;\n    let mut new_s_len37 = new_s_len;\n  \
    \  let mut new_s_len38 = new_s_len;\n    let mut new_s_len39 = new_s_len;\n  \
    \  let mut new_s_len40 = new_s_len;\n    let mut new_s_len41 = new_s_len;\n  \
    \  let mut new_s_len42 = new_s_len;\n    let mut new_s_len43 = new_s_len;\n  \
    \  let mut new_s_len44 = new_s_len;\n    let mut new_s_len45 = new_\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpo4cvqvf4.rs:60:31\n   |\n\
    60 |     let mut new_s_len45 = new_\n   |                               ^ help:\
    \ add `;` here\n61 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `new_` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:60:27\n   |\n60 |     let mut\
    \ new_s_len45 = new_\n   |                           ^^^^ help: a local variable\
    \ with a similar name exists: `new_s`\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpo4cvqvf4.rs:65:17\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:65:25\n \
    \  |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpo4cvqvf4.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpo4cvqvf4.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo4cvqvf4.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not foun"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j += 1;\n                continue;\n            }\n            if\
    \ s[j] < 97 {\n                s[j] = s[j] + 1;\n                j += 1;\n   \
    \             continue;\n            }\n            if s[j] > 122 {\n        \
    \        s[j] = s[j] - 1;\n                j += 1;\n                continue;\n\
    \            }\n            break;\n        }\n        new_s.push_str(&s[i ..\
    \ j]);\n        new_s_len += j - i;\n        i = j;\n    }\n    new_s.push_str(&s[i\
    \ ..]);\n    new_s_len += s.len() - i;\n    new_s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg_x4x_67.rs:48:17\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg_x4x_67.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg_x4x_67.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg_x4x_67.rs:49:25\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg_x4x_67.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg_x4x_67.rs:50:25\n   |\n50 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg_x4x_67.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg_x4x_67.rs:51:25\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg_x4x_67.rs:52:17\n  \
    \ |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg_x4x_67.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg_x4x_67.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' {\n    \
    \            new_s.push_str(&s[j]);\n                new_s_len += 1;\n       \
    \     }\n            j += 1\n        }\n        let mut k = i;\n        while\
    \ k < s.len() {\n            if s[k] != ' ' {\n                new_s.push_str(&s[k]);\n\
    \                new_s_len += 1;\n            }\n            k += 1\n        }\n\
    \        let mut l = i;\n        while l < s.len() {\n            if s[l] != '\
    \ ' {\n                new_s.push_str(&s[l]);\n                new_s_len += 1;\n\
    \            }\n            l += 1\n        }\n        let mut m = i;\n      \
    \  while m < s.len() {\n            if s[m] != ' ' {\n                new_s.push_str(&s[m]);\n\
    \                new_s_len += 1;\n            }\n            m += 1\n        }\n\
    \        let mut n = i;\n        while n < s.len() {\n            if s[n] != '\
    \ ' {\n                new_s.push_str(&s[n]);\n                new_s_len += 1;\n\
    \            }\n            n += 1\n        }\n        let mut o = i;\n      \
    \  while o < s.len() {\n            if s[o] != ' ' {\n                new_s.push_str(&s[o]);\n\
    \                new_s_len += 1;\n            }\n            o += 1\n        }\n\
    \        let mut p = i;\n        while p < s.len() {\n            if s[p] != '\
    \ ' {\n                new_s.push_str(&s[p]);\n                new_s_len += 1;\n\
    \            }\n            p += 1\n        }\n        let mut q = i;\n      \
    \  while q < s.len() {\n            if s[q] != ' ' {\n                new_s.push_str(&s[q]);\n\
    \                new_s_len += 1;\n            }\n            q += 1\n        }\n\
    \        let mut r = i;\n        while r < s.len() {\n            if s[r] != '\
    \ ' {\n                new_s.push_str(&s[r]);\n                new_s_len += 1;\n\
    \            }\n            r += 1\n        }\n        let mut s = i;\n      \
    \  while s < s.len() {\n            if s[s] != ' ' {\n                new_s.push_str(&s[s]);\n\
    \                new_s_len += 1;\n            }\n            s += 1\n        }\n\
    \        i += 1;\n    }\n    new_s.push_str(&s[new_s_len..]);\n    new_s\n}\n\n\
    fn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n   --> /tmp/tmpt2ahw2ix.rs:107:17\n\
    \    |\n107 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpt2ahw2ix.rs:107:25\n    |\n107 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpt2ahw2ix.rs:108:17\n\
    \    |\n108 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpt2ahw2ix.rs:108:25\n    |\n108 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpt2ahw2ix.rs:109:17\n\
    \    |\n109 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpt2ahw2ix.rs:109:25\n    |\n109 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpt2ahw2ix.rs:110:17\n\
    \    |\n110 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpt2ahw2ix.rs:110:25\n    |\n110 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpt2ahw2ix.rs:111:17\n\
    \    |\n111 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpt2ahw2ix.rs:111:25\n    |\n111 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpt2ahw2ix.rs:112:17\n\
    \    |\n112 |     assert_eq!({left}, {right});\n    |                 ^^^^"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j += 1;\n                continue;\n            }\n            if\
    \ s[j] < 97 {\n                s[j] = s[j] + 1;\n            } else {\n      \
    \          s[j] = s[j] - 1;\n            }\n            j += 1;\n        }\n \
    \       new_s.push_str(&s[i .. j]);\n        new_s_len += j - i;\n        i =\
    \ j;\n    }\n    new_s.push_str(&s[i ..]);\n    new_s_len += s.len() - i;\n  \
    \  new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpirm4x6ok.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpirm4x6ok.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpirm4x6ok.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpirm4x6ok.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpirm4x6ok.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpirm4x6ok.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpirm4x6ok.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpirm4x6ok.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpirm4x6ok.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpirm4x6ok.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpirm4x6ok.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n                continue;\n            }\n          \
    \  if s[j] > s[i] {\n                break;\n            }\n            new_s[new_s_len]\
    \ = s[j];\n            new_s_len += 1;\n            j = j + 1;\n        }\n  \
    \      new_s[new_s_len] = s[i];\n        new_s_len += 1;\n        i += 1;\n  \
    \  }\n    new_s.truncate(new_s_len);\n    new_s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi7x9ggrw.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi7x9ggrw.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi7x9ggrw.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi7x9ggrw.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi7x9ggrw.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi7x9ggrw.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi7x9ggrw.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi7x9ggrw.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi7x9ggrw.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi7x9ggrw.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi7x9ggrw.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        let mut new_s_char = s.chars().nth(j).unwrap();\n\
    \        new_s.push_str(&new_s_char);\n        new_s_len += 1;\n        i = j;\n\
    \    }\n    new_s.push_str(&s[s.len() - new_s_len..]);\n    new_s\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjm2cf_s9.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjm2cf_s9.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjm2cf_s9.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjm2cf_s9.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjm2cf_s9.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjm2cf_s9.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjm2cf_s9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjm2cf_s9.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjm2cf_s9.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjm2cf_s9.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjm2cf_s9.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j].is_whitespace() {\n\
    \            j = j + 1;\n        }\n        let mut k = j;\n        while k <\
    \ new_s_len && s[k].is_whitespace() {\n            k = k + 1;\n        }\n   \
    \     if j > k {\n            new_s.push_str(&s[i .. k]);\n            new_s.push_str(&s[k\
    \ .. j]);\n            i = k;\n        } else {\n            new_s.push_str(&s[i\
    \ .. j]);\n            new_s.push_str(&s[k..new_s_len]);\n            i = new_s_len;\n\
    \        }\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpx5q089rl.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx5q089rl.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx5q089rl.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpx5q089rl.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpx5q089rl.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpx5q089rl.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpx5q089rl.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpx5q089rl.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpx5q089rl.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx5q089rl.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx5q089rl.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len2;\n    let mut new_s_len4 = new_s_len3;\n    let mut new_s_len5\
    \ = new_s_len4;\n    let mut new_s_len6 = new_s_len5;\n    let mut new_s_len7\
    \ = new_s_len6;\n    let mut new_s_len8 = new_s_len7;\n    let mut new_s_len9\
    \ = new_s_len8;\n    let mut new_s_len10 = new_s_len9;\n    let mut new_s_len11\
    \ = new_s_len10;\n    let mut new_s_len12 = new_s_len11;\n    let mut new_s_len13\
    \ = new_s_len12;\n    let mut new_s_len14 = new_s_len13;\n    let mut new_s_len15\
    \ = new_s_len14;\n    let mut new_s_len16 = new_s_len15;\n    let mut new_s_len17\
    \ = new_s_len16;\n    let mut new_s_len18 = new_s_len17;\n    let mut new_s_len19\
    \ = new_s_len18;\n    let mut new_s_len20 = new_s_len19;\n    let mut new_s_len21\
    \ = new_s_len20;\n    let mut new_s_len22 = new_s_len21;\n    let mut new_s_len23\
    \ = new_s_len22;\n    let mut new_s_len24 = new_s_len23;\n    let mut new_s_len25\
    \ = new_s_len24;\n    let mut new_s_len26 = new_s_len25;\n    let mut new_s_len27\
    \ = new_s_len26;\n    let mut new_s_len28 = new_s_len27;\n    let mut new_s_len29\
    \ = new_s_len28;\n    let mut new_s_len30 = new_s_len29;\n    let mut new_s_len31\
    \ = new_s_len30;\n    let mut new_s_len32 = new_s_len31;\n    let mut new_s_len33\
    \ = new_s_len32;\n    let mut new_s_len34 = new_s_len33;\n    let mut new_s_len35\
    \ = new_s_len34;\n    let mut new_s_len36 = new_s_len35;\n    let mut new_s_len37\
    \ = new_s_len36;\n    let mut new_s_len38 = new_s_len37;\n    let mut new_s_len39\
    \ = new_s_len38;\n    let mut new_s_len40 = new_s_\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4b6k92n4.rs:55:33\n   |\n\
    55 |     let mut new_s_len40 = new_s_\n   |                                 ^\
    \ help: add `;` here\n56 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `new_s_` in this scope\n  --> /tmp/tmp4b6k92n4.rs:55:27\n   |\n55\
    \ |     let mut new_s_len40 = new_s_\n   |                           ^^^^^^ help:\
    \ a local variable with a similar name exists: `new_s`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4b6k92n4.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' {\n    \
    \            new_s.push_str(&s[j]);\n                new_s_len += 1;\n       \
    \     }\n            j += 1\n        }\n        let mut k = i;\n        while\
    \ k < s.len() {\n            if s[k] != ' ' {\n                new_s.push_str(&s[k]);\n\
    \                new_s_len += 1;\n            }\n            k += 1\n        }\n\
    \        new_s.push_str(&s[new_s_len..]);\n        new_s_len += 1;\n        i\
    \ += 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfyc898gn.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfyc898gn.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfyc898gn.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfyc898gn.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfyc898gn.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfyc898gn.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfyc898gn.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfyc898gn.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfyc898gn.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfyc898gn.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfyc898gn.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j] == ' ' {\n        \
    \    j += 1; // skip space\n        }\n        if j == new_s_len {\n         \
    \   break;\n        }\n        let mut new_word = s.split_off(j).collect::<Vec<_>>();\n\
    \        new_word.sort_unstable();\n        new_word.push(new_word[0]);\n    \
    \    new_word.sort_unstable();\n        new_s += new_word.iter().collect::<String>().to_string();\n\
    \        i = j;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0cml6amb.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0cml6amb.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0cml6amb.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0cml6amb.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0cml6amb.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0cml6amb.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0cml6amb.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0cml6amb.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0cml6amb.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0cml6amb.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0cml6amb.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n                continue;\n            }\n          \
    \  if s[j] > s[i] {\n                let mut new_word = String::new();\n     \
    \           new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_str(&s[j\
    \ .. i]);\n                new_word.push_str(&s[i .. j]);\n                new_word.push_\n\
    }\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpnr4w7moa.rs:78:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n18 |     while i < s.len() {\n  \
    \ |                       - unclosed delimiter\n19 |         let mut j = i;\n\
    20 |         while j < s.len() {\n   |                           - unclosed delimiter\n\
    ...\n25 |             if s[j] > s[i] {\n   |                            - this\
    \ delimiter might not be properly closed...\n...\n67 | }\n   | - ...as it matches\
    \ this but it has different indentation\n...\n78 | }\n   |   ^\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnr4w7moa.rs:71:17\n  \
    \ |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnr4w7moa.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnr4w7moa.rs:72:17\n   |\n72 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnr4w7moa.rs:72:25\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnr4w7moa.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnr4w7moa.rs:73:25\n   |\n73 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnr4w7moa.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnr4w7moa.rs:74:25\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len2;\n    let mut new_s_len4 = new_s_len3;\n    let mut new_s_len5\
    \ = new_s_len4;\n    let mut new_s_len6 = new_s_len5;\n    let mut new_s_len7\
    \ = new_s_len6;\n    let mut new_s_len8 = new_s_len7;\n    let mut new_s_len9\
    \ = new_s_len8;\n    let mut new_s_len10 = new_s_len9;\n    let mut new_s_len11\
    \ = new_s_len10;\n    let mut new_s_len12 = new_s_len11;\n    let mut new_s_len13\
    \ = new_s_len12;\n    let mut new_s_len14 = new_s_len13;\n    let mut new_s_len15\
    \ = new_s_len14;\n    let mut new_s_len16 = new_s_len15;\n    let mut new_s_len17\
    \ = new_s_len16;\n    let mut new_s_len18 = new_s_len17;\n    let mut new_s_len19\
    \ = new_s_len18;\n    let mut new_s_len20 = new_s_len19;\n    let mut new_s_len21\
    \ = new_s_len20;\n    let mut new_s_len22 = new_s_len21;\n    let mut new_s_len23\
    \ = new_s_len22;\n    let mut new_s_len24 = new_s_len23;\n    let mut new_s_len25\
    \ = new_s_len24;\n    let mut new_s_len26 = new_s_len25;\n    let mut new_s_len27\
    \ = new_s_len26;\n    let mut new_s_len28 = new_s_len27;\n    let mut new_s_len29\
    \ = new_s_len28;\n    let mut new_s_len30 = new_s_len29;\n    let mut new_s_len31\
    \ = new_s_len30;\n    let mut new_s_len32 = new_s_len31;\n    let mut new_s_len33\
    \ = new_s_len32;\n    let mut new_s_len34 = new_s_len33;\n    let mut new_s_len35\
    \ = new_s_len34;\n    let mut new_s_len36 = new_s_len35;\n    let mut new_s_len37\
    \ = new_s_len36;\n    let mut new_s_len38 = new_s_len37;\n    let mut new_s_len39\
    \ = new_s_len38;\n    let mut new_s_len40 = new_s_\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4b6k92n4.rs:55:33\n   |\n\
    55 |     let mut new_s_len40 = new_s_\n   |                                 ^\
    \ help: add `;` here\n56 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `new_s_` in this scope\n  --> /tmp/tmp4b6k92n4.rs:55:27\n   |\n55\
    \ |     let mut new_s_len40 = new_s_\n   |                           ^^^^^^ help:\
    \ a local variable with a similar name exists: `new_s`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4b6k92n4.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut i = 0;\n    while i < s.len() {\n\
    \        let mut j = i;\n        while j < s.len() {\n            if s[j] < s[i]\
    \ {\n                swap(&mut s[j], &mut s[i]);\n            }\n            j\
    \ += 1\n        }\n        i += 1;\n    }\n    s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in this scope\n  --> /tmp/tmpfef5unm4.rs:20:17\n\
    \   |\n20 |                 swap(&mut s[j], &mut s[i]);\n   |                \
    \ ^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n\
    \   |\n1  | use std::mem::swap;\n   |\n1  | use std::ptr::swap;\n   |\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfef5unm4.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfef5unm4.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfef5unm4.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfef5unm4.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfef5unm4.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfef5unm4.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfef5unm4.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfef5unm4.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfef5unm4.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfef5unm4.rs:35:25\n   |"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            }\n            i += 1;\n        }\n     \
    \   new_s.push_str(&s[i .. j]);\n        new_s_len += j - i;\n        i = j;\n\
    \    }\n    new_s.push_str(&s[i ..]);\n    new_s_len += s.len() - i;\n    new_s\n\
    }\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvqvwhlz4.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvqvwhlz4.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvqvwhlz4.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvqvwhlz4.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvqvwhlz4.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvqvwhlz4.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvqvwhlz4.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvqvwhlz4.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvqvwhlz4.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvqvwhlz4.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvqvwhlz4.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j += 1;\n                continue;\n            }\n            if\
    \ s[j] < 'a' || s[j] > 'z' {\n                j += 1;\n                continue;\n\
    \            }\n            if s[j] < 'A' || s[j] > 'Z' {\n                j +=\
    \ 1;\n                continue;\n            }\n            new_s.push_str(&s[i\
    \ .. j]);\n            new_s_len += 1;\n            i += j - i;\n            j\
    \ += 1;\n        }\n        new_s.push_str(&s[i .. new_s_len]);\n        new_s_len\
    \ += 1;\n        i += new_s_len - i;\n    }\n    new_s\n}\n\nfn main() {\n   \
    \ let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp1zvf5d16.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1zvf5d16.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1zvf5d16.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1zvf5d16.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1zvf5d16.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1zvf5d16.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1zvf5d16.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1zvf5d16.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1zvf5d16.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1zvf5d16.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1zvf5d16.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut i = 0;\n    while i < s.len() {\n        let mut j = i;\n        while j\
    \ < s.len() {\n            if s[j] >= 'a' && s[j] <= 'z' {\n                j\
    \ += 1;\n            } else {\n                break;\n            }\n       \
    \ }\n        let mut new_word = String::new();\n        while j < s.len() {\n\
    \            new_word.push(s[j]);\n            j += 1;\n        }\n        new_s.push_str(new_word);\n\
    \        i += 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzcxojwpv.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzcxojwpv.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzcxojwpv.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzcxojwpv.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzcxojwpv.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzcxojwpv.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzcxojwpv.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzcxojwpv.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzcxojwpv.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzcxojwpv.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzcxojwpv.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s.chars().any(|c| c\
    \ == ' ') {\n                j = j + 1;\n                continue;\n         \
    \   }\n            if s.chars().any(|c| c == '\\n') {\n                j = j +\
    \ 1;\n                continue;\n            }\n            if s.chars().any(|c|\
    \ c == '\\t') {\n                j = j + 1;\n                continue;\n     \
    \       }\n            if s.chars().any(|c| c == '\\r') {\n                j =\
    \ j + 1;\n                continue;\n            }\n            if s.chars().any(|c|\
    \ c == '\\b') {\n                j = j + 1;\n                continue;\n     \
    \       }\n            if s.chars().any(|c| c == '\\f') {\n                j =\
    \ j + 1;\n                continue;\n            }\n            if s.chars().any(|c|\
    \ c == '\\r') {\n                j = j + 1;\n                continue;\n     \
    \       }\n            if s.chars().any(|c| c == '\\n') {\n                j =\
    \ j + 1;\n                continue;\n            }\n            if s.chars().any(|c|\
    \ c == '\\t') {\n                j = j + 1;\n                continue;\n     \
    \       }\n            if s.chars().any(|c| c == '\\b') {\n                j =\
    \ j + 1;\n                continue;\n            }\n            if s.chars().any(|c|\
    \ c == '\\f') {\n                j = j + 1;\n                continue;\n     \
    \       }\n            if s.chars().any(|c| c == '\\b') {\n                j =\
    \ j + 1;\n                continue;\n            }\n            if s.chars().any(|c|\
    \ c == '\\f') {\n                j = j + 1;\n                continue;\n     \
    \       }\n            if s.chars().any(|c| c == '\\n') {\n                j =\
    \ j + 1;\n                continue;\n            }\n            if s.chars().any(|c|\
    \ c == '\\t') {\n                j = j + 1;\n                continue;\n     \
    \       }\n            if s.chars().any(|c| c == '\\b') {\n                j =\
    \ j + 1;\n                continue;\n            }\n            if s.chars().any(|c|\
    \ c == '\\f') {\n                j = j + 1;\n                continue;\n     \
    \       }\n            if s.chars().any(|c| c == '\\r') {\n                j =\
    \ j + 1;\n                continue;\n            }\n            if s.chars().any(|c|\
    \ c == '\\n') {\n                j = j + 1;\n                continue;\n     \
    \       }\n            if s.chars().any(|c| c == '\\t') {\n                j =\
    \ j + 1;\n\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: unknown character escape: `b`\n  --> /tmp/tmpkfs0thi2.rs:37:41\n\
    \   |\n37 |             if s.chars().any(|c| c == '\\b') {\n   |             \
    \                            ^ unknown character escape\n   |\n   = help: for\
    \ more information, visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\
    \nerror: unknown character escape: `f`\n  --> /tmp/tmpkfs0thi2.rs:41:41\n   |\n\
    41 |             if s.chars().any(|c| c == '\\f') {\n   |                    \
    \                     ^ unknown character escape\n   |\n   = help: for more information,\
    \ visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\n\
    error: unknown character escape: `b`\n  --> /tmp/tmpkfs0thi2.rs:57:41\n   |\n\
    57 |             if s.chars().any(|c| c == '\\b') {\n   |                    \
    \                     ^ unknown character escape\n   |\n   = help: for more information,\
    \ visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\n\
    error: unknown character escape: `f`\n  --> /tmp/tmpkfs0thi2.rs:61:41\n   |\n\
    61 |             if s.chars().any(|c| c == '\\f') {\n   |                    \
    \                     ^ unknown character escape\n   |\n   = help: for more information,\
    \ visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\n\
    error: unknown character escape: `b`\n  --> /tmp/tmpkfs0thi2.rs:65:41\n   |\n\
    65 |             if s.chars().any(|c| c == '\\b') {\n   |                    \
    \                     ^ unknown character escape\n   |\n   = help: for more information,\
    \ visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\n\
    error: unknown character escape: `f`\n  --> /tmp/tmpkfs0thi2.rs:69:41\n   |\n\
    69 |             if s.chars().any(|c| c == '\\f') {\n   |                    \
    \                     ^ unknown character escape\n   |\n   = help: for more information,\
    \ visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\n\
    error: unknown character escape: `b`\n  --> /tmp/tmpkfs0thi2.rs:81:41\n   |\n\
    81 |             if s.chars().any(|c| c == '\\b') {\n   |                    \
    \                     ^ unknown character escape\n   "
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    s.chars().sort_by(|a, b| a.cmp(b).reverse()).collect::<Vec<_>>().join(\"\
    \ \")\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxlt9v_od.rs:20:17\n\
    \   |\n20 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxlt9v_od.rs:20:25\n   |\n20 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxlt9v_od.rs:21:17\n   |\n21 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxlt9v_od.rs:21:25\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxlt9v_od.rs:22:17\n   |\n22 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxlt9v_od.rs:22:25\n   |\n22 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxlt9v_od.rs:23:17\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxlt9v_od.rs:23:25\n   |\n23 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxlt9v_od.rs:24:17\n  \
    \ |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxlt9v_od.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxlt9v_od.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    let mut j = 0;\n    while i < s.len()\
    \ {\n        let mut new_s_len = 0;\n        while j < s.len() {\n           \
    \ if s[i].as_bytes().cmp(&s[j].as_bytes()) == 0 {\n                new_s_len +=\
    \ 1;\n                i += 1;\n                j += 1;\n            } else {\n\
    \                break;\n            }\n        }\n        if new_s_len > 0 {\n\
    \            new_s.push_str(&s[i .. j]);\n            new_s_len -= 1;\n      \
    \      i += new_s_len;\n        }\n    }\n    new_s\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqwvnf583.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqwvnf583.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqwvnf583.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqwvnf583.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqwvnf583.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqwvnf583.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqwvnf583.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqwvnf583.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqwvnf583.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqwvnf583.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqwvnf583.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        if j == s.len() {\n            new_s.push_str(&s[i\
    \ .. i + 1]);\n            new_s_len += 1;\n            i += 1;\n        } else\
    \ {\n            new_s.push_str(&s[i .. j]);\n            new_s_len += j - i;\n\
    \            i = j;\n        }\n    }\n    new_s.push_str(&s[i .. new_s_len]);\n\
    \    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp13y2d918.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp13y2d918.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp13y2d918.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp13y2d918.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp13y2d918.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp13y2d918.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp13y2d918.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp13y2d918.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp13y2d918.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp13y2d918.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp13y2d918.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                new_s.push_str(&s[i .. j]);\n    \
    \            new_s.push_str(&s[j .. new_s_len]);\n                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().to_ascii_lowercase()]);\n\
    \                new_s.push_str(&[s.chars().next().unwrap().\n}\n\nfn main() {\n\
    \    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpa6wg2ebv.rs:60:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n18 |     while i < new_s_len {\n\
    \   |                         - unclosed delimiter\n19 |         let mut j = i;\n\
    20 |         while j < new_s_len {\n   |                             - unclosed\
    \ delimiter\n...\n23 |             } else {\n   |                    - this delimiter\
    \ might not be properly closed...\n...\n49 | }\n   | - ...as it matches this but\
    \ it has different indentation\n...\n60 | }\n   |   ^\n\nerror: unexpected token:\
    \ `]`\n  --> /tmp/tmpa6wg2ebv.rs:49:1\n   |\n49 | }\n   | ^\n\nerror: mismatched\
    \ closing delimiter: `}`\n  --> /tmp/tmpa6wg2ebv.rs:48:33\n   |\n13 | fn anti_shuffle(s:\
    \ String) -> String {\n   |                                      - closing delimiter\
    \ possibly meant for this\n...\n48 |                 new_s.push_str(&[s.chars().next().unwrap().\n\
    \   |                                 ^ unclosed delimiter\n49 | }\n   | ^ mismatched\
    \ closing delimiter\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa6wg2ebv.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa6wg2ebv.rs:53:25\n   |\n53 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa6wg2ebv.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa6wg2ebv.rs:54:25\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa6wg2ebv.rs:55:17\n  \
    \ |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa6wg2ebv.rs:55:2"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        let mut new_s_len = new_s_len + 1;\n        new_s.push((&mut\
    \ s[..j]).to_lowercase());\n        new_s.push((&mut s[i..]).to_lowercase());\n\
    \        i = j;\n    }\n    new_s.push((&mut s[..i]).to_lowercase());\n    new_s\n\
    }\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpt29zt51_.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt29zt51_.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt29zt51_.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpt29zt51_.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpt29zt51_.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpt29zt51_.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpt29zt51_.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpt29zt51_.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpt29zt51_.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt29zt51_.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt29zt51_.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < s.len() {\n    \
    \    let mut j = i;\n        while j < s.len() {\n            if s[i] == s[j]\
    \ {\n                j += 1;\n                continue;\n            }\n     \
    \       if s[j] > s[i] {\n                let mut k = j;\n                while\
    \ k < s.len() {\n                    let mut new_k = k;\n                    while\
    \ new_k < s.len() {\n                        if s[new_k] == s[i] {\n         \
    \                   new_k += 1;\n                            continue;\n     \
    \                   }\n                        if s[new_k] > s[i] {\n        \
    \                    new_k = k;\n                        }\n                 \
    \       k += 1;\n                    }\n                    new_s.push_str(&s[new_k..new_k\
    \ + 1])\n                }\n                new_s.push_str(&s[new_k..new_k + 1])\n\
    \            } else {\n                new_s.push_str(&s[0..i])\n            }\n\
    \            i += 1;\n        }\n        new_s.push_str(&s[0..i])\n    }\n   \
    \ new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `new_k` in this scope\n  --> /tmp/tmpia8bi4cq.rs:41:35\n\
    \   |\n41 |                 new_s.push_str(&s[new_k..new_k + 1])\n   |       \
    \                            ^^^^^ help: a local variable with a similar name\
    \ exists: `new_s`\n\nerror[E0425]: cannot find value `new_k` in this scope\n \
    \ --> /tmp/tmpia8bi4cq.rs:41:42\n   |\n41 |                 new_s.push_str(&s[new_k..new_k\
    \ + 1])\n   |                                          ^^^^^ help: a local variable\
    \ with a similar name exists: `new_s`\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpia8bi4cq.rs:54:17\n   |\n54 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpia8bi4cq.rs:54:25\n \
    \  |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpia8bi4cq.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpia8bi4cq.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpia8bi4cq.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpia8bi4cq.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpia8bi4cq.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpia8bi4cq.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /t"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s.chars().any(|c| c\
    \ == ' ' || c == '\\t') {\n                j = j + 1;\n                continue;\n\
    \            }\n            if s.chars().any(|c| c == '\\n' || c == '\\r') {\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s.chars().any(|c| c >= 'a' && c <= 'z') {\n                j = j + 1;\n\
    \                continue;\n            }\n            if s.chars().any(|c| c\
    \ >= 'A' && c <= 'Z') {\n                j = j + 1;\n                continue;\n\
    \            }\n            if s.chars().any(|c| c >= '0' && c <= '9') {\n   \
    \             j = j + 1;\n                continue;\n            }\n         \
    \   new_s.push_str(&s[i .. j]);\n            new_s_len += 1;\n            j =\
    \ j + 1;\n        }\n        i = j;\n    }\n    new_s.push_str(&s[i .. new_s_len]);\n\
    \    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0awwvuyu.rs:53:17\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0awwvuyu.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0awwvuyu.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0awwvuyu.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0awwvuyu.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0awwvuyu.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0awwvuyu.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0awwvuyu.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0awwvuyu.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0awwvuyu.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0awwvuyu.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j] == ' ' {\n        \
    \    j += 1; // skip spaces\n        }\n        let mut new_s_char = new_s[..j];\n\
    \        let mut new_s_char_len = new_s_char.len();\n        let mut j = 0;\n\
    \        while j < new_s_char_len {\n            let mut new_s_char_char = new_s_char[j];\n\
    \            let mut new_s_char_char_len = new_s_char_char.len();\n          \
    \  let mut new_s_char_char_char_len = new_s_char_char_char.len();\n          \
    \  let mut new_s_char_char_char_char_len = new_s_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_len = new_s_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_len =\
    \ new_s_char_char_char_char_char_char_char_char_char_char.len();\n           \
    \ let mut new_s_char_char_char_char_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_\n\
    }\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp10u4wtef.rs:53:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n18 |     while i < new_s_len {\n\
    \   |                         - unclosed delimiter\n...\n26 |         while j\
    \ < new_s_char_len {\n   |                                  - this delimiter might\
    \ not be properly closed...\n...\n42 | }\n   | - ...as it matches this but it\
    \ has different indentation\n...\n53 | }\n   |   ^\n\nerror: expected `;`, found\
    \ `}`\n  --> /tmp/tmp10u4wtef.rs:41:157\n   |\n41 |             let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_\n\
    \   |                                                                        \
    \                                                                            \
    \         ^ help: add `;` here\n42 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `new_s_char_char_char` in this scope\n  --> /tmp/tmp10u4wtef.rs:29:48\n\
    \   |\n29 |             let mut new_s_char_char_char_len = new_s_char_char_char.len();\n\
    \   |                                                ^^^^^^^^^^^^^^^^^^^^ help:\
    \ a local variable with a similar name exists: `new_s_char_char_len`\n\nerror[E0425]:\
    \ cannot find value `new_s_char_char_char_char` in this scope\n  --> /tmp/tmp10u4wtef.rs:30:53\n\
    \   |\n30 |             let mut new_s_char_char_char_char_len = new_s_char_char_char_char.len();\n\
    \   |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `new_s_char_char_char_len`\n\
    \nerror[E0425]: cannot find value `new_s_char_char_char_char_char` in this scope\n\
    \  --> /tmp/tmp10u4wtef.rs:31:58\n   |\n31 |             let mut new_s_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char.len();\n   |                              \
    \                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a local variable\
    \ with a similar name exists: `new_s_char_char_char_char_len`\n\nerror[E0425]:"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s[i] == s[j]\
    \ {\n                j += 1;\n                continue;\n            }\n     \
    \       if s[j] > s[i] {\n                let mut temp = s[j];\n             \
    \   s[j] = s[i];\n                s[i] = temp;\n                new_s.push_str(&s[j]);\n\
    \                j += 1;\n                continue;\n            }\n         \
    \   break;\n        }\n        if j == new_s_len {\n            new_s.push_str(&s[i]);\n\
    \            i += 1;\n        }\n    }\n    new_s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjn85zzzm.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjn85zzzm.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjn85zzzm.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjn85zzzm.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjn85zzzm.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjn85zzzm.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjn85zzzm.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjn85zzzm.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjn85zzzm.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjn85zzzm.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjn85zzzm.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' {\n    \
    \            new_s.push_str(&s[j]);\n                new_s_len += 1;\n       \
    \     }\n            j += 1\n        }\n        let mut k = i;\n        while\
    \ k < s.len() {\n            if s[k] != ' ' {\n                new_s.push_str(&s[k]);\n\
    \                new_s_len += 1;\n            }\n            k += 1\n        }\n\
    \        new_s.push_str(&s[new_s_len..]);\n        new_s_len += 1;\n        i\
    \ += 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfyc898gn.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfyc898gn.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfyc898gn.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfyc898gn.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfyc898gn.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfyc898gn.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfyc898gn.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfyc898gn.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfyc898gn.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfyc898gn.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfyc898gn.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut i = 0;\n    let mut j = 0;\n  \
    \  while i < s.len() {\n        while j < s.len() && s.chars().nth(i).unwrap().ascii_ascii_case()\
    \ > s.chars().nth(j).unwrap().ascii_ascii_case() {\n            i += 1;\n    \
    \        i += 1;\n        }\n        if j < s.len() {\n            i += 1;\n \
    \       }\n        j += 1;\n    }\n    s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjdq_rcc8.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjdq_rcc8.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjdq_rcc8.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjdq_rcc8.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjdq_rcc8.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjdq_rcc8.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjdq_rcc8.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjdq_rcc8.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjdq_rcc8.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjdq_rcc8.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjdq_rcc8.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j].is_whitespace() {\n\
    \            j = j + 1;\n        }\n        if j == new_s_len {\n            break;\n\
    \        }\n        let mut k = j;\n        while k < new_s_len && s[k].is_whitespace()\
    \ {\n            k = k + 1;\n        }\n        if k == new_s_len {\n        \
    \    break;\n        }\n        let mut new_word = String::new();\n        let\
    \ mut new_word_len = new_word.len();\n        let mut new_word_len2 = new_word_len;\n\
    \        while new_word_len2 < new_s_len {\n            let mut new_word_len3\
    \ = new_word_len2;\n            while new_word_len3 < new_s_len && new_word[new_word_len3].is_whitespace()\
    \ {\n                new_word_len3 = new_word_len3 + 1;\n            }\n     \
    \       if new_word_len3 == new_s_len {\n                break;\n            }\n\
    \            let mut new_word_len4 = new_word_len3;\n            while new_word_len4\
    \ < new_s_len && new_word[new_word_len4].is_whitespace() {\n                new_word_len4\
    \ = new_word_len4 + 1;\n            }\n            if new_word_len4 == new_s_len\
    \ {\n                break;\n            }\n            let mut new_word_len5\
    \ = new_word_len4;\n            while new_word_len5 < new_s_len && new_word[new_word_len5].is_whitespace()\
    \ {\n                new_word_len5 = new_word_len5 + 1;\n            }\n     \
    \       if new_word_len5 == new_s_len {\n                break;\n            }\n\
    \            let mut new_word_len6 = new_word_len5;\n            while new_word_len6\
    \ < new_s_len && new_word[new_word_len6].is_whitespace() {\n                new_word_len6\
    \ = new_word_len6 + 1;\n            }\n            if new_word_len6 == new_s_len\
    \ {\n                break;\n            }\n            let mut new_word_len7\
    \ = new_word_len6;\n            while new_word_len7 < new_s_len && new_word[new_word_len7].is_whitespace()\
    \ {\n                new_word_len7 = new_word_len7 + 1;\n            }\n     \
    \       if new_word_len7 == new_s_len {\n                break;\n            }\n\
    \            let mut new_word_len8 = new_word_len7;\n            while new_word_len8\
    \ < new_s_len && new_word[new_word_len8].is_whitespace() {\n                new_word_len8\
    \ = new_word_len8 + 1;\n            }\n            if new_word_len8 == new_s_\n\
    }\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmptmvjoalv.rs:88:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n18 |     while i < new_s_len {\n\
    \   |                         - unclosed delimiter\n...\n36 |         while new_word_len2\
    \ < new_s_len {\n   |                                         - this delimiter\
    \ might not be properly closed...\n...\n77 | }\n   | - ...as it matches this but\
    \ it has different indentation\n...\n88 | }\n   |   ^\n\nerror: expected `{`,\
    \ found `}`\n  --> /tmp/tmptmvjoalv.rs:77:1\n   |\n76 |             if new_word_len8\
    \ == new_s_\n   |             -- this `if` expression has a condition, but no\
    \ block\n77 | }\n   | ^ expected `{`\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmptmvjoalv.rs:81:17\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmptmvjoalv.rs:81:25\n \
    \  |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptmvjoalv.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptmvjoalv.rs:82:25\n   |\n82 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptmvjoalv.rs:83:17\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptmvjoalv.rs:83:25\n   |\n83 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptmvjoalv.rs:84:17\n  \
    \ |\n84 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` "
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    s.chars().for_each(|c| {\n        if c\
    \ != ' ' {\n            s.swap(0, s.len());\n        }\n    });\n    s\n}\n\n\
    fn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpxi1hrwwi.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxi1hrwwi.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxi1hrwwi.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxi1hrwwi.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxi1hrwwi.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxi1hrwwi.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxi1hrwwi.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxi1hrwwi.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxi1hrwwi.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxi1hrwwi.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxi1hrwwi.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    s.sort_by_key(|&x| x.chars().map(|c| c.to_ascii_lowercase()).collect::<Vec<_>>());\n\
    \    s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyse1j007.rs:21:17\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyse1j007.rs:21:25\n   |\n21 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyse1j007.rs:22:17\n   |\n22 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyse1j007.rs:22:25\n\
    \   |\n22 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyse1j007.rs:23:17\n   |\n23 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyse1j007.rs:23:25\n   |\n23 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyse1j007.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyse1j007.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyse1j007.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyse1j007.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyse1j007.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j] == ' ' {\n        \
    \    j += 1; // skip spaces\n        }\n        if j == new_s_len {\n        \
    \    break;\n        }\n        let mut new_s_char = new_s[new_s_len - j - 1];\n\
    \        let mut new_s_char_len = new_s_char.len();\n        let mut j = 0;\n\
    \        while j < new_s_char_len {\n            let mut new_s_char_char = new_s_char[j];\n\
    \            let mut new_s_char_char_len = new_s_char_char.len();\n          \
    \  let mut k = 0;\n            while k < new_s_char_char_len {\n             \
    \   let mut new_s_char_char_char = new_s_char_char[k];\n                let mut\
    \ new_s_char_char_char_len = new_s_char_char_char.len();\n                let\
    \ mut new_s_char_char_char_char_len = new_s_char_char_char_char.len();\n     \
    \           let mut new_s_char_char_char_char_char_len = new_s_char_char_char_char_char.len();\n\
    \                let mut new_s_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char.len();\n\
    \                let mut new_s_char_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char_char.len();\n\
    \                let mut new_s_char_char_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char_char_char.len();\n\
    \                let mut new_s_char_char_char_char_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char_char_char_char_char_char.len();\n         \
    \       let mut new_s_char_char_char_char_char_char_char_char_char_char_len =\
    \ new_s_char_char_char_char_char_char_char_char_char_char_char.len();\n      \
    \          let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    \                let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    \                let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    }\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpebcmypie.rs:57:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n18 |     while i < new_s_len {\n\
    \   |                         - unclosed delimiter\n...\n29 |         while j\
    \ < new_s_char_len {\n   |                                  - unclosed delimiter\n\
    ...\n33 |             while k < new_s_char_char_len {\n   |                  \
    \                         - this delimiter might not be properly closed...\n...\n\
    46 | }\n   | - ...as it matches this but it has different indentation\n...\n57\
    \ | }\n   |   ^\n\nerror[E0425]: cannot find value `new_s_char_char_char_char`\
    \ in this scope\n  --> /tmp/tmpebcmypie.rs:36:57\n   |\n36 |                 let\
    \ mut new_s_char_char_char_char_len = new_s_char_char_char_char.len();\n   | \
    \                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `new_s_char_char_char_len`\n\
    \nerror[E0425]: cannot find value `new_s_char_char_char_char_char` in this scope\n\
    \  --> /tmp/tmpebcmypie.rs:37:62\n   |\n37 |                 let mut new_s_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char.len();\n   |                              \
    \                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a local\
    \ variable with a similar name exists: `new_s_char_char_char_char_len`\n\nerror[E0425]:\
    \ cannot find value `new_s_char_char_char_char_char_char` in this scope\n  -->\
    \ /tmp/tmpebcmypie.rs:38:67\n   |\n38 |                 let mut new_s_char_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char_char.len();\n   |                         \
    \                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `new_s_char_char_char_char_char_len`\n\
    \nerror[E0425]: cannot find value `new_s_char_char_char_char_char_char_char` in\
    \ this scope\n  --> /tmp/tmpebcmypie.rs:39:72\n   |\n39 |                 let\
    \ mut new_s_char_char_char_char_char_char_char_len = new_s_char_char_char_"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n                continue;\n            }\n          \
    \  if s[j] > s[i] {\n                new_s.push('z');\n                new_s.push(s[j]);\n\
    \                new_s.push('z');\n                new_s_len += 2;\n         \
    \       j = j + 1;\n                continue;\n            }\n            new_s.push('z');\n\
    \            new_s.push(s[i]);\n            new_s.push('z');\n            new_s_len\
    \ += 2;\n            j = j + 1;\n        }\n        new_s.push(s[i]);\n      \
    \  new_s_len += 1;\n        i = i + 1;\n    }\n    new_s.truncate(new_s_len);\n\
    \    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpoc_5x55n.rs:49:17\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpoc_5x55n.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpoc_5x55n.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpoc_5x55n.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpoc_5x55n.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpoc_5x55n.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpoc_5x55n.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpoc_5x55n.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpoc_5x55n.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpoc_5x55n.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpoc_5x55n.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' {\n    \
    \            new_s.push_str(&s[j]);\n                new_s_len += 1;\n       \
    \     }\n            j += 1\n        }\n        let mut k = i;\n        while\
    \ k < s.len() {\n            if s[k] != ' ' {\n                new_s.push_str(&s[k]);\n\
    \                new_s_len += 1;\n            }\n            k += 1\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        new_s_len += j - i;\n        i =\
    \ j;\n    }\n    new_s.push_str(&s[i .. new_s_len]);\n    new_s\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpmbyyks7b.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmbyyks7b.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmbyyks7b.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpmbyyks7b.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpmbyyks7b.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpmbyyks7b.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpmbyyks7b.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpmbyyks7b.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpmbyyks7b.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpmbyyks7b.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpmbyyks7b.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len;\n    let mut new_s_len4 = new_s_len;\n    let mut new_s_len5 =\
    \ new_s_len;\n    let mut new_s_len6 = new_s_len;\n    let mut new_s_len7 = new_s_len;\n\
    \    let mut new_s_len8 = new_s_len;\n    let mut new_s_len9 = new_s_len;\n  \
    \  let mut new_s_len10 = new_s_len;\n    let mut new_s_len11 = new_s_len;\n  \
    \  let mut new_s_len12 = new_s_len;\n    let mut new_s_len13 = new_s_len;\n  \
    \  let mut new_s_len14 = new_s_len;\n    let mut new_s_len15 = new_s_len;\n  \
    \  let mut new_s_len16 = new_s_len;\n    let mut new_s_len17 = new_s_len;\n  \
    \  let mut new_s_len18 = new_s_len;\n    let mut new_s_len19 = new_s_len;\n  \
    \  let mut new_s_len20 = new_s_len;\n    let mut new_s_len21 = new_s_len;\n  \
    \  let mut new_s_len22 = new_s_len;\n    let mut new_s_len23 = new_s_len;\n  \
    \  let mut new_s_len24 = new_s_len;\n    let mut new_s_len25 = new_s_len;\n  \
    \  let mut new_s_len26 = new_s_len;\n    let mut new_s_len27 = new_s_len;\n  \
    \  let mut new_s_len28 = new_s_len;\n    let mut new_s_len29 = new_s_len;\n  \
    \  let mut new_s_len30 = new_s_len;\n    let mut new_s_len31 = new_s_len;\n  \
    \  let mut new_s_len32 = new_s_len;\n    let mut new_s_len33 = new_s_len;\n  \
    \  let mut new_s_len34 = new_s_len;\n    let mut new_s_len35 = new_s_len;\n  \
    \  let mut new_s_len36 = new_s_len;\n    let mut new_s_len37 = new_s_len;\n  \
    \  let mut new_s_len38 = new_s_len;\n    let mut new_s_len39 = new_s_len;\n  \
    \  let mut new_s_len40 = new_s_len;\n    let mut new_s_len41 = new_s_len;\n  \
    \  let mut new_s_len42 = new_s_len;\n    let mut new_s_len43 = new_s_len;\n  \
    \  let mut new_s_len44 = new_s_len;\n    let mut new_s_len45 = new_\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpo4cvqvf4.rs:60:31\n   |\n\
    60 |     let mut new_s_len45 = new_\n   |                               ^ help:\
    \ add `;` here\n61 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `new_` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:60:27\n   |\n60 |     let mut\
    \ new_s_len45 = new_\n   |                           ^^^^ help: a local variable\
    \ with a similar name exists: `new_s`\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpo4cvqvf4.rs:65:17\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:65:25\n \
    \  |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpo4cvqvf4.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpo4cvqvf4.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo4cvqvf4.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not foun"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        let mut new_s_len = new_s_len + 1;\n        new_s.push_str(&s[i\
    \ .. j]);\n        new_s.push_str(&s[j .. i]);\n        i = j;\n    }\n    new_s.push_str(&s[i\
    \ ..]);\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpm_no33nb.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm_no33nb.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpm_no33nb.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpm_no33nb.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpm_no33nb.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpm_no33nb.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpm_no33nb.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpm_no33nb.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpm_no33nb.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm_no33nb.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpm_no33nb.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j = j + 1;\n                continue;\n            }\n          \
    \  if s[j] < 'a' || s[j] > 'z' {\n                j = j + 1;\n               \
    \ continue;\n            }\n            if s[j] < 'A' || s[j] > 'Z' {\n      \
    \          j = j + 1;\n                continue;\n            }\n            new_s.push_str(&s[i\
    \ .. j]);\n            new_s_len += 1;\n            i = j + 1;\n            break;\n\
    \        }\n    }\n    new_s.push_str(&s[i .. new_s_len]);\n    new_s\n}\n\nfn\
    \ main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8_comhib.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8_comhib.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8_comhib.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8_comhib.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8_comhib.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8_comhib.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8_comhib.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8_comhib.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8_comhib.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8_comhib.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8_comhib.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    s.chars().sort_by(|a, b| a.cmp(b));\n \
    \   s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptli334_f.rs:21:17\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptli334_f.rs:21:25\n   |\n21 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptli334_f.rs:22:17\n   |\n22 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptli334_f.rs:22:25\n\
    \   |\n22 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptli334_f.rs:23:17\n   |\n23 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptli334_f.rs:23:25\n   |\n23 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptli334_f.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptli334_f.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptli334_f.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptli334_f.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptli334_f.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut i = 0;\n    while i < s.len() {\n        let mut j = i;\n        while j\
    \ < s.len() {\n            if s[j] < s[i] {\n                j = j + 1;\n    \
    \            continue;\n            }\n            if s[j] > s[i] {\n        \
    \        new_s.push_str(&s[i .. j]);\n                i = j;\n               \
    \ break;\n            }\n            j = j + 1;\n        }\n        if j == s.len()\
    \ {\n            new_s.push_str(&s[i .. i]);\n        }\n        i = i + 1;\n\
    \    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsh0ogk2d.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsh0ogk2d.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsh0ogk2d.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsh0ogk2d.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsh0ogk2d.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsh0ogk2d.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsh0ogk2d.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsh0ogk2d.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsh0ogk2d.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsh0ogk2d.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsh0ogk2d.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                new_s.push_str(&s[i .. j]);\n    \
    \            new_s.push_str(&\" \");\n                i = j;\n               \
    \ break;\n            }\n        }\n    }\n    new_s\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpw28nkbfv.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw28nkbfv.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw28nkbfv.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw28nkbfv.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw28nkbfv.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw28nkbfv.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpw28nkbfv.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpw28nkbfv.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpw28nkbfv.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw28nkbfv.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw28nkbfv.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut i = 0;\n    while i < s.len() {\n        let mut j = i;\n        while j\
    \ < s.len() {\n            if s[j] < s[i] {\n                j = j + 1;\n    \
    \        } else {\n                break;\n            }\n        }\n        let\
    \ mut new_word = String::new();\n        while j < s.len() {\n            new_word.push(s[j]);\n\
    \            j = j + 1;\n        }\n        new_s.push(new_word);\n        i =\
    \ j;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvsmgdnlw.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvsmgdnlw.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvsmgdnlw.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvsmgdnlw.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvsmgdnlw.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvsmgdnlw.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvsmgdnlw.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvsmgdnlw.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvsmgdnlw.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvsmgdnlw.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvsmgdnlw.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j += 1;\n                continue;\n            }\n            if\
    \ s[j] < 'a' || s[j] > 'z' {\n                j += 1;\n                continue;\n\
    \            }\n            if s[j] < 'A' || s[j] > 'Z' {\n                j +=\
    \ 1;\n                continue;\n            }\n            new_s[new_s_len] =\
    \ s[j];\n            new_s_len += 1;\n            j += 1;\n        }\n       \
    \ new_s[i] = new_s[new_s_len - 1];\n        new_s_len -= 1;\n        i += 1;\n\
    \    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpj8u_psc_.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpj8u_psc_.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpj8u_psc_.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpj8u_psc_.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpj8u_psc_.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpj8u_psc_.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpj8u_psc_.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpj8u_psc_.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpj8u_psc_.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpj8u_psc_.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpj8u_psc_.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < s.len() {\n    \
    \    let mut j = i;\n        while j < s.len() {\n            if s.chars().any(|c|\
    \ c == ' ') {\n                new_s.push_str(&s[..j]);\n                new_s.push_str(&s[j..]);\n\
    \                break;\n            }\n            if s.chars().any(|c| c < 'a'\
    \ || c > 'z') {\n                new_s.push_str(&s[..j]);\n                new_s.push_str(&s[j..]);\n\
    \                break;\n            }\n            i += 1;\n            j +=\
    \ 1\n        }\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9i5qllz0.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9i5qllz0.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9i5qllz0.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9i5qllz0.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9i5qllz0.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9i5qllz0.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9i5qllz0.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9i5qllz0.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9i5qllz0.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9i5qllz0.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9i5qllz0.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        if j == s.len() {\n            new_s.push_str(&s[i\
    \ ..]);\n            new_s_len += 1;\n            i += 1;\n        } else {\n\
    \            new_s.push_str(&s[i ..j]);\n            new_s_len += j - i;\n   \
    \         i = j;\n        }\n    }\n    new_s.push_str(&s[i ..]);\n    new_s_len\
    \ += s.len() - i;\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi0pb61o_.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi0pb61o_.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi0pb61o_.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi0pb61o_.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi0pb61o_.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi0pb61o_.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi0pb61o_.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi0pb61o_.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi0pb61o_.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi0pb61o_.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi0pb61o_.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j] == ' ' {\n        \
    \    j += 1; // skip spaces\n        }\n        let mut k = j;\n        while\
    \ k < new_s_len && s[k] == ' ' {\n            k += 1; // skip spaces\n       \
    \ }\n        if j > k {\n            let mut c = s[j];\n            s[j] = s[k];\n\
    \            s[k] = c;\n        }\n        i += 1;\n    }\n    new_s\n}\n\nfn\
    \ main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyjokwkzu.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyjokwkzu.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyjokwkzu.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyjokwkzu.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyjokwkzu.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyjokwkzu.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyjokwkzu.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyjokwkzu.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyjokwkzu.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyjokwkzu.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyjokwkzu.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len2;\n    let mut new_s_len4 = new_s_len3;\n    let mut new_s_len5\
    \ = new_s_len4;\n    let mut new_s_len6 = new_s_len5;\n    let mut new_s_len7\
    \ = new_s_len6;\n    let mut new_s_len8 = new_s_len7;\n    let mut new_s_len9\
    \ = new_s_len8;\n    let mut new_s_len10 = new_s_len9;\n    let mut new_s_len11\
    \ = new_s_len10;\n    let mut new_s_len12 = new_s_len11;\n    let mut new_s_len13\
    \ = new_s_len12;\n    let mut new_s_len14 = new_s_len13;\n    let mut new_s_len15\
    \ = new_s_len14;\n    let mut new_s_len16 = new_s_len15;\n    let mut new_s_len17\
    \ = new_s_len16;\n    let mut new_s_len18 = new_s_len17;\n    let mut new_s_len19\
    \ = new_s_len18;\n    let mut new_s_len20 = new_s_len19;\n    let mut new_s_len21\
    \ = new_s_len20;\n    let mut new_s_len22 = new_s_len21;\n    let mut new_s_len23\
    \ = new_s_len22;\n    let mut new_s_len24 = new_s_len23;\n    let mut new_s_len25\
    \ = new_s_len24;\n    let mut new_s_len26 = new_s_len25;\n    let mut new_s_len27\
    \ = new_s_len26;\n    let mut new_s_len28 = new_s_len27;\n    let mut new_s_len29\
    \ = new_s_len28;\n    let mut new_s_len30 = new_s_len29;\n    let mut new_s_len31\
    \ = new_s_len30;\n    let mut new_s_len32 = new_s_len31;\n    let mut new_s_len33\
    \ = new_s_len32;\n    let mut new_s_len34 = new_s_len33;\n    let mut new_s_len35\
    \ = new_s_len34;\n    let mut new_s_len36 = new_s_len35;\n    let mut new_s_len37\
    \ = new_s_len36;\n    let mut new_s_len38 = new_s_len37;\n    let mut new_s_len39\
    \ = new_s_len38;\n    let mut new_s_len40 = new_s_\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4b6k92n4.rs:55:33\n   |\n\
    55 |     let mut new_s_len40 = new_s_\n   |                                 ^\
    \ help: add `;` here\n56 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `new_s_` in this scope\n  --> /tmp/tmp4b6k92n4.rs:55:27\n   |\n55\
    \ |     let mut new_s_len40 = new_s_\n   |                           ^^^^^^ help:\
    \ a local variable with a similar name exists: `new_s`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4b6k92n4.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' {\n    \
    \            new_s.push_str(&s[j]);\n                new_s_len += 1;\n       \
    \     }\n            j += 1\n        }\n        new_s.push_str(&s[i]);\n     \
    \   new_s_len += 1;\n        i += 1;\n    }\n    new_s.push_str(&s[new_s_len..]);\n\
    \    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpr78xagdv.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr78xagdv.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr78xagdv.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpr78xagdv.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpr78xagdv.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpr78xagdv.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpr78xagdv.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpr78xagdv.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpr78xagdv.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr78xagdv.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr78xagdv.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' {\n    \
    \            let mut new_char = s[j];\n                let mut new_char_len =\
    \ s.len() - j;\n                while new_char_len > new_s_len {\n           \
    \         new_s_len += 1;\n                    new_s.push_str(&new_char[0..new_s_len]);\n\
    \                }\n                new_s.push_str(&new_char);\n             \
    \   new_s_len += 1;\n                new_char = s[j + new_char_len];\n       \
    \         new_char_len = s.len() - j;\n            }\n            j += 1\n   \
    \     }\n        i += 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqy9punll.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqy9punll.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqy9punll.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqy9punll.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqy9punll.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqy9punll.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqy9punll.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqy9punll.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqy9punll.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqy9punll.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqy9punll.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut i = 0;\n    while i < s.len() {\n        let mut j = i;\n        while j\
    \ < s.len() {\n            if s.chars().any(|c| c == ' ') {\n                j\
    \ = s.len() - 1;\n            } else {\n                let c = s.chars().nth(j).unwrap();\n\
    \                let d = s.chars().nth(j + 1).unwrap();\n                if c\
    \ > d {\n                    let tmp = c;\n                    c = d;\n      \
    \              d = tmp;\n                }\n                new_s.push_str(&c.to_string());\n\
    \                new_s.push_str(&d.to_string());\n                j = j + 1;\n\
    \            }\n        }\n        new_s.push_str(&s.chars().nth(i).unwrap().to_string());\n\
    \        new_s.push_str(&s.chars().nth(i + 1).unwrap().to_string());\n       \
    \ i = i + 2;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpw_lksxwt.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw_lksxwt.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw_lksxwt.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpw_lksxwt.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpw_lksxwt.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpw_lksxwt.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpw_lksxwt.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpw_lksxwt.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpw_lksxwt.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpw_lksxwt.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpw_lksxwt.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                new_s.push_str(&s[..j]);\n\
    \                new_s.push_str(&s[j..]);\n                break;\n          \
    \  }\n            j += 1\n        }\n        i += 1;\n    }\n    new_s\n}\n\n\
    fn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9c0bm666.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9c0bm666.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9c0bm666.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9c0bm666.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9c0bm666.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9c0bm666.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9c0bm666.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9c0bm666.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9c0bm666.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9c0bm666.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9c0bm666.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().any(|c|\
    \ c != ' ') {\n                new_s.push_str(&s[..j]);\n                new_s.push_str(&\"\
    \ \");\n                j = j + 1;\n            }\n            j = j + 1;\n  \
    \      }\n        new_s.push_str(&s[..i]);\n        new_s.push_str(&\" \");\n\
    \        i = i + 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmputtwsjfg.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmputtwsjfg.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmputtwsjfg.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmputtwsjfg.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmputtwsjfg.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmputtwsjfg.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmputtwsjfg.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmputtwsjfg.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmputtwsjfg.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmputtwsjfg.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmputtwsjfg.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut i = 0;\n    while i < s.len() {\n        let mut j = i;\n        while j\
    \ < s.len() {\n            if s[j] > s[i] {\n                let tmp = s[j];\n\
    \                s[j] = s[i];\n                s[i] = tmp;\n            }\n  \
    \          j += 1;\n        }\n        new_s.push_str(&s[i]);\n        i += 1;\n\
    \    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprezsq4dn.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprezsq4dn.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprezsq4dn.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprezsq4dn.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprezsq4dn.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprezsq4dn.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprezsq4dn.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprezsq4dn.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprezsq4dn.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprezsq4dn.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprezsq4dn.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().any(|c|\
    \ c == ' ') {\n                j = new_s_len;\n                break;\n      \
    \      }\n            if s.chars().any(|c| c == '\\n') {\n                j =\
    \ new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\t') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\r') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\b') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\a') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\v') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\f') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\e') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\r') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\n') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\t') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\v') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\f') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\e') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\b') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\a') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\v') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\f') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: unknown character escape: `b`\n  --> /tmp/tmpo13uefda.rs:37:41\n\
    \   |\n37 |             if s.chars().any(|c| c == '\\b') {\n   |             \
    \                            ^ unknown character escape\n   |\n   = help: for\
    \ more information, visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\
    \nerror: unknown character escape: `a`\n  --> /tmp/tmpo13uefda.rs:41:41\n   |\n\
    41 |             if s.chars().any(|c| c == '\\a') {\n   |                    \
    \                     ^ unknown character escape\n   |\n   = help: for more information,\
    \ visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\n\
    error: unknown character escape: `v`\n  --> /tmp/tmpo13uefda.rs:45:41\n   |\n\
    45 |             if s.chars().any(|c| c == '\\v') {\n   |                    \
    \                     ^ unknown character escape\n   |\n   = help: for more information,\
    \ visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\n\
    error: unknown character escape: `f`\n  --> /tmp/tmpo13uefda.rs:49:41\n   |\n\
    49 |             if s.chars().any(|c| c == '\\f') {\n   |                    \
    \                     ^ unknown character escape\n   |\n   = help: for more information,\
    \ visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\n\
    error: unknown character escape: `e`\n  --> /tmp/tmpo13uefda.rs:53:41\n   |\n\
    53 |             if s.chars().any(|c| c == '\\e') {\n   |                    \
    \                     ^ unknown character escape\n   |\n   = help: for more information,\
    \ visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\n\
    error: unknown character escape: `v`\n  --> /tmp/tmpo13uefda.rs:69:41\n   |\n\
    69 |             if s.chars().any(|c| c == '\\v') {\n   |                    \
    \                     ^ unknown character escape\n   |\n   = help: for more information,\
    \ visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\n\
    error: unknown character escape: `f`\n  --> /tmp/tmpo13uefda.rs:73:41\n   |\n\
    73 |             if s.chars().any(|c| c == '\\f') {\n   |                    \
    \                     ^ unknown character escape\n   "
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j] == ' ' {\n        \
    \    j = j + 1;\n        }\n        if j == new_s_len {\n            break;\n\
    \        }\n        let mut new_word = String::new();\n        let mut new_word_len\
    \ = new_s.len();\n        let mut j = 0;\n        while j < new_word_len {\n \
    \           let mut k = j;\n            while k < new_word_len && new_s[k] ==\
    \ ' ' {\n                k = k + 1;\n            }\n            if k == new_word_len\
    \ {\n                break;\n            }\n            let mut new_char = String::new();\n\
    \            new_char.push(s[j]);\n            new_char.push(new_s[k]);\n    \
    \        new_char.push(s[j]);\n            new_char.push(new_s[k]);\n        \
    \    new_char.push(s[j]);\n            new_char.push(new_s[k]);\n            new_char.push(s[j]);\n\
    \            new_char.push(new_s[k]);\n            new_char.push(s[j]);\n    \
    \        new_char.push(new_s[k]);\n            new_char.push(s[j]);\n        \
    \    new_char.push(new_s[k]);\n            new_char.push(s[j]);\n            new_char.push(new_s[k]);\n\
    \            new_char.push(s[j]);\n            new_char.push(new_s[k]);\n    \
    \        new_char.push(s[j]);\n            new_char.push(new_s[k]);\n        \
    \    new_char.push(s[j]);\n            new_char.push(new_s[k]);\n            new_char.push(s[j]);\n\
    \            new_char.push(new_s[k]);\n            new_char.push(s[j]);\n    \
    \        new_char.push(new_s[k]);\n            new_char.push(s[j]);\n        \
    \    new_char.push(new_s[k]);\n            new_char.push(s[j]);\n            new_char.push(new_s[k]);\n\
    \            new_char.push(s[j]);\n            new_char.push(new_s[k]);\n    \
    \        new_char.push(s[j]);\n            new_char.push(new_s[k]);\n        \
    \    new_char.push(s[j]);\n            new_char.push(new_s[k]);\n            new_char.push(s[j]);\n\
    \            new_char.push(new_s[k]);\n            new_char.push(s[j]);\n    \
    \        new_char.push(new_s[k]);\n            new_char.push(s[j]);\n        \
    \    new_char.push(new_s[k]);\n            new_char.push(s[j]);\n            new_char.push(new_s[k]);\n\
    \            new_char.push(s[j]);\n            new_char.push(new_s[k]);\n    \
    \        new_char.push(s[j]);\n            new_char.push(new_s[k]);\n        \
    \    new_char.push(s[j]);\n            new_char\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp9uyd3xhn.rs:97:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n18 |     while i < new_s_len {\n\
    \   |                         - unclosed delimiter\n...\n29 |         while j\
    \ < new_word_len {\n   |                                - this delimiter might\
    \ not be properly closed...\n...\n86 | }\n   | - ...as it matches this but it\
    \ has different indentation\n...\n97 | }\n   |   ^\n\nerror[E0425]: cannot find\
    \ value `left` in this scope\n  --> /tmp/tmp9uyd3xhn.rs:90:17\n   |\n90 |    \
    \ assert_eq!({left}, {right});\n   |                 ^^^^ not found in this scope\n\
    \nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9uyd3xhn.rs:90:25\n\
    \   |\n90 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9uyd3xhn.rs:91:17\n   |\n91 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9uyd3xhn.rs:91:25\n   |\n91 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9uyd3xhn.rs:92:17\n   |\n92 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9uyd3xhn.rs:92:25\n   |\n92 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9uyd3xhn.rs:93:17\n  \
    \ |\n93 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9uyd3xhn.rs:93:25\n   |\n93 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9uyd3xhn.rs:"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut i = 0;\n    let mut j = 0;\n  \
    \  while i < s.len() {\n        while j < s.len() && s[i].is_whitespace() {\n\
    \            i += 1;\n            i += 1;\n            j += 1;\n        }\n  \
    \      if j >= s.len() {\n            break;\n        }\n        let mut k = i;\n\
    \        while k < s.len() && s[k].is_whitespace() {\n            k += 1;\n  \
    \      }\n        let mut new_word = String::from(&s[i .. k]);\n        let mut\
    \ new_chars = String::from(&s[i .. j]);\n        while new_chars.len() > 0 {\n\
    \            let mut new_char = new_chars.chars().next().unwrap();\n         \
    \   if new_char > 97 && new_char < 123 {\n                new_chars.push_str(&new_char.to_string());\n\
    \            } else {\n                new_word.push_str(&new_char.to_string());\n\
    \            }\n        }\n        s = s.replace(i..j, new_word);\n        i =\
    \ j;\n        j = k;\n    }\n    s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpc5rvop0l.rs:49:17\n\
    \   |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc5rvop0l.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpc5rvop0l.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpc5rvop0l.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpc5rvop0l.rs:51:17\n   |\n51 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpc5rvop0l.rs:51:25\n   |\n51 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpc5rvop0l.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpc5rvop0l.rs:52:25\n   |\n52 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpc5rvop0l.rs:53:17\n  \
    \ |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc5rvop0l.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpc5rvop0l.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        let mut k = i;\n        while k < j {\n         \
    \   if s[k] > s[j] {\n                k = k + 1;\n            } else {\n     \
    \           break;\n            }\n        }\n        if k > i {\n           \
    \ new_s.push_str(&s[i .. k]);\n            new_s_len += k - i;\n            i\
    \ = k;\n        } else {\n            new_s.push_str(&s[i .. j]);\n          \
    \  new_s_len += j - i;\n            j = i;\n        }\n    }\n    new_s.push_str(&s[i\
    \ ..]);\n    new_s_len += s.len() - i;\n    new_s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7vvdgpk5.rs:52:17\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7vvdgpk5.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7vvdgpk5.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7vvdgpk5.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7vvdgpk5.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7vvdgpk5.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7vvdgpk5.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7vvdgpk5.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7vvdgpk5.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7vvdgpk5.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7vvdgpk5.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' {\n    \
    \            new_s.push(*j);\n                break;\n            }\n        \
    \    j += 1;\n        }\n        new_s.push(*i);\n        new_s.push(' ');\n \
    \       new_s_len += 1;\n        i += 1;\n    }\n    new_s.truncate(new_s_len);\n\
    \    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgwgr80h8.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgwgr80h8.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgwgr80h8.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgwgr80h8.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgwgr80h8.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgwgr80h8.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgwgr80h8.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgwgr80h8.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgwgr80h8.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgwgr80h8.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgwgr80h8.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        new_s_len += j - i;\n        i =\
    \ j;\n    }\n    new_s.push_str(&s[i ..]);\n    new_s_len += s.len() - i;\n  \
    \  new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpexxvr07y.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpexxvr07y.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpexxvr07y.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpexxvr07y.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpexxvr07y.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpexxvr07y.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpexxvr07y.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        let mut new_s_char = s.chars().nth(i).unwrap();\n\
    \        new_s_char.swap(s.chars().nth(j).unwrap());\n        new_s.push_str(&new_s_char);\n\
    \        i = j;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpeuhyxwmb.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpeuhyxwmb.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpeuhyxwmb.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpeuhyxwmb.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpeuhyxwmb.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpeuhyxwmb.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpeuhyxwmb.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpeuhyxwmb.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpeuhyxwmb.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpeuhyxwmb.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpeuhyxwmb.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < s.len() {\n    \
    \    let mut j = i;\n        while j < s.len() {\n            if s[j].is_whitespace()\
    \ {\n                j = j + 1;\n                continue;\n            }\n  \
    \          if s[j].is_ascii_lowercase() {\n                j = j + 1;\n      \
    \          continue;\n            }\n            if s[j].is_ascii_uppercase()\
    \ {\n                j = j + 1;\n                continue;\n            }\n  \
    \          if s[j].is_ascii_digit() {\n                j = j + 1;\n          \
    \      continue;\n            }\n            if s[j].is_ascii_punctuation() {\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j].is_ascii_letter() {\n                j = j + 1;\n             \
    \   continue;\n            }\n            if s[j].is_ascii_symbol() {\n      \
    \          j = j + 1;\n                continue;\n            }\n            if\
    \ s[j].is_ascii_whitespace() {\n                j = j + 1;\n                continue;\n\
    \            }\n            if s[j].is_ascii_control() {\n                j =\
    \ j + 1;\n                continue;\n            }\n            if s[j].is_ascii_printable()\
    \ {\n                j = j + 1;\n                continue;\n            }\n  \
    \          if s[j].is_ascii_graph() {\n                j = j + 1;\n          \
    \      continue;\n            }\n            if s[j].is_ascii_lower() {\n    \
    \            j = j + 1;\n                continue;\n            }\n          \
    \  if s[j].is_ascii_upper() {\n                j = j + 1;\n                continue;\n\
    \            }\n            if s[j].is_ascii_digit() {\n                j = j\
    \ + 1;\n                continue;\n            }\n            if s[j].is_ascii_punctuation()\
    \ {\n                j = j + 1;\n                continue;\n            }\n  \
    \          if s[j].is_ascii_letter() {\n                j = j + 1;\n         \
    \       continue;\n            }\n            if s[j].is_ascii_symbol() {\n  \
    \              j = j + 1;\n                continue;\n            }\n        \
    \    if s[j].is_ascii_whitespace() {\n                j = j + 1;\n           \
    \     continue;\n            }\n            if s[j].is_ascii_control() {\n   \
    \             j = j + 1;\n                continue;\n            }\n         \
    \   if s[j].is_ascii_printable() {\n                j = j + 1;\n             \
    \   continue;\n            }\n            if s[j].is_ascii_graph() {\n       \
    \         j = j + 1;\n                continue;\n            }\n            if\
    \ s[j].is_ascii_lower() {\n                j = j + 1;\n                continue;\n\
    \            }\n            if s[j].is_ascii_upper() {\n                j = j\
    \ + 1;\n                continue;\n            }\n            if s[j].is_ascii_digit()\
    \ {\n                j = j + 1;\n                continue;\n            }\n  \
    \          if s[j].is_ascii_punctuation() {\n                j = j + 1;\n    \
    \            continue;\n            }\n            if s[j].is_ascii_letter\n}\n\
    \nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpolp_07g2.rs:133:3\n\
    \    |\n13  | fn anti_shuffle(s: String) -> String {\n    |                  \
    \                    - unclosed delimiter\n...\n18  |     while i < s.len() {\n\
    \    |                       - unclosed delimiter\n19  |         let mut j = i;\n\
    20  |         while j < s.len() {\n    |                           - this delimiter\
    \ might not be properly closed...\n...\n122 | }\n    | - ...as it matches this\
    \ but it has different indentation\n...\n133 | }\n    |   ^\n\nerror: expected\
    \ `{`, found `}`\n   --> /tmp/tmpolp_07g2.rs:122:1\n    |\n121 |             if\
    \ s[j].is_ascii_letter\n    |             -- this `if` expression has a condition,\
    \ but no block\n122 | }\n    | ^ expected `{`\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n   --> /tmp/tmpolp_07g2.rs:126:17\n    |\n126 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpolp_07g2.rs:126:25\n\
    \    |\n126 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpolp_07g2.rs:127:17\n    |\n127 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpolp_07g2.rs:127:25\n\
    \    |\n127 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpolp_07g2.rs:128:17\n    |\n128 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n   --> /tmp/tmpolp_07g2.rs:128:25\n\
    \    |\n128 |     assert_eq!({left}, {right});\n    |                        \
    \ ^^^^^ not found in this scope\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n   --> /tmp/tmpolp_07g2.rs:129:17\n    |\n129 |     assert_eq!({left},\
    \ {right});\n    |                 ^^^^ not found in this sc"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < s.len() {\n    \
    \    let mut j = i;\n        while j < s.len() {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        i = j;\n    }\n    new_s.push_str(&s[i\
    \ ..]);\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp9koucmmu.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9koucmmu.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9koucmmu.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9koucmmu.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9koucmmu.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9koucmmu.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9koucmmu.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9koucmmu.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9koucmmu.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9koucmmu.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9koucmmu.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    s.chars().sort_by(|a, b| a.cmp(b)).collect::<Vec<_>>().reverse().iter().cloned()\n\
    \        .map(|c| c.to_ascii_lowercase()).collect::<String>()\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcfkth2uu.rs:21:17\n\
    \   |\n21 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcfkth2uu.rs:21:25\n   |\n21 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcfkth2uu.rs:22:17\n   |\n22 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcfkth2uu.rs:22:25\n\
    \   |\n22 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcfkth2uu.rs:23:17\n   |\n23 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcfkth2uu.rs:23:25\n   |\n23 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcfkth2uu.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcfkth2uu.rs:24:25\n   |\n24 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcfkth2uu.rs:25:17\n  \
    \ |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcfkth2uu.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcfkth2uu.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        let mut new_s_len = new_s_len + j - i;\n        new_s.push_str(&s[i\
    \ .. j]);\n        i = j;\n    }\n    new_s.push_str(&s[i ..]);\n    new_s\n}\n\
    \nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpqc574hy4.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqc574hy4.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqc574hy4.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqc574hy4.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqc574hy4.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqc574hy4.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqc574hy4.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqc574hy4.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqc574hy4.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqc574hy4.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqc574hy4.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j].is_whitespace()\
    \ {\n                j += 1;\n                continue;\n            }\n     \
    \       if s[j].is_ascii_lowercase() {\n                let mut new_char = s[j];\n\
    \                while new_char.is_ascii_lowercase() {\n                    new_char\
    \ = new_char.swapcase();\n                }\n                new_s.push_str(&new_char);\n\
    \                new_s_len += 1;\n                j += 1;\n                continue;\n\
    \            }\n            if s[j].is_ascii_uppercase() {\n                let\
    \ mut new_char = s[j];\n                while new_char.is_ascii_uppercase() {\n\
    \                    new_char = new_char.swapcase();\n                }\n    \
    \            new_s.push_str(&new_char);\n                new_s_len += 1;\n   \
    \             j += 1;\n                continue;\n            }\n            if\
    \ s[j].is_ascii_digit() {\n                let mut new_char = s[j];\n        \
    \        while new_char.is_ascii_digit() {\n                    new_char = new_char.swapcase();\n\
    \                }\n                new_s.push_str(&new_char);\n             \
    \   new_s_len += 1;\n                j += 1;\n                continue;\n    \
    \        }\n            if s[j].is_ascii_punctuation() {\n                let\
    \ mut new_char = s[j];\n                while new_char.is_ascii_punctuation()\
    \ {\n                    new_char = new_char.swapcase();\n                }\n\
    \                new_s.push_str(&new_char);\n                new_s_len += 1;\n\
    \                j += 1;\n                continue;\n            }\n         \
    \   if s[j].is_ascii_letter() {\n                let mut new_char = s[j];\n  \
    \              while new_char.is_ascii_letter() {\n                    new_char\
    \ = new_char.swapcase();\n                }\n                new_s.push_str(&new_char);\n\
    \                new_s_len += 1;\n                j += 1;\n                continue;\n\
    \            }\n            if s[j].is_ascii_symbol() {\n                let mut\
    \ new_char = s[j];\n                while new_char.is_ascii_symbol() {\n     \
    \               new_char = new_char.swapcase();\n                }\n         \
    \       new_s.push_str(&new_char);\n                new_s_len += 1;\n        \
    \        j += 1;\n                continue;\n            }\n            if s[j].is_ascii_whitespace()\
    \ {\n                let mut new_char = s[j];\n                while new_char.is_ascii_whitespace()\
    \ {\n                    new_char = new_char.swapcase();\n                }\n\
    \                new_s.push_str(&new_char);\n                new_s_len += 1;\n\
    \                j += 1;\n                continue;\n            }\n         \
    \   if s[j].is_ascii_uppercase_letter() {\n                let mut new_char =\
    \ s[j\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpwtw182co.rs:108:3\n\
    \    |\n13  | fn anti_shuffle(s: String) -> String {\n    |                  \
    \                    - unclosed delimiter\n...\n18  |     while i < s.len() {\n\
    \    |                       - unclosed delimiter\n19  |         let mut j = i;\n\
    20  |         while j < s.len() {\n    |                           - unclosed\
    \ delimiter\n...\n95  |             if s[j].is_ascii_uppercase_letter() {\n  \
    \  |                                                 - this delimiter might not\
    \ be properly closed...\n96  |                 let mut new_char = s[j\n97  | }\n\
    \    | - ...as it matches this but it has different indentation\n...\n108 | }\n\
    \    |   ^\n\nerror: expected one of `.`, `;`, `?`, `else`, or an operator, found\
    \ `}`\n  --> /tmp/tmpwtw182co.rs:97:1\n   |\n97 | }\n   | ^ expected one of `.`,\
    \ `;`, `?`, `else`, or an operator\n\nerror: mismatched closing delimiter: `}`\n\
    \  --> /tmp/tmpwtw182co.rs:96:37\n   |\n13 | fn anti_shuffle(s: String) -> String\
    \ {\n   |                                      - closing delimiter possibly meant\
    \ for this\n...\n96 |                 let mut new_char = s[j\n   |           \
    \                          ^ unclosed delimiter\n97 | }\n   | ^ mismatched closing\
    \ delimiter\n\nerror[E0425]: cannot find value `left` in this scope\n   --> /tmp/tmpwtw182co.rs:101:17\n\
    \    |\n101 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpwtw182co.rs:101:25\n    |\n101 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpwtw182co.rs:102:17\n\
    \    |\n102 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpwtw182co.rs:102:25\n    |\n102 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   "
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j += 1;\n                continue;\n            }\n            if\
    \ s[j] < 'a' || s[j] > 'z' {\n                j += 1;\n                continue;\n\
    \            }\n            new_s[new_s_len] = s[j];\n            new_s_len +=\
    \ 1;\n            j += 1;\n        }\n        new_s[i] = new_s[new_s_len];\n \
    \       new_s_len -= 1;\n        i += 1;\n    }\n    new_s\n}\n\nfn main() {\n\
    \    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2vt5adnr.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2vt5adnr.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2vt5adnr.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2vt5adnr.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2vt5adnr.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2vt5adnr.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2vt5adnr.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2vt5adnr.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2vt5adnr.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2vt5adnr.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2vt5adnr.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s[i] != s[j]\
    \ {\n                break;\n            }\n            i += 1;\n            j\
    \ += 1;\n        }\n        if j == new_s_len {\n            new_s.push(' ');\n\
    \        } else {\n            new_s.push(s[i..j]);\n        }\n    }\n    new_s\n\
    }\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6fdmc_7b.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6fdmc_7b.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6fdmc_7b.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6fdmc_7b.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6fdmc_7b.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6fdmc_7b.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6fdmc_7b.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6fdmc_7b.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6fdmc_7b.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6fdmc_7b.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6fdmc_7b.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        new_s_len += j - i;\n        i =\
    \ j;\n    }\n    new_s.push_str(&s[i ..]);\n    new_s_len += s.len() - i;\n  \
    \  new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpexxvr07y.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpexxvr07y.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpexxvr07y.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpexxvr07y.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpexxvr07y.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpexxvr07y.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpexxvr07y.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j].is_whitespace() {\n\
    \            j = j + 1;\n        }\n        if j == new_s_len {\n            break;\n\
    \        }\n        let mut new_s_char = new_s[new_s_len - j - 1].to_ascii_lowercase();\n\
    \        let mut new_s_char_len = new_s_char.len();\n        while new_s_char_len\
    \ > 0 {\n            let mut new_s_char_pos = new_s_char.len() - 1;\n        \
    \    while new_s_char_pos >= 0 && new_s_char[new_s_char_pos] == ' ' {\n      \
    \          new_s_char_pos = new_s_char_pos - 1;\n            }\n            if\
    \ new_s_char_pos == -1 {\n                new_s_char_pos = new_s_char.len();\n\
    \            }\n            let mut new_s_char_val = new_s_char[new_s_char_pos].to_ascii_lowercase();\n\
    \            new_s_char[new_s_char_pos] = new_s_char[new_s_char_pos - 1];\n  \
    \          new_s_char[new_s_char_pos - 1] = new_s_char_val;\n            new_s_char_len\
    \ = new_s_char_len - 1;\n        }\n        new_s_len = new_s_len - j;\n     \
    \   new_s.append(&new_s_char);\n        i = i + 1;\n    }\n    new_s\n}\n\nfn\
    \ main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpl_fv5tdo.rs:50:17\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl_fv5tdo.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpl_fv5tdo.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpl_fv5tdo.rs:51:25\n\
    \   |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpl_fv5tdo.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpl_fv5tdo.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpl_fv5tdo.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpl_fv5tdo.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpl_fv5tdo.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpl_fv5tdo.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpl_fv5tdo.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut new_s_len2 = 0;\n    let mut new_s_len3 = 0;\n\
    \    let mut new_s_len4 = 0;\n    let mut new_s_len5 = 0;\n    let mut new_s_len6\
    \ = 0;\n    let mut new_s_len7 = 0;\n    let mut new_s_len8 = 0;\n    let mut\
    \ new_s_len9 = 0;\n    let mut new_s_len10 = 0;\n    let mut new_s_len11 = 0;\n\
    \    let mut new_s_len12 = 0;\n    let mut new_s_len13 = 0;\n    let mut new_s_len14\
    \ = 0;\n    let mut new_s_len15 = 0;\n    let mut new_s_len16 = 0;\n    let mut\
    \ new_s_len17 = 0;\n    let mut new_s_len18 = 0;\n    let mut new_s_len19 = 0;\n\
    \    let mut new_s_len20 = 0;\n    let mut new_s_len21 = 0;\n    let mut new_s_len22\
    \ = 0;\n    let mut new_s_len23 = 0;\n    let mut new_s_len24 = 0;\n    let mut\
    \ new_s_len25 = 0;\n    let mut new_s_len26 = 0;\n    let mut new_s_len27 = 0;\n\
    \    let mut new_s_len28 = 0;\n    let mut new_s_len29 = 0;\n    let mut new_s_len30\
    \ = 0;\n    let mut new_s_len31 = 0;\n    let mut new_s_len32 = 0;\n    let mut\
    \ new_s_len33 = 0;\n    let mut new_s_len34 = 0;\n    let mut new_s_len35 = 0;\n\
    \    let mut new_s_len36 = 0;\n    let mut new_s_len37 = 0;\n    let mut new_s_len38\
    \ = 0;\n    let mut new_s_len39 = 0;\n    let mut new_s_len40 = 0;\n    let mut\
    \ new_s_len41 = 0;\n    let mut new_s_len42 = 0;\n    let mut new_s_len43 = 0;\n\
    \    let mut new_s_len44 = 0;\n    let mut new_s_len45 = 0;\n    let mut new_s_len46\
    \ = 0;\n    let mut new_s_len47 = 0;\n    let mut new_s_len48 = 0;\n    let mut\
    \ new_s_len49 = 0;\n    let mut new_s_len50 = 0;\n    let mut new_s_len51 = 0;\n\
    \    let mut new_s_len52 = 0;\n    let mut new_s_len53 = 0;\n    let mut new_s_len54\
    \ = 0;\n    let mut new_s_len55 = 0;\n    let mut new_s_len\n}\n\nfn main() {\n\
    \    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp3vsiks77.rs:71:22\n   |\n\
    71 |     let mut new_s_len\n   |                      ^ help: add `;` here\n72\
    \ | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp3vsiks77.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3vsiks77.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3vsiks77.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3vsiks77.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3vsiks77.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3vsiks77.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `l"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j].is_whitespace() {\n\
    \            j = j + 1;\n        }\n        if j == new_s_len {\n            break;\n\
    \        }\n        let mut k = i;\n        while k < new_s_len && s[k].is_whitespace()\
    \ {\n            k = k + 1;\n        }\n        if k == new_s_len {\n        \
    \    break;\n        }\n        let mut new_s_char = new_s[new_s_len - 1];\n \
    \       let mut new_s_char_len = new_s_char.len();\n        let mut new_s_char_pos\
    \ = new_s_char.as_bytes();\n        let mut new_s_char_pos_len = new_s_char_pos.len();\n\
    \        let mut new_s_char_pos_pos = new_s_char_pos.as_ptr();\n        let mut\
    \ new_s_char_pos_pos_len = new_s_char_pos_pos.len();\n        let mut new_s_char_pos_pos_pos\
    \ = new_s_char_pos_pos.as_ptr();\n        let mut new_s_char_pos_pos_pos_len =\
    \ new_s_char_pos_pos_pos.len();\n        let mut new_s_char_pos_pos_pos_pos =\
    \ new_s_char_pos_pos_pos.as_ptr();\n        let mut new_s_char_pos_pos_pos_pos_len\
    \ = new_s_char_pos_pos_pos_pos.len();\n        let mut new_s_char_pos_pos_pos_pos_pos\
    \ = new_s_char_pos_pos_pos_pos.as_ptr();\n        let mut new_s_char_pos_pos_pos_pos_pos_len\
    \ = new_s_char_pos_pos_pos_pos_pos.len();\n        let mut new_s_char_pos_pos_pos_pos_pos_pos\
    \ = new_s_char_pos_pos_pos_pos_pos.as_ptr();\n        let mut new_s_char_pos_pos_pos_pos_pos_pos_len\
    \ = new_s_char_pos_pos_pos_pos_pos_pos.len();\n        let mut new_s_char_pos_pos_pos_pos_pos_pos_pos\
    \ = new_s_char_pos_pos_pos_pos_pos_pos_pos.as_ptr();\n        let mut new_s_char_pos_pos_pos_pos_pos_pos_pos_len\
    \ = new_s_char_pos_pos_pos_pos_pos_pos_pos_pos.len();\n        let mut new_s_char_pos_pos_pos_pos_pos_pos_pos_pos\
    \ = new_s_char_pos_pos_pos_pos_pos_pos_pos_pos_pos.as_ptr();\n        let mut\
    \ new_s_char_pos_pos_pos_pos_pos_pos_pos_pos_len = new_s_char_pos_pos_pos_pos_pos_pos_pos_pos_pos_pos.len();\n\
    \        let mut new_s_char_pos_pos_pos_pos_pos_pos_pos_pos_pos = new_s_char_pos_pos_pos_\n\
    }\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpq9d644p5.rs:63:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n18 |     while i < new_s_len {\n\
    \   |                         - this delimiter might not be properly closed...\n\
    ...\n52 | }\n   | - ...as it matches this but it has different indentation\n...\n\
    63 | }\n   |   ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmpq9d644p5.rs:51:89\n\
    \   |\n51 |         let mut new_s_char_pos_pos_pos_pos_pos_pos_pos_pos_pos = new_s_char_pos_pos_pos_\n\
    \   |                                                                        \
    \                 ^ help: add `;` here\n52 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `new_s_char_pos_pos_pos_pos_pos_pos_pos` in this scope\n \
    \ --> /tmp/tmpq9d644p5.rs:47:58\n   |\n47 |         let mut new_s_char_pos_pos_pos_pos_pos_pos_pos\
    \ = new_s_char_pos_pos_pos_pos_pos_pos_pos.as_ptr();\n   |                   \
    \                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `new_s_char_pos_pos_pos_pos_pos_pos_len`\n\
    \nerror[E0425]: cannot find value `new_s_char_pos_pos_pos_pos_pos_pos_pos_pos`\
    \ in this scope\n  --> /tmp/tmpq9d644p5.rs:48:62\n   |\n48 |         let mut new_s_char_pos_pos_pos_pos_pos_pos_pos_len\
    \ = new_s_char_pos_pos_pos_pos_pos_pos_pos_pos.len();\n   |                  \
    \                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `new_s_char_pos_pos_pos_pos_pos_pos_pos`\n\
    \nerror[E0425]: cannot find value `new_s_char_pos_pos_pos_pos_pos_pos_pos_pos_pos`\
    \ in this scope\n  --> /tmp/tmpq9d644p5.rs:49:62\n   |\n49 |         let mut new_s_char_pos_pos_pos_pos_pos_pos_pos_pos\
    \ = new_s_char_pos_pos_pos_pos_pos_pos_pos_pos_pos.as_ptr();\n   |           \
    \                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `new_s_char_pos_pos_pos_pos_pos_pos_pos_len`\n\
    \ner"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j].is_whitespace() {\n\
    \            j = j + 1;\n        }\n        let mut k = j;\n        while k <\
    \ new_s_len && s[k].is_whitespace() {\n            k = k + 1;\n        }\n   \
    \     if j > k {\n            let mut c = s[j];\n            s[j] = s[k];\n  \
    \          s[k] = c;\n        }\n        i = j + 1;\n    }\n    new_s\n}\n\nfn\
    \ main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpctqp2px9.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpctqp2px9.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpctqp2px9.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpctqp2px9.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpctqp2px9.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpctqp2px9.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpctqp2px9.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpctqp2px9.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpctqp2px9.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpctqp2px9.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpctqp2px9.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut i\
    \ = 0;\n    let mut j = 0;\n    let mut k = 0;\n    while i < new_s_len {\n  \
    \      let mut new_s_len3 = new_s_len2;\n        while j < new_s_len3 {\n    \
    \        let mut new_s_len4 = new_s_len3;\n            while k < new_s_len4 {\n\
    \                new_s.push_char(s.chars().nth(i).unwrap());\n               \
    \ new_s_len4 -= 1;\n            }\n            new_s_len3 -= 1;\n        }\n \
    \       new_s_len2 -= 1;\n        i += 1;\n        j += 1;\n        k += 1;\n\
    \    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwdaasusq.rs:41:17\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwdaasusq.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwdaasusq.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwdaasusq.rs:42:25\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwdaasusq.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwdaasusq.rs:43:25\n   |\n43 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwdaasusq.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwdaasusq.rs:44:25\n   |\n44 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwdaasusq.rs:45:17\n  \
    \ |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwdaasusq.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwdaasusq.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s[i] == '\
    \ ' {\n                j += 1;\n                continue;\n            }\n   \
    \         if s[j] == ' ' {\n                j += 1;\n                continue;\n\
    \            }\n            if s[i] > s[j] {\n                let tmp = s[i];\n\
    \                s[i] = s[j];\n                s[j] = tmp;\n            }\n  \
    \          j += 1;\n        }\n        new_s.push_str(&s[i]);\n        i += 1;\n\
    \    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2awezak9.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2awezak9.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2awezak9.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2awezak9.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2awezak9.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2awezak9.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2awezak9.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2awezak9.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2awezak9.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2awezak9.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2awezak9.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut new_s_len2 = 0;\n    let mut new_s_len3 = 0;\n\
    \    let mut new_s_len4 = 0;\n    let mut new_s_len5 = 0;\n    let mut new_s_len6\
    \ = 0;\n    let mut new_s_len7 = 0;\n    let mut new_s_len8 = 0;\n    let mut\
    \ new_s_len9 = 0;\n    let mut new_s_len10 = 0;\n    let mut new_s_len11 = 0;\n\
    \    let mut new_s_len12 = 0;\n    let mut new_s_len13 = 0;\n    let mut new_s_len14\
    \ = 0;\n    let mut new_s_len15 = 0;\n    let mut new_s_len16 = 0;\n    let mut\
    \ new_s_len17 = 0;\n    let mut new_s_len18 = 0;\n    let mut new_s_len19 = 0;\n\
    \    let mut new_s_len20 = 0;\n    let mut new_s_len21 = 0;\n    let mut new_s_len22\
    \ = 0;\n    let mut new_s_len23 = 0;\n    let mut new_s_len24 = 0;\n    let mut\
    \ new_s_len25 = 0;\n    let mut new_s_len26 = 0;\n    let mut new_s_len27 = 0;\n\
    \    let mut new_s_len28 = 0;\n    let mut new_s_len29 = 0;\n    let mut new_s_len30\
    \ = 0;\n    let mut new_s_len31 = 0;\n    let mut new_s_len32 = 0;\n    let mut\
    \ new_s_len33 = 0;\n    let mut new_s_len34 = 0;\n    let mut new_s_len35 = 0;\n\
    \    let mut new_s_len36 = 0;\n    let mut new_s_len37 = 0;\n    let mut new_s_len38\
    \ = 0;\n    let mut new_s_len39 = 0;\n    let mut new_s_len40 = 0;\n    let mut\
    \ new_s_len41 = 0;\n    let mut new_s_len42 = 0;\n    let mut new_s_len43 = 0;\n\
    \    let mut new_s_len44 = 0;\n    let mut new_s_len45 = 0;\n    let mut new_s_len46\
    \ = 0;\n    let mut new_s_len47 = 0;\n    let mut new_s_len48 = 0;\n    let mut\
    \ new_s_len49 = 0;\n    let mut new_s_len50 = 0;\n    let mut new_s_len51 = 0;\n\
    \    let mut new_s_len52 = 0;\n    let mut new_s_len53 = 0;\n    let mut new_s_len54\
    \ = 0;\n    let mut new_s_len55 = 0;\n    let mut new_s_len\n}\n\nfn main() {\n\
    \    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp3vsiks77.rs:71:22\n   |\n\
    71 |     let mut new_s_len\n   |                      ^ help: add `;` here\n72\
    \ | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp3vsiks77.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3vsiks77.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3vsiks77.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3vsiks77.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3vsiks77.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3vsiks77.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `l"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s.chars().any(|c| c\
    \ == ' ') {\n                new_s.push_str(&s[..j]);\n                new_s_len\
    \ += j - i;\n                j = i;\n            } else {\n                new_s.push_str(&s[j..]);\n\
    \                new_s_len += j - i;\n                break;\n            }\n\
    \            j += 1\n        }\n        new_s.push_str(&s[..i]);\n        new_s_len\
    \ += i - j;\n        i = j;\n    }\n    new_s.push_str(&s[..i]);\n    new_s_len\
    \ += i - j;\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `j` in this scope\n  --> /tmp/tmpedmikuuv.rs:37:22\n\
    \   |\n37 |     new_s_len += i - j;\n   |                      ^ help: a local\
    \ variable with a similar name exists: `i`\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpedmikuuv.rs:43:17\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpedmikuuv.rs:43:25\n \
    \  |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpedmikuuv.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpedmikuuv.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpedmikuuv.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpedmikuuv.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpedmikuuv.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpedmikuuv.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpedmikuuv.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpedmikuuv.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < s.len() {\n    \
    \    let mut j = i;\n        while j < s.len() {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        new_s_len = new_s_len + j - i;\n\
    \        i = j;\n    }\n    new_s.push_str(&s[i ..]);\n    new_s_len += s.len()\
    \ - i;\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppwxy5uh0.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppwxy5uh0.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppwxy5uh0.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppwxy5uh0.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppwxy5uh0.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppwxy5uh0.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppwxy5uh0.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppwxy5uh0.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppwxy5uh0.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppwxy5uh0.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppwxy5uh0.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut i = 0;\n    while i < s.len() {\n\
    \        let mut j = i;\n        while j < s.len() {\n            if s.chars().any(|c|\
    \ c == ' ') {\n                s.swap(i, j);\n                i += 1;\n      \
    \          j += 1;\n            }\n            j += 1\n        }\n        i +=\
    \ 1;\n    }\n    s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6nhpr79e.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6nhpr79e.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6nhpr79e.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6nhpr79e.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6nhpr79e.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6nhpr79e.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6nhpr79e.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6nhpr79e.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6nhpr79e.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6nhpr79e.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6nhpr79e.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        new_s_len += j - i;\n        i =\
    \ j;\n    }\n    new_s.push_str(&s[i ..]);\n    new_s_len += s.len() - i;\n  \
    \  new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:38:17\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpexxvr07y.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpexxvr07y.rs:39:25\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpexxvr07y.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpexxvr07y.rs:40:25\n   |\n40 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpexxvr07y.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpexxvr07y.rs:41:25\n   |\n41 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:42:17\n  \
    \ |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpexxvr07y.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpexxvr07y.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().nth(j).unwrap().to_ascii_lowercase()\
    \ < s.chars().nth(i).unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        i = j;\n    }\n    new_s\n}\n\n\
    fn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp15f81stb.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp15f81stb.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp15f81stb.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp15f81stb.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp15f81stb.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp15f81stb.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp15f81stb.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp15f81stb.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp15f81stb.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp15f81stb.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp15f81stb.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' {\n    \
    \            let mut new_s_len = new_s_len + 1;\n                new_s.push((s[j].to_ascii_lowercase()).to_string());\n\
    \                j = j + 1;\n            } else {\n                new_s_len =\
    \ new_s_len + 1;\n                new_s.push(' ');\n                j = j + 1;\n\
    \            }\n        }\n        new_s_len = new_s_len + 1;\n        new_s.push((s[i].to_ascii_lowercase()).to_string());\n\
    \        i = i + 1;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnjs8emiy.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnjs8emiy.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnjs8emiy.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnjs8emiy.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnjs8emiy.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnjs8emiy.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnjs8emiy.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnjs8emiy.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnjs8emiy.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnjs8emiy.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnjs8emiy.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len2;\n    let mut new_s_len4 = new_s_len3;\n    let mut new_s_len5\
    \ = new_s_len4;\n    let mut new_s_len6 = new_s_len5;\n    let mut new_s_len7\
    \ = new_s_len6;\n    let mut new_s_len8 = new_s_len7;\n    let mut new_s_len9\
    \ = new_s_len8;\n    let mut new_s_len10 = new_s_len9;\n    let mut new_s_len11\
    \ = new_s_len10;\n    let mut new_s_len12 = new_s_len11;\n    let mut new_s_len13\
    \ = new_s_len12;\n    let mut new_s_len14 = new_s_len13;\n    let mut new_s_len15\
    \ = new_s_len14;\n    let mut new_s_len16 = new_s_len15;\n    let mut new_s_len17\
    \ = new_s_len16;\n    let mut new_s_len18 = new_s_len17;\n    let mut new_s_len19\
    \ = new_s_len18;\n    let mut new_s_len20 = new_s_len19;\n    let mut new_s_len21\
    \ = new_s_len20;\n    let mut new_s_len22 = new_s_len21;\n    let mut new_s_len23\
    \ = new_s_len22;\n    let mut new_s_len24 = new_s_len23;\n    let mut new_s_len25\
    \ = new_s_len24;\n    let mut new_s_len26 = new_s_len25;\n    let mut new_s_len27\
    \ = new_s_len26;\n    let mut new_s_len28 = new_s_len27;\n    let mut new_s_len29\
    \ = new_s_len28;\n    let mut new_s_len30 = new_s_len29;\n    let mut new_s_len31\
    \ = new_s_len30;\n    let mut new_s_len32 = new_s_len31;\n    let mut new_s_len33\
    \ = new_s_len32;\n    let mut new_s_len34 = new_s_len33;\n    let mut new_s_len35\
    \ = new_s_len34;\n    let mut new_s_len36 = new_s_len35;\n    let mut new_s_len37\
    \ = new_s_len36;\n    let mut new_s_len38 = new_s_len37;\n    let mut new_s_len39\
    \ = new_s_len38;\n    let mut new_s_len40 = new_s_\n}\n\nfn main() {\n    let\
    \ candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4b6k92n4.rs:55:33\n   |\n\
    55 |     let mut new_s_len40 = new_s_\n   |                                 ^\
    \ help: add `;` here\n56 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `new_s_` in this scope\n  --> /tmp/tmp4b6k92n4.rs:55:27\n   |\n55\
    \ |     let mut new_s_len40 = new_s_\n   |                           ^^^^^^ help:\
    \ a local variable with a similar name exists: `new_s`\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4b6k92n4.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4b6k92n4.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4b6k92n4.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4b6k92n4.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^"
  stdout: ''
  timestamp: 1659749395
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        if j == s.len() {\n            new_s.push_str(&s[i\
    \ .. i + 1]);\n            new_s_len += 1;\n            i += 1;\n        } else\
    \ {\n            new_s.push_str(&s[i .. j]);\n            new_s_len += j - i;\n\
    \            i = j;\n        }\n    }\n    new_s.push_str(&s[i .. new_s_len]);\n\
    \    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp13y2d918.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp13y2d918.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp13y2d918.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp13y2d918.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp13y2d918.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp13y2d918.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp13y2d918.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp13y2d918.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp13y2d918.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp13y2d918.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp13y2d918.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823280
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut i = 0;\n    while i < s.len() {\n        let mut j = i;\n        while j\
    \ < s.len() {\n            if s[j] < s[i] {\n                j = j + 1;\n    \
    \        } else {\n                break;\n            }\n        }\n        new_s.push_str(&s[i\
    \ .. j]);\n        i = j;\n    }\n    new_s.push_str(&s[i ..]);\n    new_s\n}\n\
    \nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2dwc8qwj.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2dwc8qwj.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2dwc8qwj.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2dwc8qwj.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2dwc8qwj.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2dwc8qwj.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2dwc8qwj.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2dwc8qwj.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2dwc8qwj.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2dwc8qwj.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2dwc8qwj.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n                continue;\n            }\n          \
    \  if s[j] > s[i] {\n                new_s.push_str(&s[i .. j]);\n           \
    \     new_s.push_str(&s[j .. i]);\n                new_s_len += j - i;\n     \
    \           i = j;\n                break;\n            }\n            j = j +\
    \ 1;\n        }\n        if j == s.len() {\n            new_s.push_str(&s[i ..\
    \ i]);\n            new_s_len += i - i;\n        }\n    }\n    new_s.push_str(&s[i\
    \ .. new_s_len]);\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpx_4cys9g.rs:45:17\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx_4cys9g.rs:45:25\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx_4cys9g.rs:46:17\n   |\n46 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpx_4cys9g.rs:46:25\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpx_4cys9g.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpx_4cys9g.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpx_4cys9g.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpx_4cys9g.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpx_4cys9g.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpx_4cys9g.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpx_4cys9g.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().nth(j).unwrap().to_ascii_lowercase()\
    \ < s.chars().nth(i).unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        i = j;\n    }\n    new_s\n}\n\n\
    fn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp15f81stb.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp15f81stb.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp15f81stb.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp15f81stb.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp15f81stb.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp15f81stb.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp15f81stb.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp15f81stb.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp15f81stb.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp15f81stb.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp15f81stb.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' {\n    \
    \            break;\n            }\n            j = j + 1;\n        }\n      \
    \  let mut new_s_len = new_s_len + j - i;\n        let mut new_s_char = String::new();\n\
    \        let mut new_s_char_len = 0;\n        let mut new_s_char_pos = 0;\n  \
    \      while new_s_char_pos < new_s_len {\n            let mut new_s_char_len\
    \ = new_s_char_len + 1;\n            let mut new_s_char_pos = new_s_char_pos +\
    \ 1;\n            let mut new_s_char_char = String::new();\n            while\
    \ new_s_char_pos < new_s_len {\n                if s[j] != ' ' {\n           \
    \         new_s_char_char = new_s_char_char + s[j];\n                    new_s_char_pos\
    \ = new_s_char_pos + 1;\n                }\n                new_s_char_len = new_s_char_len\
    \ + 1;\n                new_s_char_pos = new_s_char_pos + 1;\n            }\n\
    \            new_s_char = new_s_char + new_s_char_char;\n        }\n        new_s\
    \ = new_s + new_s_char;\n        i = i + 1;\n    }\n    new_s\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpr7hooosf.rs:52:17\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr7hooosf.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr7hooosf.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpr7hooosf.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpr7hooosf.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpr7hooosf.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpr7hooosf.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpr7hooosf.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpr7hooosf.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr7hooosf.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr7hooosf.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < s.len() {\n    \
    \    let mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n\
    \                j = j + 1;\n                continue;\n            }\n      \
    \      if s[j] > s[i] {\n                j = j + 1;\n                continue;\n\
    \            }\n            if s[j] == s[i] {\n                new_s.push_str(&s[i\
    \ .. j]);\n                i = j;\n                break;\n            }\n   \
    \         j = j + 1;\n        }\n        if j == s.len() {\n            new_s.push_str(&s[i\
    \ .. new_s_len]);\n            break;\n        }\n    }\n    new_s\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpeo8r2d9i.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpeo8r2d9i.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpeo8r2d9i.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpeo8r2d9i.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpeo8r2d9i.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpeo8r2d9i.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpeo8r2d9i.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpeo8r2d9i.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpeo8r2d9i.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpeo8r2d9i.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpeo8r2d9i.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            } else {\n                break;\n      \
    \      }\n        }\n        if j == s.len() {\n            new_s.push_str(&s[i\
    \ .. i + 1]);\n            new_s_len += 1;\n        } else {\n            new_s.push_str(&s[i\
    \ .. j]);\n            new_s_len += 1;\n            new_s.push_str(&s[j..]);\n\
    \            new_s_len += 1;\n        }\n        i = j;\n    }\n    new_s.push_str(&s[i\
    \ .. new_s_len]);\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgvhbm7nw.rs:44:17\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgvhbm7nw.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgvhbm7nw.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgvhbm7nw.rs:45:25\n\
    \   |\n45 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgvhbm7nw.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgvhbm7nw.rs:46:25\n   |\n46 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgvhbm7nw.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgvhbm7nw.rs:47:25\n   |\n47 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgvhbm7nw.rs:48:17\n  \
    \ |\n48 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgvhbm7nw.rs:48:25\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgvhbm7nw.rs:49:17\n   |\n49 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j = j + 1;\n                continue;\n            }\n          \
    \  if s[j] < 'a' || s[j] > 'z' {\n                j = j + 1;\n               \
    \ continue;\n            }\n            if s[j] < 'A' || s[j] > 'Z' {\n      \
    \          j = j + 1;\n                continue;\n            }\n            new_s[new_s_len]\
    \ = s[j];\n            new_s_len += 1;\n            j = j + 1;\n        }\n  \
    \      new_s[new_s_len] = ' ';\n        new_s_len += 1;\n        i = i + 1;\n\
    \    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnkj1meog.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnkj1meog.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnkj1meog.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnkj1meog.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnkj1meog.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnkj1meog.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnkj1meog.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnkj1meog.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnkj1meog.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnkj1meog.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnkj1meog.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] < s[i] {\n    \
    \            j = j + 1;\n            }\n        }\n        let mut new_s_char\
    \ = new_s[new_s_len..new_s_len + j].chars();\n        let mut new_s_char_len =\
    \ new_s_char.len();\n        while new_s_char_len > 0 {\n            let mut new_s_char\
    \ = new_s_char.next().unwrap();\n            new_s_char_len = new_s_char_len -\
    \ 1;\n            new_s_char.insert(new_s_char.len() - 1, s[j]);\n           \
    \ new_s_char.insert(new_s_char.len() - 1, ' ');\n            new_s_char.insert(new_s_char.len()\
    \ - 1, s[j]);\n            new_s_char.insert(new_s_char.len() - 1, ' ');\n   \
    \         new_s_char.insert(new_s_char.len() - 1, s[j]);\n            new_s_char.insert(new_s_char.len()\
    \ - 1, ' ');\n            new_s_char.insert(new_s_char.len() - 1, s[j]);\n   \
    \         new_s_char.insert(new_s_char.len() - 1, ' ');\n            new_s_char.insert(new_s_char.len()\
    \ - 1, s[j]);\n            new_s_char.insert(new_s_char.len() - 1, ' ');\n   \
    \         new_s_char.insert(new_s_char.len() - 1, s[j]);\n            new_s_char.insert(new_s_char.len()\
    \ - 1, ' ');\n            new_s_char.insert(new_s_char.len() - 1, s[j]);\n   \
    \         new_s_char.insert(new_s_char.len() - 1, ' ');\n            new_s_char.insert(new_s_char.len()\
    \ - 1, s[j]);\n            new_s_char.insert(new_s_char.len() - 1, ' ');\n   \
    \         new_s_char.insert(new_s_char.len() - 1, s[j]);\n            new_s_char.insert(new_s_char.len()\
    \ - 1, ' ');\n            new_s_char.insert(new_s_char.len() - 1, s[j]);\n   \
    \         new_s_char.insert(new_s_char.len() - 1, ' ');\n            new_s_char.insert(new_s_char.len()\
    \ - 1, s[j]);\n            new_s_char.insert(new_s_char.len() - 1, ' ');\n   \
    \         new_s_char.insert(new_s_char.len() - 1, s[j]);\n            new_s_char.insert(new_s_char.len()\
    \ - 1, ' ');\n            new_s_char.insert(new_s_char.len() - 1, s[j]);\n   \
    \         new_s_char.insert(new_s_char\n}\n\nfn main() {\n    let candidate =\
    \ anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpoau9mi0h.rs:67:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n18 |     while i < s.len() {\n  \
    \ |                       - unclosed delimiter\n...\n27 |         while new_s_char_len\
    \ > 0 {\n   |                                  - this delimiter might not be properly\
    \ closed...\n...\n56 | }\n   | - ...as it matches this but it has different indentation\n\
    ...\n67 | }\n   |   ^\n\nerror: mismatched closing delimiter: `}`\n  --> /tmp/tmpoau9mi0h.rs:55:30\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - closing delimiter possibly meant for this\n...\n55 |     \
    \        new_s_char.insert(new_s_char\n   |                              ^ unclosed\
    \ delimiter\n56 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpoau9mi0h.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpoau9mi0h.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpoau9mi0h.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpoau9mi0h.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpoau9mi0h.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpoau9mi0h.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpoau9mi0h.rs:63:17\n  \
    \ |\n"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut i = 0;\n    while i < s.len() {\n        let mut j = i;\n        while j\
    \ < s.len() {\n            if s[j] > s[i] {\n                let tmp = s[j];\n\
    \                s[j] = s[i];\n                s[i] = tmp;\n            }\n  \
    \          j += 1\n        }\n        new_s.push_str(&s[i]);\n        i += 1;\n\
    \    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0wi1zd20.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0wi1zd20.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0wi1zd20.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0wi1zd20.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0wi1zd20.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0wi1zd20.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0wi1zd20.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0wi1zd20.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0wi1zd20.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0wi1zd20.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0wi1zd20.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j].is_whitespace() {\n\
    \            j = j + 1;\n        }\n        let mut k = i;\n        while k <\
    \ new_s_len && s[k].is_whitespace() {\n            k = k + 1;\n        }\n   \
    \     if j > k {\n            new_s.push_str(&s[i .. k]);\n            new_s.push_str(&s[k\
    \ .. j]);\n            i = k;\n        } else {\n            new_s.push_str(&s[i\
    \ .. j]);\n            new_s.push_str(&s[j .. k]);\n            i = j;\n     \
    \   }\n    }\n    new_s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwowzgyl8.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwowzgyl8.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwowzgyl8.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwowzgyl8.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwowzgyl8.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwowzgyl8.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwowzgyl8.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwowzgyl8.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwowzgyl8.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwowzgyl8.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwowzgyl8.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < s.len() {\n    \
    \    let mut j = i;\n        while j < s.len() {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        new_s.push_str(&\" \");\n      \
    \  i = j;\n    }\n    new_s.push_str(&s[i ..]);\n    new_s\n}\n\nfn main() {\n\
    \    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnuoja4mj.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnuoja4mj.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnuoja4mj.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnuoja4mj.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnuoja4mj.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnuoja4mj.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnuoja4mj.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnuoja4mj.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnuoja4mj.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnuoja4mj.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnuoja4mj.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] != ' ' {\n    \
    \            new_s.push_str(&s[j]);\n                new_s_len += 1;\n       \
    \     }\n            j += 1\n        }\n        let mut k = i;\n        while\
    \ k < s.len() {\n            if s[k] != ' ' {\n                new_s.push_str(&s[k]);\n\
    \                new_s_len += 1;\n            }\n            k += 1\n        }\n\
    \        let mut l = i;\n        while l < s.len() {\n            if s[l] != '\
    \ ' {\n                new_s.push_str(&s[l]);\n                new_s_len += 1;\n\
    \            }\n            l += 1\n        }\n        new_s.push_str(&s[new_s_len..]);\n\
    \        new_s_len += 1;\n        i += 1;\n    }\n    new_s\n}\n\nfn main() {\n\
    \    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_56ns4o0.rs:52:17\n\
    \   |\n52 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_56ns4o0.rs:52:25\n   |\n52 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_56ns4o0.rs:53:17\n   |\n53 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_56ns4o0.rs:53:25\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_56ns4o0.rs:54:17\n   |\n54 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_56ns4o0.rs:54:25\n   |\n54 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_56ns4o0.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_56ns4o0.rs:55:25\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_56ns4o0.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_56ns4o0.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_56ns4o0.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j] == ' ' {\n        \
    \    j += 1\n        }\n        let mut new_s_char = new_s[..j];\n        let\
    \ mut new_s_char_len = new_s_char.len();\n        let mut j = 0;\n        while\
    \ j < new_s_char_len {\n            let mut k = j;\n            while k < new_s_char_len\
    \ && new_s_char[k] == new_s_char[j] {\n                k += 1\n            }\n\
    \            new_s_char[j] = new_s_char[k];\n            j += 1\n        }\n \
    \       new_s[i] = new_s_char[0];\n        i += 1;\n    }\n    new_s\n}\n\nfn\
    \ main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjgou77n3.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjgou77n3.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjgou77n3.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjgou77n3.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjgou77n3.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjgou77n3.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjgou77n3.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjgou77n3.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjgou77n3.rs:46:17\n  \
    \ |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjgou77n3.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjgou77n3.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    s.chars().enumerate().for_each(|(i, c)|\
    \ {\n        if c.is_whitespace() {\n            s.swap(i, i + 1);\n        }\n\
    \    });\n    s\n}\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbxgyydbf.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbxgyydbf.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbxgyydbf.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbxgyydbf.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbxgyydbf.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbxgyydbf.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbxgyydbf.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbxgyydbf.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbxgyydbf.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbxgyydbf.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbxgyydbf.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().any(|c|\
    \ c.is_ascii_lowercase()) {\n                new_s.push_str(&s[..j]);\n      \
    \          new_s.push_str(&s[j..]);\n                break;\n            }\n \
    \           j += 1;\n        }\n        i += 1;\n    }\n    new_s\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4jb_xodg.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4jb_xodg.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4jb_xodg.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4jb_xodg.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4jb_xodg.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4jb_xodg.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4jb_xodg.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4jb_xodg.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4jb_xodg.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4jb_xodg.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4jb_xodg.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut new_s_len2 = new_s_len;\n    let mut new_s_len3\
    \ = new_s_len;\n    let mut new_s_len4 = new_s_len;\n    let mut new_s_len5 =\
    \ new_s_len;\n    let mut new_s_len6 = new_s_len;\n    let mut new_s_len7 = new_s_len;\n\
    \    let mut new_s_len8 = new_s_len;\n    let mut new_s_len9 = new_s_len;\n  \
    \  let mut new_s_len10 = new_s_len;\n    let mut new_s_len11 = new_s_len;\n  \
    \  let mut new_s_len12 = new_s_len;\n    let mut new_s_len13 = new_s_len;\n  \
    \  let mut new_s_len14 = new_s_len;\n    let mut new_s_len15 = new_s_len;\n  \
    \  let mut new_s_len16 = new_s_len;\n    let mut new_s_len17 = new_s_len;\n  \
    \  let mut new_s_len18 = new_s_len;\n    let mut new_s_len19 = new_s_len;\n  \
    \  let mut new_s_len20 = new_s_len;\n    let mut new_s_len21 = new_s_len;\n  \
    \  let mut new_s_len22 = new_s_len;\n    let mut new_s_len23 = new_s_len;\n  \
    \  let mut new_s_len24 = new_s_len;\n    let mut new_s_len25 = new_s_len;\n  \
    \  let mut new_s_len26 = new_s_len;\n    let mut new_s_len27 = new_s_len;\n  \
    \  let mut new_s_len28 = new_s_len;\n    let mut new_s_len29 = new_s_len;\n  \
    \  let mut new_s_len30 = new_s_len;\n    let mut new_s_len31 = new_s_len;\n  \
    \  let mut new_s_len32 = new_s_len;\n    let mut new_s_len33 = new_s_len;\n  \
    \  let mut new_s_len34 = new_s_len;\n    let mut new_s_len35 = new_s_len;\n  \
    \  let mut new_s_len36 = new_s_len;\n    let mut new_s_len37 = new_s_len;\n  \
    \  let mut new_s_len38 = new_s_len;\n    let mut new_s_len39 = new_s_len;\n  \
    \  let mut new_s_len40 = new_s_len;\n    let mut new_s_len41 = new_s_len;\n  \
    \  let mut new_s_len42 = new_s_len;\n    let mut new_s_len43 = new_s_len;\n  \
    \  let mut new_s_len44 = new_s_len;\n    let mut new_s_len45 = new_\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpo4cvqvf4.rs:60:31\n   |\n\
    60 |     let mut new_s_len45 = new_\n   |                               ^ help:\
    \ add `;` here\n61 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `new_` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:60:27\n   |\n60 |     let mut\
    \ new_s_len45 = new_\n   |                           ^^^^ help: a local variable\
    \ with a similar name exists: `new_s`\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpo4cvqvf4.rs:65:17\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:65:25\n \
    \  |\n65 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpo4cvqvf4.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:66:25\n   |\n66 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpo4cvqvf4.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:67:25\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpo4cvqvf4.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpo4cvqvf4.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not foun"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut i = 0;\n    while i < s.len() {\n\
    \        let mut j = i;\n        while j < s.len() {\n            if s[j] < s[i]\
    \ {\n                s[j] = s[i];\n                s[i] = s[j];\n            \
    \    j = i;\n            }\n            i += 1;\n        }\n    }\n    s\n}\n\n\
    fn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnbjkoumc.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnbjkoumc.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnbjkoumc.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnbjkoumc.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnbjkoumc.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnbjkoumc.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnbjkoumc.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnbjkoumc.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnbjkoumc.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnbjkoumc.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnbjkoumc.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut i = 0;\n    while i < s.len() {\n        let\
    \ mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n    \
    \            j += 1;\n                continue;\n            }\n            if\
    \ s[j] < 'a' || s[j] > 'z' {\n                j += 1;\n                continue;\n\
    \            }\n            if s[j] < 'A' || s[j] > 'Z' {\n                j +=\
    \ 1;\n                continue;\n            }\n            new_s.push_str(&s[i\
    \ .. j]);\n            new_s_len += 1;\n            i += j - i;\n            j\
    \ = i;\n        }\n        new_s.push_str(&s[i .. new_s_len]);\n        new_s_len\
    \ += 1;\n        i = new_s_len;\n    }\n    new_s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbiuq06nz.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbiuq06nz.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbiuq06nz.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbiuq06nz.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbiuq06nz.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbiuq06nz.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbiuq06nz.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbiuq06nz.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbiuq06nz.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbiuq06nz.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbiuq06nz.rs:52:17\n   |\n52 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len && s[j] == ' ' {\n        \
    \    j += 1\n        }\n        let mut new_s_char = new_s[..j];\n        let\
    \ mut new_s_char_len = new_s_char.len();\n        let mut k = 0;\n        while\
    \ k < new_s_char_len {\n            let mut new_s_char_char = new_s_char[k..];\n\
    \            let mut new_s_char_char_len = new_s_char_char.len();\n          \
    \  let mut new_s_char_char_char_len = new_s_char_char_char.len();\n          \
    \  let mut new_s_char_char_char_char_len = new_s_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_len = new_s_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_len =\
    \ new_s_char_char_char_char_char_char_char_char_char_char.len();\n           \
    \ let mut new_s_char_char_char_char_char_char_char_char_char_char_len = new_s_char_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char.len();\n\
    \            let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_\n\
    }\n\nfn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmperb3u1r8.rs:53:3\n\
    \   |\n13 | fn anti_shuffle(s: String) -> String {\n   |                     \
    \                 - unclosed delimiter\n...\n18 |     while i < new_s_len {\n\
    \   |                         - unclosed delimiter\n...\n26 |         while k\
    \ < new_s_char_len {\n   |                                  - this delimiter might\
    \ not be properly closed...\n...\n42 | }\n   | - ...as it matches this but it\
    \ has different indentation\n...\n53 | }\n   |   ^\n\nerror: expected `;`, found\
    \ `}`\n  --> /tmp/tmperb3u1r8.rs:41:157\n   |\n41 |             let mut new_s_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_char_\n\
    \   |                                                                        \
    \                                                                            \
    \         ^ help: add `;` here\n42 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `new_s_char_char_char` in this scope\n  --> /tmp/tmperb3u1r8.rs:29:48\n\
    \   |\n29 |             let mut new_s_char_char_char_len = new_s_char_char_char.len();\n\
    \   |                                                ^^^^^^^^^^^^^^^^^^^^ help:\
    \ a local variable with a similar name exists: `new_s_char_char_len`\n\nerror[E0425]:\
    \ cannot find value `new_s_char_char_char_char` in this scope\n  --> /tmp/tmperb3u1r8.rs:30:53\n\
    \   |\n30 |             let mut new_s_char_char_char_char_len = new_s_char_char_char_char.len();\n\
    \   |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `new_s_char_char_char_len`\n\
    \nerror[E0425]: cannot find value `new_s_char_char_char_char_char` in this scope\n\
    \  --> /tmp/tmperb3u1r8.rs:31:58\n   |\n31 |             let mut new_s_char_char_char_char_char_len\
    \ = new_s_char_char_char_char_char.len();\n   |                              \
    \                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a local variable\
    \ with a similar name exists: `new_s_char_char_char_char_len`\n\nerror[E0425]:"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = 0;\n    let mut new_s_len2 = 0;\n    let mut new_s_len3 = 0;\n\
    \    let mut new_s_len4 = 0;\n    let mut new_s_len5 = 0;\n    let mut new_s_len6\
    \ = 0;\n    let mut new_s_len7 = 0;\n    let mut new_s_len8 = 0;\n    let mut\
    \ new_s_len9 = 0;\n    let mut new_s_len10 = 0;\n    let mut new_s_len11 = 0;\n\
    \    let mut new_s_len12 = 0;\n    let mut new_s_len13 = 0;\n    let mut new_s_len14\
    \ = 0;\n    let mut new_s_len15 = 0;\n    let mut new_s_len16 = 0;\n    let mut\
    \ new_s_len17 = 0;\n    let mut new_s_len18 = 0;\n    let mut new_s_len19 = 0;\n\
    \    let mut new_s_len20 = 0;\n    let mut new_s_len21 = 0;\n    let mut new_s_len22\
    \ = 0;\n    let mut new_s_len23 = 0;\n    let mut new_s_len24 = 0;\n    let mut\
    \ new_s_len25 = 0;\n    let mut new_s_len26 = 0;\n    let mut new_s_len27 = 0;\n\
    \    let mut new_s_len28 = 0;\n    let mut new_s_len29 = 0;\n    let mut new_s_len30\
    \ = 0;\n    let mut new_s_len31 = 0;\n    let mut new_s_len32 = 0;\n    let mut\
    \ new_s_len33 = 0;\n    let mut new_s_len34 = 0;\n    let mut new_s_len35 = 0;\n\
    \    let mut new_s_len36 = 0;\n    let mut new_s_len37 = 0;\n    let mut new_s_len38\
    \ = 0;\n    let mut new_s_len39 = 0;\n    let mut new_s_len40 = 0;\n    let mut\
    \ new_s_len41 = 0;\n    let mut new_s_len42 = 0;\n    let mut new_s_len43 = 0;\n\
    \    let mut new_s_len44 = 0;\n    let mut new_s_len45 = 0;\n    let mut new_s_len46\
    \ = 0;\n    let mut new_s_len47 = 0;\n    let mut new_s_len48 = 0;\n    let mut\
    \ new_s_len49 = 0;\n    let mut new_s_len50 = 0;\n    let mut new_s_len51 = 0;\n\
    \    let mut new_s_len52 = 0;\n    let mut new_s_len53 = 0;\n    let mut new_s_len54\
    \ = 0;\n    let mut new_s_len55 = 0;\n    let mut new_s_len\n}\n\nfn main() {\n\
    \    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp3vsiks77.rs:71:22\n   |\n\
    71 |     let mut new_s_len\n   |                      ^ help: add `;` here\n72\
    \ | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp3vsiks77.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3vsiks77.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3vsiks77.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3vsiks77.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3vsiks77.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:79:25\n\
    \   |\n79 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3vsiks77.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3vsiks77.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `l"
  stdout: ''
  timestamp: 1659823279
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < s.len() {\n    \
    \    let mut j = i;\n        while j < s.len() {\n            if s[j] == ' ' {\n\
    \                j += 1;\n                continue;\n            }\n         \
    \   if s[j] < 97 {\n                s[j] = s[j] + 1;\n                j += 1;\n\
    \                continue;\n            }\n            if s[j] > 122 {\n     \
    \           s[j] = s[j] - 1;\n                j += 1;\n                continue;\n\
    \            }\n            break;\n        }\n        new_s.push_str(&s[i ..\
    \ j]);\n        i = j;\n    }\n    new_s.push_str(&s[i ..]);\n    new_s\n}\n\n\
    fn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmph9jmi2lk.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph9jmi2lk.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph9jmi2lk.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmph9jmi2lk.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmph9jmi2lk.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmph9jmi2lk.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmph9jmi2lk.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmph9jmi2lk.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmph9jmi2lk.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmph9jmi2lk.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmph9jmi2lk.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut i = 0;\n    let mut j = 0;\n    while i < s.len() {\n        let mut new_word\
    \ = String::new();\n        let mut current_word = String::new();\n        let\
    \ mut current_char_pos = 0;\n        let mut current_char = 0;\n        while\
    \ j < s.len() {\n            if i == j {\n                new_word.push(s[i]);\n\
    \                i += 1;\n                j += 1;\n                continue;\n\
    \            }\n            let mut current_char = s[j];\n            if current_char\
    \ == ' ' {\n                new_word.push(current_word);\n                current_word.clear();\n\
    \                i += 1;\n                j += 1;\n                continue;\n\
    \            }\n            if current_char < s[i] {\n                new_word.push(current_word);\n\
    \                current_word.clear();\n                i += 1;\n            \
    \    j += 1;\n                continue;\n            }\n            current_word.push(current_char);\n\
    \            current_char_pos += 1;\n            j += 1;\n        }\n        new_word.push(current_word);\n\
    \        new_s.push(new_word);\n    }\n    new_s\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfcul7h5h.rs:57:17\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfcul7h5h.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfcul7h5h.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfcul7h5h.rs:58:25\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfcul7h5h.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfcul7h5h.rs:59:25\n   |\n59 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfcul7h5h.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfcul7h5h.rs:60:25\n   |\n60 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfcul7h5h.rs:61:17\n  \
    \ |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfcul7h5h.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfcul7h5h.rs:62:17\n   |\n62 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().any(|c|\
    \ c == ' ') {\n                j = new_s_len;\n                break;\n      \
    \      }\n            if s.chars().any(|c| c == '\\n') {\n                j =\
    \ new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '.') {\n                j = new_s_len;\n                break;\n      \
    \      }\n            if s.chars().any(|c| c == '!') {\n                j = new_s_len;\n\
    \                break;\n            }\n            if s.chars().any(|c| c ==\
    \ '?') {\n                j = new_s_len;\n                break;\n           \
    \ }\n            if s.chars().any(|c| c == '-') {\n                j = new_s_len;\n\
    \                break;\n            }\n            if s.chars().any(|c| c ==\
    \ '_') {\n                j = new_s_len;\n                break;\n           \
    \ }\n            if s.chars().any(|c| c == '(') {\n                j = new_s_len;\n\
    \                break;\n            }\n            if s.chars().any(|c| c ==\
    \ ')') {\n                j = new_s_len;\n                break;\n           \
    \ }\n            if s.chars().any(|c| c == '[') {\n                j = new_s_len;\n\
    \                break;\n            }\n            if s.chars().any(|c| c ==\
    \ ']') {\n                j = new_s_len;\n                break;\n           \
    \ }\n            if s.chars().any(|c| c == '{') {\n                j = new_s_len;\n\
    \                break;\n            }\n            if s.chars().any(|c| c ==\
    \ '}') {\n                j = new_s_len;\n                break;\n           \
    \ }\n            if s.chars().any(|c| c == '%') {\n                j = new_s_len;\n\
    \                break;\n            }\n            if s.chars().any(|c| c ==\
    \ '$') {\n                j = new_s_len;\n                break;\n           \
    \ }\n            if s.chars().any(|c| c == '#') {\n                j = new_s_len;\n\
    \                break;\n            }\n            if s.chars().any(|c| c ==\
    \ '@') {\n                j = new_s_len;\n                break;\n           \
    \ }\n            if s.chars().any(|c| c == '^') {\n                j = new_s_len;\n\
    \                break;\n            }\n            if s.chars().any(|c| c ==\
    \ '&') {\n                j = new_s_len;\n                break;\n           \
    \ }\n            if s.chars().any(|c| c == '*') {\n                j = new_s_len;\n\
    \                break;\n            }\n            if s.chars().\n}\n\nfn main()\
    \ {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpa7sybfbo.rs:113:3\n\
    \    |\n13  | fn anti_shuffle(s: String) -> String {\n    |                  \
    \                    - unclosed delimiter\n...\n18  |     while i < new_s_len\
    \ {\n    |                         - unclosed delimiter\n19  |         let mut\
    \ j = i;\n20  |         while j < new_s_len {\n    |                         \
    \    - this delimiter might not be properly closed...\n...\n102 | }\n    | - ...as\
    \ it matches this but it has different indentation\n...\n113 | }\n    |   ^\n\n\
    error: unexpected token: `}`\n   --> /tmp/tmpa7sybfbo.rs:102:1\n    |\n102 | }\n\
    \    | ^\n\nerror: expected `{`, found `}`\n   --> /tmp/tmpa7sybfbo.rs:102:1\n\
    \    |\n101 |             if s.chars().\n    |             -- this `if` expression\
    \ has a condition, but no block\n102 | }\n    | ^ expected `{`\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpa7sybfbo.rs:106:17\n\
    \    |\n106 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpa7sybfbo.rs:106:25\n    |\n106 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpa7sybfbo.rs:107:17\n\
    \    |\n107 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpa7sybfbo.rs:107:25\n    |\n107 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpa7sybfbo.rs:108:17\n\
    \    |\n108 |     assert_eq!({left}, {right});\n    |                 ^^^^ not\
    \ found in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n\
    \   --> /tmp/tmpa7sybfbo.rs:108:25\n    |\n108 |     assert_eq!({left}, {right});\n\
    \    |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n   --> /tmp/tmpa7sybfbo.rs:109:17\n\
    \    |\n109"
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().any(|c|\
    \ c == ' ') {\n                j = new_s_len;\n                break;\n      \
    \      }\n            if s.chars().any(|c| c == '\\n') {\n                j =\
    \ new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\t') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\r') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\b') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\a') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\v') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\f') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\e') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\r') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\b') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\a') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\v') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\f') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\e') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\r') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\b') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c == '\\a') {\n                j\
    \ = new_s_len;\n                break;\n            }\n            if s.chars().any(|c|\
    \ c == '\\v') {\n                j = new_s_len;\n                break;\n    \
    \        }\n            if s.chars().any(|c| c\n}\n\nfn main() {\n    let candidate\
    \ = anti_shuffle;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: unknown character escape: `b`\n  --> /tmp/tmpchk34d8a.rs:37:41\n\
    \   |\n37 |             if s.chars().any(|c| c == '\\b') {\n   |             \
    \                            ^ unknown character escape\n   |\n   = help: for\
    \ more information, visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\
    \nerror: unknown character escape: `a`\n  --> /tmp/tmpchk34d8a.rs:41:41\n   |\n\
    41 |             if s.chars().any(|c| c == '\\a') {\n   |                    \
    \                     ^ unknown character escape\n   |\n   = help: for more information,\
    \ visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\n\
    error: unknown character escape: `v`\n  --> /tmp/tmpchk34d8a.rs:45:41\n   |\n\
    45 |             if s.chars().any(|c| c == '\\v') {\n   |                    \
    \                     ^ unknown character escape\n   |\n   = help: for more information,\
    \ visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\n\
    error: unknown character escape: `f`\n  --> /tmp/tmpchk34d8a.rs:49:41\n   |\n\
    49 |             if s.chars().any(|c| c == '\\f') {\n   |                    \
    \                     ^ unknown character escape\n   |\n   = help: for more information,\
    \ visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\n\
    error: unknown character escape: `e`\n  --> /tmp/tmpchk34d8a.rs:53:41\n   |\n\
    53 |             if s.chars().any(|c| c == '\\e') {\n   |                    \
    \                     ^ unknown character escape\n   |\n   = help: for more information,\
    \ visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\n\
    error: unknown character escape: `b`\n  --> /tmp/tmpchk34d8a.rs:61:41\n   |\n\
    61 |             if s.chars().any(|c| c == '\\b') {\n   |                    \
    \                     ^ unknown character escape\n   |\n   = help: for more information,\
    \ visit <https://static.rust-lang.org/doc/master/reference.html#literals>\n\n\
    error: unknown character escape: `a`\n  --> /tmp/tmpchk34d8a.rs:65:41\n   |\n\
    65 |             if s.chars().any(|c| c == '\\a') {\n   |                    \
    \                     ^ unknown character escape\n   "
  stdout: ''
  timestamp: 1659823281
- exit_code: 1
  program: "/// Write a function that takes a string and returns an ordered version\
    \ of it.\n/// Ordered version of string, is a string where all words (separated\
    \ by space)\n/// are replaced by a new word where all the characters arranged\
    \ in\n/// ascending order based on ascii value.\n/// Note: You should keep the\
    \ order of words and blank spaces in the sentence.\n/// For example:\n/// >>>\
    \ anti_shuffle(String::from(\"Hi\"))\n/// String::from(\"Hi\")\n/// >>> anti_shuffle(String::from(\"\
    hello\"))\n/// String::from(\"ehllo\")\n/// >>> anti_shuffle(String::from(\"Hello\
    \ World!!!\"))\n/// String::from(\"Hello !!!Wdlor\")\nfn anti_shuffle(s: String)\
    \ -> String {\n    let mut s = s;\n    let mut new_s = String::new();\n    let\
    \ mut new_s_len = s.len();\n    let mut i = 0;\n    while i < new_s_len {\n  \
    \      let mut j = i;\n        while j < new_s_len {\n            if s.chars().next().unwrap().to_ascii_lowercase()\
    \ < s.chars().next().unwrap().to_ascii_lowercase() {\n                j = j +\
    \ 1;\n            } else {\n                break;\n            }\n        }\n\
    \        new_s.push_str(&s[i .. j]);\n        i = j;\n    }\n    new_s\n}\n\n\
    fn main() {\n    let candidate = anti_shuffle;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnpvzcdlg.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpnpvzcdlg.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpnpvzcdlg.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpnpvzcdlg.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpnpvzcdlg.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823279

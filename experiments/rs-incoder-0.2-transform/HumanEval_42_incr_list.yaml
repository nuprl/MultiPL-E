name: HumanEval_42_incr_list
language: rs
prompt: "/// Return list with elements incremented by 1.\n/// >>> incr_list(vec![1,\
  \ 2, 3])\n/// vec![2, 3, 4]\n/// >>> incr_list(vec![5, 3, 5, 2, 3, 3, 9, 0, 123])\n\
  /// vec![6, 4, 6, 3, 4, 4, 10, 1, 124]\nfn incr_list(l: Vec<isize>) -> Vec<isize>\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = incr_list;\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut result = vec![];\n    for i in l {\n        result.push(i\
    \ + 1);\n    }\n    result", "    let mut result = vec![];\n    for i in l {\n\
    \        result.push(i + 1);\n    }\n    result", "    let mut res = vec![];\n\
    \    for i in l {\n        res.push(i + 1);\n    }\n    res", "    let mut result\
    \ = vec![];\n    for i in l {\n        result.push(i + 1);\n    }\n    result",
  "    let mut result = vec![];\n    for i in l {\n        result.push(i + 1);\n \
    \   }\n    result", "    let mut res = vec![];\n    for i in l {\n        res.push(i\
    \ + 1);\n    }\n    res", "    let mut res = vec![];\n    for i in l {\n     \
    \   res.push(i + 1);\n    }\n    res", "    let mut res = vec![];\n    for i in\
    \ l {\n        res.push(i + 1);\n    }\n    res", '    l.iter().cloned().map(|x|
    x + 1).collect()', "    let mut result = vec![];\n    for i in l {\n        result.push(i\
    \ + 1);\n    }\n    result", "    let mut result = vec![];\n    for i in l {\n\
    \        result.push(i + 1);\n    }\n    result", "    l.iter().cloned().enumerate().map(|(i,\
    \ x)| {\n        x.checked_add(1).ok_or(Error::InvalidInput)?\n    }).collect()",
  "    let mut l = l;\n    l.iter().cloned().for_each(|x| {\n        *x += 1;\n  \
    \  });\n    l", "    let mut res = vec![];\n    for i in l {\n        res.push(i\
    \ + 1);\n    }\n    res", "    let mut result = vec![];\n    for i in l {\n  \
    \      result.push(i + 1);\n    }\n    result", "    let mut result = vec![];\n\
    \    for i in l {\n        result.push(i + 1);\n    }\n    result", "    let mut\
    \ res = vec![];\n    let mut i = 0;\n    for e in l {\n        res.push(i + 1);\n\
    \        i += e;\n    }\n    res", "    let mut result = vec![];\n    for i in\
    \ l {\n        result.push(i + 1);\n    }\n    result", '    l.iter().cloned().enumerate().map(|(i,
    x)| x + 1).collect()', '    l.iter().cloned().enumerate().map(|(i, x)| x + 1).collect()']
stop_tokens:
- "\n}"

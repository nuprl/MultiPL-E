name: HumanEval_78_hex_key
language: rs
prompt: "/// You have been tasked to write a function that receives \n/// a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n/// digits that are\
  \ primes (prime number, or a prime, is a natural number \n/// greater than 1 that\
  \ is not a product of two smaller natural numbers).\n/// Hexadecimal digits are\
  \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n/// Prime numbers are 2, 3, 5,\
  \ 7, 11, 13, 17,...\n/// So you have to determine a number of the following digits:\
  \ 2, 3, 5, 7, \n/// B (=decimal 11), D (=decimal 13).\n/// Note: you may assume\
  \ the input is always correct or empty string, \n/// and symbols A,B,C,D,E,F are\
  \ always uppercase.\n/// Examples:\n/// >>> hex_key(String::from(\"AB\"))\n/// 1\n\
  /// >>> hex_key(String::from(\"1077E\"))\n/// 2\n/// >>> hex_key(String::from(\"\
  ABED1A33\"))\n/// 4\n/// >>> hex_key(String::from(\"123456789ABCDEF0\"))\n/// 6\n\
  /// >>> hex_key(String::from(\"2020\"))\n/// 2\nfn hex_key(num: String) -> isize\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = hex_key;\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  }\n"
completions: ["    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count: isize = 0;\n    let mut prime: isize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ isize = 0;\n    let mut prime_found = false;\n    let mut prime_found2 = false;\n\
    \    let mut prime_found3 = false;\n    let mut prime_found4 = false;\n    let\
    \ mut prime_found5 = false;\n    let mut prime_found6 = false;\n    let mut prime_found7\
    \ = false;\n    let mut prime_found8 = false;\n    let mut prime_found9 = false;\n\
    \    let mut prime_found10 = false;\n    let mut prime_found11 = false;\n    let\
    \ mut prime_found12 = false;\n    let mut prime_found13 = false;\n    let mut\
    \ prime_found14 = false;\n    let mut prime_found15 = false;\n    let mut prime_found16\
    \ = false;\n    let mut prime_found17 = false;\n    let mut prime_found18 = false;\n\
    \    let mut prime_found19 = false;\n    let mut prime_found20 = false;\n    let\
    \ mut prime_found21 = false;\n    let mut prime_found22 = false;\n    let mut\
    \ prime_found23 = false;\n    let mut prime_found24 = false;\n    let mut prime_found25\
    \ = false;\n    let mut prime_found26 = false;\n    let mut prime_found27 = false;\n\
    \    let mut prime_found28 = false;\n    let mut prime_found29 = false;\n    let\
    \ mut prime_found30 = false;\n    let mut prime_found31 = false;\n    let mut\
    \ prime_found32 = false;\n    let mut prime_found33 = false;\n    let mut prime_found34\
    \ = false;\n    let mut prime_found35 = false;\n    let mut prime_found36 = false;\n\
    \    let mut prime_found37 = false;\n    let mut prime_found38 = false;\n    let\
    \ mut prime_found39 = false;\n    let mut prime_found40 = false;\n    let mut\
    \ prime_found41 = false;\n    let mut prime_found42 = false;\n    let mut prime_found43\
    \ = false;\n    let mut prime_found44 = false;\n    let mut prime_found45 = false;\n\
    \    let mut prime_found46 = false;\n    let mut prime_found47 = false;\n    let\
    \ mut prime_found48 = false;\n    let mut prime_found49 = false;\n    let mut\
    \ prime_found50 = false;\n    let mut prime_found51 = false;\n    let mut prime_found52\
    \ = false;\n    let mut prime_found53 = false;", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut counter: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_counter:\
    \ usize = 2;\n    let mut prime_counter2: usize = 2;\n    let mut prime_counter3:\
    \ usize = 2;\n    let mut prime_counter4: usize = 2;\n    let mut prime_counter5:\
    \ usize = 2;\n    let mut prime_counter6: usize = 2;\n    let mut prime_counter7:\
    \ usize = 2;\n    let mut prime_counter8: usize = 2;\n    let mut prime_counter9:\
    \ usize = 2;\n    let mut prime_counter10: usize = 2;\n    let mut prime_counter11:\
    \ usize = 2;\n    let mut prime_counter12: usize = 2;\n    let mut prime_counter13:\
    \ usize = 2;\n    let mut prime_counter14: usize = 2;\n    let mut prime_counter15:\
    \ usize = 2;\n    let mut prime_counter16: usize = 2;\n    let mut prime_counter17:\
    \ usize = 2;\n    let mut prime_counter18: usize = 2;\n    let mut prime_counter19:\
    \ usize = 2;\n    let mut prime_counter20: usize = 2;\n    let mut prime_counter21:\
    \ usize = 2;\n    let mut prime_counter22: usize = 2;\n    let mut prime_counter23:\
    \ usize = 2;\n    let mut prime_counter24: usize = 2;\n    let mut prime_counter25:\
    \ usize = 2;\n    let mut prime_counter26: usize = 2;\n    let mut prime_counter27:\
    \ usize = 2;\n    let mut prime_counter28: usize = 2;\n    let mut prime_counter29:\
    \ usize = 2;\n    let mut prime_counter30: usize = 2;\n    let mut prime_counter31:\
    \ usize = 2;\n    let mut prime_counter32: usize = 2;\n    let mut prime_counter33:\
    \ usize = 2;\n    let mut prime_counter34: usize = 2;\n    let mut prime_counter35:\
    \ usize = 2;\n    let mut prime_counter36: usize = 2;\n    let mut prime_counter37:\
    \ usize = 2;\n    let mut prime_counter38: usize = 2;\n    let mut prime_counter39:\
    \ usize = 2;\n    let mut prime_counter40: usize = 2;\n", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut num_prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17];\n    let mut num_prime_len = num_prime.len();\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'a' && c != 'b' && c !=\
    \ 'c' && c != 'd' && c != 'e' && c != 'f').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != '0').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c != '1').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c !=\
    \ '2').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c != '3').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != '4').collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|&c| c != '5').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c != '6').collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c != '7').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != '8').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c != '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c !=\
    \ 'A').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'B').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'C').collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|&c| c != 'D').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c != 'E').collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c != 'F').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != 'a').collect();\n    let mut num: ", "    let\
    \ mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime_count\
    \ = 0;\n    let mut prime_digit = num[0];\n    let mut prime_digit_count = 0;\n\
    \    let mut prime_digit_index = 0;\n    let mut prime_digit_count2 = 0;\n   \
    \ let mut prime_digit_index2 = 0;\n    let mut prime_digit_count3 = 0;\n    let\
    \ mut prime_digit_index3 = 0;\n    let mut prime_digit_count4 = 0;\n    let mut\
    \ prime_digit_index4 = 0;\n    let mut prime_digit_count5 = 0;\n    let mut prime_digit_index5\
    \ = 0;\n    let mut prime_digit_count6 = 0;\n    let mut prime_digit_index6 =\
    \ 0;\n    let mut prime_digit_count7 = 0;\n    let mut prime_digit_index7 = 0;\n\
    \    let mut prime_digit_count8 = 0;\n    let mut prime_digit_index8 = 0;\n  \
    \  let mut prime_digit_count9 = 0;\n    let mut prime_digit_index9 = 0;\n    let\
    \ mut prime_digit_count10 = 0;\n    let mut prime_digit_index10 = 0;\n    let\
    \ mut prime_digit_count11 = 0;\n    let mut prime_digit_index11 = 0;\n    let\
    \ mut prime_digit_count12 = 0;\n    let mut prime_digit_index12 = 0;\n    let\
    \ mut prime_digit_count13 = 0;\n    let mut prime_digit_index13 = 0;\n    let\
    \ mut prime_digit_count14 = 0;\n    let mut prime_digit_index14 = 0;\n    let\
    \ mut prime_digit_count15 = 0;\n    let mut prime_digit_index15 = 0;\n    let\
    \ mut prime_digit_count16 = 0;\n    let mut prime_digit_index16 = 0;\n    let\
    \ mut prime_digit_count17 = 0;\n    let mut prime_digit_index17 = 0;\n    let\
    \ mut prime_digit_count18 = 0;\n    let mut prime_digit_index18 = 0;\n    let\
    \ mut prime_digit_count19 = 0;\n    let mut prime_digit_index19 = 0;\n    let\
    \ mut prime_digit_count20 = 0;\n    let mut prime_digit_index20 = 0;\n    let\
    \ mut prime_digit_count21 = 0;\n    let mut prime_digit_index21 = 0;\n    let\
    \ mut prime_digit_count22 = 0;\n    let mut prime_digit_index22 = 0;\n    let\
    \ mut prime_digit_count23 = 0;\n    let mut prime_digit_index23 = 0;\n    let\
    \ mut prime_digit_count24 = 0;\n    let mut prime_digit_index24 = 0;\n    let\
    \ mut prime_digit_count", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![];\n    let mut num_prime_counter: usize\
    \ = 0;\n    let mut num_prime_counter2: usize = 0;\n    let mut num_prime_counter3:\
    \ usize = 0;\n    let mut num_prime_counter4: usize = 0;\n    let mut num_prime_counter5:\
    \ usize = 0;\n    let mut num_prime_counter6: usize = 0;\n    let mut num_prime_counter7:\
    \ usize = 0;\n    let mut num_prime_counter8: usize = 0;\n    let mut num_prime_counter9:\
    \ usize = 0;\n    let mut num_prime_counter10: usize = 0;\n    let mut num_prime_counter11:\
    \ usize = 0;\n    let mut num_prime_counter12: usize = 0;\n    let mut num_prime_counter13:\
    \ usize = 0;\n    let mut num_prime_counter14: usize = 0;\n    let mut num_prime_counter15:\
    \ usize = 0;\n    let mut num_prime_counter16: usize = 0;\n    let mut num_prime_counter17:\
    \ usize = 0;\n    let mut num_prime_counter18: usize = 0;\n    let mut num_prime_counter19:\
    \ usize = 0;\n    let mut num_prime_counter20: usize = 0;\n    let mut num_prime_counter21:\
    \ usize = 0;\n    let mut num_prime_counter22: usize = 0;\n    let mut num_prime_counter23:\
    \ usize = 0;\n    let mut num_prime_counter24: usize = 0;\n    let mut num_prime_counter25:\
    \ usize = 0;\n    let mut num_prime_counter26: usize = 0;\n    let mut num_prime_counter27:\
    \ usize = 0;\n    let mut num_prime_counter28: usize = 0;\n    let mut num_prime_counter29:\
    \ usize = 0;\n    let mut num_prime_counter30: usize = 0;\n    let mut num_prime_counter31:\
    \ usize = 0;\n    let mut num_prime_counter32: usize = 0;\n    let mut num_prime_counter33:\
    \ usize = 0;\n    let mut num_prime_counter34: usize = 0;\n    let mut num_prime_counter35:\
    \ usize = 0;\n    let mut num_prime_counter36: usize = 0;\n    let mut num_prime_counter37:\
    \ usize = 0;\n    let mu", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter: usize\
    \ = 0;\n    let mut digit: u8 = 0;\n    let mut prime_counter: usize = 0;\n  \
    \  let mut prime_digit: u8 = 0;\n    let mut prime_prime_counter: usize = 0;\n\
    \    let mut prime_prime_digit: u8 = 0;\n    let mut prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_digit: u8 = 0;\n    let mut prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_digit: u8 = 0;\n    let mut\
    \ prime_prime_prime_prime_prime_counter: usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_counter: usize\
    \ = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_counter: usize =\
    \ 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_counter: usize\
    \ = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_counter:\
    \ usize = 0;", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut num_primes = 0;\n    let mut\
    \ num_primes_digits = 0;\n    let mut num_primes_digits_primes = 0;\n    let mut\
    \ num_primes_digits_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes = 0;\n    let\
    \ mut num_primes_digits_primes_primes_primes_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digit", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = ", "    let mut nums = num.chars().collect::<Vec<_>>();\n    let mut\
    \ primes = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut primes_len = primes.len();\n \
    \   let mut primes_count = primes.len();\n    let mut primes_count_2 = primes.len();\n\
    \    let mut primes_count_3 = primes.len();\n    let mut primes_count_4 = primes.len();\n\
    \    let mut primes_count_5 = primes.len();\n    let mut primes_count_6 = primes.len();\n\
    \    let mut primes_count_7 = primes.len();\n    let mut primes_count_8 = primes.len();\n\
    \    let mut primes_count_9 = primes.len();\n    let mut primes_count_10 = primes.len();\n\
    \    let mut primes_count_11 = primes.len();\n    let mut primes_count_12 = primes.len();\n\
    \    let mut primes_count_13 = primes.len();\n    let mut primes_count_14 = primes.len();\n\
    \    let mut primes_count_15 = primes.len();\n    let mut primes_count_16 = primes.len();\n\
    \    let mut primes_count_17 = primes.len();\n    let mut primes_count_18 = primes.len();\n\
    \    let mut primes_count_19 = primes.len();\n    let mut primes_count_20 = primes.len();\n\
    \    let mut primes_count_21 = primes.len();\n    let mut primes_count_22 = primes.len();\n\
    \    let mut primes_count_23 = primes.len();\n    let mut primes_count_24 = primes.len();\n\
    \    let mut primes_count_25 = primes.len();\n    let mut primes_count_26 = primes.len();\n\
    \    let mut primes_count_27 = primes.len();\n    let mut primes_count_28 = primes.len();\n\
    \    let mut primes_count_29 = primes.len();\n    let mut primes_count_30 = primes.len();\n\
    \    let mut primes_count_31 = primes.len();\n    let mut primes_count_32 = primes.len();\n\
    \    let mut primes_count_33 = primes.len();\n    let mut primes_count_34 = primes.len();\n\
    \    let mut primes_count_35 = primes.len();\n    let mu", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime: Vec<u8> = vec![3, 5,\
    \ 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime: Vec<u8> = vec![3, 5,\
    \ 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime: Vec<u8> = vec![3,\
    \ 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime: Vec<u8>\
    \ = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut count:\
    \ isize = 0;\n    let mut prime: isize = 2;\n    let mut prime_found = false;\n\
    \    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n    let\
    \ mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let mut prime_found6\
    \ = false;\n    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n\
    \    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let\
    \ mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let mut\
    \ prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut prime_found15\
    \ = false;\n    let mut prime_found16 = false;\n    let mut prime_found17 = false;\n\
    \    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n    let\
    \ mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let mut\
    \ prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut prime_found24\
    \ = false;\n    let mut prime_found25 = false;\n    let mut prime_found26 = false;\n\
    \    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n    let\
    \ mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let mut\
    \ prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut prime_found33\
    \ = false;\n    let mut prime_found34 = false;\n    let mut prime_found35 = false;\n\
    \    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n    let\
    \ mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let mut\
    \ prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut prime_found42\
    \ = false;\n    let mut prime_found43 = false;\n    let mut prime_found44 = false;\n\
    \    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n    let\
    \ mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let mut\
    \ prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut prime_found51\
    \ = false;\n    let mut prime_found52 = false;\n    let ", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime_digits: Vec<u8> =\
    \ vec![];\n    let mut prime_digits_len: usize = 0;\n    let mut prime_digits_sum:\
    \ usize = 0;\n    let mut prime_digits_sum2: usize = 0;\n    let mut prime_digits_sum3:\
    \ usize = 0;\n    let mut prime_digits_sum4: usize = 0;\n    let mut prime_digits_sum5:\
    \ usize = 0;\n    let mut prime_digits_sum6: usize = 0;\n    let mut prime_digits_sum7:\
    \ usize = 0;\n    let mut prime_digits_sum8: usize = 0;\n    let mut prime_digits_sum9:\
    \ usize = 0;\n    let mut prime_digits_sum10: usize = 0;\n    let mut prime_digits_sum11:\
    \ usize = 0;\n    let mut prime_digits_sum12: usize = 0;\n    let mut prime_digits_sum13:\
    \ usize = 0;\n    let mut prime_digits_sum14: usize = 0;\n    let mut prime_digits_sum15:\
    \ usize = 0;\n    let mut prime_digits_sum16: usize = 0;\n    let mut prime_digits_sum17:\
    \ usize = 0;\n    let mut prime_digits_sum18: usize = 0;\n    let mut prime_digits_sum19:\
    \ usize = 0;\n    let mut prime_digits_sum20: usize = 0;\n    let mut prime_digits_sum21:\
    \ usize = 0;\n    let mut prime_digits_sum22: usize = 0;\n    let mut prime_digits_sum23:\
    \ usize = 0;\n    let mut prime_digits_sum24: usize = 0;\n    let mut prime_digits_sum25:\
    \ usize = 0;\n    let mut prime_digits_sum26: usize = 0;\n    let mut prime_digits_sum27:\
    \ usize = 0;\n    let mut prime_digits_sum28: usize = 0;\n    let mut prime_digits_sum29:\
    \ usize = 0;\n    let mut prime_digits_sum30: usize = 0;\n    let mut prime_digits_sum31:\
    \ usize = 0;\n    let mut prime_digits_sum32: usize = 0;\n    let mut prime_digits_sum33:\
    \ usize = 0;\n    let mut prime_digits_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count: isize = 0;\n    let mut prime: isize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter: usize = 0;\n    let mut num_prime_counter2:\
    \ usize = 0;\n    let mut num_prime_counter3: usize = 0;\n    let mut num_prime_counter4:\
    \ usize = 0;\n    let mut num_prime_counter5: usize = 0;\n    let mut num_prime_counter6:\
    \ usize = 0;\n    let mut num_prime_counter7: usize = 0;\n    let mut num_prime_counter8:\
    \ usize = 0;\n    let mut num_prime_counter9: usize = 0;\n    let mut num_prime_counter10:\
    \ usize = 0;\n    let mut num_prime_counter11: usize = 0;\n    let mut num_prime_counter12:\
    \ usize = 0;\n    let mut num_prime_counter13: usize = 0;\n    let mut num_prime_counter14:\
    \ usize = 0;\n    let mut num_prime_counter15: usize = 0;\n    let mut num_prime_counter16:\
    \ usize = 0;\n    let mut num_prime_counter17: usize = 0;\n    let mut num_prime_counter18:\
    \ usize = 0;\n    let mut num_prime_counter19: usize = 0;\n    let mut num_prime_counter20:\
    \ usize = 0;\n    let mut num_prime_counter21: usize = 0;\n    let mut num_prime_counter22:\
    \ usize = 0;\n    let mut num_prime_counter23: usize = 0;\n    let mut num_prime_counter24:\
    \ usize = 0;\n    let mut num_prime_counter25: usize = 0;\n    let mut num_prime_counter26:\
    \ usize = 0;\n    let mut num_prime_counter27: usize = 0;\n    let mut num_prime_counter28:\
    \ usize = 0;\n    let mut num_prime_counter29: usize = 0;\n    let mut num_prime_counter30:\
    \ usize = 0;\n    let mut num_prime_counter31: usize = 0;\n    let mut num_prime_counter32:\
    \ usize = 0;\n    let mut num_prime_counter33: usize = 0;\n    let mut num_prime_counter34:\
    \ usize = 0;\n    let mut num_prime_counter35: usize = 0;\n    let mut num_prime_counter36:\
    \ usize = 0;\n    let mut num_prime_counter37: usize = 0;\n    let mu", "    let\
    \ mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|c| match c {\n        '0' => 0,\n        '1' => 1,\n     \
    \   '2' => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n     \
    \   '6' => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n     \
    \   'a' => 10,\n        'b' => 11,\n        'c' => 12,\n        'd' => 13,\n \
    \       'e' => 14,\n        'f' => 15,\n        _ => unreachable!(),\n    }).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|c| match c {\n        '0' => 0,\n\
    \        '1' => 1,\n        '2' => 2,\n        '3' => 3,\n        '4' => 4,\n\
    \        '5' => 5,\n        '6' => 6,\n        '7' => 7,\n        '8' => 8,\n\
    \        '9' => 9,\n        'a' => 10,\n        'b' => 11,\n        'c' => 12,\n\
    \        'd' => 13,\n        'e' => 14,\n        'f' => 15,\n        _ => unreachable!(),\n\
    \    }).collect();\n    let mut num: Vec<u8> = num.iter().map(|c| match c {\n\
    \        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n        '3' => 3,\n\
    \        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n        '7' => 7,\n\
    \        '8' => 8,\n        '9' => 9,\n        'a' => 10,\n        'b' => 11,\n\
    \        'c' => 12,\n        'd' => 13,\n        'e' => 14,\n        'f' => 15,\n\
    \        _ => unreachable!(),\n    }).collect();\n    let mut num: Vec<u8> = num.iter().map(|c|\
    \ match c {\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n       \
    \ '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n       \
    \ '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'a' => 10,\n      \
    \  'b' => 11,\n        'c' => 12,\n        'd' => 13,\n        'e' => 14,\n  \
    \      'f' => 15,\n        _ => unreachable!(),\n    }).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|c| match c {\n        '0' => 0,\n        '1' ",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex: Vec<u8> = vec![];\n    let mut\
    \ num_prime_hex_reverse: Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse: Vec<u8> =\
    \ vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex: Vec<u8> = vec![];\n\
    \    let mut num_prime_hex_reverse_hex_reverse_hex_reverse: Vec<u8> = vec![];\n\
    \    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex: Vec<u8> = vec![];\n\
    \    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse: Vec<u8>\
    \ = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_counter: usize\
    \ = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize\
    \ = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize\
    \ = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize\
    \ = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize\
    \ = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_digits = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digits_set\
    \ = prime_digits.iter().cloned().collect::<HashSet<usize>>();\n    let mut prime_digits_count\
    \ = prime_digits.len();\n    let mut prime_digits_sum = 0;\n    let mut prime_digits_product\
    \ = 1;\n    let mut prime_digits_product2 = 1;\n    let mut prime_digits_product3\
    \ = 1;\n    let mut prime_digits_product4 = 0;\n    let mut prime_digits_product5\
    \ = 1;\n    let mut prime_digits_product6 = 1;\n    let mut prime_digits_product7\
    \ = 1;\n    let mut prime_digits_product8 = 1;\n    let mut prime_digits_product9\
    \ = 1;\n    let mut prime_digits_product10 = 1;\n    let mut prime_digits_product11\
    \ = 1;\n    let mut prime_digits_product12 = 1;\n    let mut prime_digits_product13\
    \ = 1;\n    let mut prime_digits_product14 = 1;\n    let mut prime_digits_product15\
    \ = 1;\n    let mut prime_digits_product16 = 1;\n    let mut prime_digits_product17\
    \ = 1;\n    let mut prime_digits_product18 = 1;\n    let mut prime_digits_product19\
    \ = 1;\n    let mut prime_digits_product20 = 1;\n    let mut prime_digits_product21\
    \ = 1;\n    let mut prime_digits_product22 = 1;\n    let mut prime_digits_product23\
    \ = 1;\n    let mut prime_digits_product24 = 1;\n    let mut prime_digits_product25\
    \ = 1;\n    let mut prime_digits_product26 = 1;\n    let mut prime_digits_product27\
    \ = 1;\n    let mut prime_digits_product28 = 1;\n    let mut prime_digits_product29\
    \ = 1;\n    let mut prime_digits_product30 = 1;\n    let mut prime_digits_product31\
    \ = 1;\n    let mut prime_digits_product32 = 1;\n    let mut prime_digits_product33\
    \ = 1;\n    let mut prime_digits_product34 = 1;\n    let mut prime_digits_product35\
    \ = 1;\n    let mut prime_digits_product36 = 1;\n    let mut prime_digits_", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ prime_count: isize = 0;\n    let mut prime: isize = 2;\n    let mut prime_found\
    \ = false;\n    let mut digit: u8 = 0;\n    let mut digit_found = false;\n   \
    \ let mut digit_count = 1;\n    let mut digit_sum = 0;\n    let mut digit_sum2\
    \ = 0;\n    let mut digit_sum3 = 0;\n    let mut digit_sum4 = 0;\n    let mut\
    \ digit_sum5 = 0;\n    let mut digit_sum6 = 0;\n    let mut digit_sum7 = 0;\n\
    \    let mut digit_sum8 = 0;\n    let mut digit_sum9 = 0;\n    let mut digit_sum10\
    \ = 0;\n    let mut digit_sum11 = 0;\n    let mut digit_sum12 = 0;\n    let mut\
    \ digit_sum13 = 0;\n    let mut digit_sum14 = 0;\n    let mut digit_sum15 = 0;\n\
    \    let mut digit_sum16 = 0;\n    let mut digit_sum17 = 0;\n    let mut digit_sum18\
    \ = 0;\n    let mut digit_sum19 = 0;\n    let mut digit_sum20 = 0;\n    let mut\
    \ digit_sum21 = 0;\n    let mut digit_sum22 = 0;\n    let mut digit_sum23 = 0;\n\
    \    let mut digit_sum24 = 0;\n    let mut digit_sum25 = 0;\n    let mut digit_sum26\
    \ = 0;\n    let mut digit_sum27 = 0;\n    let mut digit_sum28 = 0;\n    let mut\
    \ digit_sum29 = 0;\n    let mut digit_sum30 = 0;\n    let mut digit_sum31 = 0;\n\
    \    let mut digit_sum32 = 0;\n    let mut digit_sum33 = 0;\n    let mut digit_sum34\
    \ = 0;\n    let mut digit_sum35 = 0;\n    let mut digit_sum36 = 0;\n    let mut\
    \ digit_sum37 = 0;\n    let mut digit_sum38 = 0;\n    let mut digit_sum39 = 0;\n\
    \    let mut digit_sum40 = 0;\n    let mut digit_sum41 = 0;\n    let mut digit_sum42\
    \ = 0;\n    let mut digit_sum43 = 0;\n    let mut digit_sum44 = 0;\n    let mut\
    \ digit_sum45 = 0;\n    let mut digit_sum46 = 0;\n    let mut digit_sum47 = 0;\n\
    \    let mut digit_sum48 = 0;\n    let mut digit_sum49 = 0;\n    let mut digit_sum50\
    \ = 0;\n    let mut digit_sum51 = 0;\n    let mut digit_sum52 = 0;\n    let mut\
    \ digit_sum53 = 0;\n    let mut digit_sum54 = 0;\n    let mut digit_sum55 = 0;\n\
    \    let mut digit_sum56 = 0;\n    let ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.in", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3];\n    let mut prime_counter: usize =\
    \ 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize\
    \ = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize\
    \ = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize\
    \ = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize\
    \ = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: usize = 0;\n    let mu", "    let mut\
    \ num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime: isize\
    \ = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count: u8 =\
    \ 0;\n    let mut prime_digit_sum: u8 = 0;\n    let mut prime_digit_sum2: u8 =\
    \ 0;\n    let mut prime_digit_sum3: u8 = 0;\n    let mut prime_digit_sum4: u8\
    \ = 0;\n    let mut prime_digit_sum5: u8 = 0;\n    let mut prime_digit_sum6: u8\
    \ = 0;\n    let mut prime_digit_sum7: u8 = 0;\n    let mut prime_digit_sum8: u8\
    \ = 0;\n    let mut prime_digit_sum9: u8 = 0;\n    let mut prime_digit_sum10:\
    \ u8 = 0;\n    let mut prime_digit_sum11: u8 = 0;\n    let mut prime_digit_sum12:\
    \ u8 = 0;\n    let mut prime_digit_sum13: u8 = 0;\n    let mut prime_digit_sum14:\
    \ u8 = 0;\n    let mut prime_digit_sum15: u8 = 0;\n    let mut prime_digit_sum16:\
    \ u8 = 0;\n    let mut prime_digit_sum17: u8 = 0;\n    let mut prime_digit_sum18:\
    \ u8 = 0;\n    let mut prime_digit_sum19: u8 = 0;\n    let mut prime_digit_sum20:\
    \ u8 = 0;\n    let mut prime_digit_sum21: u8 = 0;\n    let mut prime_digit_sum22:\
    \ u8 = 0;\n    let mut prime_digit_sum23: u8 = 0;\n    let mut prime_digit_sum24:\
    \ u8 = 0;\n    let mut prime_digit_sum25: u8 = 0;\n    let mut prime_digit_sum26:\
    \ u8 = 0;\n    let mut prime_digit_sum27: u8 = 0;\n    let mut prime_digit_sum28:\
    \ u8 = 0;\n    let mut prime_digit_sum29: u8 = 0;\n    let mut prime_digit_sum30:\
    \ u8 = 0;\n    let mut prime_digit_sum31: u8 = 0;\n    let mut prime_digit_sum32:\
    \ u8 = 0;\n    let mut prime_digit_sum33: u8 = 0;\n    let mut prime_digit_sum34:\
    \ u8 = 0;\n    let mut prime_digit_sum35: u8 = 0;\n    let mut prime_digit_sum36:\
    \ u8 = 0;\n    let mut prime_digit_sum37: u8 = 0;\n    let mut prime_digit_sum38:\
    \ u8 = 0;\n    let mut prime_digit_sum39: u8 = 0;\n    let ", "    let mut nums\
    \ = num.chars().collect::<Vec<_>>();\n    let mut num_digits = nums.len();\n \
    \   let mut prime_digits = vec![];\n    let mut prime_digits_counter = vec![];\n\
    \    let mut prime_digits_counter2 = vec![];\n    let mut prime_digits_counter3\
    \ = vec![];\n    let mut prime_digits_counter4 = vec![];\n    let mut prime_digits_counter5\
    \ = vec![];\n    let mut prime_digits_counter6 = vec![];\n    let mut prime_digits_counter7\
    \ = vec![];\n    let mut prime_digits_counter8 = vec![];\n    let mut prime_digits_counter9\
    \ = vec![];\n    let mut prime_digits_counter10 = vec![];\n    let mut prime_digits_counter11\
    \ = vec![];\n    let mut prime_digits_counter12 = vec![];\n    let mut prime_digits_counter13\
    \ = vec![];\n    let mut prime_digits_counter14 = vec![];\n    let mut prime_digits_counter15\
    \ = vec![];\n    let mut prime_digits_counter16 = vec![];\n    let mut prime_digits_counter17\
    \ = vec![];\n    let mut prime_digits_counter18 = vec![];\n    let mut prime_digits_counter19\
    \ = vec![];\n    let mut prime_digits_counter20 = vec![];\n    let mut prime_digits_counter21\
    \ = vec![];\n    let mut prime_digits_counter22 = vec![];\n    let mut prime_digits_counter23\
    \ = vec![];\n    let mut prime_digits_counter24 = vec![];\n    let mut prime_digits_counter25\
    \ = vec![];\n    let mut prime_digits_counter26 = vec![];\n    let mut prime_digits_counter27\
    \ = vec![];\n    let mut prime_digits_counter28 = vec![];\n    let mut prime_digits_counter29\
    \ = vec![];\n    let mut prime_digits_counter30 = vec![];\n    let mut prime_digits_counter31\
    \ = vec![];\n    let mut prime_digits_counter32 = vec![];\n    let mut prime_digits_counter33\
    \ = vec![];\n    let mut prime_digits_counter34 = vec![];\n    let mut prime_digits_counter35",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().filter(|x| x % 2 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x|\
    \ x % 3 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x %\
    \ 5 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 7 ==\
    \ 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 11 == 0).collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|x| x % 13 == 0).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().filter(|x| x % 17 == 0).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|x| x % 19 == 0).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|x| x % 23 == 0).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|x| x % 29 == 0).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|x| x % 31 == 0).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().filter(|x| x % 37 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x|\
    \ x % 41 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x\
    \ % 43 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x %\
    \ 47 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 53\
    \ == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 59 ==\
    \ 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 61 == 0).collect();\n\
    \    let mut ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut num_primes = 0;\n    let mut\
    \ num_primes_digits = 0;\n    let mut num_primes_digits_primes = 0;\n    let mut\
    \ num_primes_digits_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes = 0;\n    let\
    \ mut num_primes_digits_primes_primes_primes_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digit", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_number: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_number_count:\
    \ Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_number_count_index: Vec<u8> =\
    \ vec![0, 0, 0, 0];\n    let mut prime_number_count_index: Vec<u8> = vec![0, 0,\
    \ 0, 0];\n    let mut prime_number_count_index: Vec<u8> = vec![0, 0, 0, 0];\n\
    \    let mut prime_number_count_index: Vec<u8> = vec![0, 0, 0, 0];\n    let mut\
    \ prime_number_count_index: Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_number_count_index:\
    \ Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_number_count_index: Vec<u8> =\
    \ vec![0, 0, 0, 0];\n    let mut prime_number_count_index: Vec<u8> = vec![0, 0,\
    \ 0, 0];\n    let mut prime_number_count_index: Vec<u8> = vec![0, 0, 0, 0];\n\
    \    let mut prime_number_count_index: Vec<u8> = vec![0, 0, 0, 0];\n    let mut\
    \ prime_number_count_index: Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_number_count_index:\
    \ Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_number_count_index: Vec<u8> =\
    \ vec![0, 0, 0, 0];\n    let mut prime_number_count_index: Vec<u8> = vec![0, 0,\
    \ 0, 0];\n    let mut prime_number_count_index: Vec<u8> = vec![0, 0, 0, 0];\n\
    \    let mut prime_number_count_index: Vec<u8> = vec![0, 0, 0, 0];\n    let mut\
    \ prime_number_count_index: Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_number_count_index:\
    \ Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_number_count_index: Vec<u8> =\
    \ vec![0, 0, 0, 0];\n    let mut prime_number_count_index: Vec<u8> = vec![0, 0,\
    \ 0, 0];\n    let mut prime_number_count_index: Vec<u8> = vec![0, 0, 0, 0];\n\
    \    let mut prime_number_count_index: Vec<u8> = vec![0, 0, 0, 0];\n    let mut\
    \ prime_number_count_index: Vec<", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.in", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_count: isize = 0;\n    let mut prime: isize = 2;\n    let mut\
    \ i: usize = 0;\n    while i < num.len() {\n        if num[i] == b'a' {\n    \
    \        prime = prime + 2;\n        }\n        if num[i] == b'b' {\n        \
    \    prime = prime + 2;\n        }\n        if num[i] == b'c' {\n            prime\
    \ = prime + 2;\n        }\n        if num[i] == b'd' {\n            prime = prime\
    \ + 2;\n        }\n        if num[i] == b'e' {\n            prime = prime + 2;\n\
    \        }\n        if num[i] == b'f' {\n            prime = prime + 2;\n    \
    \    }\n        if num[i] == b'0' {\n            prime = prime + 2;\n        }\n\
    \        if num[i] == b'1' {\n            prime = prime + 2;\n        }\n    \
    \    if num[i] == b'2' {\n            prime = prime + 2;\n        }\n        if\
    \ num[i] == b'3' {\n            prime = prime + 2;\n        }\n        if num[i]\
    \ == b'4' {\n            prime = prime + 2;\n        }\n        if num[i] == b'5'\
    \ {\n            prime = prime + 2;\n        }\n        if num[i] == b'6' {\n\
    \            prime = prime + 2;\n        }\n        if num[i] == b'7' {\n    \
    \        prime = prime + 2;\n        }\n        if num[i] == b'8' {\n        \
    \    prime = prime + 2;\n        }\n        if num[i] == b'9' {\n            prime\
    \ = prime + 2;\n        }\n        if num[i] == b'A' {\n            prime = prime\
    \ + 2;\n        }\n        if num[i] == b'B' {\n            prime = prime + 2;\n\
    \        }\n        if num[i] == b'C' {\n            prime = prime + 2;\n    \
    \    }\n        if num[i] == b'D' {\n            prime = prime + 2;\n        }\n\
    \        if num[i] == b'E' {\n            prime = prime + 2;\n        }\n    \
    \    if num[i] == b'F' {\n            prime = prime + 2;\n        }\n        prime_count\
    \ = prime_count + 1;\n        i += 1;\n    }\n    prime_count", "    let mut num:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut i: usize = 0;\n    let mut j: usize = 0;\n   \
    \ let mut k: usize = 0;\n    let mut l: usize = 0;\n    let mut m: usize = 0;\n\
    \    let mut n: usize = 0;\n    let mut o: usize = 0;\n    let mut p: usize =\
    \ 0;\n    let mut q: usize = 0;\n    let mut r: usize = 0;\n    let mut s: usize\
    \ = 0;\n    let mut t: usize = 0;\n    let mut u: usize = 0;\n    let mut v: usize\
    \ = 0;\n    let mut w: usize = 0;\n    let mut x: usize = 0;\n    let mut y: usize\
    \ = 0;\n    let mut z: usize = 0;\n    let mut a: usize = 0;\n    let mut b: usize\
    \ = 0;\n    let mut c: usize = 0;\n    let mut d: usize = 0;\n    let mut e: usize\
    \ = 0;\n    let mut f: usize = 0;\n    let mut g: usize = 0;\n    let mut h: usize\
    \ = 0;\n    let mut i: usize = 0;\n    let mut j: usize = 0;\n    let mut k: usize\
    \ = 0;\n    let mut l: usize = 0;\n    let mut m: usize = 0;\n    let mut n: usize\
    \ = 0;\n    let mut o: usize = 0;\n    let mut p: usize = 0;\n    let mut q: usize\
    \ = 0;\n    let mut r: usize = 0;\n    let mut s: usize = 0;\n    let mut t: usize\
    \ = 0;\n    let mut u: usize = 0;\n    let mut v: usize = 0;\n    let mut w: usize\
    \ = 0;\n    let mut x: usize = 0;\n    let mut y: usize = 0;\n    let mut z: usize\
    \ = 0;\n    let mut a: usize = 0;\n    let mut b: usize = 0;\n    let mut c: usize\
    \ = 0;\n    let mut d: usize = 0;\n    let mut e: usize = 0;\n    let mut f: usize\
    \ = 0;\n    let mut g: usize = 0;\n    let mut h: usize = 0;\n    let mut i: usize\
    \ = 0;\n    let mut j: usize = 0;\n    let ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'a' && c != 'b' && c !=\
    \ 'c' && c != 'd' && c != 'e' && c != 'f').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != '0').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c != '1').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c !=\
    \ '2').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c != '3').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != '4').collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|&c| c != '5').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c != '6').collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c != '7').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != '8').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c != '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c !=\
    \ 'A').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'B').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'C').collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|&c| c != 'D').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c != 'E').collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c != 'F').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != 'a').collect();\n    let mut num: ", "    let\
    \ mut num: isize = 0;\n    let mut num_str: String = num.to_string();\n    let\
    \ mut num_str: Vec<String> = num_str.chars().collect();\n    let mut num_str:\
    \ Vec<String> = num_str.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num_str: Vec<String> = num_str.into_iter().filter(|&x| x >= 'A' &&\
    \ x <= 'F').collect();\n    let mut num_str: Vec<String> = num_str.into_iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    for i in num_str.iter() {\n        if\
    \ i % 2 == 0 {\n            num = num + 2;\n        }\n        if i % 3 == 0 {\n\
    \            num = num + 3;\n        }\n        if i % 5 == 0 {\n            num\
    \ = num + 5;\n        }\n        if i % 7 == 0 {\n            num = num + 7;\n\
    \        }\n        if i % 11 == 0 {\n            num = num + 11;\n        }\n\
    \        if i % 13 == 0 {\n            num = num + 13;\n        }\n    }\n   \
    \ num", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let\
    \ mut num_prime: Vec<u8> = vec![];\n    let mut num_prime_counter: usize = 0;\n\
    \    let mut num_prime_counter2: usize = 0;\n    let mut num_prime_counter3: usize\
    \ = 0;\n    let mut num_prime_counter4: usize = 0;\n    let mut num_prime_counter5:\
    \ usize = 0;\n    let mut num_prime_counter6: usize = 0;\n    let mut num_prime_counter7:\
    \ usize = 0;\n    let mut num_prime_counter8: usize = 0;\n    let mut num_prime_counter9:\
    \ usize = 0;\n    let mut num_prime_counter10: usize = 0;\n    let mut num_prime_counter11:\
    \ usize = 0;\n    let mut num_prime_counter12: usize = 0;\n    let mut num_prime_counter13:\
    \ usize = 0;\n    let mut num_prime_counter14: usize = 0;\n    let mut num_prime_counter15:\
    \ usize = 0;\n    let mut num_prime_counter16: usize = 0;\n    let mut num_prime_counter17:\
    \ usize = 0;\n    let mut num_prime_counter18: usize = 0;\n    let mut num_prime_counter19:\
    \ usize = 0;\n    let mut num_prime_counter20: usize = 0;\n    let mut num_prime_counter21:\
    \ usize = 0;\n    let mut num_prime_counter22: usize = 0;\n    let mut num_prime_counter23:\
    \ usize = 0;\n    let mut num_prime_counter24: usize = 0;\n    let mut num_prime_counter25:\
    \ usize = 0;\n    let mut num_prime_counter26: usize = 0;\n    let mut num_prime_counter27:\
    \ usize = 0;\n    let mut num_prime_counter28: usize = 0;\n    let mut num_prime_counter29:\
    \ usize = 0;\n    let mut num_prime_counter30: usize = 0;\n    let mut num_prime_counter31:\
    \ usize = 0;\n    let mut num_prime_counter32: usize = 0;\n    let mut num_prime_counter33:\
    \ usize = 0;\n    let mut num_prime_counter34: usize = 0;\n    let mut num_prime_counter35:\
    \ usize = 0;\n    let mut num_prime_counter36: usize = 0;\n    let mut num_prime_counter37:\
    \ usize = 0;\n    let mu", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut prime_digits = 0;\n    let mut\
    \ prime_number = 0;\n    let mut prime_number_prime = 0;\n    let mut prime_number_not_prime\
    \ = 0;\n    let mut prime_number_not_prime_prime = 0;\n    let mut prime_number_not_prime_not_prime\
    \ = 0;\n    let mut prime_number_not_prime_prime_prime = 0;\n    let mut prime_number_not_prime_prime_not_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime = 0;\n    let mut prime_number_prime_prime_not_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_not_prime = 0;\n    let mut\
    \ prime_number_prime_prime_prime_prime_not_prime = 0;\n    let mut prime_number_prime_prime_prime_prime_not_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_not_prime = 0;\n\
    \    let mut prime_number_prime_prime_prime_prime_prime_not_prime = 0;\n    let\
    \ mut prime_number_prime_prime_prime_prime_prime_prime_not_prime = 0;\n    let\
    \ mut prime_number_prime_prime_prime_prime_prime_prime_not_prime = 0;\n    let\
    \ mut prime_number_prime_prime_prime_prime_prime_prime_prime_not_prime = 0;\n\
    \    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_not_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_not_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_prime_not_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_not_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_not_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_not_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_", "    let mut\
    \ num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime_digits\
    \ = vec![false; 16];\n    let mut prime_digits_count = vec![0; 16];\n    let mut\
    \ prime_digits_count_index = 0;\n    let mut prime_digits_count_index2 = 0;\n\
    \    let mut prime_digits_count_index3 = 0;\n    let mut prime_digits_count_index4\
    \ = 0;\n    let mut prime_digits_count_index5 = 0;\n    let mut prime_digits_count_index6\
    \ = 0;\n    let mut prime_digits_count_index7 = 0;\n    let mut prime_digits_count_index8\
    \ = 0;\n    let mut prime_digits_count_index9 = 0;\n    let mut prime_digits_count_index10\
    \ = 0;\n    let mut prime_digits_count_index11 = 0;\n    let mut prime_digits_count_index12\
    \ = 0;\n    let mut prime_digits_count_index13 = 0;\n    let mut prime_digits_count_index14\
    \ = 0;\n    let mut prime_digits_count_index15 = 0;\n    let mut prime_digits_count_index16\
    \ = 0;\n    let mut prime_digits_count_index17 = 0;\n    let mut prime_digits_count_index18\
    \ = 0;\n    let mut prime_digits_count_index19 = 0;\n    let mut prime_digits_count_index20\
    \ = 0;\n    let mut prime_digits_count_index21 = 0;\n    let mut prime_digits_count_index22\
    \ = 0;\n    let mut prime_digits_count_index23 = 0;\n    let mut prime_digits_count_index24\
    \ = 0;\n    let mut prime_digits_count_index25 = 0;\n    let mut prime_digits_count_index26\
    \ = 0;\n    let mut prime_digits_count_index27 = 0;\n    let mut prime_digits_count_index28\
    \ = 0;\n    let mut prime_digits_count_index29 = 0;\n    let mut prime_digits_count_index30\
    \ = 0;\n    let mut prime_digits_count_index31 = 0;\n    let mut prime_digits_count_index32\
    \ = 0;\n    let mut prime_digits_count_index33 = 0;\n    let mut prime_digits_count_index34\
    \ = 0;\n    let mut prime_digits_count_index35 = 0;\n    let mut prime_digits_count_index36\
    \ = 0;\n    let mut prime_digits_count_index37 = 0;\n    let mut prime_digits_count_index38\
    \ = 0;\n    let mut prime_digits_count_index39 = 0;\n    let mu", "    let mut\
    \ num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8>\
    \ = vec![];\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2:\
    \ usize = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4:\
    \ usize = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6:\
    \ usize = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8:\
    \ usize = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10:\
    \ usize = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n    let mut prime_counter38:\
    \ usize = 0;\n    let mut prime_counter39: usize = 0;\n    let mut prime_counter40:\
    \ usize = 0;\n    let mut prime", "    let mut num: isize = 0;\n    let mut digits\
    \ = num.chars().collect::<Vec<_>>();\n    let mut primes = vec![2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97];\n    let mut primes_set = primes.clone();\n    let mut primes_num = primes.len();\n\
    \    let mut primes_len = primes.len();\n    let mut primes_len_primes = primes.len();\n\
    \    let mut primes_len_primes_primes = primes.len();\n    let mut primes_len_primes_primes_primes\
    \ = primes.len();\n    let mut primes_len_primes_primes_primes_primes = primes.len();\n\
    \    let mut primes_len_primes_primes_primes_primes_primes = primes.len();\n \
    \   let mut primes_len_primes_primes_primes_primes_primes_primes = primes.len();\n\
    \    let mut primes_len_primes_primes_primes_primes_primes_primes_primes = primes.len();\n\
    \    let mut primes_len_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = primes.len();\n    let mut primes_len_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = primes.len();\n    let mut primes_len_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = primes.len();\n    let mut primes_len_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = primes.len();\n    let mut primes_len_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = primes.len();\n    let mut primes_len_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = primes.len();\n    let mut primes_len_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = primes.len();\n    let mut primes_len_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = primes.len();\n    let mut primes_len_primes_prime", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut prime: Vec<u8> = vec![2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97];\n    let mut counter: usize = 0;\n    let mut prime_counter: usize\
    \ = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize\
    \ = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize\
    \ = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize\
    \ = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize\
    \ = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut count: isize = 0;\n    let mut prime: isize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_count\
    \ = 0;\n    let mut prime_digits = vec![2, 3];\n    let mut prime_digits_len =\
    \ prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n  \
    \  let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_count: isize = 0;\n    let mut prime: isize = 2;\n    let mut\
    \ prime_found = false;\n    let mut prime_found2 = false;\n    let mut prime_found3\
    \ = false;\n    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n\
    \    let mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let\
    \ mut prime_found8 = false;\n    let mut prime_found9 = false;\n    let mut prime_found10\
    \ = false;\n    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n\
    \    let mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let\
    \ mut prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut\
    \ prime_found17 = false;\n    let mut prime_found18 = false;\n    let mut prime_found19\
    \ = false;\n    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n\
    \    let mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let\
    \ mut prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut\
    \ prime_found26 = false;\n    let mut prime_found27 = false;\n    let mut prime_found28\
    \ = false;\n    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n\
    \    let mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let\
    \ mut prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut\
    \ prime_found35 = false;\n    let mut prime_found36 = false;\n    let mut prime_found37\
    \ = false;\n    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n\
    \    let mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let\
    \ mut prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut\
    \ prime_found44 = false;\n    let mut prime_found45 = false;\n    let mut prime_found46\
    \ = false;\n    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n\
    \    let mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let\
    \ mut prime_found51 = false;\n    let mut prime_found52 = false;", "    let mut\
    \ num: Vec<u8> = num.to_string().chars().collect();\n    let mut num_digits =\
    \ num.len();\n    let mut num_primes = 0;\n    let mut num_primes_found = 0;\n\
    \    let mut num_primes_found2 = 0;\n    let mut num_primes_found3 = 0;\n    let\
    \ mut num_primes_found4 = 0;\n    let mut num_primes_found5 = 0;\n    let mut\
    \ num_primes_found6 = 0;\n    let mut num_primes_found7 = 0;\n    let mut num_primes_found8\
    \ = 0;\n    let mut num_primes_found9 = 0;\n    let mut num_primes_found10 = 0;\n\
    \    let mut num_primes_found11 = 0;\n    let mut num_primes_found12 = 0;\n  \
    \  let mut num_primes_found13 = 0;\n    let mut num_primes_found14 = 0;\n    let\
    \ mut num_primes_found15 = 0;\n    let mut num_primes_found16 = 0;\n    let mut\
    \ num_primes_found17 = 0;\n    let mut num_primes_found18 = 0;\n    let mut num_primes_found19\
    \ = 0;\n    let mut num_primes_found20 = 0;\n    let mut num_primes_found21 =\
    \ 0;\n    let mut num_primes_found22 = 0;\n    let mut num_primes_found23 = 0;\n\
    \    let mut num_primes_found24 = 0;\n    let mut num_primes_found25 = 0;\n  \
    \  let mut num_primes_found26 = 0;\n    let mut num_primes_found27 = 0;\n    let\
    \ mut num_primes_found28 = 0;\n    let mut num_primes_found29 = 0;\n    let mut\
    \ num_primes_found30 = 0;\n    let mut num_primes_found31 = 0;\n    let mut num_primes_found32\
    \ = 0;\n    let mut num_primes_found33 = 0;\n    let mut num_primes_found34 =\
    \ 0;\n    let mut num_primes_found35 = 0;\n    let mut num_primes_found36 = 0;\n\
    \    let mut num_primes_found37 = 0;\n    let mut num_primes_found38 = 0;\n  \
    \  let mut num_primes_found39 = 0;\n    let mut num_primes_found40 = 0;\n    let\
    \ mut num_primes_found41 = 0;\n    let mut num_primes_found42 = 0;\n    let mut\
    \ num_primes_found43 = 0;\n    let mut num_primes_found44 = 0;\n    let mut num_primes_found45\
    \ = 0;\n    let mut num_primes_found46 = 0;\n    let mut num_primes_found47 =\
    \ 0;\n    let mut num_primes_found48 = 0;\n", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter: usize\
    \ = 0;\n    let mut digit: u8 = 0;\n    let mut prime_counter: usize = 0;\n  \
    \  let mut prime_digit: u8 = 0;\n    let mut prime_prime_counter: usize = 0;\n\
    \    let mut prime_prime_digit: u8 = 0;\n    let mut prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_digit: u8 = 0;\n    let mut prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_digit: u8 = 0;\n    let mut\
    \ prime_prime_prime_prime_prime_counter: usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_counter: usize\
    \ = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_counter: usize =\
    \ 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_counter: usize\
    \ = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_counter:\
    \ usize = 0;\n    let mut prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num_len\
    \ = num.len();\n    let mut num_digits = 1;\n    let mut num_primes = 0;\n   \
    \ let mut num_primes_len = 0;\n    let mut num_primes_digits = 0;\n    let mut\
    \ num_primes_digits_len = 0;\n    let mut num_primes_digits_len2 = 0;\n    let\
    \ mut num_primes_digits_len3 = 0;\n    let mut num_primes_digits_len4 = 0;\n \
    \   let mut num_primes_digits_len5 = 0;\n    let mut num_primes_digits_len6 =\
    \ 0;\n    let mut num_primes_digits_len7 = 0;\n    let mut num_primes_digits_len8\
    \ = 0;\n    let mut num_primes_digits_len9 = 0;\n    let mut num_primes_digits_len10\
    \ = 0;\n    let mut num_primes_digits_len11 = 0;\n    let mut num_primes_digits_len12\
    \ = 0;\n    let mut num_primes_digits_len13 = 0;\n    let mut num_primes_digits_len14\
    \ = 0;\n    let mut num_primes_digits_len15 = 0;\n    let mut num_primes_digits_len16\
    \ = 0;\n    let mut num_primes_digits_len17 = 0;\n    let mut num_primes_digits_len18\
    \ = 0;\n    let mut num_primes_digits_len19 = 0;\n    let mut num_primes_digits_len20\
    \ = 0;\n    let mut num_primes_digits_len21 = 0;\n    let mut num_primes_digits_len22\
    \ = 0;\n    let mut num_primes_digits_len23 = 0;\n    let mut num_primes_digits_len24\
    \ = 0;\n    let mut num_primes_digits_len25 = 0;\n    let mut num_primes_digits_len26\
    \ = 0;\n    let mut num_primes_digits_len27 = 0;\n    let mut num_primes_digits_len28\
    \ = 0;\n    let mut num_primes_digits_len29 = 0;\n    let mut num_primes_digits_len30\
    \ = 0;\n    let mut num_primes_digits_len31 = 0;\n    let mut num_primes_digits_len32\
    \ = 0;\n    let mut num_primes_digits_len33 = 0;\n    let mut num_primes_digits_len34\
    \ = 0;\n    let mut num_primes_digits_len35 = 0;\n    let mut num_primes_digits_len36\
    \ = 0;\n    let mut num_primes_digits_len37 = 0;\n    let mut num_primes_digits_len38\
    \ = 0;", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n \
    \   let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7];\n    let mut prime_counter: usize\
    \ = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize\
    \ = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize\
    \ = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize\
    \ = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize\
    \ = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: usize = 0;\n    let ", "    let mut\
    \ num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_2: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_3: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_4: Vec<u8> = vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19];\n    let mut num_prime_5: Vec<u8> = vec![2, 3, 5, 7, 11,\
    \ 13, 17, 19];\n    let mut num_prime_6: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19];\n    let mut num_prime_7: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n\
    \    let mut num_prime_8: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let\
    \ mut num_prime_9: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_10:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_11: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_12: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_13: Vec<u8> = vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19];\n    let mut num_prime_14: Vec<u8> = vec![2, 3, 5, 7, 11,\
    \ 13, 17, 19];\n    let mut num_prime_15: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19];\n    let mut num_prime_16: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n\
    \    let mut num_prime_17: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let\
    \ mut num_prime_18: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_19:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_20: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_21: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut counter: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_counter:\
    \ usize = 2;\n    let mut prime_counter2: usize = 2;\n    let mut prime_counter3:\
    \ usize = 2;\n    let mut prime_counter4: usize = 2;\n    let mut prime_counter5:\
    \ usize = 2;\n    let mut prime_counter6: usize = 2;\n    let mut prime_counter7:\
    \ usize = 2;\n    let mut prime_counter8: usize = 2;\n    let mut prime_counter9:\
    \ usize = 2;\n    let mut prime_counter10: usize = 2;\n    let mut prime_counter11:\
    \ usize = 2;\n    let mut prime_counter12: usize = 2;\n    let mut prime_counter13:\
    \ usize = 2;\n    let mut prime_counter14: usize = 2;\n    let mut prime_counter15:\
    \ usize = 2;\n    let mut prime_counter16: usize = 2;\n    let mut prime_counter17:\
    \ usize = 2;\n    let mut prime_counter18: usize = 2;\n    let mut prime_counter19:\
    \ usize = 2;\n    let mut prime_counter20: usize = 2;\n    let mut prime_counter21:\
    \ usize = 2;\n    let mut prime_counter22: usize = 2;\n    let mut prime_counter23:\
    \ usize = 2;\n    let mut prime_counter24: usize = 2;\n    let mut prime_counter25:\
    \ usize = 2;\n    let mut prime_counter26: usize = 2;\n    let mut prime_counter27:\
    \ usize = 2;\n    let mut prime_counter28: usize = 2;\n    let mut prime_counter29:\
    \ usize = 2;\n    let mut prime_counter30: usize = 2;\n    let mut prime_counter31:\
    \ usize = 2;\n    let mut prime_counter32: usize = 2;\n    let mut prime_counter33:\
    \ usize = 2;\n    let mut prime_counter34: usize = 2;\n    let mut prime_counter35:\
    \ usize = 2;\n    let mut prime_counter36: usize = 2;\n    let mut prime_counter37:\
    \ usize = 2;\n    let mut prime_counter38: usize = 2;\n    let mut prime_counter39:\
    \ usize = 2;\n    let mut prime_counter40: usize = 2;\n", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut num_prime: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_prime_prime: Vec<u8> = num.to_string().chars().collect();\n \
    \   let mut num_prime_prime_prime: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_prime_prime_prime_prime: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_prime_prime_prime_prime_prime: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime", "    let\
    \ mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num: Vec<u8>\
    \ = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n    let mut\
    \ num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_2: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_3: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_4:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_5: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_6: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_7: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_8:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_9: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_10: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_11: Vec<u8> = vec![2, 3, 5, 7, 11, ", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut prime_len = prime.size();\n    let mut\
    \ prime_sum = 0;\n    let mut prime_sum2 = 0;\n    let mut prime_sum3 = 0;\n \
    \   let mut prime_sum4 = 0;\n    let mut prime_sum5 = 0;\n    let mut prime_sum6\
    \ = 0;\n    let mut prime_sum7 = 0;\n    let mut prime_sum8 = 0;\n    let mut\
    \ prime_sum9 = 0;\n    let mut prime_sum10 = 0;\n    let mut prime_sum11 = 0;\n\
    \    let mut prime_sum12 = 0;\n    let mut prime_sum13 = 0;\n    let mut prime_sum14\
    \ = 0;\n    let mut prime_sum15 = 0;\n    let mut prime_sum16 = 0;\n    let mut\
    \ prime_sum17 = 0;\n    let mut prime_sum18 = 0;\n    let mut prime_sum19 = 0;\n\
    \    let mut prime_sum20 = 0;\n    let mut prime_sum21 = 0;\n    let mut prime_sum22\
    \ = 0;\n    let mut prime_sum23 = 0;\n    let mut prime_sum24 = 0;\n    let mut\
    \ prime_sum25 = 0;\n    let mut prime_sum26 = 0;\n    let mut prime_sum27 = 0;\n\
    \    let mut prime_sum28 = 0;\n    let mut prime_sum29 = 0;\n    let mut prime_sum30\
    \ = 0;\n    let mut prime_sum31 = 0;\n    let mut prime_sum32 = 0;\n    let mut\
    \ prime_sum33 = 0;\n    let mut prime_sum34 = 0;\n    let mut prime_sum35 = 0;\n\
    \    let mut prime_sum36 = 0;\n    let mut prime_sum37 = 0;\n    let mut prime_sum38\
    \ = 0;\n    let mut prime_sum39 = 0;\n    let mut prime_sum40 = 0;\n    let mut\
    \ prime_sum41 = 0;\n    let mut prime_sum42 = 0;\n    let mut prime_sum43 = 0;\n\
    \    let mut prime_sum44 = 0;\n    let mut prime_sum45 = 0;\n    let mut prime_sum46\
    \ = 0;\n    let mut prime_sum47 = 0;\n    let mut prime_sum48 = 0;\n    let mut\
    \ prime_sum49 = 0;\n    let mu", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut nums_iter = nums.iter();\n    let mut nums_len = nums.len();\n  \
    \  let mut num_digits = nums_len as isize;\n    let mut num_digits_iter = num_digits.iter();\n\
    \    let mut num_digits_len = num_digits.len();\n    let mut num_digits_iter =\
    \ num_digits_iter.map(|&x| x.to_digit(16));\n    let mut num_digits_len = num_digits_iter.len();\n\
    \    let mut num_digits_iter = num_digits_iter.map(|&x| x.to_digit(16));\n   \
    \ let mut num_digits_len = num_digits_iter.len();\n    let mut num_digits_iter\
    \ = num_digits_iter.map(|&x| x.to_digit(16));\n    let mut num_digits_len = num_digits_iter.len();\n\
    \    let mut num_digits_iter = num_digits_iter.map(|&x| x.to_digit(16));\n   \
    \ let mut num_digits_len = num_digits_iter.len();\n    let mut num_digits_iter\
    \ = num_digits_iter.map(|&x| x.to_digit(16));\n    let mut num_digits_len = num_digits_iter.len();\n\
    \    let mut num_digits_iter = num_digits_iter.map(|&x| x.to_digit(16));\n   \
    \ let mut num_digits_len = num_digits_iter.len();\n    let mut num_digits_iter\
    \ = num_digits_iter.map(|&x| x.to_digit(16));\n    let mut num_digits_len = num_digits_iter.len();\n\
    \    let mut num_digits_iter = num_digits_iter.map(|&x| x.to_digit(16));\n   \
    \ let mut num_digits_len = num_digits_iter.len();\n    let mut num_digits_iter\
    \ = num_digits_iter.map(|&x| x.to_digit(16));\n    let mut num_digits_len = num_digits_iter.len();\n\
    \    let mut num_digits_iter = num_digits_iter.map(|&x| x.to_digit(16));\n   \
    \ let mut num_digits_len = num_digits_iter.len();\n    let mut num_digits_iter\
    \ = num_digits_iter.map(|&x| x.to_digit(16));\n    let mut num_digits_len = num_digits_iter.len();\n\
    \    let mut num_digits_iter = num_digits_iter.map(|&x| x.to_digit(16));\n   \
    \ let mut num_digits_", "    let mut num: isize = 0;\n    let mut digit: isize\
    \ = 0;\n    let mut prime: isize = 2;\n    let mut prime_digit: isize = 2;\n \
    \   let mut prime_digit_count: isize = 0;\n    let mut digit_count: isize = 0;\n\
    \    let mut digit_prime: isize = 2;\n    let mut digit_prime_count: isize = 0;\n\
    \    let mut digit_prime_digit_count: isize = 0;\n    let mut digit_prime_digit_prime:\
    \ isize = 2;\n    let mut digit_prime_digit_prime_count: isize = 0;\n    let mut\
    \ digit_prime_digit_prime_digit_count: isize = 0;\n    let mut digit_prime_digit_prime_digit_prime:\
    \ isize = 2;\n    let mut digit_prime_digit_prime_digit_prime_count: isize = 0;\n\
    \    let mut digit_prime_digit_prime_digit_prime_digit_count: isize = 0;\n   \
    \ let mut digit_prime_digit_prime_digit_prime_digit_prime: isize = 2;\n    let\
    \ mut digit_prime_digit_prime_digit_prime_digit_prime_count: isize = 0;\n    let\
    \ mut digit_prime_digit_prime_digit_prime_digit_prime_digit_count: isize = 0;\n\
    \    let mut digit_prime_digit_prime_digit_prime_digit_prime_digit_count: isize\
    \ = 0;\n    let mut digit_prime_digit_prime_digit_prime_digit_prime_digit_count:\
    \ isize = 0;\n    let mut digit_prime_digit_prime_digit_prime_digit_prime_digit_prime:\
    \ isize = 2;\n    let mut digit_prime_digit_prime_digit_prime_digit_prime_digit_prime_count:\
    \ isize = 0;\n    let mut digit_prime_digit_prime_digit_prime_digit_prime_digit_prime_digit_count:\
    \ isize = 0;\n    let mut digit_prime_digit_prime_digit_prime_digit_prime_digit_prime_digit_count:\
    \ isize = 0;\n    let mut digit_prime_digit_prime_digit_prime_digit_prime_digit_prime_digit_count:\
    \ isize = 0;\n    let mut digit_prime_digit_prime_digit_prime_digit_prime_digit_prime_digit_count:\
    \ isize = 0;\n    let mut digit_prime_digit_prime_digit_prime_digit_prime_digit_prime_digit_count:\
    \ isize = 0;\n    let mut digit_prime_digit_prime_digit_prime_digit_prime_digit_prime_digit_prime_count:\
    \ isize = 0;\n    let mut digit_prime_digit_prime_digit_prime_digit_prime_digit_prime_digit_prime_digit_count:\
    \ isize = 0;\n    let mut digit_prime_digit_prime", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_len = num_prime.len();\n    let mut\
    \ num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = ", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_counter:\
    \ usize = 0;\n    let mut num_prime_counter2: usize = 0;\n    let mut num_prime_counter3:\
    \ usize = 0;\n    let mut num_prime_counter4: usize = 0;\n    let mut num_prime_counter5:\
    \ usize = 0;\n    let mut num_prime_counter6: usize = 0;\n    let mut num_prime_counter7:\
    \ usize = 0;\n    let mut num_prime_counter8: usize = 0;\n    let mut num_prime_counter9:\
    \ usize = 0;\n    let mut num_prime_counter10: usize = 0;\n    let mut num_prime_counter11:\
    \ usize = 0;\n    let mut num_prime_counter12: usize = 0;\n    let mut num_prime_counter13:\
    \ usize = 0;\n    let mut num_prime_counter14: usize = 0;\n    let mut num_prime_counter15:\
    \ usize = 0;\n    let mut num_prime_counter16: usize = 0;\n    let mut num_prime_counter17:\
    \ usize = 0;\n    let mut num_prime_counter18: usize = 0;\n    let mut num_prime_counter19:\
    \ usize = 0;\n    let mut num_prime_counter20: usize = 0;\n    let mut num_prime_counter21:\
    \ usize = 0;\n    let mut num_prime_counter22: usize = 0;\n    let mut num_prime_counter23:\
    \ usize = 0;\n    let mut num_prime_counter24: usize = 0;\n    let mut num_prime_counter25:\
    \ usize = 0;\n    let mut num_prime_counter26: usize = 0;\n    let mut num_prime_counter27:\
    \ usize = 0;\n    let mut num_prime_counter28: usize = 0;\n    let mut num_prime_counter29:\
    \ usize = 0;\n    let mut num_prime_counter30: usize = 0;\n    let mut num_prime_counter31:\
    \ usize = 0;\n    let mut num_prime_counter32: usize = 0;\n    let mut num_prime_counter33:\
    \ usize = 0;\n    let mut num_prime_counter34: usize = 0;\n    let mut num_prime_counter35:\
    \ usize = 0;\n    let mut num_prime_counter36: usize = 0;\n    let mut num_prime_counter37",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter: usize = 0;\n  \
    \  let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n\
    \    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n\
    \    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: isize = 0;\n\
    \    let mut num_str: String = num.to_string();\n    let mut num_str: Vec<String>\
    \ = num_str.chars().collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect();\n    let mut num_str: Vec<String> = num_str.iter().map(|x|\
    \ x.to_string()).collect", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|&c| match c {\n        'a' => 0xa,\n\
    \        'b' => 0xb,\n        'c' => 0xc,\n        'd' => 0xd,\n        'e' =>\
    \ 0xe,\n        'f' => 0xf,\n        _ => c,\n    }).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|&c| match c {\n        '2' => 0x2,\n        '3' =>\
    \ 0x3,\n        '5' => 0x5,\n        '7' => 0x7,\n        'b' => 0xb,\n      \
    \  'd' => 0xd,\n        'e' => 0xe,\n        'f' => 0xf,\n        _ => c,\n  \
    \  }).collect();\n    let mut num: Vec<u8> = num.iter().map(|&c| match c {\n \
    \       '3' => 0x3,\n        '5' => 0x5,\n        '7' => 0x7,\n        'b' =>\
    \ 0xb,\n        'd' => 0xd,\n        'e' => 0xe,\n        'f' => 0xf,\n      \
    \  _ => c,\n    }).collect();\n    let mut num: Vec<u8> = num.iter().map(|&c|\
    \ match c {\n        '5' => 0x5,\n        '7' => 0x7,\n        'b' => 0xb,\n \
    \       'd' => 0xd,\n        'e' => 0xe,\n        'f' => 0xf,\n        _ => c,\n\
    \    }).collect();\n    let mut num: Vec<u8> = num.iter().map(|&c| match c {\n\
    \        '7' => 0x7,\n        'b' => 0xb,\n        'd' => 0xd,\n        'e' =>\
    \ 0xe,\n        'f' => 0xf,\n        _ => c,\n    }).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|&c| match c {\n        'b' => 0xb,\n        'd' =>\
    \ 0xd,\n        'e' => 0xe,\n        'f' => 0xf,\n        _ => c,\n    }).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|&c| match c {\n        'd' => 0xd,\n\
    \        'e' => 0xe,\n        'f' => 0xf,\n        _ => c,\n    }).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|&c| match c {\n        'e' => 0xe,",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_digits\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|x| x % 2 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x|\
    \ x % 3 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x %\
    \ 5 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 7 ==\
    \ 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 11 == 0).collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|x| x % 13 == 0).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().filter(|x| x % 17 == 0).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|x| x % 19 == 0).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|x| x % 23 == 0).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|x| x % 29 == 0).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|x| x % 31 == 0).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().filter(|x| x % 37 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x|\
    \ x % 41 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x\
    \ % 43 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x %\
    \ 47 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 53\
    \ == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 59 ==\
    \ 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 61 == 0).collect();\n\
    \    let ", "    let mut num: isize = 0;\n    let mut digits: Vec<&str> = num.chars().collect();\n\
    \    let mut prime: isize = 2;\n    let mut prime_found = false;\n    let mut\
    \ prime_found2 = false;\n    let mut prime_found3 = false;\n    let mut prime_found4\
    \ = false;\n    let mut prime_found5 = false;\n    let mut prime_found6 = false;\n\
    \    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n    let\
    \ mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let mut prime_found11\
    \ = false;\n    let mut prime_found12 = false;\n    let mut prime_found13 = false;\n\
    \    let mut prime_found14 = false;\n    let mut prime_found15 = false;\n    let\
    \ mut prime_found16 = false;\n    let mut prime_found17 = false;\n    let mut\
    \ prime_found18 = false;\n    let mut prime_found19 = false;\n    let mut prime_found20\
    \ = false;\n    let mut prime_found21 = false;\n    let mut prime_found22 = false;\n\
    \    let mut prime_found23 = false;\n    let mut prime_found24 = false;\n    let\
    \ mut prime_found25 = false;\n    let mut prime_found26 = false;\n    let mut\
    \ prime_found27 = false;\n    let mut prime_found28 = false;\n    let mut prime_found29\
    \ = false;\n    let mut prime_found30 = false;\n    let mut prime_found31 = false;\n\
    \    let mut prime_found32 = false;\n    let mut prime_found33 = false;\n    let\
    \ mut prime_found34 = false;\n    let mut prime_found35 = false;\n    let mut\
    \ prime_found36 = false;\n    let mut prime_found37 = false;\n    let mut prime_found38\
    \ = false;\n    let mut prime_found39 = false;\n    let mut prime_found40 = false;\n\
    \    let mut prime_found41 = false;\n    let mut prime_found42 = false;\n    let\
    \ mut prime_found43 = false;\n    let mut prime_found44 = false;\n    let mut\
    \ prime_found45 = false;\n    let mut prime_found46 = false;\n    let mut prime_found47\
    \ = false;\n    let mut prime_found48 = false;\n    let mut prime_found49 = false;\n\
    \    let mut prime_found50 = false;\n    let mut prime_found51 = false;\n    let\
    \ mut prime_found52 = false;\n    let ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().map(|c| match c {\n        'A'...'F'\
    \ => c - 'A' + 10,\n        'a'...'f'  => c - 'a' + 10,\n        _ => c,\n   \
    \ }).collect();\n    let mut num: Vec<u8> = num.into_iter().map(|c| match c {\n\
    \        '0'...'9' => c - '0' + 10,\n        _ => c,\n    }).collect();\n    let\
    \ mut num: Vec<u8> = num.into_iter().map(|c| match c {\n        '0'...'9' => c\
    \ - '0' + 10,\n        _ => c,\n    }).collect();\n    let mut num: Vec<u8> =\
    \ num.into_iter().map(|c| match c {\n        '0'...'9' => c - '0' + 10,\n    \
    \    _ => c,\n    }).collect();\n    let mut num: Vec<u8> = num.into_iter().map(|c|\
    \ match c {\n        '0'...'9' => c - '0' + 10,\n        _ => c,\n    }).collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().map(|c| match c {\n        '0'...'9'\
    \ => c - '0' + 10,\n        _ => c,\n    }).collect();\n    let mut num: Vec<u8>\
    \ = num.into_iter().map(|c| match c {\n        '0'...'9' => c - '0' + 10,\n  \
    \      _ => c,\n    }).collect();\n    let mut num: Vec<u8> = num.into_iter().map(|c|\
    \ match c {\n        '0'...'9' => c - '0' + 10,\n        _ => c,\n    }).collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().map(|c| match c {\n        '0'...'9'\
    \ => c - '0' + 10,\n        _ => c,\n    }).collect();\n    let mut num: Vec<u8>\
    \ = num.into_iter().map(|c| match c {\n        '0'...'9' => c - '0' + 10,\n  \
    \      _ => c,\n    }).collect();\n    let mut num: Vec<u8> = num.into_iter().map(|c|\
    \ match c {\n        '0'...'9' => c - ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut prime_count = 0;\n    let mut\
    \ prime_digits = vec![2, 3];\n    let mut prime_digit_count = 2;\n    let mut\
    \ prime_digit_index = 0;\n    let mut prime_digit_sum = 0;\n    let mut prime_digit_sum_index\
    \ = 0;\n    let mut prime_digit_product = 1;\n    let mut prime_digit_product_index\
    \ = 0;\n    let mut prime_digit_product2 = 0;\n    let mut prime_digit_product2_index\
    \ = 0;\n    let mut prime_digit_product3 = 0;\n    let mut prime_digit_product3_index\
    \ = 0;\n    let mut prime_digit_product4 = 0;\n    let mut prime_digit_product4_index\
    \ = 0;\n    let mut prime_digit_product5 = 0;\n    let mut prime_digit_product5_index\
    \ = 0;\n    let mut prime_digit_product6 = 0;\n    let mut prime_digit_product6_index\
    \ = 0;\n    let mut prime_digit_product7 = 0;\n    let mut prime_digit_product7_index\
    \ = 0;\n    let mut prime_digit_product8 = 0;\n    let mut prime_digit_product8_index\
    \ = 0;\n    let mut prime_digit_product9 = 0;\n    let mut prime_digit_product9_index\
    \ = 0;\n    let mut prime_digit_product10 = 0;\n    let mut prime_digit_product10_index\
    \ = 0;\n    let mut prime_digit_product11 = 0;\n    let mut prime_digit_product11_index\
    \ = 0;\n    let mut prime_digit_product12 = 0;\n    let mut prime_digit_product12_index\
    \ = 0;\n    let mut prime_digit_product13 = 0;\n    let mut prime_digit_product13_index\
    \ = 0;\n    let mut prime_digit_product14 = 0;\n    let mut prime_digit_product14_index\
    \ = 0;\n    let mut prime_digit_product15 = 0;\n    let mut prime_digit_product15_index\
    \ = 0;\n    let mut prime_digit_product16 = 0;\n    let mut prime_digit_product16_index\
    \ = 0;\n    let mut prime_digit_product17 = 0;\n    let mut prime_digit_product17_index\
    \ = 0;\n    let mut prime_digit_product18 = 0;\n    let mut prime_digit_product18_index\
    \ = 0;\n    let mut prime_digit_product19 = 0;\n    let mut prime_digit_product19_index\
    \ = 0;\n    let mut prime_digit_product20 = 0;\n    let mut prime_digit_product20_index\
    \ = 0;\n    let mut prime_digit_product21 = 0;\n    let ", "    let mut nums =\
    \ num.chars().collect::<Vec<_>>();\n    let mut nums_len = nums.len();\n    let\
    \ mut prime_digits = vec![];\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_counter = vec![];\n    let mut prime_digits_counter_len\
    \ = prime_digits_counter.len();\n    let mut prime_digits_counter_reset = vec![];\n\
    \    let mut prime_digits_counter_reset_len = prime_digits_counter_reset.len();\n\
    \    let mut prime_digits_counter_reset_reset = vec![];\n    let mut prime_digits_counter_reset_reset_len\
    \ = prime_digits_counter_reset_reset.len();\n    let mut prime_digits_counter_reset_reset_reset\
    \ = vec![];\n    let mut prime_digits_counter_reset_reset_reset_len = prime_digits_counter_reset_reset_reset.len();\n\
    \    let mut prime_digits_counter_reset_reset_reset_reset = vec![];\n    let mut\
    \ prime_digits_counter_reset_reset_reset_reset_len = prime_digits_counter_reset_reset_reset_reset.len();\n\
    \    let mut prime_digits_counter_reset_reset_reset_reset_reset = vec![];\n  \
    \  let mut prime_digits_counter_reset_reset_reset_reset_reset_len = prime_digits_counter_reset_reset_reset_reset_reset.len();\n\
    \    let mut prime_digits_counter_reset_reset_reset_reset_reset_reset = vec![];\n\
    \    let mut prime_digits_counter_reset_reset_reset_reset_reset_reset_len = prime_digits_counter_reset_reset_reset_reset_reset_reset.len();\n\
    \    let mut prime_digits_counter_reset_reset_reset_reset_reset_reset_reset_reset\
    \ = vec![];\n    let mut prime_digits_counter_reset_reset_reset_reset_reset_reset_reset_reset_len\
    \ = prime_digits_counter_reset_reset_reset_reset_reset_reset_reset_reset.len();\n\
    \    let mut prime_digits_counter_reset_reset_reset_reset_reset_reset_reset_reset_reset\
    \ = vec![];\n    let mut prime_digits_counter_reset_reset_reset_reset_reset_reset_reset_reset_len\
    \ = prime_digits_counter_reset_reset_reset_reset_reset_reset_reset_reset.len();\n\
    \    let mut prime_digits_counter_reset_reset_reset_reset_reset_reset_reset_reset_reset_len\
    \ = prime_digits_counter_reset_reset_reset_reset_reset_reset_reset_reset_reset.len();\n\
    \    let mut prime_digits_counter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_count: isize = 0;\n    let mut prime_digit: u8 = 0;\n    let\
    \ mut prime_digit_count: isize = 0;\n    let mut prime_digit_count: isize = 0;\n\
    \    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count: isize\
    \ = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_count: isize = 0;\n", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime: Vec<u8>\
    \ = vec![];\n    let mut num_prime_prime: Vec<u8> = vec![];\n    let mut num_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_prime_prime_prime: Vec<u8> = vec![];\n\
    \    let mut num_prime_prime_prime_prime_prime: Vec<u8> = vec![];\n    let mut\
    \ num_prime_prime_prime_prime_prime_prime: Vec<u8> = vec![];\n    let mut num_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8", "    let mut nums = num.chars().collect::<Vec<_>>();\n    let mut primes\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut primes_count = primes.len();\n\
    \    let mut primes_sum = 0;\n    let mut primes_sum2 = 0;\n    let mut primes_sum3\
    \ = 0;\n    let mut primes_sum4 = 0;\n    let mut primes_sum5 = 0;\n    let mut\
    \ primes_sum6 = 0;\n    let mut primes_sum7 = 0;\n    let mut primes_sum8 = 0;\n\
    \    let mut primes_sum9 = 0;\n    let mut primes_sum10 = 0;\n    let mut primes_sum11\
    \ = 0;\n    let mut primes_sum12 = 0;\n    let mut primes_sum13 = 0;\n    let\
    \ mut primes_sum14 = 0;\n    let mut primes_sum15 = 0;\n    let mut primes_sum16\
    \ = 0;\n    let mut primes_sum17 = 0;\n    let mut primes_sum18 = 0;\n    let\
    \ mut primes_sum19 = 0;\n    let mut primes_sum20 = 0;\n    let mut primes_sum21\
    \ = 0;\n    let mut primes_sum22 = 0;\n    let mut primes_sum23 = 0;\n    let\
    \ mut primes_sum24 = 0;\n    let mut primes_sum25 = 0;\n    let mut primes_sum26\
    \ = 0;\n    let mut primes_sum27 = 0;\n    let mut primes_sum28 = 0;\n    let\
    \ mut primes_sum29 = 0;\n    let mut primes_sum30 = 0;\n    let mut primes_sum31\
    \ = 0;\n    let mut primes_sum32 = 0;\n    let mut primes_sum33 = 0;\n    let\
    \ mut primes_sum34 = 0;\n    let mut primes_sum35 = 0;\n    let mut primes_sum36\
    \ = 0;\n    let mut primes_sum37 = 0;\n    let mut primes_sum38 = 0;\n    let\
    \ mut primes_sum39 = 0;\n    let mut primes_sum40 = 0;\n    let mut primes_sum41\
    \ = 0;\n    let mut primes_sum42 = 0;\n    let mut primes_sum43 = 0;\n    let\
    \ mut primes_sum44 = 0;\n    let mut primes_sum45 = 0;\n    let mut primes_sum46\
    \ = 0;\n    let mut primes_sum47 = 0;\n    let mut primes_sum48 = 0;\n    let\
    \ mut primes_sum49 = 0;\n    let mut primes_sum50 = 0;\n    let mut primes_sum51\
    \ = 0;\n    let mut primes_sum52 = 0;\n    let mut primes_", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_digits = num.len();\n\
    \    let mut prime_digits = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digit", "    let mut num: Vec<u8> =\
    \ num.to_string().chars().collect();\n    let mut prime: isize = 0;\n    let mut\
    \ digit: u8 = 0;\n    let mut prime_found = false;\n    let mut digit_found =\
    \ false;\n    let mut prime_found2 = false;\n    let mut digit_found2 = false;\n\
    \    let mut prime_found3 = false;\n    let mut digit_found3 = false;\n    let\
    \ mut prime_found4 = false;\n    let mut digit_found4 = false;\n    let mut prime_found5\
    \ = false;\n    let mut digit_found5 = false;\n    let mut prime_found6 = false;\n\
    \    let mut digit_found6 = false;\n    let mut prime_found7 = false;\n    let\
    \ mut digit_found7 = false;\n    let mut prime_found8 = false;\n    let mut digit_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut digit_found9 = false;\n\
    \    let mut prime_found10 = false;\n    let mut digit_found10 = false;\n    let\
    \ mut prime_found11 = false;\n    let mut digit_found11 = false;\n    let mut\
    \ prime_found12 = false;\n    let mut digit_found12 = false;\n    let mut prime_found13\
    \ = false;\n    let mut digit_found13 = false;\n    let mut prime_found14 = false;\n\
    \    let mut digit_found14 = false;\n    let mut prime_found15 = false;\n    let\
    \ mut digit_found15 = false;\n    let mut prime_found16 = false;\n    let mut\
    \ digit_found16 = false;\n    let mut prime_found17 = false;\n    let mut digit_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut digit_found18 = false;\n\
    \    let mut prime_found19 = false;\n    let mut digit_found19 = false;\n    let\
    \ mut prime_found20 = false;\n    let mut digit_found20 = false;\n    let mut\
    \ prime_found21 = false;\n    let mut digit_found21 = false;\n    let mut prime_found22\
    \ = false;\n    let mut digit_found22 = false;\n    let mut prime_found23 = false;\n\
    \    let mut digit_found23 = false;\n    let mut prime_found24 = false;\n    let\
    \ mut digit_found24 = false;\n    let mut prime_found25 = false;\n    let mut\
    \ digit_found25 = false;\n    let mut prime_found26 = false;\n    let mut digit_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut digit_found27 = false;\n\
    \    let mut prime_found28 = false;\n    let mut digit_found28 = false;\n", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ num_prime: Vec<u8> = vec![];\n    let mut num_prime_counter: usize = 0;\n  \
    \  let mut num_prime_counter2: usize = 0;\n    let mut num_prime_counter3: usize\
    \ = 0;\n    let mut num_prime_counter4: usize = 0;\n    let mut num_prime_counter5:\
    \ usize = 0;\n    let mut num_prime_counter6: usize = 0;\n    let mut num_prime_counter7:\
    \ usize = 0;\n    let mut num_prime_counter8: usize = 0;\n    let mut num_prime_counter9:\
    \ usize = 0;\n    let mut num_prime_counter10: usize = 0;\n    let mut num_prime_counter11:\
    \ usize = 0;\n    let mut num_prime_counter12: usize = 0;\n    let mut num_prime_counter13:\
    \ usize = 0;\n    let mut num_prime_counter14: usize = 0;\n    let mut num_prime_counter15:\
    \ usize = 0;\n    let mut num_prime_counter16: usize = 0;\n    let mut num_prime_counter17:\
    \ usize = 0;\n    let mut num_prime_counter18: usize = 0;\n    let mut num_prime_counter19:\
    \ usize = 0;\n    let mut num_prime_counter20: usize = 0;\n    let mut num_prime_counter21:\
    \ usize = 0;\n    let mut num_prime_counter22: usize = 0;\n    let mut num_prime_counter23:\
    \ usize = 0;\n    let mut num_prime_counter24: usize = 0;\n    let mut num_prime_counter25:\
    \ usize = 0;\n    let mut num_prime_counter26: usize = 0;\n    let mut num_prime_counter27:\
    \ usize = 0;\n    let mut num_prime_counter28: usize = 0;\n    let mut num_prime_counter29:\
    \ usize = 0;\n    let mut num_prime_counter30: usize = 0;\n    let mut num_prime_counter31:\
    \ usize = 0;\n    let mut num_prime_counter32: usize = 0;\n    let mut num_prime_counter33:\
    \ usize = 0;\n    let mut num_prime_counter34: usize = 0;\n    let mut num_prime_counter35:\
    \ usize = 0;\n    let mut num_prime_counter36: usize = 0;\n    let mut num_prime_counter37:\
    \ usize = 0;\n    let mu", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut prime_digits = 0;\n    let mut\
    \ prime_digits_counter: usize = 2;\n    let mut prime_digits_counter2: usize =\
    \ 2;\n    let mut prime_digits_counter3: usize = 2;\n    let mut prime_digits_counter4:\
    \ usize = 2;\n    let mut prime_digits_counter5: usize = 2;\n    let mut prime_digits_counter6:\
    \ usize = 2;\n    let mut prime_digits_counter7: usize = 2;\n    let mut prime_digits_counter8:\
    \ usize = 2;\n    let mut prime_digits_counter9: usize = 2;\n    let mut prime_digits_counter10:\
    \ usize = 2;\n    let mut prime_digits_counter11: usize = 2;\n    let mut prime_digits_counter12:\
    \ usize = 2;\n    let mut prime_digits_counter13: usize = 2;\n    let mut prime_digits_counter14:\
    \ usize = 2;\n    let mut prime_digits_counter15: usize = 2;\n    let mut prime_digits_counter16:\
    \ usize = 2;\n    let mut prime_digits_counter17: usize = 2;\n    let mut prime_digits_counter18:\
    \ usize = 2;\n    let mut prime_digits_counter19: usize = 2;\n    let mut prime_digits_counter20:\
    \ usize = 2;\n    let mut prime_digits_counter21: usize = 2;\n    let mut prime_digits_counter22:\
    \ usize = 2;\n    let mut prime_digits_counter23: usize = 2;\n    let mut prime_digits_counter24:\
    \ usize = 2;\n    let mut prime_digits_counter25: usize = 2;\n    let mut prime_digits_counter26:\
    \ usize = 2;\n    let mut prime_digits_counter27: usize = 2;\n    let mut prime_digits_counter28:\
    \ usize = 2;\n    let mut prime_digits_counter29: usize = 2;\n    let mut prime_digits_counter30:\
    \ usize = 2;\n    let mut prime_digits_counter31: usize = 2;\n    let mut prime_digits_counter32:\
    \ usize = 2;\n    let mut prime_digits_counter33: usize = 2;\n    let mut prime_digits_counter34:\
    \ usize = 2;\n    let mut ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut\
    \ num_prime_prime: Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime_prime_prime_prime_",
  "    let mut nums = num.chars().collect::<Vec<_>>();\n    let mut num_digits = nums.len();\n\
    \    let mut prime_digits = vec![];\n    let mut prime_digits_count = vec![];\n\
    \    let mut prime_digits_count_max = vec![];\n    let mut prime_digits_count_min\
    \ = vec![];\n    let mut prime_digits_count_max_prime = vec![];\n    let mut prime_digits_count_min_prime\
    \ = vec![];\n    let mut prime_digits_count_max_prime_prime = vec![];\n    let\
    \ mut prime_digits_count_min_prime_prime = vec![];\n    let mut prime_digits_count_max_prime_prime_prime\
    \ = vec![];\n    let mut prime_digits_count_min_prime_prime_prime = vec![];\n\
    \    let mut prime_digits_count_max_prime_prime_prime_prime = vec![];\n    let\
    \ mut prime_digits_count_min_prime_prime_prime_prime = vec![];\n    let mut prime_digits_count_max_prime_prime_prime_prime_prime\
    \ = vec![];\n    let mut prime_digits_count_min_prime_prime_prime_prime_prime\
    \ = vec![];\n    let mut prime_digits_count_max_prime_prime_prime_prime_prime_prime\
    \ = vec![];\n    let mut prime_digits_count_min_prime_prime_prime_prime_prime_prime\
    \ = vec![];\n    let mut prime_digits_count_max_prime_prime_prime_prime_prime_prime_prime\
    \ = vec![];\n    let mut prime_digits_count_min_prime_prime_prime_prime_prime_prime_prime\
    \ = vec![];\n    let mut prime_digits_count_max_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = vec![];\n    let mut prime_digits_count_min_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = vec![];\n    let mut prime_digits_count_max_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = vec![];\n    let mut prime_digits_count_min_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = vec![];\n    let mut prime_digits_count_max_prime_prime_prime_prime_prime_",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut count\
    \ = 1;\n    let mut prime: isize = 0;\n    let mut prime_found = false;\n    let\
    \ mut prime_found2 = false;\n    let mut prime_found3 = false;\n    let mut prime_found4\
    \ = false;\n    let mut prime_found5 = false;\n    let mut prime_found6 = false;\n\
    \    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n    let\
    \ mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let mut prime_found11\
    \ = false;\n    let mut prime_found12 = false;\n    let mut prime_found13 = false;\n\
    \    let mut prime_found14 = false;\n    let mut prime_found15 = false;\n    let\
    \ mut prime_found16 = false;\n    let mut prime_found17 = false;\n    let mut\
    \ prime_found18 = false;\n    let mut prime_found19 = false;\n    let mut prime_found20\
    \ = false;\n    let mut prime_found21 = false;\n    let mut prime_found22 = false;\n\
    \    let mut prime_found23 = false;\n    let mut prime_found24 = false;\n    let\
    \ mut prime_found25 = false;\n    let mut prime_found26 = false;\n    let mut\
    \ prime_found27 = false;\n    let mut prime_found28 = false;\n    let mut prime_found29\
    \ = false;\n    let mut prime_found30 = false;\n    let mut prime_found31 = false;\n\
    \    let mut prime_found32 = false;\n    let mut prime_found33 = false;\n    let\
    \ mut prime_found34 = false;\n    let mut prime_found35 = false;\n    let mut\
    \ prime_found36 = false;\n    let mut prime_found37 = false;\n    let mut prime_found38\
    \ = false;\n    let mut prime_found39 = false;\n    let mut prime_found40 = false;\n\
    \    let mut prime_found41 = false;\n    let mut prime_found42 = false;\n    let\
    \ mut prime_found43 = false;\n    let mut prime_found44 = false;\n    let mut\
    \ prime_found45 = false;\n    let mut prime_found46 = false;\n    let mut prime_found47\
    \ = false;\n    let mut prime_found48 = false;\n    let mut prime_found49 = false;\n\
    \    let mut prime_found50 = false;\n    let mut prime_found51 = false;\n    let\
    \ mut prime_found52 = false;\n    let mut ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut count = 1;\n    let mut prime: isize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let mut ", " \
    \   let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<", "    let mut nums = num.chars().collect::<Vec<_>>();\n    let mut nums_copy\
    \ = nums.clone();\n    let mut prime_numbers = vec![];\n    let mut prime_numbers_copy\
    \ = prime_numbers.clone();\n    let mut prime_numbers_counter = vec![];\n    let\
    \ mut prime_numbers_counter_copy = prime_numbers_counter.clone();\n    let mut\
    \ prime_numbers_counter2 = vec![];\n    let mut prime_numbers_counter2_copy =\
    \ prime_numbers_counter2.clone();\n    let mut prime_numbers_counter3 = vec![];\n\
    \    let mut prime_numbers_counter3_copy = prime_numbers_counter3.clone();\n \
    \   let mut prime_numbers_counter4 = vec![];\n    let mut prime_numbers_counter4_copy\
    \ = prime_numbers_counter4.clone();\n    let mut prime_numbers_counter5 = vec![];\n\
    \    let mut prime_numbers_counter5_copy = prime_numbers_counter5.clone();\n \
    \   let mut prime_numbers_counter6 = vec![];\n    let mut prime_numbers_counter6_copy\
    \ = prime_numbers_counter6.clone();\n    let mut prime_numbers_counter7 = vec![];\n\
    \    let mut prime_numbers_counter7_copy = prime_numbers_counter7.clone();\n \
    \   let mut prime_numbers_counter8 = vec![];\n    let mut prime_numbers_counter8_copy\
    \ = prime_numbers_counter8.clone();\n    let mut prime_numbers_counter9 = vec![];\n\
    \    let mut prime_numbers_counter9_copy = prime_numbers_counter9.clone();\n \
    \   let mut prime_numbers_counter10 = vec![];\n    let mut prime_numbers_counter10_copy\
    \ = prime_numbers_counter10.clone();\n    let mut prime_numbers_counter11 = vec![];\n\
    \    let mut prime_numbers_counter11_copy = prime_numbers_counter11.clone();\n\
    \    let mut prime_numbers_counter12 = vec![];\n    let mut prime_numbers_counter12_copy\
    \ = prime_numbers_counter12.clone();\n    let mut prime_numbers_counter13 = vec![];\n\
    \    let mut prime_numbers_counter13_copy = prime_numbers_counter13.clone();\n\
    \    let mut prime_numbers_counter14 = vec![];\n    let mut prime_numbers_counter14_copy\
    \ = prime_numbers_counter14.clone();\n    let mut prime_numbers_counter15 = vec![];\n\
    \    let mut prime_numbers_counter15_copy = prime_", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2:\
    \ usize = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4:\
    \ usize = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6:\
    \ usize = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8:\
    \ usize = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10:\
    \ usize = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n    let mut prime_counter38:\
    \ u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let\
    \ mut prime_count: isize = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count:\
    \ u8 = 0;\n    let mut prime_digit_sum: u8 = 0;\n    let mut prime_digit_product:\
    \ u8 = 0;\n    let mut prime_digit_sum2: u8 = 0;\n    let mut prime_digit_product2:\
    \ u8 = 0;\n    let mut prime_digit_sum3: u8 = 0;\n    let mut prime_digit_product3:\
    \ u8 = 0;\n    let mut prime_digit_sum4: u8 = 0;\n    let mut prime_digit_product4:\
    \ u8 = 0;\n    let mut prime_digit_sum5: u8 = 0;\n    let mut prime_digit_product5:\
    \ u8 = 0;\n    let mut prime_digit_sum6: u8 = 0;\n    let mut prime_digit_product6:\
    \ u8 = 0;\n    let mut prime_digit_sum7: u8 = 0;\n    let mut prime_digit_product7:\
    \ u8 = 0;\n    let mut prime_digit_sum8: u8 = 0;\n    let mut prime_digit_product8:\
    \ u8 = 0;\n    let mut prime_digit_sum9: u8 = 0;\n    let mut prime_digit_product9:\
    \ u8 = 0;\n    let mut prime_digit_sum10: u8 = 0;\n    let mut prime_digit_product10:\
    \ u8 = 0;\n    let mut prime_digit_sum11: u8 = 0;\n    let mut prime_digit_product11:\
    \ u8 = 0;\n    let mut prime_digit_sum12: u8 = 0;\n    let mut prime_digit_product12:\
    \ u8 = 0;\n    let mut prime_digit_sum13: u8 = 0;\n    let mut prime_digit_product13:\
    \ u8 = 0;\n    let mut prime_digit_sum14: u8 = 0;\n    let mut prime_digit_product14:\
    \ u8 = 0;\n    let mut prime_digit_sum15: u8 = 0;\n    let mut prime_digit_product15:\
    \ u8 = 0;\n    let mut prime_digit_sum16: u8 = 0;\n    let mut prime_digit_product16:\
    \ u8 = 0;\n    let mut prime_digit_sum17: u8 = 0;\n    let mut prime_digit_product17:\
    \ u8 = 0;\n    let mut prime_digit_sum18: u8 = 0;\n    let mut prime_digit_product18:\
    \ u8 = 0;\n    let mut prime_digit_sum19: u8 = 0;\n    let mut prime_digit_product19:\
    \ u8 = 0;\n    let mut prime_digit_sum20: u8 = 0;\n    let mut prime_", "    let\
    \ mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter: usize = 0;\n    let mut num_prime_counter2:\
    \ usize = 0;\n    let mut num_prime_counter3: usize = 0;\n    let mut num_prime_counter4:\
    \ usize = 0;\n    let mut num_prime_counter5: usize = 0;\n    let mut num_prime_counter6:\
    \ usize = 0;\n    let mut num_prime_counter7: usize = 0;\n    let mut num_prime_counter8:\
    \ usize = 0;\n    let mut num_prime_counter9: usize = 0;\n    let mut num_prime_counter10:\
    \ usize = 0;\n    let mut num_prime_counter11: usize = 0;\n    let mut num_prime_counter12:\
    \ usize = 0;\n    let mut num_prime_counter13: usize = 0;\n    let mut num_prime_counter14:\
    \ usize = 0;\n    let mut num_prime_counter15: usize = 0;\n    let mut num_prime_counter16:\
    \ usize = 0;\n    let mut num_prime_counter17: usize = 0;\n    let mut num_prime_counter18:\
    \ usize = 0;\n    let mut num_prime_counter19: usize = 0;\n    let mut num_prime_counter20:\
    \ usize = 0;\n    let mut num_prime_counter21: usize = 0;\n    let mut num_prime_counter22:\
    \ usize = 0;\n    let mut num_prime_counter23: usize = 0;\n    let mut num_prime_counter24:\
    \ usize = 0;\n    let mut num_prime_counter25: usize = 0;\n    let mut num_prime_counter26:\
    \ usize = 0;\n    let mut num_prime_counter27: usize = 0;\n    let mut num_prime_counter28:\
    \ usize = 0;\n    let mut num_prime_counter29: usize = 0;\n    let mut num_prime_counter30:\
    \ usize = 0;\n    let mut num_prime_counter31: usize = 0;\n    let mut num_prime_counter32:\
    \ usize = 0;\n    let mut num_prime_counter33: usize = 0;\n    let mut num_prime_counter34:\
    \ usize = 0;\n    let mut num_prime_counter35: usize = 0;\n    let mut num_prime_counter36:\
    \ usize = 0;\n    let mut num_prime_counter37: usize = 0;\n    let mu", "    let\
    \ mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value_count: isize = 0;\n    let mut prime_digit_value_prime:\
    \ isize = 0;\n    let mut prime_digit_value_prime_count: isize = 0;\n    let mut\
    \ prime_digit_value_prime_digit: u8 = 0;\n    let mut prime_digit_value_prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_value_prime_digit_index: isize = 0;\n  \
    \  let mut prime_digit_value_prime_digit_value: u8 = 0;\n    let mut prime_digit_value_prime_digit_value_count:\
    \ isize = 0;\n    let mut prime_digit_value_prime_digit_value_prime: isize = 0;\n\
    \    let mut prime_digit_value_prime_digit_value_prime_count: isize = 0;\n   \
    \ let mut prime_digit_value_prime_digit_value_prime_digit: u8 = 0;\n    let mut\
    \ prime_digit_value_prime_digit_value_prime_digit_count: isize = 0;\n    let mut\
    \ prime_digit_value_prime_digit_value_prime_digit_index: isize = 0;\n    let mut\
    \ prime_digit_value_prime_digit_value_prime_digit_value: u8 = 0;\n    let mut\
    \ prime_digit_value_prime_digit_value_prime_digit_value_count: isize = 0;\n  \
    \  let mut prime_digit_value_prime_digit_value_prime_digit_value_prime: isize\
    \ = 0;\n    let mut prime_digit_value_prime_digit_value_prime_digit_value_prime_count:\
    \ isize = 0;\n    let mut prime_digit_value_prime_digit_value_prime_digit_value_prime_digit:\
    \ u8 = 0;\n    let mut prime_digit_value_prime_digit_value_prime_digit_value_prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_value_prime_digit_value_prime_digit_value_prime_digit_index:\
    \ isize = 0;\n    let mut prime_digit_value_prime_digit_value_prime_digit_value_prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value_prime_digit_value_prime_digit_value_prime_digit_value_count:\
    \ isize = 0;\n    let mut prime_digit_value_prime_digit_value_prime_digit_value_prime_digit_value_prime:\
    \ isize = 0;\n    let mut prime_digit_value_prime_digit_value_prime_digit_value_prime_",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter2: Vec<u8> = vec![0, 0, 0, 0,\
    \ 0, 0, 0, 0];\n    let mut prime_counter3: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter4: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n \
    \   let mut prime_counter5: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut\
    \ prime_counter6: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter7:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter8: Vec<u8>\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter9: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter10: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_counter11: Vec<u8> = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0];\n    let mut prime_counter12: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter13: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n\
    \    let mut prime_counter14: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let\
    \ mut prime_counter15: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter16:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter17: Vec<u8>\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter18: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter19: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_counter20: Vec<u8> = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0];\n    let mut prime_counter21: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter22: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n\
    \    let mut prime_counter23: Vec<u8> = ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|x| x % 2 == 0).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|x| x % 3 == 0).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|x| x % 5 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x|\
    \ x % 7 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x %\
    \ 11 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 13\
    \ == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 17 ==\
    \ 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 19 == 0).collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|x| x % 23 == 0).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().filter(|x| x % 29 == 0).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|x| x % 31 == 0).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|x| x % 37 == 0).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|x| x % 41 == 0).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|x| x % 43 == 0).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().filter(|x| x % 47 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x|\
    \ x % 53 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x\
    \ % 59 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x %\
    \ 61 == 0).collect();\n    let mut ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3];\n    let mut digit: Vec<u8> = vec![2,\
    \ 3];\n    let mut digits: Vec<u8> = vec![2, 3];\n    let mut prime_digits: Vec<u8>\
    \ = vec![2, 3];\n    let mut prime_digits_count: usize = 0;\n    let mut prime_digits_count_max:\
    \ usize = 3;\n    let mut prime_digits_count_min: usize = 2;\n    let mut prime_digits_count_min2:\
    \ usize = 2;\n    let mut prime_digits_count_min3: usize = 2;\n    let mut prime_digits_count_min4:\
    \ usize = 2;\n    let mut prime_digits_count_min5: usize = 2;\n    let mut prime_digits_count_min6:\
    \ usize = 2;\n    let mut prime_digits_count_min7: usize = 2;\n    let mut prime_digits_count_min8:\
    \ usize = 2;\n    let mut prime_digits_count_min9: usize = 2;\n    let mut prime_digits_count_min10:\
    \ usize = 2;\n    let mut prime_digits_count_min11: usize = 2;\n    let mut prime_digits_count_min12:\
    \ usize = 2;\n    let mut prime_digits_count_min13: usize = 2;\n    let mut prime_digits_count_min14:\
    \ usize = 2;\n    let mut prime_digits_count_min15: usize = 2;\n    let mut prime_digits_count_min16:\
    \ usize = 2;\n    let mut prime_digits_count_min17: usize = 2;\n    let mut prime_digits_count_min18:\
    \ usize = 2;\n    let mut prime_digits_count_min19: usize = 2;\n    let mut prime_digits_count_min20:\
    \ usize = 2;\n    let mut prime_digits_count_min21: usize = 2;\n    let mut prime_digits_count_min22:\
    \ usize = 2;\n    let mut prime_digits_count_min23: usize = 2;\n    let mut prime_digits_count_min24:\
    \ usize = 2;\n    let mut prime_digits_count_min25: usize = 2;\n    let mut prime_digits_count_min26:\
    \ usize = 2;\n    let mut prime_digits_count_min27: usize = 2;\n    let ", " \
    \   let mut num: isize = 0;\n    let mut digits: Vec<&str> = num.chars().collect();\n\
    \    let mut prime: Vec<&str> = vec![];\n    let mut prime_counter: Vec<&str>\
    \ = vec![];\n    let mut prime_counter2: Vec<&str> = vec![];\n    let mut prime_counter3:\
    \ Vec<&str> = vec![];\n    let mut prime_counter4: Vec<&str> = vec![];\n    let\
    \ mut prime_counter5: Vec<&str> = vec![];\n    let mut prime_counter6: Vec<&str>\
    \ = vec![];\n    let mut prime_counter7: Vec<&str> = vec![];\n    let mut prime_counter8:\
    \ Vec<&str> = vec![];\n    let mut prime_counter9: Vec<&str> = vec![];\n    let\
    \ mut prime_counter10: Vec<&str> = vec![];\n    let mut prime_counter11: Vec<&str>\
    \ = vec![];\n    let mut prime_counter12: Vec<&str> = vec![];\n    let mut prime_counter13:\
    \ Vec<&str> = vec![];\n    let mut prime_counter14: Vec<&str> = vec![];\n    let\
    \ mut prime_counter15: Vec<&str> = vec![];\n    let mut prime_counter16: Vec<&str>\
    \ = vec![];\n    let mut prime_counter17: Vec<&str> = vec![];\n    let mut prime_counter18:\
    \ Vec<&str> = vec![];\n    let mut prime_counter19: Vec<&str> = vec![];\n    let\
    \ mut prime_counter20: Vec<&str> = vec![];\n    let mut prime_counter21: Vec<&str>\
    \ = vec![];\n    let mut prime_counter22: Vec<&str> = vec![];\n    let mut prime_counter23:\
    \ Vec<&str> = vec![];\n    let mut prime_counter24: Vec<&str> = vec![];\n    let\
    \ mut prime_counter25: Vec<&str> = vec![];\n    let mut prime_counter26: Vec<&str>\
    \ = vec![];\n    let mut prime_counter27", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut primes = vec![false; 26];\n    let mut primes_count = vec![0; 26];\n\
    \    let mut primes_count_index = vec![0; 26];\n    let mut primes_count_index2\
    \ = vec![0; 26];\n    let mut primes_count_index3 = vec![0; 26];\n    let mut\
    \ primes_count_index4 = vec![0; 26];\n    let mut primes_count_index5 = vec![0;\
    \ 26];\n    let mut primes_count_index6 = vec![0; 26];\n    let mut primes_count_index7\
    \ = vec![0; 26];\n    let mut primes_count_index8 = vec![0; 26];\n    let mut\
    \ primes_count_index9 = vec![0; 26];\n    let mut primes_count_index10 = vec![0;\
    \ 26];\n    let mut primes_count_index11 = vec![0; 26];\n    let mut primes_count_index12\
    \ = vec![0; 26];\n    let mut primes_count_index13 = vec![0; 26];\n    let mut\
    \ primes_count_index14 = vec![0; 26];\n    let mut primes_count_index15 = vec![0;\
    \ 26];\n    let mut primes_count_index16 = vec![0; 26];\n    let mut primes_count_index17\
    \ = vec![0; 26];\n    let mut primes_count_index18 = vec![0; 26];\n    let mut\
    \ primes_count_index19 = vec![0; 26];\n    let mut primes_count_index20 = vec![0;\
    \ 26];\n    let mut primes_count_index21 = vec![0; 26];\n    let mut primes_count_index22\
    \ = vec![0; 26];\n    let mut primes_count_index23 = vec![0; 26];\n    let mut\
    \ primes_count_index24 = vec![0; 26];\n    let mut primes_count_index25 = vec![0;\
    \ 26];\n    let mut primes_count_index26 = vec![0; 26];\n    let mut primes_count_index27\
    \ = vec![0; 26];\n    let mut primes_count_index28 = vec![0; 26];\n    let mut\
    \ primes_count_index29 = vec![0; 26];\n    let mut primes_count_index30 = vec![0;\
    \ 26];\n    let mut primes_count_index31 = vec![0; 26];\n    let mut primes_count_index32\
    \ = vec![0; 26];\n    let mut prime", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter: usize\
    \ = 0;\n    for &c in num {\n        if prime == vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n\
    \            counter = counter + 1;\n        }\n        if prime == vec![2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97] {\n            counter = counter + 1;\n        }\n        if prime\
    \ == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97] {\n            counter = counter + 1;\n        }\n\
    \        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter = counter\
    \ + 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ = counter + 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n\
    \            counter = counter + 1;\n        }\n        if prime == vec![2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97] {\n            counter = counter + 1;\n        }\n        if prime\
    \ == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97] {\n            counter = counter + 1;\n        }\n\
    \        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter = counter\
    \ + 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_ow", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit_count: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mu", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime: isize = 0;\n    let mut prime_found = false;\n    let mut\
    \ prime_found2 = false;\n    let mut prime_found3 = false;\n    let mut prime_found4\
    \ = false;\n    let mut prime_found5 = false;\n    let mut prime_found6 = false;\n\
    \    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n    let\
    \ mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let mut prime_found11\
    \ = false;\n    let mut prime_found12 = false;\n    let mut prime_found13 = false;\n\
    \    let mut prime_found14 = false;\n    let mut prime_found15 = false;\n    let\
    \ mut prime_found16 = false;\n    let mut prime_found17 = false;\n    let mut\
    \ prime_found18 = false;\n    let mut prime_found19 = false;\n    let mut prime_found20\
    \ = false;\n    let mut prime_found21 = false;\n    let mut prime_found22 = false;\n\
    \    let mut prime_found23 = false;\n    let mut prime_found24 = false;\n    let\
    \ mut prime_found25 = false;\n    let mut prime_found26 = false;\n    let mut\
    \ prime_found27 = false;\n    let mut prime_found28 = false;\n    let mut prime_found29\
    \ = false;\n    let mut prime_found30 = false;\n    let mut prime_found31 = false;\n\
    \    let mut prime_found32 = false;\n    let mut prime_found33 = false;\n    let\
    \ mut prime_found34 = false;\n    let mut prime_found35 = false;\n    let mut\
    \ prime_found36 = false;\n    let mut prime_found37 = false;\n    let mut prime_found38\
    \ = false;\n    let mut prime_found39 = false;\n    let mut prime_found40 = false;\n\
    \    let mut prime_found41 = false;\n    let mut prime_found42 = false;\n    let\
    \ mut prime_found43 = false;\n    let mut prime_found44 = false;\n    let mut\
    \ prime_found45 = false;\n    let mut prime_found46 = false;\n    let mut prime_found47\
    \ = false;\n    let mut prime_found48 = false;\n    let mut prime_found49 = false;\n\
    \    let mut prime_found50 = false;\n    let mut prime_found51 = false;\n    let\
    \ mut prime_found52 = false;\n    let mut prime_found53 = false;", "    let mut\
    \ num: Vec<u8> = num.to_string().chars().collect();\n    let mut num_str: String\
    \ = String::new();\n    let mut num_str2: String = String::new();\n    let mut\
    \ num_str3: String = String::new();\n    let mut num_str4: String = String::new();\n\
    \    let mut num_str5: String = String::new();\n    let mut num_str6: String =\
    \ String::new();\n    let mut num_str7: String = String::new();\n    let mut num_str8:\
    \ String = String::new();\n    let mut num_str9: String = String::new();\n   \
    \ let mut num_str10: String = String::new();\n    let mut num_str11: String =\
    \ String::new();\n    let mut num_str12: String = String::new();\n    let mut\
    \ num_str13: String = String::new();\n    let mut num_str14: String = String::new();\n\
    \    let mut num_str15: String = String::new();\n    let mut num_str16: String\
    \ = String::new();\n    let mut num_str17: String = String::new();\n    let mut\
    \ num_str18: String = String::new();\n    let mut num_str19: String = String::new();\n\
    \    let mut num_str20: String = String::new();\n    let mut num_str21: String\
    \ = String::new();\n    let mut num_str22: String = String::new();\n    let mut\
    \ num_str23: String = String::new();\n    let mut num_str24: String = String::new();\n\
    \    let mut num_str25: String = String::new();\n    let mut num_str26: String\
    \ = String::new();\n    let mut num_str27: String = String::new();\n    let mut\
    \ num_str28: String = String::new();\n    let mut num_str29: String = String::new();\n\
    \    let mut num_str30: String = String::new();\n    let mut num_str31: String\
    \ = String::new();\n    let mut num_str32: String = String::new();\n    let mut\
    \ num_str33: String = String::new();\n    let mut num_str34: String = String::new();\n\
    \    let mut num_str35: String = String::new();\n    let mut num_str36: String\
    \ = String::new();\n    let mut num_str37: String = String::new();\n    let mut\
    \ num_str38: String = String::new();\n    let mut num_", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut num_digits = num.len();\n\
    \    let mut num_primes = 0;\n    let mut num_primes_digits = 0;\n    let mut\
    \ num_primes_digits_primes = 0;\n    let mut num_primes_digits_primes_primes =\
    \ 0;\n    let mut num_primes_digits_primes_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes = 0;\n\
    \    let mut num_primes_digits_primes_primes_primes_primes_primes_primes = 0;\n\
    \    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digit", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_counter:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter_index: Vec<u8>\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter_index2: Vec<u8> =\
    \ vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter_index3: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter_index4: Vec<u8> = vec![0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n    let mut prime_counter_index5: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_counter_index6: Vec<u8> = vec![0, 0, 0, 0,\
    \ 0, 0, 0, 0];\n    let mut prime_counter_index7: Vec<u8> = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0];\n    let mut prime_counter_index8: Vec<u8> = vec![0, 0, 0, 0, 0, 0,\
    \ 0, 0];\n    let mut prime_counter_index9: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter_index10: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter_index11: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter_index12: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter_index13: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter_index14: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter_index15: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter_index16: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter_index17: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter_index18: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter_index19: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter_index20: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter_index21: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter_index22: Vec<u8> = vec![0, 0, 0, 0, ", "    let\
    \ mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_digits = vec![];\n    let mut prime_digit_counter = 0;\n  \
    \  let mut prime_digit_counter2 = 0;\n    let mut prime_digit_counter3 = 0;\n\
    \    let mut prime_digit_counter4 = 0;\n    let mut prime_digit_counter5 = 0;\n\
    \    let mut prime_digit_counter6 = 0;\n    let mut prime_digit_counter7 = 0;\n\
    \    let mut prime_digit_counter8 = 0;\n    let mut prime_digit_counter9 = 0;\n\
    \    let mut prime_digit_counter10 = 0;\n    let mut prime_digit_counter11 = 0;\n\
    \    let mut prime_digit_counter12 = 0;\n    let mut prime_digit_counter13 = 0;\n\
    \    let mut prime_digit_counter14 = 0;\n    let mut prime_digit_counter15 = 0;\n\
    \    let mut prime_digit_counter16 = 0;\n    let mut prime_digit_counter17 = 0;\n\
    \    let mut prime_digit_counter18 = 0;\n    let mut prime_digit_counter19 = 0;\n\
    \    let mut prime_digit_counter20 = 0;\n    let mut prime_digit_counter21 = 0;\n\
    \    let mut prime_digit_counter22 = 0;\n    let mut prime_digit_counter23 = 0;\n\
    \    let mut prime_digit_counter24 = 0;\n    let mut prime_digit_counter25 = 0;\n\
    \    let mut prime_digit_counter26 = 0;\n    let mut prime_digit_counter27 = 0;\n\
    \    let mut prime_digit_counter28 = 0;\n    let mut prime_digit_counter29 = 0;\n\
    \    let mut prime_digit_counter30 = 0;\n    let mut prime_digit_counter31 = 0;\n\
    \    let mut prime_digit_counter32 = 0;\n    let mut prime_digit_counter33 = 0;\n\
    \    let mut prime_digit_counter34 = 0;\n    let mut prime_digit_counter35 = 0;\n\
    \    let mut prime_digit_counter36 = 0;\n    let mut prime_digit_counter37 = 0;\n\
    \    let mut prime_digit_counter38 = 0;\n    let mut prime_digit_counter39 = 0;\n\
    \    let mut prime_digit_counter40 = 0;\n    let mut prime_digit_counter41 = 0;\n\
    \    let mut prime_digit_counter42 = 0;\n    let mut prime_digit_counter43 = 0;\n\
    \    let mut prime_digit_counter44 = 0;\n    let mut prime_digit_counter45 = 0;\n\
    \    let mut prime_digit_counter46 = 0;\n    let mut prime_digit_counter47 = 0;\n\
    \    let mut prime_digit_counter48 = 0;\n    let mut prime_digit_counter", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ count = 1;\n    let mut prime: isize = 2;\n    let mut prime_found = false;\n\
    \    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n    let\
    \ mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let mut prime_found6\
    \ = false;\n    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n\
    \    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let\
    \ mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let mut\
    \ prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut prime_found15\
    \ = false;\n    let mut prime_found16 = false;\n    let mut prime_found17 = false;\n\
    \    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n    let\
    \ mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let mut\
    \ prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut prime_found24\
    \ = false;\n    let mut prime_found25 = false;\n    let mut prime_found26 = false;\n\
    \    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n    let\
    \ mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let mut\
    \ prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut prime_found33\
    \ = false;\n    let mut prime_found34 = false;\n    let mut prime_found35 = false;\n\
    \    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n    let\
    \ mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let mut\
    \ prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut prime_found42\
    \ = false;\n    let mut prime_found43 = false;\n    let mut prime_found44 = false;\n\
    \    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n    let\
    \ mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let mut\
    \ prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut prime_found51\
    \ = false;\n    let mut prime_found52 = false;\n    let mut ", "    let mut num:\
    \ isize = 0;\n    let mut num_str: String = num.to_string();\n    let mut num_str:\
    \ Vec<&str> = num_str.chars().collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num_str: Vec<&str> = num_str.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    for i in num_str.iter() {\n        let\
    \ mut num_str: Vec<&str> = num_str.iter().filter(|&x| x >= i && x <= 'f').collect();\n\
    \        num_str.iter().filter(|&x| x >= '0' && x <= '9').count() + num_str.iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').count() + num_str.iter().filter(|&x| x >= 'a' && x <=\
    \ 'f').count()\n    }\n    return num_str.iter().filter(|&x| x >= '0' && x <=\
    \ '9').count() + num_str.iter().filter(|&x| x >= 'A' && x <= 'F').count() + num_str.iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').count()", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_count: isize = 0;\n    let mut prime_digit: u8 = 0;\n    let\
    \ mut prime_digit_count: isize = 0;\n    let mut prime_digit_index: isize = 0;\n\
    \    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value_index:\
    \ isize = 0;\n    let mut prime_digit_value_count: isize = 0;\n    let mut prime_digit_value_digit:\
    \ u8 = 0;\n    let mut prime_digit_value_digit_count: isize = 0;\n    let mut\
    \ prime_digit_value_digit_index: isize = 0;\n    let mut prime_digit_value_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value_digit_value_index: isize = 0;\n    let\
    \ mut prime_digit_value_digit_value_count: isize = 0;\n    let mut prime_digit_value_digit_value_digit:\
    \ u8 = 0;\n    let mut prime_digit_value_digit_value_digit_count: isize = 0;\n\
    \    let mut prime_digit_value_digit_value_digit_index: isize = 0;\n    let mut\
    \ prime_digit_value_digit_value_digit_value: u8 = 0;\n    let mut prime_digit_value_digit_value_digit_value_index:\
    \ isize = 0;\n    let mut prime_digit_value_digit_value_digit_value_count: isize\
    \ = 0;\n    let mut prime_digit_value_digit_value_digit_value_digit: u8 = 0;\n\
    \    let mut prime_digit_value_digit_value_digit_value_digit_count: isize = 0;\n\
    \    let mut prime_digit_value_digit_value_digit_value_digit_index: isize = 0;\n\
    \    let mut prime_digit_value_digit_value_digit_value_digit_value: u8 = 0;\n\
    \    let mut prime_digit_value_digit_value_digit_value_digit_value_index: isize\
    \ = 0;\n    let mut prime_digit_value_digit_value_digit_value_digit_value_count:\
    \ isize = 0;\n    let mut prime_digit_value_digit_value_digit_value_digit_value_digit:\
    \ u8 = 0;\n    let mut prime_digit_value_digit_value_digit_value_digit_value_digit_count:\
    \ isize = 0;\n    let mut prime_digit_value_digit_value_digit_value_digit_value_digit_index:\
    \ isize = 0;\n    let mut prime_digit_value_digit_value_digit_value_digit_value_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value_digit_value_digit_value_digit_value_digit_value_index:\
    \ isize = 0;\n    let mut prime_digit_value_digit_value_digit_value_digit_value_digit_value_count:\
    \ isize = 0;\n    let mut prime_digit_value_digit_value_digit_value_digit_value_digit_value_digit:\
    \ u8 = 0;\n    let mut prime_digit_value_digit_", "    let mut num: Vec<u8> =\
    \ num.to_string().chars().collect();\n    let mut num_digits = num.len();\n  \
    \  let mut num_primes = 0;\n    let mut num_primes_digits = 0;\n    let mut num_primes_digits_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes = 0;\n    let\
    \ mut num_primes_digits_primes_primes_primes_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime: isize = 0;\n    let mut prime_found = false;\n    let mut\
    \ prime_found2 = false;\n    let mut prime_found3 = false;\n    let mut prime_found4\
    \ = false;\n    let mut prime_found5 = false;\n    let mut prime_found6 = false;\n\
    \    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n    let\
    \ mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let mut prime_found11\
    \ = false;\n    let mut prime_found12 = false;\n    let mut prime_found13 = false;\n\
    \    let mut prime_found14 = false;\n    let mut prime_found15 = false;\n    let\
    \ mut prime_found16 = false;\n    let mut prime_found17 = false;\n    let mut\
    \ prime_found18 = false;\n    let mut prime_found19 = false;\n    let mut prime_found20\
    \ = false;\n    let mut prime_found21 = false;\n    let mut prime_found22 = false;\n\
    \    let mut prime_found23 = false;\n    let mut prime_found24 = false;\n    let\
    \ mut prime_found25 = false;\n    let mut prime_found26 = false;\n    let mut\
    \ prime_found27 = false;\n    let mut prime_found28 = false;\n    let mut prime_found29\
    \ = false;\n    let mut prime_found30 = false;\n    let mut prime_found31 = false;\n\
    \    let mut prime_found32 = false;\n    let mut prime_found33 = false;\n    let\
    \ mut prime_found34 = false;\n    let mut prime_found35 = false;\n    let mut\
    \ prime_found36 = false;\n    let mut prime_found37 = false;\n    let mut prime_found38\
    \ = false;\n    let mut prime_found39 = false;\n    let mut prime_found40 = false;\n\
    \    let mut prime_found41 = false;\n    let mut prime_found42 = false;\n    let\
    \ mut prime_found43 = false;\n    let mut prime_found44 = false;\n    let mut\
    \ prime_found45 = false;\n    let mut prime_found46 = false;\n    let mut prime_found47\
    \ = false;\n    let mut prime_found48 = false;\n    let mut prime_found49 = false;\n\
    \    let mut prime_found50 = false;\n    let mut prime_found51 = false;\n    let\
    \ mut prime_found52 = false;\n    let mut prime_found53 = false;", "    let mut\
    \ num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime: isize = 2;\n    let mut prime_found = false;\n\
    \    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n    let\
    \ mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let mut prime_found6\
    \ = false;\n    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n\
    \    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let\
    \ mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let mut\
    \ prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut prime_found15\
    \ = false;\n    let mut prime_found16 = false;\n    let mut prime_found17 = false;\n\
    \    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n    let\
    \ mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let mut\
    \ prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut prime_found24\
    \ = false;\n    let mut prime_found25 = false;\n    let mut prime_found26 = false;\n\
    \    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n    let\
    \ mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let mut\
    \ prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut prime_found33\
    \ = false;\n    let mut prime_found34 = false;\n    let mut prime_found35 = false;\n\
    \    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n    let\
    \ mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let mut\
    \ prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut prime_found42\
    \ = false;\n    let mut prime_found43 = false;\n    let mut prime_found44 = false;\n\
    \    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n    let\
    \ mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let mut\
    \ prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut prime_found51\
    \ = false;\n    let mut prime_found52 = false;", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count = 1;\n    let mut prime: Vec<u8> = vec![];\n    for i in 0..num.len()\
    \ {\n        if num[i] == b'a' {\n            prime = vec![b'a', b'b', b'c', b'd',\
    \ b'e', b'f'];\n        }\n        if num[i] == b'b' {\n            prime = vec![b'b',\
    \ b'c', b'd', b'e', b'f'];\n        }\n        if num[i] == b'c' {\n         \
    \   prime = vec![b'c', b'd', b'e', b'f'];\n        }\n        if num[i] == b'd'\
    \ {\n            prime = vec![b'd', b'e', b'f'];\n        }\n        if num[i]\
    \ == b'e' {\n            prime = vec![b'e', b'f'];\n        }\n        if num[i]\
    \ == b'f' {\n            prime = vec![b'f'];\n        }\n        if num[i] ==\
    \ b'0' {\n            prime = vec![b'0'];\n        }\n        if num[i] == b'1'\
    \ {\n            prime = vec![b'1'];\n        }\n        if num[i] == b'2' {\n\
    \            prime = vec![b'2'];\n        }\n        if num[i] == b'3' {\n   \
    \         prime = vec![b'3'];\n        }\n        if num[i] == b'4' {\n      \
    \      prime = vec![b'4'];\n        }\n        if num[i] == b'5' {\n         \
    \   prime = vec![b'5'];\n        }\n        if num[i] == b'6' {\n            prime\
    \ = vec![b'6'];\n        }\n        if num[i] == b'7' {\n            prime = vec![b'7'];\n\
    \        }\n        if num[i] == b'8' {\n            prime = vec![b'8'];\n   \
    \     }\n        if num[i] == b'9' {\n            prime = vec![b'9'];\n      \
    \  }\n        if num[i] == b'A' {\n            prime = vec![b'A'];\n        }\n\
    \        if num[i] == b'B' {\n            prime = vec![b'B'];\n        }\n   \
    \     if num[i] == b'C' {\n            prime = vec![b'C'];\n        }\n      \
    \  if num[i] == b'D' {\n            prime = vec![b'D'];\n        }\n        if\
    \ num[i] == b'E' {\n            prime = vec![b'E'];\n        }\n        if num[i]\
    \ == b'F' {\n            prime = vec![b'F'];\n        }\n    }\n    for i in 0..num.len()\
    \ {\n        if num[i] == b'a' {\n            ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_len = prime.len();\n   \
    \ let mut prime_num = prime_len;\n    let mut prime_num_prime = 0;\n    let mut\
    \ prime_num_prime_prime = 0;\n    let mut prime_num_prime_prime_prime = 0;\n \
    \   let mut prime_num_prime_prime_prime_prime = 0;\n    let mut prime_num_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_num_prime_prime_prime_prime_prime_prime = 0;\n    let\
    \ mut prime_num_prime_prime_prime_prime_prime_prime_prime = 0;\n    let mut prime_num_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_num_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_num_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_num_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter: usize = 0;\n    for &c\
    \ in num {\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter +=\
    \ 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ += 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ += 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ += 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ += 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ += 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ += 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ += 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ += 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 7", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![];\n    let mut num_prime_counter: Vec<u8>\
    \ = vec![];\n    let mut num_prime_counter2: Vec<u8> = vec![];\n    let mut num_prime_counter3:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter4: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter5: Vec<u8> = vec![];\n    let mut num_prime_counter6: Vec<u8>\
    \ = vec![];\n    let mut num_prime_counter7: Vec<u8> = vec![];\n    let mut num_prime_counter8:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter9: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter10: Vec<u8> = vec![];\n    let mut num_prime_counter11:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter12: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter13: Vec<u8> = vec![];\n    let mut num_prime_counter14:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter15: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter16: Vec<u8> = vec![];\n    let mut num_prime_counter17:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter18: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter19: Vec<u8> = vec![];\n    let mut num_prime_counter20:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter21: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter22: Vec<u8> = vec![];\n    let mut num_prime_counter23:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter24: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter25: Vec<u8> = vec![];\n    let mut num_prime_counter26:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter27: Vec<u8> = vec", "    let\
    \ mut num: isize = 0;\n    let mut num_str: String = num.to_string();\n    let\
    \ mut num_str: Vec<&str> = num_str.chars().collect();\n    let mut num_str: Vec<&str>\
    \ = num_str.iter().filter(|&x| x.is_digit()).collect();\n    let mut num_str:\
    \ Vec<&str> = num_str.iter().filter(|&x| x.is_ascii_uppercase()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().filter(|&x| x.is_ascii_lowercase()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().filter(|&x| x.is_ascii_uppercase()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().filter(|&x| x.is_ascii_lowercase()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().filter(|&x| x.is_ascii_uppercase()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().filter(|&x| x.is_ascii_lowercase()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().filter(|&x| x.is_ascii_uppercase()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().filter(|&x| x.is_ascii_lowercase()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().filter(|&x| x.is_ascii_uppercase()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().filter(|&x| x.is_ascii_lowercase()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().filter(|&x| x.is_ascii_uppercase()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().filter(|&x| x.is_ascii_lowercase()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().filter(|&x| x.is_ascii_uppercase()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().filter(|&x| x.is_ascii_lowercase()).collect();\n\
    \    let mut num_str: Vec<&str> = num_str.iter().filter(|&x| x.is_ascii_uppercase()).collect();\n\
    \    let mut num_str: Vec<&", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut num_primes = 0;\n    let mut\
    \ num_primes_found = 0;\n    let mut num_primes_found2 = 0;\n    let mut num_primes_found3\
    \ = 0;\n    let mut num_primes_found4 = 0;\n    let mut num_primes_found5 = 0;\n\
    \    let mut num_primes_found6 = 0;\n    let mut num_primes_found7 = 0;\n    let\
    \ mut num_primes_found8 = 0;\n    let mut num_primes_found9 = 0;\n    let mut\
    \ num_primes_found10 = 0;\n    let mut num_primes_found11 = 0;\n    let mut num_primes_found12\
    \ = 0;\n    let mut num_primes_found13 = 0;\n    let mut num_primes_found14 =\
    \ 0;\n    let mut num_primes_found15 = 0;\n    let mut num_primes_found16 = 0;\n\
    \    let mut num_primes_found17 = 0;\n    let mut num_primes_found18 = 0;\n  \
    \  let mut num_primes_found19 = 0;\n    let mut num_primes_found20 = 0;\n    let\
    \ mut num_primes_found21 = 0;\n    let mut num_primes_found22 = 0;\n    let mut\
    \ num_primes_found23 = 0;\n    let mut num_primes_found24 = 0;\n    let mut num_primes_found25\
    \ = 0;\n    let mut num_primes_found26 = 0;\n    let mut num_primes_found27 =\
    \ 0;\n    let mut num_primes_found28 = 0;\n    let mut num_primes_found29 = 0;\n\
    \    let mut num_primes_found30 = 0;\n    let mut num_primes_found31 = 0;\n  \
    \  let mut num_primes_found32 = 0;\n    let mut num_primes_found33 = 0;\n    let\
    \ mut num_primes_found34 = 0;\n    let mut num_primes_found35 = 0;\n    let mut\
    \ num_primes_found36 = 0;\n    let mut num_primes_found37 = 0;\n    let mut num_primes_found38\
    \ = 0;\n    let mut num_primes_found39 = 0;\n    let mut num_primes_found40 =\
    \ 0;\n    let mut num_primes_found41 = 0;\n    let mut num_primes_found42 = 0;\n\
    \    let mut num_primes_found43 = 0;\n    let mut num_primes_found44 = 0;\n  \
    \  let mut num_primes_found45 = 0;\n    let mut num_primes_found46 = 0;\n    let\
    \ mut num_primes_found47 = 0;\n    let mut num_primes_found48 = 0;\n", "    let\
    \ mut num: isize = 0;\n    let mut digits: Vec<usize> = num.chars().collect();\n\
    \    let mut prime: Vec<usize> = vec![2, 3];\n    let mut prime_found = false;\n\
    \    for d in digits {\n        if prime_found {\n            break;\n       \
    \ }\n        if d == b'A' || d == b'B' || d == b'C' || d == b'D' || d == b'E'\
    \ || d == b'F' {\n            continue;\n        }\n        prime_found = true;\n\
    \        prime.push(d as usize);\n    }\n    for d in prime {\n        if num.chars().any(|c|\
    \ c == d) {\n            prime_found = false;\n            break;\n        }\n\
    \    }\n    if prime_found {\n        return num.chars().count() as isize;\n \
    \   }\n    return -1;", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: u", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut prime_digits = vec![false; 11];\n\
    \    let mut prime_counter = 0;\n    let mut prime_counter2 = 0;\n    let mut\
    \ prime_counter3 = 0;\n    let mut prime_counter4 = 0;\n    let mut prime_counter5\
    \ = 0;\n    let mut prime_counter6 = 0;\n    let mut prime_counter7 = 0;\n   \
    \ let mut prime_counter8 = 0;\n    let mut prime_counter9 = 0;\n    let mut prime_counter10\
    \ = 0;\n    let mut prime_counter11 = 0;\n    let mut prime_counter12 = 0;\n \
    \   let mut prime_counter13 = 0;\n    let mut prime_counter14 = 0;\n    let mut\
    \ prime_counter15 = 0;\n    let mut prime_counter16 = 0;\n    let mut prime_counter17\
    \ = 0;\n    let mut prime_counter18 = 0;\n    let mut prime_counter19 = 0;\n \
    \   let mut prime_counter20 = 0;\n    let mut prime_counter21 = 0;\n    let mut\
    \ prime_counter22 = 0;\n    let mut prime_counter23 = 0;\n    let mut prime_counter24\
    \ = 0;\n    let mut prime_counter25 = 0;\n    let mut prime_counter26 = 0;\n \
    \   let mut prime_counter27 = 0;\n    let mut prime_counter28 = 0;\n    let mut\
    \ prime_counter29 = 0;\n    let mut prime_counter30 = 0;\n    let mut prime_counter31\
    \ = 0;\n    let mut prime_counter32 = 0;\n    let mut prime_counter33 = 0;\n \
    \   let mut prime_counter34 = 0;\n    let mut prime_counter35 = 0;\n    let mut\
    \ prime_counter36 = 0;\n    let mut prime_counter37 = 0;\n    let mut prime_counter38\
    \ = 0;\n    let mut prime_counter39 = 0;\n    let mut prime_counter40 = 0;\n \
    \   let mut prime_counter41 = 0;\n    let mut prime_counter42 = 0;\n    let mut\
    \ prime_counter43 = 0;\n    let mut prime_counter44 = 0;\n    let mut prime_counter45\
    \ = 0;\n    let mut prime_counter46 = 0;\n    let mut prime_counter47 = 0;\n \
    \   let mut prime_counter48 = 0;\n    let mut prime_counter49 = 0;\n    let mut\
    \ prime_counter50 = 0;\n    let mut prime_counter51 = 0;\n    let mut prime_counter52\
    \ = 0;\n    let mut prime_", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count = 1;\n    let mut prime: isize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let mut ", " \
    \   let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n   \
    \ let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.in", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime: isize = 2;\n    let mut digit: u8 = 0;\n    while\
    \ num.len() > 0 {\n        digit = num.chars().next().unwrap();\n        prime_count\
    \ = prime_count + digit as isize;\n        if prime == 2 {\n            if prime_count\
    \ == 3 {\n                prime_count = 0;\n                prime = 3;\n     \
    \       }\n            else {\n                prime_count = 0;\n            \
    \    prime = 2;\n            }\n        }\n        else {\n            if prime\
    \ == 3 {\n                prime_count = 0;\n                prime = 3;\n     \
    \       }\n            else {\n                prime_count = 0;\n            \
    \    prime = 2;\n            }\n        }\n        num = num.chars().skip(1).collect();\n\
    \    }\n    prime_count", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut num_primes = 0;\n    let mut\
    \ num_primes_digits = 0;\n    let mut num_primes_digits_sum = 0;\n    let mut\
    \ num_primes_digits_product = 1;\n    let mut num_primes_digits_product2 = 1;\n\
    \    let mut num_primes_digits_product3 = 1;\n    let mut num_primes_digits_product4\
    \ = 0;\n    let mut num_primes_digits_product5 = 1;\n    let mut num_primes_digits_product6\
    \ = 1;\n    let mut num_primes_digits_product7 = 1;\n    let mut num_primes_digits_product8\
    \ = 1;\n    let mut num_primes_digits_product9 = 1;\n    let mut num_primes_digits_product10\
    \ = 1;\n    let mut num_primes_digits_product11 = 1;\n    let mut num_primes_digits_product12\
    \ = 1;\n    let mut num_primes_digits_product13 = 1;\n    let mut num_primes_digits_product14\
    \ = 1;\n    let mut num_primes_digits_product15 = 1;\n    let mut num_primes_digits_product16\
    \ = 1;\n    let mut num_primes_digits_product17 = 1;\n    let mut num_primes_digits_product18\
    \ = 1;\n    let mut num_primes_digits_product19 = 1;\n    let mut num_primes_digits_product20\
    \ = 1;\n    let mut num_primes_digits_product21 = 1;\n    let mut num_primes_digits_product22\
    \ = 1;\n    let mut num_primes_digits_product23 = 1;\n    let mut num_primes_digits_product24\
    \ = 1;\n    let mut num_primes_digits_product25 = 1;\n    let mut num_primes_digits_product26\
    \ = 1;\n    let mut num_primes_digits_product27 = 1;\n    let mut num_primes_digits_product28\
    \ = 1;\n    let mut num_primes_digits_product29 = 1;\n    let mut num_primes_digits_product30\
    \ = 1;\n    let mut num_primes_digits_product31 = 1;\n    let mut num_primes_digits_product32\
    \ = 1;\n    let mut num_primes_digits_product33 = 1;\n    let mut num_primes_digits_product34\
    \ = 1;\n    let mut num_primes_digits_product35 = 1;\n    let mut num_primes_digits_product36\
    \ = 1;\n    let mut num_primes_digits_product37 = 1;\n    let mut num_primes_digits_product38\
    \ = 1;\n    let mu", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![];\n    let mut prime_counter: usize = 0;\n\
    \    let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n\
    \    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n\
    \    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: usize = 0;\n    let mut prime", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit: Vec<u8> =\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut prime_digit_count: usize = 0;\n    let\
    \ mut prime_digit_index: usize = 0;\n    let mut prime_digit_count: usize = 0;\n\
    \    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count: usize\
    \ = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut counter: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    while !prime_found {\n        for &c in num {\n            if\
    \ c >= '0' && c <= '9' {\n                counter += c - '0';\n            } else\
    \ {\n                counter += c - 'A' + 10;\n            }\n        }\n    \
    \    if counter == prime {\n            prime_found = true;\n        }\n     \
    \   prime += 2;\n    }\n    counter", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut counter: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: usize = 0;\n", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut counter: usize = 0;\n    for &c in num {\n   \
    \     if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter = counter + 1;\n\
    \        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter =\
    \ counter + 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n    \
    \        counter = counter + 1;\n        }\n        if prime == vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97] {\n            counter = counter + 1;\n        }\n        if prime ==\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97] {\n            counter = counter + 1;\n        }\n \
    \       if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter = counter + 1;\n\
    \        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter =\
    \ counter + 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19,\
    \ 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n    \
    \        counter = counter + 1;\n        }\n        if prime == vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97] {\n            counter = counter + 1;\n        }\n        if prime ==\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, ", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_number: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut prime_number_count: usize = 0;\n    let\
    \ mut prime_number_prime: usize = 0;\n    let mut prime_number_prime_2: usize\
    \ = 0;\n    let mut prime_number_prime_3: usize = 0;\n    let mut prime_number_prime_4:\
    \ usize = 0;\n    let mut prime_number_prime_5: usize = 0;\n    let mut prime_number_prime_6:\
    \ usize = 0;\n    let mut prime_number_prime_7: usize = 0;\n    let mut prime_number_prime_8:\
    \ usize = 0;\n    let mut prime_number_prime_9: usize = 0;\n    let mut prime_number_prime_10:\
    \ usize = 0;\n    let mut prime_number_prime_11: usize = 0;\n    let mut prime_number_prime_12:\
    \ usize = 0;\n    let mut prime_number_prime_13: usize = 0;\n    let mut prime_number_prime_14:\
    \ usize = 0;\n    let mut prime_number_prime_15: usize = 0;\n    let mut prime_number_prime_16:\
    \ usize = 0;\n    let mut prime_number_prime_17: usize = 0;\n    let mut prime_number_prime_18:\
    \ usize = 0;\n    let mut prime_number_prime_19: usize = 0;\n    let mut prime_number_prime_20:\
    \ usize = 0;\n    let mut prime_number_prime_21: usize = 0;\n    let mut prime_number_prime_22:\
    \ usize = 0;\n    let mut prime_number_prime_23: usize = 0;\n    let mut prime_number_prime_24:\
    \ usize = 0;\n    let mut prime_number_prime_25: usize = 0;\n    let mut prime_number_prime_26:\
    \ usize = 0;\n    let mut prime_number_prime_27: usize = 0;\n    let mut prime_number_prime_28:\
    \ usize = 0;\n    let mut prime_number_prime_29: usize = 0;\n    let mut prime_number_prime_30:\
    \ usize = 0;\n    let mut prime_number_prime_31: usize = 0;\n    let mut prime_number_prime",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter: usize = 0;\n  \
    \  let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n\
    \    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n\
    \    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut primes = vec![true; 26];\n    let mut primes_count = vec![0; 26];\n\
    \    let mut primes_count_index = vec![0; 26];\n    let mut primes_count_index2\
    \ = vec![0; 26];\n    let mut primes_count_index3 = vec![0; 26];\n    let mut\
    \ primes_count_index4 = vec![0; 26];\n    let mut primes_count_index5 = vec![0;\
    \ 26];\n    let mut primes_count_index6 = vec![0; 26];\n    let mut primes_count_index7\
    \ = vec![0; 26];\n    let mut primes_count_index8 = vec![0; 26];\n    let mut\
    \ primes_count_index9 = vec![0; 26];\n    let mut primes_count_index10 = vec![0;\
    \ 26];\n    let mut primes_count_index11 = vec![0; 26];\n    let mut primes_count_index12\
    \ = vec![0; 26];\n    let mut primes_count_index13 = vec![0; 26];\n    let mut\
    \ primes_count_index14 = vec![0; 26];\n    let mut primes_count_index15 = vec![0;\
    \ 26];\n    let mut primes_count_index16 = vec![0; 26];\n    let mut primes_count_index17\
    \ = vec![0; 26];\n    let mut primes_count_index18 = vec![0; 26];\n    let mut\
    \ primes_count_index19 = vec![0; 26];\n    let mut primes_count_index20 = vec![0;\
    \ 26];\n    let mut primes_count_index21 = vec![0; 26];\n    let mut primes_count_index22\
    \ = vec![0; 26];\n    let mut primes_count_index23 = vec![0; 26];\n    let mut\
    \ primes_count_index24 = vec![0; 26];\n    let mut primes_count_index25 = vec![0;\
    \ 26];\n    let mut primes_count_index26 = vec![0; 26];\n    let mut primes_count_index27\
    \ = vec![0; 26];\n    let mut primes_count_index28 = vec![0; 26];\n    let mut\
    \ primes_count_index29 = vec![0; 26];\n    let mut primes_count_index30 = vec![0;\
    \ 26];\n    let mut primes_count_index31 = vec![0; 26];\n    let mut primes_count_index32\
    \ = vec![0; 26];\n    let mut prime", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut num_digits = nums.len();\n    let mut prime_digits = vec![2, 3];\n\
    \    let mut prime_digits_count = vec![2, 3];\n    let mut prime_digits_count_max\
    \ = vec![2, 3];\n    let mut prime_digits_count_min = vec![2, 3];\n    let mut\
    \ prime_digits_count_max_min = vec![2, 3];\n    let mut prime_digits_count_max_min_max\
    \ = vec![2, 3];\n    let mut prime_digits_count_max_min_max_max = vec![2, 3];\n\
    \    let mut prime_digits_count_max_min_max_max_max = vec![2, 3];\n    let mut\
    \ prime_digits_count_max_min_max_max_max_max = vec![2, 3];\n    let mut prime_digits_count_max_min_max_max_max_max\
    \ = vec![2, 3];\n    let mut prime_digits_count_max_min_max_max_max_max_max =\
    \ vec![2, 3];\n    let mut prime_digits_count_max_min_max_max_max_max_max_max\
    \ = vec![2, 3];\n    let mut prime_digits_count_max_min_max_max_max_max_max_max_max\
    \ = vec![2, 3];\n    let mut prime_digits_count_max_min_max_max_max_max_max_max_max_max\
    \ = vec![2, 3];\n    let mut prime_digits_count_max_min_max_max_max_max_max_max_max_max_max\
    \ = vec![2, 3];\n    let mut prime_digits_count_max_min_max_max_max_max_max_max_max_max_max\
    \ = vec![2, 3];\n    let mut prime_digits_count_max_min_max_max_max_max_max_max_max_max_max_max\
    \ = vec![2, 3];\n    let mut prime_digits_count_max_min_max_max_max_max_max_max_max_max_max_max_max\
    \ = vec![2, 3];\n    let mut prime_digits_count_max_min_max_max_max_max_max_max_max_max_max_max_max_max\
    \ = vec![2, 3];\n    let mut prime_digits_count_max_min_max_max_max_max_max_max_max_max_max_max_max_max\
    \ = vec![2, 3];\n    let mut prime_digits_count_max_min_max_max_max_max_max_max_max_max_max_max_max_max\
    \ = vec![2, 3];\n    let mut prime_digits_count_max_min_max_max_max_max_max_max_max_max_max_max_max_max_max\
    \ = vec![2, 3];\n    let mut prime_digits_count_max_min_max_", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_prime_prime: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime", " \
    \   let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime_count\
    \ = 0;\n    let mut prime_digit = 0;\n    let mut prime_digit_count = 1;\n   \
    \ let mut prime_digit_index = 0;\n    let mut prime_digit_index2 = 0;\n    let\
    \ mut prime_digit_index3 = 0;\n    let mut prime_digit_index4 = 0;\n    let mut\
    \ prime_digit_index5 = 0;\n    let mut prime_digit_index6 = 0;\n    let mut prime_digit_index7\
    \ = 0;\n    let mut prime_digit_index8 = 0;\n    let mut prime_digit_index9 =\
    \ 0;\n    let mut prime_digit_index10 = 0;\n    let mut prime_digit_index11 =\
    \ 0;\n    let mut prime_digit_index12 = 0;\n    let mut prime_digit_index13 =\
    \ 0;\n    let mut prime_digit_index14 = 0;\n    let mut prime_digit_index15 =\
    \ 0;\n    let mut prime_digit_index16 = 0;\n    let mut prime_digit_index17 =\
    \ 0;\n    let mut prime_digit_index18 = 0;\n    let mut prime_digit_index19 =\
    \ 0;\n    let mut prime_digit_index20 = 0;\n    let mut prime_digit_index21 =\
    \ 0;\n    let mut prime_digit_index22 = 0;\n    let mut prime_digit_index23 =\
    \ 0;\n    let mut prime_digit_index24 = 0;\n    let mut prime_digit_index25 =\
    \ 0;\n    let mut prime_digit_index26 = 0;\n    let mut prime_digit_index27 =\
    \ 0;\n    let mut prime_digit_index28 = 0;\n    let mut prime_digit_index29 =\
    \ 0;\n    let mut prime_digit_index30 = 0;\n    let mut prime_digit_index31 =\
    \ 0;\n    let mut prime_digit_index32 = 0;\n    let mut prime_digit_index33 =\
    \ 0;\n    let mut prime_digit_index34 = 0;\n    let mut prime_digit_index35 =\
    \ 0;\n    let mut prime_digit_index36 = 0;\n    let mut prime_digit_index37 =\
    \ 0;\n    let mut prime_digit_index38 = 0;\n    let mut prime_digit_index39 =\
    \ 0;\n    let mut prime_digit_index40 = 0;\n    let mut prime_digit_index41 =\
    \ 0;\n    let mut prime_digit_index42 = 0;\n    let mut prime_digit_index43 =\
    \ 0;\n    let mut prime_digit_index44 = 0;\n    let mut prime_digit_index45 =\
    \ 0;\n    let mut prime_digit_index46 = 0;\n    let mut prime_digit_index47 =\
    \ 0;\n    let mut prime", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: isize = 0;\n    let mut prime_counter: isize = 0;\n    let\
    \ mut prime_counter2: isize = 0;\n    let mut prime_counter3: isize = 0;\n   \
    \ let mut prime_counter4: isize = 0;\n    let mut prime_counter5: isize = 0;\n\
    \    let mut prime_counter6: isize = 0;\n    let mut prime_counter7: isize = 0;\n\
    \    let mut prime_counter8: isize = 0;\n    let mut prime_counter9: isize = 0;\n\
    \    let mut prime_counter10: isize = 0;\n    let mut prime_counter11: isize =\
    \ 0;\n    let mut prime_counter12: isize = 0;\n    let mut prime_counter13: isize\
    \ = 0;\n    let mut prime_counter14: isize = 0;\n    let mut prime_counter15:\
    \ isize = 0;\n    let mut prime_counter16: isize = 0;\n    let mut prime_counter17:\
    \ isize = 0;\n    let mut prime_counter18: isize = 0;\n    let mut prime_counter19:\
    \ isize = 0;\n    let mut prime_counter20: isize = 0;\n    let mut prime_counter21:\
    \ isize = 0;\n    let mut prime_counter22: isize = 0;\n    let mut prime_counter23:\
    \ isize = 0;\n    let mut prime_counter24: isize = 0;\n    let mut prime_counter25:\
    \ isize = 0;\n    let mut prime_counter26: isize = 0;\n    let mut prime_counter27:\
    \ isize = 0;\n    let mut prime_counter28: isize = 0;\n    let mut prime_counter29:\
    \ isize = 0;\n    let mut prime_counter30: isize = 0;\n    let mut prime_counter31:\
    \ isize = 0;\n    let mut prime_counter32: isize = 0;\n    let mut prime_counter33:\
    \ isize = 0;\n    let mut prime_counter34: isize = 0;\n    let mut prime_counter35:\
    \ isize = 0;\n    let mut prime_counter36: isize = 0;\n    let mut prime_counter37:\
    \ isize = 0;\n    let mut prime_counter38: isize = 0;\n    let mut prime_counter39:\
    \ isize = 0;\n    let mut prime_counter40: isize = 0;\n    let mut prime_counter41:\
    \ i", "    let mut num: isize = 0;\n    let mut digit: isize = 0;\n    let mut\
    \ prime: isize = 0;\n    let mut prime_found = false;\n    let mut prime_found2\
    \ = false;\n    let mut prime_found3 = false;\n    let mut prime_found4 = false;\n\
    \    let mut prime_found5 = false;\n    let mut prime_found6 = false;\n    let\
    \ mut prime_found7 = false;\n    let mut prime_found8 = false;\n    let mut prime_found9\
    \ = false;\n    let mut prime_found10 = false;\n    let mut prime_found11 = false;\n\
    \    let mut prime_found12 = false;\n    let mut prime_found13 = false;\n    let\
    \ mut prime_found14 = false;\n    let mut prime_found15 = false;\n    let mut\
    \ prime_found16 = false;\n    let mut prime_found17 = false;\n    let mut prime_found18\
    \ = false;\n    let mut prime_found19 = false;\n    let mut prime_found20 = false;\n\
    \    let mut prime_found21 = false;\n    let mut prime_found22 = false;\n    let\
    \ mut prime_found23 = false;\n    let mut prime_found24 = false;\n    let mut\
    \ prime_found25 = false;\n    let mut prime_found26 = false;\n    let mut prime_found27\
    \ = false;\n    let mut prime_found28 = false;\n    let mut prime_found29 = false;\n\
    \    let mut prime_found30 = false;\n    let mut prime_found31 = false;\n    let\
    \ mut prime_found32 = false;\n    let mut prime_found33 = false;\n    let mut\
    \ prime_found34 = false;\n    let mut prime_found35 = false;\n    let mut prime_found36\
    \ = false;\n    let mut prime_found37 = false;\n    let mut prime_found38 = false;\n\
    \    let mut prime_found39 = false;\n    let mut prime_found40 = false;\n    let\
    \ mut prime_found41 = false;\n    let mut prime_found42 = false;\n    let mut\
    \ prime_found43 = false;\n    let mut prime_found44 = false;\n    let mut prime_found45\
    \ = false;\n    let mut prime_found46 = false;\n    let mut prime_found47 = false;\n\
    \    let mut prime_found48 = false;\n    let mut prime_found49 = false;\n    let\
    \ mut prime_found50 = false;\n    let mut prime_found51 = false;\n    let mut\
    \ prime_found52 = false;\n    let mut prime_found53 = false;\n", "    let mut\
    \ num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3];\n    let mut num_prime_2: Vec<u8>\
    \ = vec![2, 3];\n    let mut num_prime_3: Vec<u8> = vec![2, 3];\n    let mut num_prime_4:\
    \ Vec<u8> = vec![2, 3];\n    let mut num_prime_5: Vec<u8> = vec![2, 3];\n    let\
    \ mut num_prime_6: Vec<u8> = vec![2, 3];\n    let mut num_prime_7: Vec<u8> = vec![2,\
    \ 3];\n    let mut num_prime_8: Vec<u8> = vec![2, 3];\n    let mut num_prime_9:\
    \ Vec<u8> = vec![2, 3];\n    let mut num_prime_10: Vec<u8> = vec![2, 3];\n   \
    \ let mut num_prime_11: Vec<u8> = vec![2, 3];\n    let mut num_prime_12: Vec<u8>\
    \ = vec![2, 3];\n    let mut num_prime_13: Vec<u8> = vec![2, 3];\n    let mut\
    \ num_prime_14: Vec<u8> = vec![2, 3];\n    let mut num_prime_15: Vec<u8> = vec![2,\
    \ 3];\n    let mut num_prime_16: Vec<u8> = vec![2, 3];\n    let mut num_prime_17:\
    \ Vec<u8> = vec![2, 3];\n    let mut num_prime_18: Vec<u8> = vec![2, 3];\n   \
    \ let mut num_prime_19: Vec<u8> = vec![2, 3];\n    let mut num_prime_20: Vec<u8>\
    \ = vec![2, 3];\n    let mut num_prime_21: Vec<u8> = vec![2, 3];\n    let mut\
    \ num_prime_22: Vec<u8> = vec![2, 3];\n    let mut num_prime_23: Vec<u8> = vec![2,\
    \ 3];\n    let mut num_prime_24: Vec<u8> = vec![2, 3];\n    let mut num_prime_25:\
    \ Vec<u8> = vec![2, 3];\n    let mut num_prime_26: Vec<u8> = vec![2, 3];\n   \
    \ let mut num_prime", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|c| match c {\n        'a' => 1,\n\
    \        'b' => 2,\n        'c' => 3,\n        'd' => 4,\n        'e' => 5,\n\
    \        'f' => 6,\n        _ => 0,\n    }).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|c| match c {\n        '0' => 1,\n        '1' => 2,\n     \
    \   '2' => 3,\n        '3' => 4,\n        '4' => 5,\n        '5' => 6,\n     \
    \   '6' => 7,\n        '7' => 8,\n        '8' => 9,\n        '9' => 10,\n    \
    \    'a' => 11,\n        'b' => 12,\n        'c' => 13,\n        'd' => 14,\n\
    \        'e' => 15,\n        'f' => 16,\n        _ => 0,\n    }).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|c| match c {\n        '0' => 1,\n\
    \        '1' => 2,\n        '2' => 3,\n        '3' => 4,\n        '4' => 5,\n\
    \        '5' => 6,\n        '6' => 7,\n        '7' => 8,\n        '8' => 9,\n\
    \        '9' => 10,\n        'a' => 11,\n        'b' => 12,\n        'c' => 13,\n\
    \        'd' => 14,\n        'e' => 15,\n        'f' => 16,\n        _ => 0,\n\
    \    }).collect();\n    let mut num: Vec<u8> = num.iter().map(|c| match c {\n\
    \        '0' => 1,\n        '1' => 2,\n        '2' => 3,\n        '3' => 4,\n\
    \        '4' => 5,\n        '5' => 6,\n        '6' => 7,\n        '7' => 8,\n\
    \        '8' => 9,\n        '9' => 10,\n        'a' => 11,\n        'b' => 12,\n\
    \        'c' => 13,\n        'd' => 14,\n        'e' => 15,\n        'f' => 16,\n\
    \        _ => 0,\n    }).collect();\n    let mut num: Vec<u8> = num.iter().map(|c|\
    \ match c {\n        '0' => 1,\n        '1' => 2,\n        '2' => 3,\n       \
    \ '3' => 4,\n        '4' => 5,\n        '5' => 6,\n        '6' => 7,\n       \
    \ '7' => 8,\n        '8' => 9,\n        '9' => 10,\n        'a' => 11,\n     \
    \   'b' => 12,\n        'c' => 13,\n        'd' => 14,\n        'e' => ", "  \
    \  let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n   \
    \ let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.in", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime_count = 0;\n    let mut prime_digit = 0;\n    let mut prime_digits:\
    \ Vec<u8> = vec![2, 3, 5, 7];\n    let mut prime_digit_index = 0;\n    let mut\
    \ prime_digit_index2 = 0;\n    let mut prime_digit_index3 = 0;\n    let mut prime_digit_index4\
    \ = 0;\n    let mut prime_digit_index5 = 0;\n    let mut prime_digit_index6 =\
    \ 0;\n    let mut prime_digit_index7 = 0;\n    let mut prime_digit_index8 = 0;\n\
    \    let mut prime_digit_index9 = 0;\n    let mut prime_digit_index10 = 0;\n \
    \   let mut prime_digit_index11 = 0;\n    let mut prime_digit_index12 = 0;\n \
    \   let mut prime_digit_index13 = 0;\n    let mut prime_digit_index14 = 0;\n \
    \   let mut prime_digit_index15 = 0;\n    let mut prime_digit_index16 = 0;\n \
    \   let mut prime_digit_index17 = 0;\n    let mut prime_digit_index18 = 0;\n \
    \   let mut prime_digit_index19 = 0;\n    let mut prime_digit_index20 = 0;\n \
    \   let mut prime_digit_index21 = 0;\n    let mut prime_digit_index22 = 0;\n \
    \   let mut prime_digit_index23 = 0;\n    let mut prime_digit_index24 = 0;\n \
    \   let mut prime_digit_index25 = 0;\n    let mut prime_digit_index26 = 0;\n \
    \   let mut prime_digit_index27 = 0;\n    let mut prime_digit_index28 = 0;\n \
    \   let mut prime_digit_index29 = 0;\n    let mut prime_digit_index30 = 0;\n \
    \   let mut prime_digit_index31 = 0;\n    let mut prime_digit_index32 = 0;\n \
    \   let mut prime_digit_index33 = 0;\n    let mut prime_digit_index34 = 0;\n \
    \   let mut prime_digit_index35 = 0;\n    let mut prime_digit_index36 = 0;\n \
    \   let mut prime_digit_index37 = 0;\n    let mut prime_digit_index38 = 0;\n \
    \   let mut prime_digit_index39 = 0;\n    let mut prime_digit_index40 = 0;\n \
    \   let mut prime_digit_index41 = 0;\n    let mut prime_digit_index42 = 0;\n \
    \   let mut prime_digit_index43 = 0;\n    let mut prime_digit_index44 = 0;\n \
    \   let mut prime_digit_index45 = 0;\n    let mut prime_digit_index46 = 0;\n \
    \   let mut prime", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![];\n    let mut counter: usize = 0;\n    let\
    \ mut prime_counter: usize = 0;\n    let mut prime_counter2: usize = 0;\n    let\
    \ mut prime_counter3: usize = 0;\n    let mut prime_counter4: usize = 0;\n   \
    \ let mut prime_counter5: usize = 0;\n    let mut prime_counter6: usize = 0;\n\
    \    let mut prime_counter7: usize = 0;\n    let mut prime_counter8: usize = 0;\n\
    \    let mut prime_counter9: usize = 0;\n    let mut prime_counter10: usize =\
    \ 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12: usize\
    \ = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n    let mut prime_counter38:\
    \ usize = 0;\n    let mut prime_counter39: usize = 0;\n    let mut prime_counter40",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut num_primes = 0;\n    let mut\
    \ num_primes_digits = 0;\n    let mut num_primes_digits_primes = 0;\n    let mut\
    \ num_primes_digits_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes = 0;\n    let\
    \ mut num_primes_digits_primes_primes_primes_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digit", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut num_primes = 0;\n    let mut\
    \ num_primes_digits = 0;\n    let mut num_primes_digits_sum = 0;\n    let mut\
    \ num_primes_digits_product = 1;\n    let mut num_primes_digits_product2 = 1;\n\
    \    let mut num_primes_digits_product3 = 1;\n    let mut num_primes_digits_product4\
    \ = 1;\n    let mut num_primes_digits_product5 = 1;\n    let mut num_primes_digits_product6\
    \ = 1;\n    let mut num_primes_digits_product7 = 1;\n    let mut num_primes_digits_product8\
    \ = 1;\n    let mut num_primes_digits_product9 = 1;\n    let mut num_primes_digits_product10\
    \ = 1;\n    let mut num_primes_digits_product11 = 1;\n    let mut num_primes_digits_product12\
    \ = 1;\n    let mut num_primes_digits_product13 = 1;\n    let mut num_primes_digits_product14\
    \ = 1;\n    let mut num_primes_digits_product15 = 1;\n    let mut num_primes_digits_product16\
    \ = 1;\n    let mut num_primes_digits_product17 = 1;\n    let mut num_primes_digits_product18\
    \ = 1;\n    let mut num_primes_digits_product19 = 1;\n    let mut num_primes_digits_product20\
    \ = 1;\n    let mut num_primes_digits_product21 = 1;\n    let mut num_primes_digits_product22\
    \ = 1;\n    let mut num_primes_digits_product23 = 1;\n    let mut num_primes_digits_product24\
    \ = 1;\n    let mut num_primes_digits_product25 = 1;\n    let mut num_primes_digits_product26\
    \ = 1;\n    let mut num_primes_digits_product27 = 1;\n    let mut num_primes_digits_product28\
    \ = 1;\n    let mut num_primes_digits_product29 = 1;\n    let mut num_primes_digits_product30\
    \ = 1;\n    let mut num_primes_digits_product31 = 1;\n    let mut num_primes_digits_product32\
    \ = 1;\n    let mut num_primes_digits_product33 = 1;\n    let mut num_primes_digits_product34\
    \ = 1;\n    let mut num_primes_digits_product35 = 1;\n    let mut num_primes_digits_product36\
    \ = 1;\n    let mut num_primes_digits_product37 = 1;\n    let mut num_primes_digits_product38\
    \ = 1;\n    let ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime_count: isize = 0;\n    let mut prime_digit: u8 = 0;\n    let\
    \ mut prime_digit_count: isize = 0;\n    let mut prime_digit_index: isize = 0;\n\
    \    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_is_prime: u8\
    \ = 0;\n    let mut prime_digit_is_prime_2: u8 = 0;\n    let mut prime_digit_is_prime_3:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_4: u8 = 0;\n    let mut prime_digit_is_prime_5:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_6: u8 = 0;\n    let mut prime_digit_is_prime_7:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_8: u8 = 0;\n    let mut prime_digit_is_prime_9:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_10: u8 = 0;\n    let mut prime_digit_is_prime_11:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_12: u8 = 0;\n    let mut prime_digit_is_prime_13:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_14: u8 = 0;\n    let mut prime_digit_is_prime_15:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_16: u8 = 0;\n    let mut prime_digit_is_prime_17:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_18: u8 = 0;\n    let mut prime_digit_is_prime_19:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_20: u8 = 0;\n    let mut prime_digit_is_prime_21:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_22: u8 = 0;\n    let mut prime_digit_is_prime_23:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_24: u8 = 0;\n    let mut prime_digit_is_prime_25:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_26: u8 = 0;\n    let mut prime_digit_is_prime_27:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_28: u8 = 0;\n    let mut prime_digit_is_prime_29:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_30: u8 = 0;\n    let mut prime_digit_is_prime_31:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_32: u8 = 0;", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8> = vec![2,\
    \ 3];\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2: usize\
    \ = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4: usize\
    \ = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6: usize\
    \ = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8: usize\
    \ = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10: usize\
    \ = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n    let mut prime_counter38:\
    \ usize = 0;\n    let mut prime_counter39: usize = 0;\n    let mut prime_counter40:\
    \ usize = 0;\n    let mu", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7];\n    let mut prime_counter: usize\
    \ = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize\
    \ = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize\
    \ = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize\
    \ = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize\
    \ = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: usize = 0;\n    let ", "    let mut\
    \ num: Vec<u8> = num.to_string().chars().collect();\n    let mut num: Vec<u8>\
    \ = num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![];\n    let mut num_prime_counter: Vec<u8>\
    \ = vec![];\n    let mut num_prime_counter2: Vec<u8> = vec![];\n    let mut num_prime_counter3:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter4: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter5: Vec<u8> = vec![];\n    let mut num_prime_counter6: Vec<u8>\
    \ = vec![];\n    let mut num_prime_counter7: Vec<u8> = vec![];\n    let mut num_prime_counter8:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter9: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter10: Vec<u8> = vec![];\n    let mut num_prime_counter11:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter12: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter13: Vec<u8> = vec![];\n    let mut num_prime_counter14:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter15: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter16: Vec<u8> = vec![];\n    let mut num_prime_counter17:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter18: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter19: Vec<u8> = vec![];\n    let mut num_prime_counter20:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter21: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter22: Vec<u8> = vec![];\n    let mut num_prime_counter23:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter24: Vec<u8> = vec![];\n    let\
    \ mut num_prime_counter25: Vec<u8> = vec![];\n    let mut num_prime_counter26:\
    \ Vec<u8> = vec![];\n    let mut num_prime_counter27: Vec<u8> = vec", "    let\
    \ mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_digits\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut ", "    let mut\
    \ num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut prime_counter: usize = 0;\n    let mut\
    \ prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n    let\
    \ mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n   \
    \ let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_count: usize = 0;\n    let mut prime_digit: u8 = 0;\n    let\
    \ mut prime_digit_count: usize = 0;\n    let mut prime_digit_sum: usize = 0;\n\
    \    let mut prime_digit_sum2: usize = 0;\n    let mut prime_digit_sum3: usize\
    \ = 0;\n    let mut prime_digit_sum4: usize = 0;\n    let mut prime_digit_sum5:\
    \ usize = 0;\n    let mut prime_digit_sum6: usize = 0;\n    let mut prime_digit_sum7:\
    \ usize = 0;\n    let mut prime_digit_sum8: usize = 0;\n    let mut prime_digit_sum9:\
    \ usize = 0;\n    let mut prime_digit_sum10: usize = 0;\n    let mut prime_digit_sum11:\
    \ usize = 0;\n    let mut prime_digit_sum12: usize = 0;\n    let mut prime_digit_sum13:\
    \ usize = 0;\n    let mut prime_digit_sum14: usize = 0;\n    let mut prime_digit_sum15:\
    \ usize = 0;\n    let mut prime_digit_sum16: usize = 0;\n    let mut prime_digit_sum17:\
    \ usize = 0;\n    let mut prime_digit_sum18: usize = 0;\n    let mut prime_digit_sum19:\
    \ usize = 0;\n    let mut prime_digit_sum20: usize = 0;\n    let mut prime_digit_sum21:\
    \ usize = 0;\n    let mut prime_digit_sum22: usize = 0;\n    let mut prime_digit_sum23:\
    \ usize = 0;\n    let mut prime_digit_sum24: usize = 0;\n    let mut prime_digit_sum25:\
    \ usize = 0;\n    let mut prime_digit_sum26: usize = 0;\n    let mut prime_digit_sum27:\
    \ usize = 0;\n    let mut prime_digit_sum28: usize = 0;\n    let mut prime_digit_sum29:\
    \ usize = 0;\n    let mut prime_digit_sum30: usize = 0;\n    let mut prime_digit_sum31:\
    \ usize = 0;\n    let mut prime_digit_sum32: usize = 0;\n    let mut prime_digit_sum33:\
    \ usize = 0;\n    let mut prime_digit_sum34: usize = 0;\n    let mut prime_digit_sum35:\
    \ usize = 0;\n    let mut prime_digit_sum36: usize = 0;", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut num_digits = num.len();\n\
    \    let mut prime_count = 0;\n    let mut prime_digits = vec![];\n    let mut\
    \ prime_digits_index = 0;\n    let mut prime_digits_index2 = 0;\n    let mut prime_digits_index3\
    \ = 0;\n    let mut prime_digits_index4 = 0;\n    let mut prime_digits_index5\
    \ = 0;\n    let mut prime_digits_index6 = 0;\n    let mut prime_digits_index7\
    \ = 0;\n    let mut prime_digits_index8 = 0;\n    let mut prime_digits_index9\
    \ = 0;\n    let mut prime_digits_index10 = 0;\n    let mut prime_digits_index11\
    \ = 0;\n    let mut prime_digits_index12 = 0;\n    let mut prime_digits_index13\
    \ = 0;\n    let mut prime_digits_index14 = 0;\n    let mut prime_digits_index15\
    \ = 0;\n    let mut prime_digits_index16 = 0;\n    let mut prime_digits_index17\
    \ = 0;\n    let mut prime_digits_index18 = 0;\n    let mut prime_digits_index19\
    \ = 0;\n    let mut prime_digits_index20 = 0;\n    let mut prime_digits_index21\
    \ = 0;\n    let mut prime_digits_index22 = 0;\n    let mut prime_digits_index23\
    \ = 0;\n    let mut prime_digits_index24 = 0;\n    let mut prime_digits_index25\
    \ = 0;\n    let mut prime_digits_index26 = 0;\n    let mut prime_digits_index27\
    \ = 0;\n    let mut prime_digits_index28 = 0;\n    let mut prime_digits_index29\
    \ = 0;\n    let mut prime_digits_index30 = 0;\n    let mut prime_digits_index31\
    \ = 0;\n    let mut prime_digits_index32 = 0;\n    let mut prime_digits_index33\
    \ = 0;\n    let mut prime_digits_index34 = 0;\n    let mut prime_digits_index35\
    \ = 0;\n    let mut prime_digits_index36 = 0;\n    let mut prime_digits_index37\
    \ = 0;\n    let mut prime_digits_index38 = 0;\n    let mut prime_digits_index39\
    \ = 0;\n    let mut prime_digits_index40 = 0;\n    let mut prime_digits_index41\
    \ = 0;\n    let mut prime_digits_index42 = 0;\n    let mut prime_digits_", " \
    \   let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7];\n    let mut prime_counter: usize = 0;\n    let\
    \ mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n   \
    \ let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n\
    \    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: usize = 0;\n    let ", "    let mut\
    \ num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_digit: Vec<u8> = vec![];\n    let mut\
    \ num_prime_digit_count: Vec<u8> = vec![];\n    let mut num_prime_digit_count_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_digit_count_prime_prime: Vec<u8> =\
    \ vec![];\n    let mut num_prime_digit_count_prime_prime_prime: Vec<u8> = vec![];\n\
    \    let mut num_prime_digit_count_prime_prime_prime_prime: Vec<u8> = vec![];\n\
    \    let mut num_prime_digit_count_prime_prime_prime_prime_prime: Vec<u8> = vec![];\n\
    \    let mut num_prime_digit_count_prime_prime_prime_prime_prime_prime: Vec<u8>\
    \ = vec![];\n    let mut num_prime_digit_count_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_digit_count_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_digit_count_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_digit_count_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_digit_count_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_digit_count_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_digit_count_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_digit_count_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![];\n    let mut num_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_str: String = String::new();\n    let mut prime_count: isize\
    \ = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count: isize\
    \ = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_index: usize = 0;", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_len = num_prime.len();\n    let mut\
    \ num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len\
    \ = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let\
    \ mut num_prime_len = num_prime_len - 1;\n    let mut num_prime_len = num_prime_len\
    \ - 1;\n    let mut num_prime_len = num_prime_len - 1;\n    let mut num_prime",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime_digits\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digits_len\
    \ % 2));\n    let mut prime_digits_len = prime_digits_len.saturating_add((prime_digit",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17];\n    let mut num_prime_sum: isize =\
    \ 0;\n    let mut num_prime_sum2: isize = 0;\n    let mut num_prime_sum3: isize\
    \ = 0;\n    let mut num_prime_sum4: isize = 0;\n    let mut num_prime_sum5: isize\
    \ = 0;\n    let mut num_prime_sum6: isize = 0;\n    let mut num_prime_sum7: isize\
    \ = 0;\n    let mut num_prime_sum8: isize = 0;\n    let mut num_prime_sum9: isize\
    \ = 0;\n    let mut num_prime_sum10: isize = 0;\n    let mut num_prime_sum11:\
    \ isize = 0;\n    let mut num_prime_sum12: isize = 0;\n    let mut num_prime_sum13:\
    \ isize = 0;\n    let mut num_prime_sum14: isize = 0;\n    let mut num_prime_sum15:\
    \ isize = 0;\n    let mut num_prime_sum16: isize = 0;\n    let mut num_prime_sum17:\
    \ isize = 0;\n    let mut num_prime_sum18: isize = 0;\n    let mut num_prime_sum19:\
    \ isize = 0;\n    let mut num_prime_sum20: isize = 0;\n    let mut num_prime_sum21:\
    \ isize = 0;\n    let mut num_prime_sum22: isize = 0;\n    let mut num_prime_sum23:\
    \ isize = 0;\n    let mut num_prime_sum24: isize = 0;\n    let mut num_prime_sum25:\
    \ isize = 0;\n    let mut num_prime_sum26: isize = 0;\n    let mut num_prime_sum27:\
    \ isize = 0;\n    let mut num_prime_sum28: isize = 0;\n    let mut num_prime_sum29:\
    \ isize = 0;\n    let mut num_prime_sum30: isize = 0;\n    let mut num_prime_sum31:\
    \ isize = 0;\n    let mut num_prime_sum32: isize = 0;\n    let mut num_prime_sum33:\
    \ isize = 0;\n    let mut num_prime_sum34: isize = 0;\n    let mut num_prime_sum35:\
    \ isize = 0;\n    let mut num_prime_sum36: isize = 0;\n    let mut num_prime_sum37: ",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut nums_len = nums.len();\n    let mut num_digits = nums.len();\n  \
    \  let mut prime_digits = vec![false; 9];\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_counter = 0;\n    let mut prime_digits_counter_len =\
    \ 0;\n    let mut prime_digits_counter_len2 = 0;\n    let mut prime_digits_counter_len3\
    \ = 0;\n    let mut prime_digits_counter_len4 = 0;\n    let mut prime_digits_counter_len5\
    \ = 0;\n    let mut prime_digits_counter_len6 = 0;\n    let mut prime_digits_counter_len7\
    \ = 0;\n    let mut prime_digits_counter_len8 = 0;\n    let mut prime_digits_counter_len9\
    \ = 0;\n    let mut prime_digits_counter_len10 = 0;\n    let mut prime_digits_counter_len11\
    \ = 0;\n    let mut prime_digits_counter_len12 = 0;\n    let mut prime_digits_counter_len13\
    \ = 0;\n    let mut prime_digits_counter_len14 = 0;\n    let mut prime_digits_counter_len15\
    \ = 0;\n    let mut prime_digits_counter_len16 = 0;\n    let mut prime_digits_counter_len17\
    \ = 0;\n    let mut prime_digits_counter_len18 = 0;\n    let mut prime_digits_counter_len19\
    \ = 0;\n    let mut prime_digits_counter_len20 = 0;\n    let mut prime_digits_counter_len21\
    \ = 0;\n    let mut prime_digits_counter_len22 = 0;\n    let mut prime_digits_counter_len23\
    \ = 0;\n    let mut prime_digits_counter_len24 = 0;\n    let mut prime_digits_counter_len25\
    \ = 0;\n    let mut prime_digits_counter_len26 = 0;\n    let mut prime_digits_counter_len27\
    \ = 0;\n    let mut prime_digits_counter_len28 = 0;\n    let mut prime_digits_counter_len29\
    \ = 0;\n    let mut prime_digits_counter_len30 = 0;\n    let mut prime_digits_counter_len31\
    \ = 0;\n    let mut prime_digits_counter_len32 = 0;\n    let mut prime_digits_counter_len33\
    \ = 0;\n    let mut prime_digits_counter_len34 = 0;\n    let mut prime_digits_counter_len35\
    \ = 0;\n    let mut prime_digits_counter_len36 = 0;\n    let mut prime_digits_counter",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n\
    \    let mut num: Vec<", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime_digits = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digits_set\
    \ = HashSet::new();\n    let mut prime_digits_counter = 0;\n    let mut prime_digits_counter2\
    \ = 0;\n    let mut prime_digits_counter3 = 0;\n    let mut prime_digits_counter4\
    \ = 0;\n    let mut prime_digits_counter5 = 0;\n    let mut prime_digits_counter6\
    \ = 0;\n    let mut prime_digits_counter7 = 0;\n    let mut prime_digits_counter8\
    \ = 0;\n    let mut prime_digits_counter9 = 0;\n    let mut prime_digits_counter10\
    \ = 0;\n    let mut prime_digits_counter11 = 0;\n    let mut prime_digits_counter12\
    \ = 0;\n    let mut prime_digits_counter13 = 0;\n    let mut prime_digits_counter14\
    \ = 0;\n    let mut prime_digits_counter15 = 0;\n    let mut prime_digits_counter16\
    \ = 0;\n    let mut prime_digits_counter17 = 0;\n    let mut prime_digits_counter18\
    \ = 0;\n    let mut prime_digits_counter19 = 0;\n    let mut prime_digits_counter20\
    \ = 0;\n    let mut prime_digits_counter21 = 0;\n    let mut prime_digits_counter22\
    \ = 0;\n    let mut prime_digits_counter23 = 0;\n    let mut prime_digits_counter24\
    \ = 0;\n    let mut prime_digits_counter25 = 0;\n    let mut prime_digits_counter26\
    \ = 0;\n    let mut prime_digits_counter27 = 0;\n    let mut prime_digits_counter28\
    \ = 0;\n    let mut prime_digits_counter29 = 0;\n    let mut prime_digits_counter30\
    \ = 0;\n    let mut prime_digits_counter31 = 0;\n    let mut prime_digits_counter32\
    \ = 0;\n    let mut prime_digits_counter33 = 0;\n    let mut prime_digits_counter34\
    \ = 0;\n    let mut prime_digits_counter35 = 0;\n    let mut prime_digits_counter36\
    \ = 0;\n    let mut prime_digits_counter37 = 0;\n    let mut prime_digits_counter38\
    \ = 0;\n    let mut prime_digits_counter39 = 0;\n    let mut prime_digits_counter40\
    \ = 0;\n    let mu", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7];\n    let mut counter: usize =\
    \ 0;\n    for &c in num {\n        if prime == vec![2, 3, 5, 7] {\n          \
    \  counter = counter + 2;\n        }\n        if prime == vec![7, 11, 13] {\n\
    \            counter = counter + 3;\n        }\n        if prime == vec![11, 13]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![13]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![17]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![19]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![23]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![29]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![37]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![43]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![47]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![53]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![59]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![67]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![73]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![79]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![83]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![89]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![97]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![101]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![107]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![113]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![119]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![127]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![131]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![137]\
    \ {\n            counter = counter + 3;\n        }\n        if prime == vec![141]\
    \ {\n            counter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut count: usize\
    \ = 0;\n    let mut i: usize = 0;\n    while i < num.len() {\n        let mut\
    \ j: usize = 0;\n        while j < prime.len() {\n            if num[i] == prime[j]\
    \ {\n                count++;\n                break;\n            }\n       \
    \     j += 1;\n        }\n        i += 1;\n    }\n    count", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_count: isize\
    \ = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digits: Vec<u8> =\
    \ vec![];\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_index:\
    \ usize = 0;\n    let mut prime_digit_sum: usize = 0;\n    let mut prime_digit_sums:\
    \ Vec<usize> = vec![];\n    let mut prime_digit_sums_count: usize = 0;\n    let\
    \ mut prime_digit_sums_index: usize = 0;\n    let mut prime_digit_sums_sum: usize\
    \ = 0;\n    let mut prime_digit_sums_sums: Vec<usize> = vec![];\n    let mut prime_digit_sums_sums_count:\
    \ usize = 0;\n    let mut prime_digit_sums_sums_index: usize = 0;\n    let mut\
    \ prime_digit_sums_sums_sum: usize = 0;\n    let mut prime_digit_sums_sums_sums:\
    \ Vec<usize> = vec![];\n    let mut prime_digit_sums_sums_sums_count: usize =\
    \ 0;\n    let mut prime_digit_sums_sums_sums_index: usize = 0;\n    let mut prime_digit_sums_sums_sums_sum:\
    \ usize = 0;\n    let mut prime_digit_sums_sums_sums_sums: Vec<usize> = vec![];\n\
    \    let mut prime_digit_sums_sums_sums_sums_count: usize = 0;\n    let mut prime_digit_sums_sums_sums_sums_index:\
    \ usize = 0;\n    let mut prime_digit_sums_sums_sums_sums_sum: usize = 0;\n  \
    \  let mut prime_digit_sums_sums_sums_sums_sums: Vec<usize> = vec![];\n    let\
    \ mut prime_digit_sums_sums_sums_sums_sums_count: usize = 0;\n    let mut prime_digit_sums_sums_sums_sums_sums_index:\
    \ usize = 0;\n    let mut prime_digit_sums_sums_sums_sums_sums_sum: usize = 0;\n\
    \    let mut prime_digit_sums_sums_sums_sums_sums_sums: Vec<usize> = vec![];\n\
    \    let mut prime_digit_sums_sums_sums_sums_sums_sums_count: usize = 0;\n   \
    \ let mu", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_digits = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digits_set\
    \ = prime_digits.iter().cloned().collect::<HashSet<u8>>();\n    let mut prime_digits_len\
    \ = prime_digits_set.len();\n    let mut prime_digits_sum = 0;\n    let mut prime_digits_product\
    \ = 1;\n    let mut prime_digits_product2 = 1;\n    let mut prime_digits_product3\
    \ = 1;\n    let mut prime_digits_product4 = 0;\n    let mut prime_digits_product5\
    \ = 1;\n    let mut prime_digits_product6 = 1;\n    let mut prime_digits_product7\
    \ = 1;\n    let mut prime_digits_product8 = 1;\n    let mut prime_digits_product9\
    \ = 1;\n    let mut prime_digits_product10 = 1;\n    let mut prime_digits_product11\
    \ = 1;\n    let mut prime_digits_product12 = 1;\n    let mut prime_digits_product13\
    \ = 1;\n    let mut prime_digits_product14 = 1;\n    let mut prime_digits_product15\
    \ = 1;\n    let mut prime_digits_product16 = 1;\n    let mut prime_digits_product17\
    \ = 1;\n    let mut prime_digits_product18 = 1;\n    let mut prime_digits_product19\
    \ = 1;\n    let mut prime_digits_product20 = 1;\n    let mut prime_digits_product21\
    \ = 1;\n    let mut prime_digits_product22 = 1;\n    let mut prime_digits_product23\
    \ = 1;\n    let mut prime_digits_product24 = 1;\n    let mut prime_digits_product25\
    \ = 1;\n    let mut prime_digits_product26 = 1;\n    let mut prime_digits_product27\
    \ = 1;\n    let mut prime_digits_product28 = 1;\n    let mut prime_digits_product29\
    \ = 1;\n    let mut prime_digits_product30 = 1;\n    let mut prime_digits_product31\
    \ = 1;\n    let mut prime_digits_product32 = 1;\n    let mut prime_digits_product33\
    \ = 1;\n    let mut prime_digits_product34 = 1;\n    let mut prime_digits_product35\
    \ = 1;\n    let mut prime_digits_product36 = 1;\n    let mut prime_digit", " \
    \   let mut nums = num.chars().collect::<Vec<_>>();\n    let mut primes = vec![false;\
    \ 26];\n    let mut prime_counter = 0;\n    let mut prime_counter2 = 0;\n    let\
    \ mut prime_counter3 = 0;\n    let mut prime_counter4 = 0;\n    let mut prime_counter5\
    \ = 0;\n    let mut prime_counter6 = 0;\n    let mut prime_counter7 = 0;\n   \
    \ let mut prime_counter8 = 0;\n    let mut prime_counter9 = 0;\n    let mut prime_counter10\
    \ = 0;\n    let mut prime_counter11 = 0;\n    let mut prime_counter12 = 0;\n \
    \   let mut prime_counter13 = 0;\n    let mut prime_counter14 = 0;\n    let mut\
    \ prime_counter15 = 0;\n    let mut prime_counter16 = 0;\n    let mut prime_counter17\
    \ = 0;\n    let mut prime_counter18 = 0;\n    let mut prime_counter19 = 0;\n \
    \   let mut prime_counter20 = 0;\n    let mut prime_counter21 = 0;\n    let mut\
    \ prime_counter22 = 0;\n    let mut prime_counter23 = 0;\n    let mut prime_counter24\
    \ = 0;\n    let mut prime_counter25 = 0;\n    let mut prime_counter26 = 0;\n \
    \   let mut prime_counter27 = 0;\n    let mut prime_counter28 = 0;\n    let mut\
    \ prime_counter29 = 0;\n    let mut prime_counter30 = 0;\n    let mut prime_counter31\
    \ = 0;\n    let mut prime_counter32 = 0;\n    let mut prime_counter33 = 0;\n \
    \   let mut prime_counter34 = 0;\n    let mut prime_counter35 = 0;\n    let mut\
    \ prime_counter36 = 0;\n    let mut prime_counter37 = 0;\n    let mut prime_counter38\
    \ = 0;\n    let mut prime_counter39 = 0;\n    let mut prime_counter40 = 0;\n \
    \   let mut prime_counter41 = 0;\n    let mut prime_counter42 = 0;\n    let mut\
    \ prime_counter43 = 0;\n    let mut prime_counter44 = 0;\n    let mut prime_counter45\
    \ = 0;\n    let mut prime_counter46 = 0;\n    let mut prime_counter47 = 0;\n \
    \   let mut prime_counter48 = 0;\n    let mut prime_counter49 = 0;\n    let mut\
    \ prime_counter50 = 0;\n    let mut prime_counter51 = 0;\n    let mut prime_counter52\
    \ = 0;\n    let mut prime_counter53 = 0;\n    let mut prime_counter54 = 0;\n \
    \   let mu", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut prime_digits = vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19];\n    let mut prime_digits_len = prime_digits.len();\n  \
    \  let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mu", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter: usize\
    \ = 0;\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2: usize\
    \ = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4: usize\
    \ = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6: usize\
    \ = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8: usize\
    \ = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10: usize\
    \ = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n", "    let mut nums =\
    \ num.chars().collect::<Vec<_>>();\n    let mut num_digits = nums.len();\n   \
    \ let mut num_primes = 0;\n    let mut num_primes_digits = 0;\n    let mut num_primes_digits_sum\
    \ = 0;\n    let mut num_primes_digits_product = 1;\n    let mut num_primes_digits_product2\
    \ = 1;\n    let mut num_primes_digits_product3 = 1;\n    let mut num_primes_digits_product4\
    \ = 0;\n    let mut num_primes_digits_product5 = 1;\n    let mut num_primes_digits_product6\
    \ = 1;\n    let mut num_primes_digits_product7 = 1;\n    let mut num_primes_digits_product8\
    \ = 1;\n    let mut num_primes_digits_product9 = 1;\n    let mut num_primes_digits_product10\
    \ = 1;\n    let mut num_primes_digits_product11 = 1;\n    let mut num_primes_digits_product12\
    \ = 1;\n    let mut num_primes_digits_product13 = 1;\n    let mut num_primes_digits_product14\
    \ = 1;\n    let mut num_primes_digits_product15 = 1;\n    let mut num_primes_digits_product16\
    \ = 1;\n    let mut num_primes_digits_product17 = 1;\n    let mut num_primes_digits_product18\
    \ = 1;\n    let mut num_primes_digits_product19 = 1;\n    let mut num_primes_digits_product20\
    \ = 1;\n    let mut num_primes_digits_product21 = 1;\n    let mut num_primes_digits_product22\
    \ = 1;\n    let mut num_primes_digits_product23 = 1;\n    let mut num_primes_digits_product24\
    \ = 1;\n    let mut num_primes_digits_product25 = 1;\n    let mut num_primes_digits_product26\
    \ = 1;\n    let mut num_primes_digits_product27 = 1;\n    let mut num_primes_digits_product28\
    \ = 1;\n    let mut num_primes_digits_product29 = 1;\n    let mut num_primes_digits_product30\
    \ = 1;\n    let mut num_primes_digits_product31 = 1;\n    let mut num_primes_digits_product32\
    \ = 1;\n    let mut num_primes_digits_product33 = 1;\n    let mut num_primes_digits_product34\
    \ = 1;\n    let mut num_primes_digits_product35 = 1;\n    let mut num_primes_digits_product36\
    \ = 1;\n    let mut num_primes_digits_product37 = 1;\n    let mut num_primes_digits_product38\
    \ = 1;\n    let mut num_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_count: isize = 0;\n    let mut prime_digit: u8 = 0;\n    let\
    \ mut prime_digit_count: u8 = 0;\n    let mut prime_digit_sum: u8 = 0;\n    let\
    \ mut prime_digit_product: u8 = 1;\n    let mut prime_digit_product2: u8 = 1;\n\
    \    let mut prime_digit_product3: u8 = 1;\n    let mut prime_digit_product4:\
    \ u8 = 1;\n    let mut prime_digit_product5: u8 = 1;\n    let mut prime_digit_product6:\
    \ u8 = 1;\n    let mut prime_digit_product7: u8 = 1;\n    let mut prime_digit_product8:\
    \ u8 = 1;\n    let mut prime_digit_product9: u8 = 1;\n    let mut prime_digit_product10:\
    \ u8 = 1;\n    let mut prime_digit_product11: u8 = 1;\n    let mut prime_digit_product12:\
    \ u8 = 1;\n    let mut prime_digit_product13: u8 = 1;\n    let mut prime_digit_product14:\
    \ u8 = 1;\n    let mut prime_digit_product15: u8 = 1;\n    let mut prime_digit_product16:\
    \ u8 = 1;\n    let mut prime_digit_product17: u8 = 1;\n    let mut prime_digit_product18:\
    \ u8 = 1;\n    let mut prime_digit_product19: u8 = 1;\n    let mut prime_digit_product20:\
    \ u8 = 1;\n    let mut prime_digit_product21: u8 = 1;\n    let mut prime_digit_product22:\
    \ u8 = 1;\n    let mut prime_digit_product23: u8 = 1;\n    let mut prime_digit_product24:\
    \ u8 = 1;\n    let mut prime_digit_product25: u8 = 1;\n    let mut prime_digit_product26:\
    \ u8 = 1;\n    let mut prime_digit_product27: u8 = 1;\n    let mut prime_digit_product28:\
    \ u8 = 1;\n    let mut prime_digit_product29: u8 = 1;\n    let mut prime_digit_product30:\
    \ u8 = 1;\n    let mut prime_digit_product31: u8 = 1;\n    let mut prime_digit_product32:\
    \ u8 = 1;\n    let mut prime_digit_product33: u8 = 1;\n    let mut prime_digit_product34:\
    \ u8 = 1;\n    let mut prime_digit_product35: u8 = 1;\n    let mut prime_digit_product36:\
    \ u8 = 1;\n    let mut prime_digit_product37: u8 = 1;\n    let mut prime_digit_product38:\
    \ u8 = 1;\n    let ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_digits = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_digit_counter:\
    \ isize = 0;\n    let mut prime_digit_counter2: isize = 0;\n    let mut prime_digit_counter3:\
    \ isize = 0;\n    let mut prime_digit_counter4: isize = 0;\n    let mut prime_digit_counter5:\
    \ isize = 0;\n    let mut prime_digit_counter6: isize = 0;\n    let mut prime_digit_counter7:\
    \ isize = 0;\n    let mut prime_digit_counter8: isize = 0;\n    let mut prime_digit_counter9:\
    \ isize = 0;\n    let mut prime_digit_counter10: isize = 0;\n    let mut prime_digit_counter11:\
    \ isize = 0;\n    let mut prime_digit_counter12: isize = 0;\n    let mut prime_digit_counter13:\
    \ isize = 0;\n    let mut prime_digit_counter14: isize = 0;\n    let mut prime_digit_counter15:\
    \ isize = 0;\n    let mut prime_digit_counter16: isize = 0;\n    let mut prime_digit_counter17:\
    \ isize = 0;\n    let mut prime_digit_counter18: isize = 0;\n    let mut prime_digit_counter19:\
    \ isize = 0;\n    let mut prime_digit_counter20: isize = 0;\n    let mut prime_digit_counter21:\
    \ isize = 0;\n    let mut prime_digit_counter22: isize = 0;\n    let mut prime_digit_counter23:\
    \ isize = 0;\n    let mut prime_digit_counter24: isize = 0;\n    let mut prime_digit_counter25:\
    \ isize = 0;\n    let mut prime_digit_counter26: isize = 0;\n    let mut prime_digit_counter27:\
    \ isize = 0;\n    let mut prime_digit_counter28: isize = 0;\n    let mut prime_digit_counter29:\
    \ isize = 0;\n    let mut prime_digit_counter30: isize = 0;\n    let mut prime_digit_counter31:\
    \ isize = 0;\n    let mut prime_digit_counter32: isize = 0;\n    let mut prime_digit_counter33:\
    \ isize = 0;\n    let mut prime_digit_counter34: isize = 0;\n    let mut prime_digit_counter35:\
    \ isize = 0;\n    let mut prime_digit_counter36: isize = 0;\n    let mut prime_digit_counter37:\
    \ isize = 0;", "    let mut nums = num.chars().collect::<Vec<_>>();\n    let mut\
    \ primes = vec![];\n    let mut primes_count = vec![];\n    let mut primes_count_index\
    \ = vec![];\n    let mut primes_count_index2 = vec![];\n    let mut primes_count_index3\
    \ = vec![];\n    let mut primes_count_index4 = vec![];\n    let mut primes_count_index5\
    \ = vec![];\n    let mut primes_count_index6 = vec![];\n    let mut primes_count_index7\
    \ = vec![];\n    let mut primes_count_index8 = vec![];\n    let mut primes_count_index9\
    \ = vec![];\n    let mut primes_count_index10 = vec![];\n    let mut primes_count_index11\
    \ = vec![];\n    let mut primes_count_index12 = vec![];\n    let mut primes_count_index13\
    \ = vec![];\n    let mut primes_count_index14 = vec![];\n    let mut primes_count_index15\
    \ = vec![];\n    let mut primes_count_index16 = vec![];\n    let mut primes_count_index17\
    \ = vec![];\n    let mut primes_count_index18 = vec![];\n    let mut primes_count_index19\
    \ = vec![];\n    let mut primes_count_index20 = vec![];\n    let mut primes_count_index21\
    \ = vec![];\n    let mut primes_count_index22 = vec![];\n    let mut primes_count_index23\
    \ = vec![];\n    let mut primes_count_index24 = vec![];\n    let mut primes_count_index25\
    \ = vec![];\n    let mut primes_count_index26 = vec![];\n    let mut primes_count_index27\
    \ = vec![];\n    let mut primes_count_index28 = vec![];\n    let mut primes_count_index29\
    \ = vec![];\n    let mut primes_count_index30 = vec![];\n    let mut primes_count_index31\
    \ = vec![];\n    let mut primes_count_index32 = vec![];\n    let mut primes_count_index33\
    \ = vec![];\n    let mut primes_count_index34 = vec![];\n    let mut primes_count_index35\
    \ = vec![];\n    let mut primes_count_index36 = vec![];\n    let mut primes_count_index37\
    \ = vec![];\n    let mut primes_count_index38", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7];\n    let mut counter: usize =\
    \ 0;\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2: usize\
    \ = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4: usize\
    \ = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6: usize\
    \ = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8: usize\
    \ = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10: usize\
    \ = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n    let mut prime_counter38:\
    \ usize = 0;\n    let mut prime_counter39: usize = 0;\n    let mut prime", " \
    \   let mut nums = num.chars().collect::<Vec<_>>();\n    let mut nums_len = nums.len();\n\
    \    let mut nums_prime: Vec<_> = vec![];\n    let mut nums_prime_len: Vec<_>\
    \ = vec![];\n    let mut nums_prime_len = nums_len.clone();\n    let mut nums_prime_len\
    \ = nums_len.clone();\n    let mut nums_prime_len = nums_len.clone();\n    let\
    \ mut nums_prime_len = nums_len.clone();\n    let mut nums_prime_len = nums_len.clone();\n\
    \    let mut nums_prime_len = nums_len.clone();\n    let mut nums_prime_len =\
    \ nums_len.clone();\n    let mut nums_prime_len = nums_len.clone();\n    let mut\
    \ nums_prime_len = nums_len.clone();\n    let mut nums_prime_len = nums_len.clone();\n\
    \    let mut nums_prime_len = nums_len.clone();\n    let mut nums_prime_len =\
    \ nums_len.clone();\n    let mut nums_prime_len = nums_len.clone();\n    let mut\
    \ nums_prime_len = nums_len.clone();\n    let mut nums_prime_len = nums_len.clone();\n\
    \    let mut nums_prime_len = nums_len.clone();\n    let mut nums_prime_len =\
    \ nums_len.clone();\n    let mut nums_prime_len = nums_len.clone();\n    let mut\
    \ nums_prime_len = nums_len.clone();\n    let mut nums_prime_len = nums_len.clone();\n\
    \    let mut nums_prime_len = nums_len.clone();\n    let mut nums_prime_len =\
    \ nums_len.clone();\n    let mut nums_prime_len = nums_len.clone();\n    let mut\
    \ nums_prime_len = nums_len.clone();\n    let mut nums_prime_len = nums_len.clone();\n\
    \    let mut nums_prime_len = nums_len.clone();\n    let mut nums_prime_len =\
    \ nums_len.clone();\n    let mut nums_prime_len = nums_len.clone();\n    let mut\
    \ nums_prime_len = nums_len.clone();\n    let mut nums_prime_len = nums_len.clone();\n\
    \    let mut nums_prime_len = nums_len.clone();\n    let mut nums_prime_len =\
    \ nums_len.clone();\n    let mut nums_", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_2:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_3: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_4: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_5: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_6:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_7: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_8: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_9: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_10:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_11: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_prime_prime: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut num_prime_prime_prime_prime: Vec<u8> =\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut num_prime_prime_prime_prime_prime: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut num_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_prime_prime", "    let\
    \ mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num_digits\
    \ = num.len();\n    let mut prime_digits = 2;\n    let mut prime_digits_counter\
    \ = 1;\n    let mut prime_digits_counter_2 = 0;\n    let mut prime_digits_counter_3\
    \ = 0;\n    let mut prime_digits_counter_4 = 0;\n    let mut prime_digits_counter_5\
    \ = 0;\n    let mut prime_digits_counter_6 = 0;\n    let mut prime_digits_counter_7\
    \ = 0;\n    let mut prime_digits_counter_8 = 0;\n    let mut prime_digits_counter_9\
    \ = 0;\n    let mut prime_digits_counter_10 = 0;\n    let mut prime_digits_counter_11\
    \ = 0;\n    let mut prime_digits_counter_12 = 0;\n    let mut prime_digits_counter_13\
    \ = 0;\n    let mut prime_digits_counter_14 = 0;\n    let mut prime_digits_counter_15\
    \ = 0;\n    let mut prime_digits_counter_16 = 0;\n    let mut prime_digits_counter_17\
    \ = 0;\n    let mut prime_digits_counter_18 = 0;\n    let mut prime_digits_counter_19\
    \ = 0;\n    let mut prime_digits_counter_20 = 0;\n    let mut prime_digits_counter_21\
    \ = 0;\n    let mut prime_digits_counter_22 = 0;\n    let mut prime_digits_counter_23\
    \ = 0;\n    let mut prime_digits_counter_24 = 0;\n    let mut prime_digits_counter_25\
    \ = 0;\n    let mut prime_digits_counter_26 = 0;\n    let mut prime_digits_counter_27\
    \ = 0;\n    let mut prime_digits_counter_28 = 0;\n    let mut prime_digits_counter_29\
    \ = 0;\n    let mut prime_digits_counter_30 = 0;\n    let mut prime_digits_counter_31\
    \ = 0;\n    let mut prime_digits_counter_32 = 0;\n    let mut prime_digits_counter_33\
    \ = 0;\n    let mut prime_digits_counter_34 = 0;\n    let mut prime_digits_counter_35\
    \ = 0;\n    let mut prime_digits_counter_36 = 0;\n    let mut prime_digits_counter_37\
    \ = 0;\n    let mut prime_digits_counter_38 = 0;\n    let mut prime_digits_counter_39\
    \ = 0;\n    let mut prime_digits_counter_40 = 0;\n    let mut prime_digits_counter_41\
    \ = 1;\n    let mut prime_digits_counter_42 = 2;\n    let mut prime_digits_counter_43\
    \ = 2;\n    let ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut num_primes = 0;\n    let mut\
    \ num_primes_digits = 0;\n    let mut num_primes_digits_prime = 0;\n    let mut\
    \ num_primes_digits_prime_prime = 0;\n    let mut num_primes_digits_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime = 0;\n    let mut\
    \ num_primes_digits_prime_prime_prime_prime_prime = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let\
    \ mut prime: Vec<u8> = vec![2, 3];\n    let mut prime_counter: usize = 0;\n  \
    \  let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n\
    \    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n\
    \    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: usize = 0;\n    let mu"]
stop_tokens:
- "\n}"

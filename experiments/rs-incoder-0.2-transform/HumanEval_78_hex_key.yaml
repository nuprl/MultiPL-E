name: HumanEval_78_hex_key
language: rs
prompt: "/// You have been tasked to write a function that receives \n/// a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n/// digits that are\
  \ primes (prime number, or a prime, is a natural number \n/// greater than 1 that\
  \ is not a product of two smaller natural numbers).\n/// Hexadecimal digits are\
  \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n/// Prime numbers are 2, 3, 5,\
  \ 7, 11, 13, 17,...\n/// So you have to determine a number of the following digits:\
  \ 2, 3, 5, 7, \n/// B (=decimal 11), D (=decimal 13).\n/// Note: you may assume\
  \ the input is always correct or empty string, \n/// and symbols A,B,C,D,E,F are\
  \ always uppercase.\n/// Examples:\n/// >>> hex_key(String::from(\"AB\"))\n/// 1\n\
  /// >>> hex_key(String::from(\"1077E\"))\n/// 2\n/// >>> hex_key(String::from(\"\
  ABED1A33\"))\n/// 4\n/// >>> hex_key(String::from(\"123456789ABCDEF0\"))\n/// 6\n\
  /// >>> hex_key(String::from(\"2020\"))\n/// 2\nfn hex_key(num: String) -> isize\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = hex_key;\n    assert_eq!(candidate(String::from(\"\
  AB\")), 1);\n    assert_eq!(candidate(String::from(\"1077E\")), 2);\n    assert_eq!(candidate(String::from(\"\
  ABED1A33\")), 4);\n    assert_eq!(candidate(String::from(\"2020\")), 2);\n    assert_eq!(candidate(String::from(\"\
  123456789ABCDEF0\")), 6);\n    assert_eq!(candidate(String::from(\"112233445566778899AABBCCDDEEFF00\"\
  )), 12);\n}\n"
completions: ["    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut count: usize = 0;\n    let mut\
    \ i: usize = 0;\n    while i < num.len() {\n        if num[i] == num[num.len()\
    \ - 1] {\n            i += 1;\n        } else {\n            if num[i] == prime[count]\
    \ {\n                count += 1;\n            } else {\n                i += 1;\n\
    \            }\n        }\n    }\n    count", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut primes = vec![false; 26];\n    let mut primes_counter = 0;\n    let\
    \ mut primes_counter2 = 0;\n    let mut primes_counter3 = 0;\n    let mut primes_counter4\
    \ = 0;\n    let mut primes_counter5 = 0;\n    let mut primes_counter6 = 0;\n \
    \   let mut primes_counter7 = 0;\n    let mut primes_counter8 = 0;\n    let mut\
    \ primes_counter9 = 0;\n    let mut primes_counter10 = 0;\n    let mut primes_counter11\
    \ = 0;\n    let mut primes_counter12 = 0;\n    let mut primes_counter13 = 0;\n\
    \    let mut primes_counter14 = 0;\n    let mut primes_counter15 = 0;\n    let\
    \ mut primes_counter16 = 0;\n    let mut primes_counter17 = 0;\n    let mut primes_counter18\
    \ = 0;\n    let mut primes_counter19 = 0;\n    let mut primes_counter20 = 0;\n\
    \    let mut primes_counter21 = 0;\n    let mut primes_counter22 = 0;\n    let\
    \ mut primes_counter23 = 0;\n    let mut primes_counter24 = 0;\n    let mut primes_counter25\
    \ = 0;\n    let mut primes_counter26 = 0;\n    let mut primes_counter27 = 0;\n\
    \    let mut primes_counter28 = 0;\n    let mut primes_counter29 = 0;\n    let\
    \ mut primes_counter30 = 0;\n    let mut primes_counter31 = 0;\n    let mut primes_counter32\
    \ = 0;\n    let mut primes_counter33 = 0;\n    let mut primes_counter34 = 0;\n\
    \    let mut primes_counter35 = 0;\n    let mut primes_counter36 = 0;\n    let\
    \ mut primes_counter37 = 0;\n    let mut primes_counter38 = 0;\n    let mut primes_counter39\
    \ = 0;\n    let mut primes_counter40 = 0;\n    let mut primes_counter41 = 0;\n\
    \    let mut primes_counter42 = 0;\n    let mut primes_counter43 = 0;\n    let\
    \ mut primes_counter44 = 0;\n    let mut primes_counter45 = 0;\n    let mut primes_counter46\
    \ = 0;\n    let mut primes_counter47 = 0;\n    let mut primes_counter48 = 0;\n\
    \    let mut primes_counter49 = 0;\n    let mut primes_counter50 = 0;\n    let\
    \ mut primes_counter51 = 0;\n    let mut primes_counter52 = 0;\n    let mut primes_counter53\
    \ = 0;\n    let mut primes_counter54 = 0;\n    let mu", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut counter: usize = 0;\n \
    \   let mut prime: usize = 2;\n    let mut prime_counter: usize = 2;\n    let\
    \ mut prime_counter2: usize = 2;\n    let mut prime_counter3: usize = 2;\n   \
    \ let mut prime_counter4: usize = 2;\n    let mut prime_counter5: usize = 2;\n\
    \    let mut prime_counter6: usize = 2;\n    let mut prime_counter7: usize = 2;\n\
    \    let mut prime_counter8: usize = 2;\n    let mut prime_counter9: usize = 2;\n\
    \    let mut prime_counter10: usize = 2;\n    let mut prime_counter11: usize =\
    \ 2;\n    let mut prime_counter12: usize = 2;\n    let mut prime_counter13: usize\
    \ = 2;\n    let mut prime_counter14: usize = 2;\n    let mut prime_counter15:\
    \ usize = 2;\n    let mut prime_counter16: usize = 2;\n    let mut prime_counter17:\
    \ usize = 2;\n    let mut prime_counter18: usize = 2;\n    let mut prime_counter19:\
    \ usize = 2;\n    let mut prime_counter20: usize = 2;\n    let mut prime_counter21:\
    \ usize = 2;\n    let mut prime_counter22: usize = 2;\n    let mut prime_counter23:\
    \ usize = 2;\n    let mut prime_counter24: usize = 2;\n    let mut prime_counter25:\
    \ usize = 2;\n    let mut prime_counter26: usize = 2;\n    let mut prime_counter27:\
    \ usize = 2;\n    let mut prime_counter28: usize = 2;\n    let mut prime_counter29:\
    \ usize = 2;\n    let mut prime_counter30: usize = 2;\n    let mut prime_counter31:\
    \ usize = 2;\n    let mut prime_counter32: usize = 2;\n    let mut prime_counter33:\
    \ usize = 2;\n    let mut prime_counter34: usize = 2;\n    let mut prime_counter35:\
    \ usize = 2;\n    let mut prime_counter36: usize = 2;\n    let mut prime_counter37:\
    \ usize = 2;\n    let mut prime_counter38: usize = 2;\n    let mut prime_counter39:\
    \ usize = 2;\n    let mut prime_counter40: usize = 2;\n", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'a' && c <= 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'a' && c <= 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'a' && c <= 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'a' && c <= 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'a' && c <= 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter", "  \
    \  let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter: usize = 0;\n    let mut\
    \ digit: usize = 0;\n    let mut prime_digit: usize = 0;\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_digit_counter: usize = 0;\n    let mut prime_digit_counter2:\
    \ usize = 0;\n    let mut prime_digit_counter3: usize = 0;\n    let mut prime_digit_counter4:\
    \ usize = 0;\n    let mut prime_digit_counter5: usize = 0;\n    let mut prime_digit_counter6:\
    \ usize = 0;\n    let mut prime_digit_counter7: usize = 0;\n    let mut prime_digit_counter8:\
    \ usize = 0;\n    let mut prime_digit_counter9: usize = 0;\n    let mut prime_digit_counter10:\
    \ usize = 0;\n    let mut prime_digit_counter11: usize = 0;\n    let mut prime_digit_counter12:\
    \ usize = 0;\n    let mut prime_digit_counter13: usize = 0;\n    let mut prime_digit_counter14:\
    \ usize = 0;\n    let mut prime_digit_counter15: usize = 0;\n    let mut prime_digit_counter16:\
    \ usize = 0;\n    let mut prime_digit_counter17: usize = 0;\n    let mut prime_digit_counter18:\
    \ usize = 0;\n    let mut prime_digit_counter19: usize = 0;\n    let mut prime_digit_counter20:\
    \ usize = 0;\n    let mut prime_digit_counter21: usize = 0;\n    let mut prime_digit_counter22:\
    \ usize = 0;\n    let mut prime_digit_counter23: usize = 0;\n    let mut prime_digit_counter24:\
    \ usize = 0;\n    let mut prime_digit_counter25: usize = 0;\n    let mut prime_digit_counter26:\
    \ usize = 0;\n    let mut prime_digit_counter27: usize = 0;\n    let mut prime_digit_counter28:\
    \ usize = 0;\n    let mut prime_digit_counter29: usize = 0;\n    let mut prime_digit_counter30:\
    \ usize = 0;\n    let mut prime_digit_counter31: usize = 0;\n    let mut prime_digit_counter32:\
    \ u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let\
    \ mut count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    loop {\n        if num[count] == b'a' {\n            prime_found\
    \ = true;\n            break;\n        }\n        count += 1;\n    }\n    if prime_found\
    \ {\n        return prime + 1;\n    }\n    let mut prime_found = false;\n    loop\
    \ {\n        if num[count] == b'b' {\n            prime_found = true;\n      \
    \      break;\n        }\n        count += 1;\n    }\n    if prime_found {\n \
    \       return prime + 2;\n    }\n    let mut prime_found = false;\n    loop {\n\
    \        if num[count] == b'c' {\n            prime_found = true;\n          \
    \  break;\n        }\n        count += 1;\n    }\n    if prime_found {\n     \
    \   return prime + 3;\n    }\n    let mut prime_found = false;\n    loop {\n \
    \       if num[count] == b'd' {\n            prime_found = true;\n           \
    \ break;\n        }\n        count += 1;\n    }\n    if prime_found {\n      \
    \  return prime + 5;\n    }\n    let mut prime_found = false;\n    loop {\n  \
    \      if num[count] == b'e' {\n            prime_found = true;\n            break;\n\
    \        }\n        count += 1;\n    }\n    if prime_found {\n        return prime\
    \ + 7;\n    }\n    let mut prime_found = false;\n    loop {\n        if num[count]\
    \ == b'f' {\n            prime_found = true;\n            break;\n        }\n\
    \        count += 1;\n    }\n    if prime_found {\n        return prime + 11;\n\
    \    }\n    let mut prime_found = false;\n    loop {\n        if num[count] ==\
    \ b'0' {\n            prime_found = true;\n            break;\n        }\n   \
    \     count += 1;\n    }\n    if prime_found {\n        return prime + 13;\n \
    \   }\n    let mut prime_found = false;\n    loop {\n        if num[count] ==\
    \ b'1' {\n            prime_found = true;\n            break;\n        }\n   \
    \     count += 1;\n    }\n    if prime_found {\n        return prime + 17;\n \
    \   }\n    let mut prime_found = false;\n    loop {\n        if num[count] ==\
    \ b'2' {\n            prime_found = true;\n            break;\n        }\n   \
    \     count += 1;\n    }\n    if prime_found {\n        return prime + 19;\n \
    \   }\n    let mut prime_found = false;\n    ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut count:\
    \ usize = 0;\n    let mut digit: u8 = 0;\n    let mut i: usize = 0;\n    while\
    \ i < num.len() {\n        digit = num[i] - '0';\n        if prime == digit {\n\
    \            count += 1;\n        }\n        i += 1;\n    }\n    count", "   \
    \ let mut nums = num.chars().collect::<Vec<_>>();\n    let mut nums_len = nums.len();\n\
    \    let mut nums_prime: Vec<isize> = vec![0; nums_len];\n    let mut nums_prime_len\
    \ = nums_prime.len();\n    let mut nums_prime_prime: Vec<isize> = vec![0; nums_prime_len];\n\
    \    let mut nums_prime_prime_len = nums_prime_prime.len();\n    let mut nums_prime_prime_prime:\
    \ Vec<isize> = vec![0; nums_prime_prime_len];\n    let mut nums_prime_prime_prime_len\
    \ = nums_prime_prime_prime.len();\n    let mut nums_prime_prime_prime_prime: Vec<isize>\
    \ = vec![0; nums_prime_prime_prime_len];\n    let mut nums_prime_prime_prime_prime_len\
    \ = nums_prime_prime_prime_prime.len();\n    let mut nums_prime_prime_prime_prime_prime:\
    \ Vec<isize> = vec![0; nums_prime_prime_prime_prime_len];\n    let mut nums_prime_prime_prime_prime_prime_len\
    \ = nums_prime_prime_prime_prime_prime.len();\n    let mut nums_prime_prime_prime_prime_prime_len\
    \ = nums_prime_prime_prime_prime_prime_len.len();\n    let mut nums_prime_prime_prime_prime_prime_len\
    \ = nums_prime_prime_prime_prime_prime_len.len();\n    let mut nums_prime_prime_prime_prime_prime_len\
    \ = nums_prime_prime_prime_prime_prime_prime_len.len();\n    let mut nums_prime_prime_prime_prime_prime_prime_len\
    \ = nums_prime_prime_prime_prime_prime_prime_prime_len.len();\n    let mut nums_prime_prime_prime_prime_prime_prime_len\
    \ = nums_prime_prime_prime_prime_prime_prime_prime_len.len();\n    let mut nums_prime_prime_prime_prime_prime_prime_prime_len\
    \ = nums_prime_prime_prime_prime_prime_prime_prime_prime_len.len();\n    let mut\
    \ nums_prime_prime_prime_prime", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit_count: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mu", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_owned();\n    let mut num: Vec<u8> = num.to_owned();\n\
    \    let mut num: Vec<u8> = num.to_ow", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.in", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: isize = 0;\n    let mut prime_found = false;\n    let mut\
    \ prime_found2 = false;\n    let mut prime_found3 = false;\n    let mut prime_found4\
    \ = false;\n    let mut prime_found5 = false;\n    let mut prime_found6 = false;\n\
    \    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n    let\
    \ mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let mut prime_found11\
    \ = false;\n    let mut prime_found12 = false;\n    let mut prime_found13 = false;\n\
    \    let mut prime_found14 = false;\n    let mut prime_found15 = false;\n    let\
    \ mut prime_found16 = false;\n    let mut prime_found17 = false;\n    let mut\
    \ prime_found18 = false;\n    let mut prime_found19 = false;\n    let mut prime_found20\
    \ = false;\n    let mut prime_found21 = false;\n    let mut prime_found22 = false;\n\
    \    let mut prime_found23 = false;\n    let mut prime_found24 = false;\n    let\
    \ mut prime_found25 = false;\n    let mut prime_found26 = false;\n    let mut\
    \ prime_found27 = false;\n    let mut prime_found28 = false;\n    let mut prime_found29\
    \ = false;\n    let mut prime_found30 = false;\n    let mut prime_found31 = false;\n\
    \    let mut prime_found32 = false;\n    let mut prime_found33 = false;\n    let\
    \ mut prime_found34 = false;\n    let mut prime_found35 = false;\n    let mut\
    \ prime_found36 = false;\n    let mut prime_found37 = false;\n    let mut prime_found38\
    \ = false;\n    let mut prime_found39 = false;\n    let mut prime_found40 = false;\n\
    \    let mut prime_found41 = false;\n    let mut prime_found42 = false;\n    let\
    \ mut prime_found43 = false;\n    let mut prime_found44 = false;\n    let mut\
    \ prime_found45 = false;\n    let mut prime_found46 = false;\n    let mut prime_found47\
    \ = false;\n    let mut prime_found48 = false;\n    let mut prime_found49 = false;\n\
    \    let mut prime_found50 = false;\n    let mut prime_found51 = false;\n    let\
    \ mut prime_found52 = false;\n    let mut prime_found53 = false;", "    let mut\
    \ num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_prime: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19, 23];\n    let mut num_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29];\n    let mut num_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31];\n    let mut num_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37];\n    let mut num_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41];\n    let mut\
    \ num_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = vec![2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43 ];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53 ];\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61 ];\n    let\
    \ mut num_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = vec![2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71 ];\n  \
    \  let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73 ];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79 ];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: isize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|&c| match c {\n        'a' => 0xa,\n\
    \        'b' => 0xb,\n        'c' => 0xc,\n        'd' => 0xd,\n        'e' =>\
    \ 0xe,\n        'f' => 0xf,\n        _ => c,\n    }).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|&c| match c {\n        '0' => 0x0,\n        '1' =>\
    \ 0x1,\n        '2' => 0x2,\n        '3' => 0x3,\n        '4' => 0x4,\n      \
    \  '5' => 0x5,\n        '6' => 0x6,\n        '7' => 0x7,\n        '8' => 0x8,\n\
    \        '9' => 0x9,\n        _ => c,\n    }).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|&c| match c {\n        'A' => 0xa,\n        'B' => 0xb,\n\
    \        'C' => 0xc,\n        'D' => 0xd,\n        'E' => 0xe,\n        'F' =>\
    \ 0xf,\n        _ => c,\n    }).collect();\n    let mut num: Vec<u8> = num.iter().map(|&c|\
    \ match c {\n        '2' => 0x2,\n        '3' => 0x3,\n        '5' => 0x5,\n \
    \       '7' => 0x7,\n        'B' => 0xb,\n        'D' => 0xd,\n        _ => c,\n\
    \    }).collect();\n    let mut num: Vec<u8> = num.iter().map(|&c| match c {\n\
    \        '3' => 0x3,\n        '5' => 0x5,\n        '7' => 0x7,\n        'B' =>\
    \ 0xb,\n        'D' => 0xd,\n        _ => c,\n    }).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|&c| match c {\n        '5' => 0x5,\n        '7' =>\
    \ 0x7,\n        'B' => 0xb,\n        'D' => 0xd,\n        _ => c,\n    }).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|&c| match c {\n        '7' => 0x7,\n\
    \        'B' => 0xb,\n        'D' => 0xd,\n        _ => c,\n    }).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|&c| match c {", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num: Vec<u8> =\
    \ num.iter().filter(|&c| c != 'a' && c != 'b' && c != 'c' && c != 'd' && c !=\
    \ 'e' && c != 'f').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c != '0').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c !=\
    \ '1').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c != '2').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != '3').collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|&c| c != '4').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c != '5').collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c != '6').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != '7').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c != '8').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c !=\
    \ '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'A').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'B').collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|&c| c != 'C').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c != 'D').collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c != 'E').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c != 'a').collect();\n    let mut num: ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count = 1;\n    let mut prime: Vec<u8> = vec![2, 3];\n    let mut\
    \ prime_found = false;\n    let mut prime_found2 = false;\n    let mut prime_found3\
    \ = false;\n    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n\
    \    let mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let\
    \ mut prime_found8 = false;\n    let mut prime_found9 = false;\n    let mut prime_found10\
    \ = false;\n    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n\
    \    let mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let\
    \ mut prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut\
    \ prime_found17 = false;\n    let mut prime_found18 = false;\n    let mut prime_found19\
    \ = false;\n    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n\
    \    let mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let\
    \ mut prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut\
    \ prime_found26 = false;\n    let mut prime_found27 = false;\n    let mut prime_found28\
    \ = false;\n    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n\
    \    let mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let\
    \ mut prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut\
    \ prime_found35 = false;\n    let mut prime_found36 = false;\n    let mut prime_found37\
    \ = false;\n    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n\
    \    let mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let\
    \ mut prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut\
    \ prime_found44 = false;\n    let mut prime_found45 = false;\n    let mut prime_found46\
    \ = false;\n    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n\
    \    let mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let\
    \ mut prime_found51 = false;\n    let mut prime_found", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter", "  \
    \  let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter: usize\
    \ = 0;\n    for &c in num {\n        if prime == vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n\
    \            counter += 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97] {\n            counter += 1;\n        }\n        if prime == vec![2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97] {\n            counter += 1;\n        }\n        if prime == vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97] {\n            counter += 1;\n        }\n        if prime ==\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97] {\n            counter += 1;\n        }\n        if\
    \ prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter += 1;\n        }\n  \
    \      if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter += 1;\n     \
    \   }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter += 1;\n\
    \        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter +=\
    \ 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 7", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_digits = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_count = prime_digits_len;\n\
    \    let mut prime_digits_count_2 = prime_digits_count_2;\n    let mut prime_digits_count_3\
    \ = prime_digits_count_3;\n    let mut prime_digits_count_4 = prime_digits_count_4;\n\
    \    let mut prime_digits_count_5 = prime_digits_count_5;\n    let mut prime_digits_count_6\
    \ = prime_digits_count_6;\n    let mut prime_digits_count_7 = prime_digits_count_7;\n\
    \    let mut prime_digits_count_8 = prime_digits_count_8;\n    let mut prime_digits_count_9\
    \ = prime_digits_count_9;\n    let mut prime_digits_count_10 = prime_digits_count_10;\n\
    \    let mut prime_digits_count_11 = prime_digits_count_11;\n    let mut prime_digits_count_12\
    \ = prime_digits_count_12;\n    let mut prime_digits_count_13 = prime_digits_count_13;\n\
    \    let mut prime_digits_count_14 = prime_digits_count_14;\n    let mut prime_digits_count_15\
    \ = prime_digits_count_15;\n    let mut prime_digits_count_16 = prime_digits_count_16;\n\
    \    let mut prime_digits_count_17 = prime_digits_count_17;\n    let mut prime_digits_count_18\
    \ = prime_digits_count_18;\n    let mut prime_digits_count_19 = prime_digits_count_19;\n\
    \    let mut prime_digits_count_20 = prime_digits_count_20;\n    let mut prime_digits_count_21\
    \ = prime_digits_count_21;\n    let mut prime_digits_count_22 = prime_digits_count_22;\n\
    \    let mut prime_digits_count_23 = prime_digits_count_23;\n    let mut prime_digits_count_24\
    \ = prime_digits_count_24;\n    let mut prime_digits_count_25 = prime_digits_count_25;\n\
    \    let mut prime_digits_count_26 = prime_digits_count_26;\n    let mut prime_digits_count_27\
    \ = prime_digits_count_27;\n    let mut prime_digit", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut nums_len = nums.len();\n    let mut prime_digits = vec![2, 3];\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_counter\
    \ = vec![false, false];\n    let mut prime_digits_counter_len = prime_digits_counter.len();\n\
    \    let mut prime_digits_counter2 = vec![false, false];\n    let mut prime_digits_counter2_len\
    \ = prime_digits_counter2.len();\n    let mut prime_digits_counter3 = vec![false,\
    \ false];\n    let mut prime_digits_counter3_len = prime_digits_counter3.len();\n\
    \    let mut prime_digits_counter4 = vec![false, false];\n    let mut prime_digits_counter4_len\
    \ = prime_digits_counter4.len();\n    let mut prime_digits_counter5 = vec![false,\
    \ false];\n    let mut prime_digits_counter5_len = prime_digits_counter5.len();\n\
    \    let mut prime_digits_counter6 = vec![false, false];\n    let mut prime_digits_counter6_len\
    \ = prime_digits_counter6.len();\n    let mut prime_digits_counter7 = vec![false,\
    \ false];\n    let mut prime_digits_counter7_len = prime_digits_counter7.len();\n\
    \    let mut prime_digits_counter8 = vec![false, false];\n    let mut prime_digits_counter8_len\
    \ = prime_digits_counter8.len();\n    let mut prime_digits_counter9 = vec![false,\
    \ false];\n    let mut prime_digits_counter9_len = prime_digits_counter9.len();\n\
    \    let mut prime_digits_counter10 = vec![false, false];\n    let mut prime_digits_counter10_len\
    \ = prime_digits_counter10.len();\n    let mut prime_digits_counter11 = vec![false,\
    \ false];\n    let mut prime_digits_counter11_len = prime_digits_counter11.len();\n\
    \    let mut prime_digits_counter12 = vec![false, false];\n    let mut prime_digits_counter12_len\
    \ = prime_digits_counter12.len();\n    let mut prime_digits_counter13 = vec![false,\
    \ false];\n    let mut prime_digits_counter13_len = prime_digits_counter13.len();\n\
    \    let mut prime_digits_counter14 = vec![false, false];", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_digits: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_count = prime_digits_len;\n    let mut prime_digits_index\
    \ = 0;\n    let mut prime_digits_index_max = prime_digits_len - 1;\n    let mut\
    \ prime_digits_index_min = 0;\n    let mut prime_digits_index_step = 1;\n    let\
    \ mut prime_digits_index_max = prime_digits_len - 1;\n    let mut prime_digits_index_min\
    \ = 0;\n    let mut prime_digits_index_step = 1;\n    let mut prime_digits_index_max\
    \ = prime_digits_len - 1;\n    let mut prime_digits_index_min = 0;\n    let mut\
    \ prime_digits_index_step = 1;\n    let mut prime_digits_index_max = prime_digits_len\
    \ - 1;\n    let mut prime_digits_index_min = 0;\n    let mut prime_digits_index_step\
    \ = 1;\n    let mut prime_digits_index_max = prime_digits_len - 1;\n    let mut\
    \ prime_digits_index_min = 0;\n    let mut prime_digits_index_step = 1;\n    let\
    \ mut prime_digits_index_max = prime_digits_len - 1;\n    let mut prime_digits_index_min\
    \ = 0;\n    let mut prime_digits_index_step = 1;\n    let mut prime_digits_index_max\
    \ = prime_digits_len - 1;\n    let mut prime_digits_index_min = 0;\n    let mut\
    \ prime_digits_index_step = 1;\n    let mut prime_digits_index_max = prime_digits_len\
    \ - 1;\n    let mut prime_digits_index_min = 0;\n    let mut prime_digits_index_step\
    \ = 1;\n    let mut prime_digits_index_max = prime_digits_len - 1;\n    let mut\
    \ prime_digits_index_min = 0;\n    let mut prime_digits_index_step = 1;\n    let\
    \ mut prime_digits_index_max = prime_digits_len - 1;\n    let mut prime_digits_index_min\
    \ = 0;\n    let mut prime_digits_index_step = 1;\n    let mut prime_digits_index_max\
    \ = prime_digits_len - 1;\n    let mut prime_digits_index_min = 0;\n    let mut\
    \ prime_digits_index_step = 1;\n    let mut prime_digits_index_max = prime_digits_len\
    \ - ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n   \
    \ let mut prime: Vec<u8> = vec![];\n    let mut prime_counter: usize = 0;\n  \
    \  let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n\
    \    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n\
    \    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: usize = 0;\n    let mut prime", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut result: Vec<u8> = vec![];\n\
    \    let mut i: usize = 0;\n    while i < num.len() {\n        let mut j: usize\
    \ = 0;\n        while j < prime.len() {\n            if num[i] == prime[j] {\n\
    \                result.push(num[i]);\n                break;\n            }\n\
    \            j += 1\n        }\n        i += 1;\n    }\n    result.len()", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ count = 1;\n    let mut prime_digits = vec![2, 3];\n    let mut prime_digits_count\
    \ = vec![2, 3];\n    let mut prime_digits_count_2 = vec![2, 3];\n    let mut prime_digits_count_3\
    \ = vec![2, 3];\n    let mut prime_digits_count_4 = vec![2, 3];\n    let mut prime_digits_count_5\
    \ = vec![2, 3];\n    let mut prime_digits_count_6 = vec![2, 3];\n    let mut prime_digits_count_7\
    \ = vec![2, 3];\n    let mut prime_digits_count_8 = vec![2, 3];\n    let mut prime_digits_count_9\
    \ = vec![2, 3];\n    let mut prime_digits_count_10 = vec![2, 3];\n    let mut\
    \ prime_digits_count_11 = vec![2, 3];\n    let mut prime_digits_count_12 = vec![2,\
    \ 3];\n    let mut prime_digits_count_13 = vec![2, 3];\n    let mut prime_digits_count_14\
    \ = vec![2, 3];\n    let mut prime_digits_count_15 = vec![2, 3];\n    let mut\
    \ prime_digits_count_16 = vec![2, 3];\n    let mut prime_digits_count_17 = vec![2,\
    \ 3];\n    let mut prime_digits_count_18 = vec![2, 3];\n    let mut prime_digits_count_19\
    \ = vec![2, 3];\n    let mut prime_digits_count_20 = vec![2, 3];\n    let mut\
    \ prime_digits_count_21 = vec![2, 3];\n    let mut prime_digits_count_22 = vec![2,\
    \ 3];\n    let mut prime_digits_count_23 = vec![2, 3];\n    let mut prime_digits_count_24\
    \ = vec![2, 3];\n    let mut prime_digits_count_25 = vec![2, 3];\n    let mut\
    \ prime_digits_count_26 = vec![2, 3];\n    let mut prime_digits_count_27 = vec![2,\
    \ 3];\n    let mut prime_digits_count_28 = vec![2, 3];\n    let mut prime_digits_count_29\
    \ = vec![2, 3];\n    let mut prime_digits_count_30 = vec![2, 3];\n    let mut\
    \ prime_digits_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut prime_digits = 2;\n    let mut\
    \ prime_digits_counter = 0;\n    let mut prime_digits_counter_2 = 0;\n    let\
    \ mut prime_digits_counter_3 = 0;\n    let mut prime_digits_counter_4 = 0;\n \
    \   let mut prime_digits_counter_5 = 0;\n    let mut prime_digits_counter_6 =\
    \ 0;\n    let mut prime_digits_counter_7 = 0;\n    let mut prime_digits_counter_8\
    \ = 0;\n    let mut prime_digits_counter_9 = 0;\n    let mut prime_digits_counter_10\
    \ = 0;\n    let mut prime_digits_counter_11 = 0;\n    let mut prime_digits_counter_12\
    \ = 0;\n    let mut prime_digits_counter_13 = 0;\n    let mut prime_digits_counter_14\
    \ = 0;\n    let mut prime_digits_counter_15 = 0;\n    let mut prime_digits_counter_16\
    \ = 0;\n    let mut prime_digits_counter_17 = 0;\n    let mut prime_digits_counter_18\
    \ = 0;\n    let mut prime_digits_counter_19 = 0;\n    let mut prime_digits_counter_20\
    \ = 0;\n    let mut prime_digits_counter_21 = 0;\n    let mut prime_digits_counter_22\
    \ = 0;\n    let mut prime_digits_counter_23 = 0;\n    let mut prime_digits_counter_24\
    \ = 0;\n    let mut prime_digits_counter_25 = 0;\n    let mut prime_digits_counter_26\
    \ = 0;\n    let mut prime_digits_counter_27 = 0;\n    let mut prime_digits_counter_28\
    \ = 0;\n    let mut prime_digits_counter_29 = 0;\n    let mut prime_digits_counter_30\
    \ = 0;\n    let mut prime_digits_counter_31 = 0;\n    let mut prime_digits_counter_32\
    \ = 0;\n    let mut prime_digits_counter_33 = 0;\n    let mut prime_digits_counter_34\
    \ = 0;\n    let mut prime_digits_counter_35 = 0;\n    let mut prime_digits_counter_36\
    \ = 0;\n    let mut prime_digits_counter_37 = 0;\n    let mut prime_digits_counter_38\
    \ = 0;\n    let mut prime_digits_counter_39 = 0;\n    let mut prime_digits_counter_40\
    \ = 0;\n    let mut prime_digits_counter_41 = 1;\n    let mut prime_digits_counter_42\
    \ = 0;\n    let mut prime_digits_counter_43 = 0;\n    let mut ", "    let mut\
    \ num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut prime_counter: usize = 0;\n    let mut\
    \ prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n    let\
    \ mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n   \
    \ let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut nums_len = nums.len();\n    let mut prime_digits = vec![false; 9];\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_sum\
    \ = 0;\n    let mut prime_digits_sum_len = 0;\n    let mut prime_digits_product\
    \ = 1;\n    let mut prime_digits_product_len = 0;\n    let mut prime_digits_product2\
    \ = 1;\n    let mut prime_digits_product2_len = 0;\n    let mut prime_digits_product3\
    \ = 1;\n    let mut prime_digits_product3_len = 0;\n    let mut prime_digits_product4\
    \ = 1;\n    let mut prime_digits_product4_len = 0;\n    let mut prime_digits_product5\
    \ = 1;\n    let mut prime_digits_product5_len = 0;\n    let mut prime_digits_product6\
    \ = 1;\n    let mut prime_digits_product6_len = 0;\n    let mut prime_digits_product7\
    \ = 1;\n    let mut prime_digits_product7_len = 0;\n    let mut prime_digits_product8\
    \ = 1;\n    let mut prime_digits_product8_len = 0;\n    let mut prime_digits_product9\
    \ = 1;\n    let mut prime_digits_product9_len = 0;\n    let mut prime_digits_product10\
    \ = 1;\n    let mut prime_digits_product10_len = 0;\n    let mut prime_digits_product11\
    \ = 1;\n    let mut prime_digits_product11_len = 0;\n    let mut prime_digits_product12\
    \ = 1;\n    let mut prime_digits_product12_len = 0;\n    let mut prime_digits_product13\
    \ = 1;\n    let mut prime_digits_product13_len = 0;\n    let mut prime_digits_product14\
    \ = 1;\n    let mut prime_digits_product14_len = 0;\n    let mut prime_digits_product15\
    \ = 1;\n    let mut prime_digits_product15_len = 0;\n    let mut prime_digits_product16\
    \ = 1;\n    let mut prime_digits_product16_len = 0;\n    let mut prime_digits_product17\
    \ = 1;\n    let mut prime_digits_product17_len = 0;\n    let mut prime_digits_product18\
    \ = 1;\n    let mut prime_digits_product18_len = 0;\n    let mut prime_digits_product19\
    \ = 1;\n    let mut prime_digits_product19_len = 0;\n    let ", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num: Vec<u8> =\
    \ num.iter().map(|c| match c {\n        'a' => 1,\n        'b' => 2,\n       \
    \ 'c' => 3,\n        'd' => 4,\n        'e' => 5,\n        'f' => 6,\n       \
    \ _ => 0,\n    }).collect();\n    let mut num: Vec<u8> = num.iter().map(|c| match\
    \ c {\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n        '3' =>\
    \ 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n        '7' =>\
    \ 7,\n        '8' => 8,\n        '9' => 9,\n        _ => 0,\n    }).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|c| match c {\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15,\n        _ => 0,\n    }).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|c| match c {\n        '2' => 2,\n        '3' => 3,\n     \
    \   '5' => 5,\n        '7' => 7,\n        'B' => 11,\n        'D' => 13,\n   \
    \     _ => 0,\n    }).collect();\n    let mut num: Vec<u8> = num.iter().map(|c|\
    \ match c {\n        '3' => 3,\n        '5' => 5,\n        '7' => 7,\n       \
    \ 'B' => 11,\n        'D' => 13,\n        _ => 0,\n    }).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().map(|c| match c {\n        '5' => 5,\n       \
    \ '7' => 7,\n        'B' => 11,\n        'D' => 13,\n        _ => 0,\n    }).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|c| match c {\n        '7' => 7,\n\
    \        'B' => 11,\n        'D' => 13,\n        _ => 0,\n    }).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|c| match c {\n        'B' => 11,\n\
    \        'D' => 13,\n        _ => 0,\n    }).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|c| match c {\n        'D' => 13,\n", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_2: Vec<u8> = vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19];\n    let mut num_prime_3: Vec<u8> = vec![2, 3, 5, 7, 11,\
    \ 13, 17, 19];\n    let mut num_prime_4: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19];\n    let mut num_prime_5: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n\
    \    let mut num_prime_6: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let\
    \ mut num_prime_7: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_8:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_9: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_10: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_11: Vec<u8> = vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19];\n    let mut num_prime_12: Vec<u8> = vec![2, 3, 5, 7, 11,\
    \ 13, 17, 19];\n    let mut num_prime_13: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19];\n    let mut num_prime_14: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n\
    \    let mut num_prime_15: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let\
    \ mut num_prime_16: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_17:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_18: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_19: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19];\n    let mut num_prime_20: Vec<u8> = vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19];\n    let mut num_prime_21: Vec<u8> = vec![2, 3, 5, 7, 11, ",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut counter:\
    \ usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_counter: usize\
    \ = 2;\n    let mut prime_counter2: usize = 2;\n    let mut prime_counter3: usize\
    \ = 2;\n    let mut prime_counter4: usize = 2;\n    let mut prime_counter5: usize\
    \ = 2;\n    let mut prime_counter6: usize = 2;\n    let mut prime_counter7: usize\
    \ = 2;\n    let mut prime_counter8: usize = 2;\n    let mut prime_counter9: usize\
    \ = 2;\n    let mut prime_counter10: usize = 2;\n    let mut prime_counter11:\
    \ usize = 2;\n    let mut prime_counter12: usize = 2;\n    let mut prime_counter13:\
    \ usize = 2;\n    let mut prime_counter14: usize = 2;\n    let mut prime_counter15:\
    \ usize = 2;\n    let mut prime_counter16: usize = 2;\n    let mut prime_counter17:\
    \ usize = 2;\n    let mut prime_counter18: usize = 2;\n    let mut prime_counter19:\
    \ usize = 2;\n    let mut prime_counter20: usize = 2;\n    let mut prime_counter21:\
    \ usize = 2;\n    let mut prime_counter22: usize = 2;\n    let mut prime_counter23:\
    \ usize = 2;\n    let mut prime_counter24: usize = 2;\n    let mut prime_counter25:\
    \ usize = 2;\n    let mut prime_counter26: usize = 2;\n    let mut prime_counter27:\
    \ usize = 2;\n    let mut prime_counter28: usize = 2;\n    let mut prime_counter29:\
    \ usize = 2;\n    let mut prime_counter30: usize = 2;\n    let mut prime_counter31:\
    \ usize = 2;\n    let mut prime_counter32: usize = 2;\n    let mut prime_counter33:\
    \ usize = 2;\n    let mut prime_counter34: usize = 2;\n    let mut prime_counter35:\
    \ usize = 2;\n    let mut prime_counter36: usize = 2;\n    let mut prime_counter37:\
    \ usize = 2;\n    let mut prime_counter38: usize = 2;\n    let mut prime_counter39:\
    \ usize = 2;\n    let mut prime_counter40: usize = 2;\n", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_digits = num.len();\n\
    \    let mut num_primes = 0;\n    let mut num_primes_digits = 0;\n    let mut\
    \ num_primes_digits_primes = 0;\n    let mut num_primes_digits_primes_primes =\
    \ 0;\n    let mut num_primes_digits_primes_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes = 0;\n\
    \    let mut num_primes_digits_primes_primes_primes_primes_primes_primes = 0;\n\
    \    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_prime",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num_prime:\
    \ Vec<u8> = vec![0; 8];\n    let mut num_prime_counter: usize = 0;\n    let mut\
    \ num_prime_counter2: usize = 0;\n    let mut num_prime_counter3: usize = 0;\n\
    \    let mut num_prime_counter4: usize = 0;\n    let mut num_prime_counter5: usize\
    \ = 0;\n    let mut num_prime_counter6: usize = 0;\n    let mut num_prime_counter7:\
    \ usize = 0;\n    let mut num_prime_counter8: usize = 0;\n    let mut num_prime_counter9:\
    \ usize = 0;\n    let mut num_prime_counter10: usize = 0;\n    let mut num_prime_counter11:\
    \ usize = 0;\n    let mut num_prime_counter12: usize = 0;\n    let mut num_prime_counter13:\
    \ usize = 0;\n    let mut num_prime_counter14: usize = 0;\n    let mut num_prime_counter15:\
    \ usize = 0;\n    let mut num_prime_counter16: usize = 0;\n    let mut num_prime_counter17:\
    \ usize = 0;\n    let mut num_prime_counter18: usize = 0;\n    let mut num_prime_counter19:\
    \ usize = 0;\n    let mut num_prime_counter20: usize = 0;\n    let mut num_prime_counter21:\
    \ usize = 0;\n    let mut num_prime_counter22: usize = 0;\n    let mut num_prime_counter23:\
    \ usize = 0;\n    let mut num_prime_counter24: usize = 0;\n    let mut num_prime_counter25:\
    \ usize = 0;\n    let mut num_prime_counter26: usize = 0;\n    let mut num_prime_counter27:\
    \ usize = 0;\n    let mut num_prime_counter28: usize = 0;\n    let mut num_prime_counter29:\
    \ usize = 0;\n    let mut num_prime_counter30: usize = 0;\n    let mut num_prime_counter31:\
    \ usize = 0;\n    let mut num_prime_counter32: usize = 0;\n    let mut num_prime_counter33:\
    \ usize = 0;\n    let mut num_prime_counter34: usize = 0;\n    let mut num_prime_counter35:\
    \ usize = 0;\n    let mut num_prime_counter36: usize = 0;\n    let mut num_prime_counter37:\
    \ usize = 0;\n", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter: usize\
    \ = 0;\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2: usize\
    \ = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4: usize\
    \ = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6: usize\
    \ = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8: usize\
    \ = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10: usize\
    \ = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_prime: Vec<u8> = num.clone();\
    \ // clone num\n    num_prime.pop();\n    let mut num_prime_prime: Vec<u8> = num_prime.clone();\
    \ // clone num_prime\n    num_prime_prime.pop();\n    let mut num_prime_prime_prime:\
    \ Vec<u8> = num_prime_prime.clone(); // clone num_prime_prime\n    num_prime_prime_prime.pop();\n\
    \    let mut num_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime.clone();\
    \ // clone num_prime_prime_prime\n    num_prime_prime_prime_prime.pop();\n   \
    \ let mut num_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime.clone();\
    \ // clone num_prime_prime_prime_prime\n    num_prime_prime_prime_prime_prime.pop();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime.clone();\
    \ // clone num_prime_prime_prime_prime_prime\n    num_prime_prime_prime_prime_prime_prime.pop();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime.clone();\
    \ // clone num_prime_prime_prime_prime_prime_prime\n    num_prime_prime_prime_prime_prime_prime.pop();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime.clone();\
    \ // clone num_prime_prime_prime_prime_prime_prime_prime\n    num_prime_prime_prime_prime_prime_prime_prime.pop();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime_prime.clone();\
    \ // clone num_prime_prime_prime_prime_prime_prime_prime_prime\n    num_prime_prime_prime_prime_prime_prime_prime_prime.pop();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x.to_digit(16)).collect();\n", "    let mut\
    \ num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime: isize = 2;\n    while prime < num.len() {\n \
    \       if num[prime] == '0' {\n            prime_count = prime_count + 1;\n \
    \       }\n        prime = prime + 2;\n    }\n    prime_count", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut count: usize =\
    \ 0;\n    let mut prime: usize = 2;\n    let mut prime_found = false;\n    let\
    \ mut prime_found2 = false;\n    let mut prime_found3 = false;\n    let mut prime_found4\
    \ = false;\n    let mut prime_found5 = false;\n    let mut prime_found6 = false;\n\
    \    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n    let\
    \ mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let mut prime_found11\
    \ = false;\n    let mut prime_found12 = false;\n    let mut prime_found13 = false;\n\
    \    let mut prime_found14 = false;\n    let mut prime_found15 = false;\n    let\
    \ mut prime_found16 = false;\n    let mut prime_found17 = false;\n    let mut\
    \ prime_found18 = false;\n    let mut prime_found19 = false;\n    let mut prime_found20\
    \ = false;\n    let mut prime_found21 = false;\n    let mut prime_found22 = false;\n\
    \    let mut prime_found23 = false;\n    let mut prime_found24 = false;\n    let\
    \ mut prime_found25 = false;\n    let mut prime_found26 = false;\n    let mut\
    \ prime_found27 = false;\n    let mut prime_found28 = false;\n    let mut prime_found29\
    \ = false;\n    let mut prime_found30 = false;\n    let mut prime_found31 = false;\n\
    \    let mut prime_found32 = false;\n    let mut prime_found33 = false;\n    let\
    \ mut prime_found34 = false;\n    let mut prime_found35 = false;\n    let mut\
    \ prime_found36 = false;\n    let mut prime_found37 = false;\n    let mut prime_found38\
    \ = false;\n    let mut prime_found39 = false;\n    let mut prime_found40 = false;\n\
    \    let mut prime_found41 = false;\n    let mut prime_found42 = false;\n    let\
    \ mut prime_found43 = false;\n    let mut prime_found44 = false;\n    let mut\
    \ prime_found45 = false;\n    let mut prime_found46 = false;\n    let mut prime_found47\
    \ = false;\n    let mut prime_found48 = false;\n    let mut prime_found49 = false;\n\
    \    let mut prime_found50 = false;\n    let mut prime_found51 = false;\n    let\
    \ mut prime_found52 = false;\n    let ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut prime_digits = false;\n    let\
    \ mut prime_number = 0;\n    let mut prime_number_counter = 0;\n    let mut prime_number_counter2\
    \ = 0;\n    let mut prime_number_counter3 = 0;\n    let mut prime_number_counter4\
    \ = 0;\n    let mut prime_number_counter5 = 0;\n    let mut prime_number_counter6\
    \ = 0;\n    let mut prime_number_counter7 = 0;\n    let mut prime_number_counter8\
    \ = 0;\n    let mut prime_number_counter9 = 0;\n    let mut prime_number_counter10\
    \ = 0;\n    let mut prime_number_counter11 = 0;\n    let mut prime_number_counter12\
    \ = 0;\n    let mut prime_number_counter13 = 0;\n    let mut prime_number_counter14\
    \ = 0;\n    let mut prime_number_counter15 = 0;\n    let mut prime_number_counter16\
    \ = 0;\n    let mut prime_number_counter17 = 0;\n    let mut prime_number_counter18\
    \ = 0;\n    let mut prime_number_counter19 = 0;\n    let mut prime_number_counter20\
    \ = 0;\n    let mut prime_number_counter21 = 0;\n    let mut prime_number_counter22\
    \ = 0;\n    let mut prime_number_counter23 = 0;\n    let mut prime_number_counter24\
    \ = 0;\n    let mut prime_number_counter25 = 0;\n    let mut prime_number_counter26\
    \ = 0;\n    let mut prime_number_counter27 = 0;\n    let mut prime_number_counter28\
    \ = 0;\n    let mut prime_number_counter29 = 0;\n    let mut prime_number_counter30\
    \ = 0;\n    let mut prime_number_counter31 = 0;\n    let mut prime_number_counter32\
    \ = 0;\n    let mut prime_number_counter33 = 0;\n    let mut prime_number_counter34\
    \ = 0;\n    let mut prime_number_counter35 = 0;\n    let mut prime_number_counter36\
    \ = 0;\n    let mut prime_number_counter37 = 0;\n    let mut prime_number_counter38\
    \ = 0;\n    let mut prime_number_counter39 = 0;\n    let mut prime_number_counter40\
    \ = 0;\n    let mut prime_number_counter41 = 0;\n    let mut prime_number_counter42\
    \ = 0;\n    let mut prime_number_counter43 = 0;\n    let mut prime_number_counter44\
    \ = 0;\n    let mut prime_number_counter45 = 0;\n    let mut prime_number_counter46\
    \ = 0;\n    let mut prime_number_counter47 = 0;\n", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut prime: Vec<u8> = vec![2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97];\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2:\
    \ usize = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4:\
    \ usize = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6:\
    \ usize = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8:\
    \ usize = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10:\
    \ usize = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n    let mut prime_counter38:\
    \ u", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let\
    \ mut prime_count: isize = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_sum: isize = 0;\n    let mut prime_digit_sum2:\
    \ isize = 0;\n    let mut prime_digit_sum3: isize = 0;\n    let mut prime_digit_sum4:\
    \ isize = 0;\n    let mut prime_digit_sum5: isize = 0;\n    let mut prime_digit_sum6:\
    \ isize = 0;\n    let mut prime_digit_sum7: isize = 0;\n    let mut prime_digit_sum8:\
    \ isize = 0;\n    let mut prime_digit_sum9: isize = 0;\n    let mut prime_digit_sum10:\
    \ isize = 0;\n    let mut prime_digit_sum11: isize = 0;\n    let mut prime_digit_sum12:\
    \ isize = 0;\n    let mut prime_digit_sum13: isize = 0;\n    let mut prime_digit_sum14:\
    \ isize = 0;\n    let mut prime_digit_sum15: isize = 0;\n    let mut prime_digit_sum16:\
    \ isize = 0;\n    let mut prime_digit_sum17: isize = 0;\n    let mut prime_digit_sum18:\
    \ isize = 0;\n    let mut prime_digit_sum19: isize = 0;\n    let mut prime_digit_sum20:\
    \ isize = 0;\n    let mut prime_digit_sum21: isize = 0;\n    let mut prime_digit_sum22:\
    \ isize = 0;\n    let mut prime_digit_sum23: isize = 0;\n    let mut prime_digit_sum24:\
    \ isize = 0;\n    let mut prime_digit_sum25: isize = 0;\n    let mut prime_digit_sum26:\
    \ isize = 0;\n    let mut prime_digit_sum27: isize = 0;\n    let mut prime_digit_sum28:\
    \ isize = 0;\n    let mut prime_digit_sum29: isize = 0;\n    let mut prime_digit_sum30:\
    \ isize = 0;\n    let mut prime_digit_sum31: isize = 0;\n    let mut prime_digit_sum32:\
    \ isize = 0;\n    let mut prime_digit_sum33: isize = 0;\n    let mut prime_digit_sum34:\
    \ isize = 0;\n    let mut prime_digit_sum35: isize = 0;\n    let mut prime_digit_sum36:\
    \ isize = 0;", "    let mut num: isize = 0;\n    let mut nums: Vec<isize> = num.chars().collect();\n\
    \    let mut prime_digits: Vec<isize> = vec![2, 3];\n    let mut prime_digits_count:\
    \ usize = 0;\n    let mut prime_digits_count_2: usize = 0;\n    let mut prime_digits_count_3:\
    \ usize = 0;\n    let mut prime_digits_count_4: usize = 0;\n    let mut prime_digits_count_5:\
    \ usize = 0;\n    let mut prime_digits_count_6: usize = 0;\n    let mut prime_digits_count_7:\
    \ usize = 0;\n    let mut prime_digits_count_8: usize = 0;\n    let mut prime_digits_count_9:\
    \ usize = 0;\n    let mut prime_digits_count_10: usize = 0;\n    let mut prime_digits_count_11:\
    \ usize = 0;\n    let mut prime_digits_count_12: usize = 0;\n    let mut prime_digits_count_13:\
    \ usize = 0;\n    let mut prime_digits_count_14: usize = 0;\n    let mut prime_digits_count_15:\
    \ usize = 0;\n    let mut prime_digits_count_16: usize = 0;\n    let mut prime_digits_count_17:\
    \ usize = 0;\n    let mut prime_digits_count_18: usize = 0;\n    let mut prime_digits_count_19:\
    \ usize = 0;\n    let mut prime_digits_count_20: usize = 0;\n    let mut prime_digits_count_21:\
    \ usize = 0;\n    let mut prime_digits_count_22: usize = 0;\n    let mut prime_digits_count_23:\
    \ usize = 0;\n    let mut prime_digits_count_24: usize = 0;\n    let mut prime_digits_count_25:\
    \ usize = 0;\n    let mut prime_digits_count_26: usize = 0;\n    let mut prime_digits_count_27:\
    \ usize = 0;\n    let mut prime_digits_count_28: usize = 0;\n    let mut prime_digits_count_29:\
    \ usize = 0;\n    let mut prime_digits_count_30: usize = 0;\n    let mut prime_digits_count_31:\
    \ usize = 0;\n    let mut prime_digits_count_32: usize = 0;\n    let mut prime_digits_count_33:\
    \ usize = 0;\n    let mut prime_digits_count_34: ", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut prime: isize = 0;\n    let\
    \ mut prime_found = false;\n    let mut prime_found2 = false;\n    let mut prime_found3\
    \ = false;\n    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n\
    \    let mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let\
    \ mut prime_found8 = false;\n    let mut prime_found9 = false;\n    let mut prime_found10\
    \ = false;\n    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n\
    \    let mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let\
    \ mut prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut\
    \ prime_found17 = false;\n    let mut prime_found18 = false;\n    let mut prime_found19\
    \ = false;\n    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n\
    \    let mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let\
    \ mut prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut\
    \ prime_found26 = false;\n    let mut prime_found27 = false;\n    let mut prime_found28\
    \ = false;\n    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n\
    \    let mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let\
    \ mut prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut\
    \ prime_found35 = false;\n    let mut prime_found36 = false;\n    let mut prime_found37\
    \ = false;\n    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n\
    \    let mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let\
    \ mut prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut\
    \ prime_found44 = false;\n    let mut prime_found45 = false;\n    let mut prime_found46\
    \ = false;\n    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n\
    \    let mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let\
    \ mut prime_found51 = false;\n    let mut prime_found52 = false;\n    let mut\
    \ prime_found53 = false;", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![];\n    let mut prime_counter: usize = 0;\n\
    \    let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n\
    \    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n\
    \    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: usize = 0;\n    let mut prime", " \
    \   let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime:\
    \ Vec<u8> = Vec::new();\n    let mut prime_count: usize = 0;\n    let mut prime_digit:\
    \ u8 = 0;\n    let mut prime_digit_count: usize = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value:\
    \ u8 = 0;\n    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_value: ",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| *x).collect();\n    let mut num: Vec<u8> =\
    \ num.into_iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.into_iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.into_iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().map(|x| *x).collect();\n    let mut\
    \ num: Vec<u8> = num.into_iter().map(|x| *x).collect();\n    let mut num: Vec<u8>\
    \ = num.into_iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.into_iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.into_iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().map(|x| *x).collect();\n    let mut\
    \ num: Vec<u8> = num.into_iter().map(|x| *x).collect();\n    let mut num: Vec<u8>\
    \ = num.into_iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.into_iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.into_iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().map(|x| *x).collect();\n    let mut\
    \ num: Vec<u8> = num.into_iter().map(|x| *x).collect();\n    let mut num: Vec<u8>\
    \ = num.into_iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.into_iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.into_iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().map(|", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2:\
    \ usize = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4:\
    \ usize = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6:\
    \ usize = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8:\
    \ usize = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10:\
    \ usize = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n    let mut prime_counter38:\
    \ u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.in", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut count: isize = 0;\n    let mut prime: isize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![];\n    let mut prime_counter: usize = 0;\n\
    \    let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n\
    \    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n\
    \    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: usize = 0;\n    let mut prime", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ num_digits = num.len();\n    let mut num_primes = 0;\n    let mut num_primes_digits\
    \ = 0;\n    let mut num_primes_digits_prime = 0;\n    let mut num_primes_digits_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime = 0;\n    let mut num_primes_digits_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime = 0;\n   \
    \ let mut num_primes_digits_prime_prime_prime_prime_prime_prime = 0;\n    let\
    \ mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime = 0;\n    let\
    \ mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime = 0;\n\
    \    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_primes_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let\
    \ mut count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    loop {\n        if num[count] == b'A' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'B' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'C' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'D' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'E' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'F' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'0' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'1' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'2' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'3' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'4' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'5' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'6' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'7' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'8' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'9' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'A' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'B' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'C' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'D' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'E' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'F' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'0' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'1' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'2' {\n            prime_found\
    \ = true;\n        }\n        if num[count] == b'3' {\n            prime_found\
    \ = true;\n        }\n", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut counter: usize = 0;\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|c| match c {\n        'a' => 0xa,\n\
    \        'b' => 0xb,\n        'c' => 0xc,\n        'd' => 0xd,\n        'e' =>\
    \ 0xe,\n        'f' => 0xf,\n        _ => c,\n    }).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|c| match c {\n        '0' => 0x0,\n        '1' =>\
    \ 0x1,\n        '2' => 0x2,\n        '3' => 0x3,\n        '4' => 0x4,\n      \
    \  '5' => 0x5,\n        '6' => 0x6,\n        '7' => 0x7,\n        '8' => 0x8,\n\
    \        '9' => 0x9,\n        _ => c,\n    }).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|c| match c {\n        'A' => 0xa,\n        'B' => 0xb,\n \
    \       'C' => 0xc,\n        'D' => 0xd,\n        'E' => 0xe,\n        'F' =>\
    \ 0xf,\n        _ => c,\n    }).collect();\n    let mut num: Vec<u8> = num.iter().map(|c|\
    \ match c {\n        '2' => 0x2,\n        '3' => 0x3,\n        '5' => 0x5,\n \
    \       '7' => 0x7,\n        'B' => 0xb,\n        'D' => 0xd,\n        _ => c,\n\
    \    }).collect();\n    let mut num: Vec<u8> = num.iter().map(|c| match c {\n\
    \        '3' => 0x3,\n        '5' => 0x5,\n        '7' => 0x7,\n        'B' =>\
    \ 0xb,\n        'D' => 0xd,\n        _ => c,\n    }).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|c| match c {\n        '5' => 0x5,\n        '7' =>\
    \ 0x7,\n        'B' => 0xb,\n        'D' => 0xd,\n        _ => c,\n    }).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|c| match c {\n        '7' => 0x7,\n\
    \        'B' => 0xb,\n        'D' => 0xd,\n        _ => c,\n    }).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|c| match c {\n        'B' => 0xb,\n\
    \        '", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut num_primes = 0;\n    let mut\
    \ num_primes_digits = 0;\n    let mut num_primes_digits_primes = 0;\n    let mut\
    \ num_primes_digits_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes = 0;\n    let\
    \ mut num_primes_digits_primes_primes_primes_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_prime", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_str: String = String::new();\n    let mut num_str2: String =\
    \ String::new();\n    let mut num_str3: String = String::new();\n    let mut num_str4:\
    \ String = String::new();\n    let mut num_str5: String = String::new();\n   \
    \ let mut num_str6: String = String::new();\n    let mut num_str7: String = String::new();\n\
    \    let mut num_str8: String = String::new();\n    let mut num_str9: String =\
    \ String::new();\n    let mut num_str10: String = String::new();\n    let mut\
    \ num_str11: String = String::new();\n    let mut num_str12: String = String::new();\n\
    \    let mut num_str13: String = String::new();\n    let mut num_str14: String\
    \ = String::new();\n    let mut num_str15: String = String::new();\n    let mut\
    \ num_str16: String = String::new();\n    let mut num_str17: String = String::new();\n\
    \    let mut num_str18: String = String::new();\n    let mut num_str19: String\
    \ = String::new();\n    let mut num_str20: String = String::new();\n    let mut\
    \ num_str21: String = String::new();\n    let mut num_str22: String = String::new();\n\
    \    let mut num_str23: String = String::new();\n    let mut num_str24: String\
    \ = String::new();\n    let mut num_str25: String = String::new();\n    let mut\
    \ num_str26: String = String::new();\n    let mut num_str27: String = String::new();\n\
    \    let mut num_str28: String = String::new();\n    let mut num_str29: String\
    \ = String::new();\n    let mut num_str30: String = String::new();\n    let mut\
    \ num_str31: String = String::new();\n    let mut num_str32: String = String::new();\n\
    \    let mut num_str33: String = String::new();\n    let mut num_str34: String\
    \ = String::new();\n    let mut num_str35: String = String::new();\n    let mut\
    \ num_str36: String = String::new();\n    let mut num_str37: String = String::new();\n\
    \    let mut num_str38: String = String::new();\n    let mut num_", "    let mut\
    \ num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut prime_counter: usize = 0;\n    let mut\
    \ prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n    let\
    \ mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n   \
    \ let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut nums_iter = nums.iter();\n    let mut nums_len = nums.len();\n  \
    \  let mut prime_digits = vec![false; 10];\n    let mut prime_digits_iter = prime_digits.iter();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_iter\
    \ = prime_digits.iter();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_iter = prime_digits.iter();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_iter = prime_digits.iter();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_iter\
    \ = prime_digits.iter();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_iter = prime_digits.iter();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_iter = prime_digits.iter();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_iter\
    \ = prime_digits.iter();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_iter = prime_digits.iter();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_iter = prime_digits.iter();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_iter\
    \ = prime_digits.iter();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_iter = prime_digits.iter();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_iter = prime_digits.iter();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_iter\
    \ = prime_digits.iter();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_iter = prime_digits.iter();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_iter = prime_digits.iter();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_iter\
    \ = prime_digits.", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'a' && c != 'b' && c !=\
    \ 'c' && c != 'd' && c != 'e' && c != 'f').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != '0').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c != '1').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c !=\
    \ '2').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c != '3').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != '4').collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|&c| c != '5').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c != '6').collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c != '7').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != '8').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c != '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c !=\
    \ 'A').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'B').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c != 'C').collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|&c| c != 'D').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c != 'E').collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c != 'F').collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|&c| c != 'a').collect();\n    let mut num: ", "    let\
    \ mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num: Vec<u8>\
    \ = num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n",
  "    let mut nums = num.chars().collect::<Vec<_>>();\n    let mut nums_len = nums.len();\n\
    \    let mut prime_digits = vec![2, 3];\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_count = prime_digits_len;\n    let mut prime_digits_count_max\
    \ = prime_digits_len;\n    let mut prime_digits_count_min = prime_digits_len;\n\
    \    let mut prime_digits_count_max_prime_digits = prime_digits_len;\n    let\
    \ mut prime_digits_count_min_prime_digits = prime_digits_len;\n    let mut prime_digits_count_max_prime_digits_prime_digits\
    \ = prime_digits_len;\n    let mut prime_digits_count_min_prime_digits_prime_digits\
    \ = prime_digits_len;\n    let mut prime_digits_count_max_prime_digits_prime_digits_prime_digits\
    \ = prime_digits_len;\n    let mut prime_digits_count_min_prime_digits_prime_digits_prime_digits\
    \ = prime_digits_len;\n    let mut prime_digits_count_max_prime_digits_prime_digits_prime_digits_prime_digits\
    \ = prime_digits_len;\n    let mut prime_digits_count_min_prime_digits_prime_digits_prime_digits_prime_digits\
    \ = prime_digits_len;\n    let mut prime_digits_count_max_prime_digits_prime_digits_prime_digits_prime_digits_prime_digits\
    \ = prime_digits_len;\n    let mut prime_digits_count_min_prime_digits_prime_digits_prime_digits_prime_digits_prime_digits\
    \ = prime_digits_len;\n    let mut prime_digits_count_max_prime_digits_prime_digits_prime_digits_prime_digits_prime_digits_prime_digits\
    \ = prime_digits_len;\n    let mut prime_digits_count_min_prime_digits_prime_digits_prime_digits_prime_digits_prime_digits_prime_digits\
    \ = prime_digits_len;\n    let mut prime_digits_count_max_prime_digits_prime_digits_prime_digits_prime_digits_prime_digits_prime_digits_prime_digits\
    \ = prime_digits_len;\n    let mut prime_digits_count_min_prime_digits_prime_digits_prime_digits_prime",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|x| x % 2 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x|\
    \ x % 3 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x %\
    \ 5 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 7 ==\
    \ 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 11 == 0).collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|x| x % 13 == 0).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().filter(|x| x % 17 == 0).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|x| x % 19 == 0).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|x| x % 23 == 0).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|x| x % 29 == 0).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|x| x % 31 == 0).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().filter(|x| x % 37 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x|\
    \ x % 41 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x\
    \ % 43 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x %\
    \ 47 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 53\
    \ == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 59 ==\
    \ 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 61 == 0).collect();\n\
    \    let ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n \
    \   let mut count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter: usize = 0;\n  \
    \  let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n\
    \    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n\
    \    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut num_digits = nums.len();\n    let mut num_primes = 0;\n    let mut\
    \ num_primes_digits = 0;\n    let mut num_primes_digits_primes = 0;\n    let mut\
    \ num_primes_digits_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes = 0;\n    let\
    \ mut num_primes_digits_primes_primes_primes_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_prime", "    let mut num: isize = 0;\n \
    \   let mut num_digits = num.chars().count();\n    let mut num_primes = 0;\n \
    \   while num_digits > 0 {\n        let mut digit = num_digits;\n        let mut\
    \ num_digits = 0;\n        while digit > 0 {\n            let mut digit = num.chars().next().unwrap().to_digit(16).unwrap();\n\
    \            if digit % 2 == 0 {\n                digit /= 2;\n              \
    \  num_digits += 1;\n            }\n        }\n        if num_digits == 2 {\n\
    \            num_primes += 1;\n        }\n        num_digits -= 1;\n    }\n  \
    \  num_primes", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_digit: Vec<u8> = vec![2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\
    \ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\
    \ 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,\
    \ 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99];\n    let mut prime_digit_len\
    \ = prime_digit.len();\n    let mut prime_digit_count: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_digit_count_len = prime_digit_count.len();\n\
    \    let mut prime_digit_count_len2 = prime_digit_count_len.clone();\n    let\
    \ mut prime_digit_count_len3 = prime_digit_count_len2.clone();\n    let mut prime_digit_count_len4\
    \ = prime_digit_count_len3.clone();\n    let mut prime_digit_count_len5 = prime_digit_count_len4.clone();\n\
    \    let mut prime_digit_count_len6 = prime_digit_count_len5.clone();\n    let\
    \ mut prime_digit_count_len7 = prime_digit_count_len6.clone();\n    let mut prime_digit_count_len8\
    \ = prime_digit_count_len7.clone();\n    let mut prime_digit_count_len9 = prime_digit_count_len8.clone();\n\
    \    let mut prime_digit_count_len10 = prime_digit_count_len9.clone();\n    let\
    \ mut prime_digit_count_len11 = prime_digit_count_len10.clone();\n    let mut\
    \ prime_digit_count_len12 = prime_digit_count_len11.clone();\n    let mut prime_digit_count_len13\
    \ = prime_digit_count_len12.clone();\n    let mut prime_digit_count_len14 = prime_digit_count_len13.clone();\n\
    \    let mut prime_digit_count_len15 = prime_digit_count_len14.clone();\n    let\
    \ mut prime_digit_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter: usize\
    \ = 0;\n    for &c in num {\n        if prime == vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n\
    \            counter = counter + 1;\n        }\n        if prime == vec![2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97] {\n            counter = counter + 1;\n        }\n        if prime\
    \ == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97] {\n            counter = counter + 1;\n        }\n\
    \        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter = counter\
    \ + 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ = counter + 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n\
    \            counter = counter + 1;\n        }\n        if prime == vec![2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97] {\n            counter = counter + 1;\n        }\n        if prime\
    \ == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97] {\n            counter = counter + 1;\n        }\n\
    \        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter = counter\
    \ + 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_digits = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits_len.saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.len() / 2).saturating_add((num.len() / 2).saturating_add((num.len()\
    \ / 2).saturating_add((num.", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut prime_digits = vec![];\n   \
    \ let mut prime_numbers = vec![];\n    let mut prime_numbers_len = prime_numbers.len();\n\
    \    let mut prime_numbers_len = prime_numbers.len();\n    let mut prime_numbers_len\
    \ = prime_numbers.len();\n    let mut prime_numbers_len = prime_numbers.len();\n\
    \    let mut prime_numbers_len = prime_numbers.len();\n    let mut prime_numbers_len\
    \ = prime_numbers.len();\n    let mut prime_numbers_len = prime_numbers.len();\n\
    \    let mut prime_numbers_len = prime_numbers.len();\n    let mut prime_numbers_len\
    \ = prime_numbers.len();\n    let mut prime_numbers_len = prime_numbers.len();\n\
    \    let mut prime_numbers_len = prime_numbers.len();\n    let mut prime_numbers_len\
    \ = prime_numbers.len();\n    let mut prime_numbers_len = prime_numbers.len();\n\
    \    let mut prime_numbers_len = prime_numbers.len();\n    let mut prime_numbers_len\
    \ = prime_numbers.len();\n    let mut prime_numbers_len = prime_numbers.len();\n\
    \    let mut prime_numbers_len = prime_numbers.len();\n    let mut prime_numbers_len\
    \ = prime_numbers.len();\n    let mut prime_numbers_len = prime_numbers.len();\n\
    \    let mut prime_numbers_len = prime_numbers.len();\n    let mut prime_numbers_len\
    \ = prime_numbers.len();\n    let mut prime_numbers_len = prime_numbers.len();\n\
    \    let mut prime_numbers_len = prime_numbers.len();\n    let mut prime_numbers_len\
    \ = prime_numbers.len();\n    let mut prime_numbers_len = prime_numbers.len();\n\
    \    let mut prime_numbers_len = prime_numbers.len();\n    let mut prime_numbers_len\
    \ = prime_numbers.len();\n    let mut prime_numbers_len = prime_numbers.len();\n\
    \    let mut prime_numbers_len = prime_numbers.len();\n    let mut prime_numbers_len\
    \ = prime_numbers.len();\n    let mut prime_numbers_len = prime_numbers.len();\n\
    \    let mut prime_numbers_len = prime_numbers.len();\n    let mut prime_numbers_len\
    \ = prime_numbers.len", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_str: String = String::new();\n    let mut num_hex: String = String::new();\n\
    \    let mut num_hex_len: usize = 0;\n    let mut num_hex_len_len: usize = 0;\n\
    \    let mut num_hex_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;\n    let mut num_hex_len_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;\n    let mut num_hex_len_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;\n    let mut num_hex_len_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;\n    let mut num_hex_len_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;\n    let mut num_hex_len_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;\n    let mut num_hex_len_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;\n    let mut num_hex_len_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;\n    let mut num_hex_len_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;\n    let mut num_hex_len_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;\n    let mut num_hex_len_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;\n    let mut num_hex_len_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;\n    let mut num_hex_len_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;\n    let mut num_hex_len_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;\n    let mut num_hex_len_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;\n    let mut num_hex_len_len_len_len: usize = 0;\n    let mut num_hex_len_len_len_len:\
    \ usize = 0;", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: u", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut num_primes = 0;\n    let mut num_digits = 0;\n    let mut num_digits_prime\
    \ = 0;\n    let mut num_digits_prime_prime = 0;\n    let mut num_digits_prime_prime_prime\
    \ = 0;\n    let mut num_digits_prime_prime_prime_prime = 0;\n    let mut num_digits_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_digits_prime_prime_prime_prime_prime_prime = 0;\n    let\
    \ mut num_digits_prime_prime_prime_prime_prime_prime_prime = 0;\n    let mut num_digits_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_digits_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut num_digits_prime_prime_prime_prime_prime_prime_prime_prime_",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut digits: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_digits: Vec<u8> = vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19];\n    let mut prime_digits_count: usize = 0;\n    let mut\
    \ prime_digits_sum: usize = 0;\n    let mut prime_digits_product: usize = 1;\n\
    \    let mut prime_digits_product2: usize = 1;\n    let mut prime_digits_product3:\
    \ usize = 1;\n    let mut prime_digits_product4: usize = 1;\n    let mut prime_digits_product5:\
    \ usize = 1;\n    let mut prime_digits_product6: usize = 1;\n    let mut prime_digits_product7:\
    \ usize = 1;\n    let mut prime_digits_product8: usize = 1;\n    let mut prime_digits_product9:\
    \ usize = 1;\n    let mut prime_digits_product10: usize = 1;\n    let mut prime_digits_product11:\
    \ usize = 1;\n    let mut prime_digits_product12: usize = 1;\n    let mut prime_digits_product13:\
    \ usize = 1;\n    let mut prime_digits_product14: usize = 1;\n    let mut prime_digits_product15:\
    \ usize = 1;\n    let mut prime_digits_product16: usize = 1;\n    let mut prime_digits_product17:\
    \ usize = 1;\n    let mut prime_digits_product18: usize = 1;\n    let mut prime_digits_product19:\
    \ usize = 1;\n    let mut prime_digits_product20: usize = 1;\n    let mut prime_digits_product21:\
    \ usize = 1;\n    let mut prime_digits_product22: usize = 1;\n    let mut prime_digits_product23:\
    \ usize = 1;\n    let mut prime_digits_product24: usize = 1;\n    let mut prime_digits_product25:\
    \ usize = 1;\n    let mut prime_digits_product26: usize = 1;\n    let mut prime_digits_product27:\
    \ usize = 1;\n    let mut prime_digits_product28: usize = 1;\n    let mut prime_digits_product29:\
    \ usize = 1;\n    let mu", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![];\n    let mut num_prime_counter: usize\
    \ = 0;\n    let mut num_prime_counter2: usize = 0;\n    let mut num_prime_counter3:\
    \ usize = 0;\n    let mut num_prime_counter4: usize = 0;\n    let mut num_prime_counter5:\
    \ usize = 0;\n    let mut num_prime_counter6: usize = 0;\n    let mut num_prime_counter7:\
    \ usize = 0;\n    let mut num_prime_counter8: usize = 0;\n    let mut num_prime_counter9:\
    \ usize = 0;\n    let mut num_prime_counter10: usize = 0;\n    let mut num_prime_counter11:\
    \ usize = 0;\n    let mut num_prime_counter12: usize = 0;\n    let mut num_prime_counter13:\
    \ usize = 0;\n    let mut num_prime_counter14: usize = 0;\n    let mut num_prime_counter15:\
    \ usize = 0;\n    let mut num_prime_counter16: usize = 0;\n    let mut num_prime_counter17:\
    \ usize = 0;\n    let mut num_prime_counter18: usize = 0;\n    let mut num_prime_counter19:\
    \ usize = 0;\n    let mut num_prime_counter20: usize = 0;\n    let mut num_prime_counter21:\
    \ usize = 0;\n    let mut num_prime_counter22: usize = 0;\n    let mut num_prime_counter23:\
    \ usize = 0;\n    let mut num_prime_counter24: usize = 0;\n    let mut num_prime_counter25:\
    \ usize = 0;\n    let mut num_prime_counter26: usize = 0;\n    let mut num_prime_counter27:\
    \ usize = 0;\n    let mut num_prime_counter28: usize = 0;\n    let mut num_prime_counter29:\
    \ usize = 0;\n    let mut num_prime_counter30: usize = 0;\n    let mut num_prime_counter31:\
    \ usize = 0;\n    let mut num_prime_counter32: usize = 0;\n    let mut num_prime_counter33:\
    \ usize = 0;\n    let mut num_prime_counter34: usize = 0;\n    let mut num_prime_counter35:\
    \ usize = 0;\n    let mut num_prime_counter36: usize = 0;\n    let mut num_prime_counter37:\
    \ usize = 0;\n    let mu", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![];\n    let mut prime_counter: usize = 0;\n\
    \    let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n\
    \    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n\
    \    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: usize = 0;\n    let mut prime", " \
    \   let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n   \
    \ let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.in", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n    let mut prime_len\
    \ = prime_len", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![];\n    let mut num_prime_2: Vec<u8> =\
    \ vec![];\n    let mut num_prime_3: Vec<u8> = vec![];\n    let mut num_prime_4:\
    \ Vec<u8> = vec![];\n    let mut num_prime_5: Vec<u8> = vec![];\n    let mut num_prime_6:\
    \ Vec<u8> = vec![];\n    let mut num_prime_7: Vec<u8> = vec![];\n    let mut num_prime_8:\
    \ Vec<u8> = vec![];\n    let mut num_prime_9: Vec<u8> = vec![];\n    let mut num_prime_10:\
    \ Vec<u8> = vec![];\n    let mut num_prime_11: Vec<u8> = vec![];\n    let mut\
    \ num_prime_12: Vec<u8> = vec![];\n    let mut num_prime_13: Vec<u8> = vec![];\n\
    \    let mut num_prime_14: Vec<u8> = vec![];\n    let mut num_prime_15: Vec<u8>\
    \ = vec![];\n    let mut num_prime_16: Vec<u8> = vec![];\n    let mut num_prime_17:\
    \ Vec<u8> = vec![];\n    let mut num_prime_18: Vec<u8> = vec![];\n    let mut\
    \ num_prime_19: Vec<u8> = vec![];\n    let mut num_prime_20: Vec<u8> = vec![];\n\
    \    let mut num_prime_21: Vec<u8> = vec![];\n    let mut num_prime_22: Vec<u8>\
    \ = vec![];\n    let mut num_prime_23: Vec<u8> = vec![];\n    let mut num_prime_24:\
    \ Vec<u8> = vec![];\n    let mut num_prime_25: Vec<u8> = vec![];\n    let mut\
    \ num_prime_26: Vec<u8> = vec![];\n    let mut num_prime_27: Vec<u8> = vec![];\n\
    \    let mut num_prime_28: Vec<u8> = vec![];\n    let mut num_prime_29: Vec<u8>\
    \ = vec![];\n    let mut num_prime_", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime_count: isize = 0;\n    let mut prime_digit: u8 = 0;\n    let\
    \ mut prime_digit_count: isize = 0;\n    let mut prime_digit_sum: isize = 0;\n\
    \    let mut prime_digit_sum2: isize = 0;\n    let mut prime_digit_sum3: isize\
    \ = 0;\n    let mut prime_digit_sum4: isize = 0;\n    let mut prime_digit_sum5:\
    \ isize = 0;\n    let mut prime_digit_sum6: isize = 0;\n    let mut prime_digit_sum7:\
    \ isize = 0;\n    let mut prime_digit_sum8: isize = 0;\n    let mut prime_digit_sum9:\
    \ isize = 0;\n    let mut prime_digit_sum10: isize = 0;\n    let mut prime_digit_sum11:\
    \ isize = 0;\n    let mut prime_digit_sum12: isize = 0;\n    let mut prime_digit_sum13:\
    \ isize = 0;\n    let mut prime_digit_sum14: isize = 0;\n    let mut prime_digit_sum15:\
    \ isize = 0;\n    let mut prime_digit_sum16: isize = 0;\n    let mut prime_digit_sum17:\
    \ isize = 0;\n    let mut prime_digit_sum18: isize = 0;\n    let mut prime_digit_sum19:\
    \ isize = 0;\n    let mut prime_digit_sum20: isize = 0;\n    let mut prime_digit_sum21:\
    \ isize = 0;\n    let mut prime_digit_sum22: isize = 0;\n    let mut prime_digit_sum23:\
    \ isize = 0;\n    let mut prime_digit_sum24: isize = 0;\n    let mut prime_digit_sum25:\
    \ isize = 0;\n    let mut prime_digit_sum26: isize = 0;\n    let mut prime_digit_sum27:\
    \ isize = 0;\n    let mut prime_digit_sum28: isize = 0;\n    let mut prime_digit_sum29:\
    \ isize = 0;\n    let mut prime_digit_sum30: isize = 0;\n    let mut prime_digit_sum31:\
    \ isize = 0;\n    let mut prime_digit_sum32: isize = 0;\n    let mut prime_digit_sum33:\
    \ isize = 0;\n    let mut prime_digit_sum34: isize = 0;\n    let mut prime_digit_sum35:\
    \ isize = 0;\n    let mut prime_digit_sum36: isize = 0;", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_2: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_3: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_4:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_5: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_6: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_7: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_8:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_9: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_10: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_11: Vec<u8> = vec![2, 3, 5, 7, 11, ", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut prime_counter: usize = 0;\n    let mut\
    \ prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n    let\
    \ mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n   \
    \ let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit_count: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut prime_digit_count_2: Vec<u8> = vec![2, 3, 5, 7,\
    \ 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97];\n    let mut prime_digit_count_3: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut prime_digit_count_4: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23,\
    \ 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut\
    \ prime_digit_count_5: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit_count_6:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit_count_7: Vec<u8> =\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut prime_digit_count_8: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut prime_digit_count_9: Vec<u8> = vec", "    let\
    \ mut nums = num.chars().collect::<Vec<_>>();\n    let mut num_digits = nums.len();\n\
    \    let mut num_primes = 0;\n    let mut num_primes_digits = 0;\n    let mut\
    \ num_primes_digits_pow2 = 0;\n    let mut num_primes_digits_pow3 = 0;\n    let\
    \ mut num_primes_digits_pow4 = 0;\n    let mut num_primes_digits_pow5 = 0;\n \
    \   let mut num_primes_digits_pow6 = 0;\n    let mut num_primes_digits_pow7 =\
    \ 0;\n    let mut num_primes_digits_pow8 = 0;\n    let mut num_primes_digits_pow9\
    \ = 0;\n    let mut num_primes_digits_pow10 = 0;\n    let mut num_primes_digits_pow11\
    \ = 0;\n    let mut num_primes_digits_pow12 = 0;\n    let mut num_primes_digits_pow13\
    \ = 0;\n    let mut num_primes_digits_pow14 = 0;\n    let mut num_primes_digits_pow15\
    \ = 0;\n    let mut num_primes_digits_pow16 = 0;\n    let mut num_primes_digits_pow17\
    \ = 0;\n    let mut num_primes_digits_pow18 = 0;\n    let mut num_primes_digits_pow19\
    \ = 0;\n    let mut num_primes_digits_pow20 = 0;\n    let mut num_primes_digits_pow21\
    \ = 0;\n    let mut num_primes_digits_pow22 = 0;\n    let mut num_primes_digits_pow23\
    \ = 0;\n    let mut num_primes_digits_pow24 = 0;\n    let mut num_primes_digits_pow25\
    \ = 0;\n    let mut num_primes_digits_pow26 = 0;\n    let mut num_primes_digits_pow27\
    \ = 0;\n    let mut num_primes_digits_pow28 = 0;\n    let mut num_primes_digits_pow29\
    \ = 0;\n    let mut num_primes_digits_pow30 = 0;\n    let mut num_primes_digits_pow31\
    \ = 0;\n    let mut num_primes_digits_pow32 = 0;\n    let mut num_primes_digits_pow33\
    \ = 0;\n    let mut num_primes_digits_pow34 = 0;\n    let mut num_primes_digits_pow35\
    \ = 0;\n    let mut num_primes_digits_pow36 = 0;\n    let mut num_primes_digits_pow37\
    \ = 0;\n    let mut num_primes_digits_pow38 = 0;\n    let mut num_primes_digits_pow39\
    \ = 0;\n    let mut num_primes_digits_pow40 = 0;\n    let mut num_", "    let\
    \ mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_sum: isize = 0;\n    let mut prime_digit_sum2:\
    \ isize = 0;\n    let mut prime_digit_sum3: isize = 0;\n    let mut prime_digit_sum4:\
    \ isize = 0;\n    let mut prime_digit_sum5: isize = 0;\n    let mut prime_digit_sum6:\
    \ isize = 0;\n    let mut prime_digit_sum7: isize = 0;\n    let mut prime_digit_sum8:\
    \ isize = 0;\n    let mut prime_digit_sum9: isize = 0;\n    let mut prime_digit_sum10:\
    \ isize = 0;\n    let mut prime_digit_sum11: isize = 0;\n    let mut prime_digit_sum12:\
    \ isize = 0;\n    let mut prime_digit_sum13: isize = 0;\n    let mut prime_digit_sum14:\
    \ isize = 0;\n    let mut prime_digit_sum15: isize = 0;\n    let mut prime_digit_sum16:\
    \ isize = 0;\n    let mut prime_digit_sum17: isize = 0;\n    let mut prime_digit_sum18:\
    \ isize = 0;\n    let mut prime_digit_sum19: isize = 0;\n    let mut prime_digit_sum20:\
    \ isize = 0;\n    let mut prime_digit_sum21: isize = 0;\n    let mut prime_digit_sum22:\
    \ isize = 0;\n    let mut prime_digit_sum23: isize = 0;\n    let mut prime_digit_sum24:\
    \ isize = 0;\n    let mut prime_digit_sum25: isize = 0;\n    let mut prime_digit_sum26:\
    \ isize = 0;\n    let mut prime_digit_sum27: isize = 0;\n    let mut prime_digit_sum28:\
    \ isize = 0;\n    let mut prime_digit_sum29: isize = 0;\n    let mut prime_digit_sum30:\
    \ isize = 0;\n    let mut prime_digit_sum31: isize = 0;\n    let mut prime_digit_sum32:\
    \ isize = 0;\n    let mut prime_digit_sum33: isize = 0;\n    let mut prime_digit_sum34:\
    \ isize = 0;\n    let mut prime_digit_sum35: isize = 0;\n    let mut prime_digit_sum36:\
    \ isize = 0;", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut num_primes = 0;\n    let mut\
    \ num_primes_digits = 0;\n    let mut num_primes_digits_pow2 = 0;\n    let mut\
    \ num_primes_digits_pow3 = 0;\n    let mut num_primes_digits_pow4 = 0;\n    let\
    \ mut num_primes_digits_pow5 = 0;\n    let mut num_primes_digits_pow6 = 0;\n \
    \   let mut num_primes_digits_pow7 = 0;\n    let mut num_primes_digits_pow8 =\
    \ 0;\n    let mut num_primes_digits_pow9 = 0;\n    let mut num_primes_digits_pow10\
    \ = 0;\n    let mut num_primes_digits_pow11 = 0;\n    let mut num_primes_digits_pow12\
    \ = 0;\n    let mut num_primes_digits_pow13 = 0;\n    let mut num_primes_digits_pow14\
    \ = 0;\n    let mut num_primes_digits_pow15 = 0;\n    let mut num_primes_digits_pow16\
    \ = 0;\n    let mut num_primes_digits_pow17 = 0;\n    let mut num_primes_digits_pow18\
    \ = 0;\n    let mut num_primes_digits_pow19 = 0;\n    let mut num_primes_digits_pow20\
    \ = 0;\n    let mut num_primes_digits_pow21 = 0;\n    let mut num_primes_digits_pow22\
    \ = 0;\n    let mut num_primes_digits_pow23 = 0;\n    let mut num_primes_digits_pow24\
    \ = 0;\n    let mut num_primes_digits_pow25 = 0;\n    let mut num_primes_digits_pow26\
    \ = 0;\n    let mut num_primes_digits_pow27 = 0;\n    let mut num_primes_digits_pow28\
    \ = 0;\n    let mut num_primes_digits_pow29 = 0;\n    let mut num_primes_digits_pow30\
    \ = 0;\n    let mut num_primes_digits_pow31 = 0;\n    let mut num_primes_digits_pow32\
    \ = 0;\n    let mut num_primes_digits_pow33 = 0;\n    let mut num_primes_digits_pow34\
    \ = 0;\n    let mut num_primes_digits_pow35 = 0;\n    let mut num_primes_digits_pow36\
    \ = 0;\n    let mut num_primes_digits_pow37 = 0;\n    let mut num_primes_digits_pow38\
    \ = 0;\n    let mut num_primes_digits_pow39 = 0;\n    let mut num_primes_digits_pow40\
    \ = 0;\n    let mu", "    let mut nums = num.to_string().chars().collect::<Vec<_>>();\n\
    \    let mut nums_iter = nums.iter();\n    let mut num_digits = nums.len();\n\
    \    let mut prime_digits = vec![];\n    let mut prime_digits_iter = prime_digits.iter();\n\
    \    let mut prime_digits_len = prime_digits_iter.len();\n    let mut prime_digits_iter\
    \ = prime_digits.iter();\n    let mut prime_digits_len = prime_digits_iter.len();\n\
    \    let mut prime_digits_iter = prime_digits.iter();\n    let mut prime_digits_len\
    \ = prime_digits_iter.len();\n    let mut prime_digits_iter = prime_digits.iter();\n\
    \    let mut prime_digits_len = prime_digits_iter.len();\n    let mut prime_digits_iter\
    \ = prime_digits.iter();\n    let mut prime_digits_len = prime_digits_iter.len();\n\
    \    let mut prime_digits_iter = prime_digits.iter();\n    let mut prime_digits_len\
    \ = prime_digits_iter.len();\n    let mut prime_digits_iter = prime_digits.iter();\n\
    \    let mut prime_digits_len = prime_digits_iter.len();\n    let mut prime_digits_iter\
    \ = prime_digits.iter();\n    let mut prime_digits_len = prime_digits_iter.len();\n\
    \    let mut prime_digits_iter = prime_digits.iter();\n    let mut prime_digits_len\
    \ = prime_digits_iter.len();\n    let mut prime_digits_iter = prime_digits.iter();\n\
    \    let mut prime_digits_len = prime_digits_iter.len();\n    let mut prime_digits_iter\
    \ = prime_digits.iter();\n    let mut prime_digits_len = prime_digits_iter.len();\n\
    \    let mut prime_digits_iter = prime_digits.iter();\n    let mut prime_digits_len\
    \ = prime_digits_iter.len();\n    let mut prime_digits_iter = prime_digits.iter();\n\
    \    let mut prime_digits_len = prime_digits_iter.len();\n    let mut prime_digits_iter\
    \ = prime_digits.iter();\n    let mut prime_digits_len = prime_digits_iter.len();\n\
    \    let mut prime_digits_iter = prime_digits.iter();\n    let mut prime_digits_len\
    \ = prime_digits_iter.len();\n    let mut prime_digits_iter = prime_", "    let\
    \ mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_len = prime.len();\n   \
    \ let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len - 1;\n\
    \    let mut prime_len = prime_len - 1;\n    let mut prime_len = prime_len", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17];\n    let mut num_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17];\n    let mut num_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17];\n    let mut num_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17];\n    let mut num_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17];\n    let mut num_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17];\n    let mut num_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17];\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_len\
    \ = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n    let mut\
    \ num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter_index: usize\
    \ = 0;\n    let mut prime_counter_index2: usize = 0;\n    let mut prime_counter_index3:\
    \ usize = 0;\n    let mut prime_counter_index4: usize = 0;\n    let mut prime_counter_index5:\
    \ usize = 0;\n    let mut prime_counter_index6: usize = 0;\n    let mut prime_counter_index7:\
    \ usize = 0;\n    let mut prime_counter_index8: usize = 0;\n    let mut prime_counter_index9:\
    \ usize = 0;\n    let mut prime_counter_index10: usize = 0;\n    let mut prime_counter_index11:\
    \ usize = 0;\n    let mut prime_counter_index12: usize = 0;\n    let mut prime_counter_index13:\
    \ usize = 0;\n    let mut prime_counter_index14: usize = 0;\n    let mut prime_counter_index15:\
    \ usize = 0;\n    let mut prime_counter_index16: usize = 0;\n    let mut prime_counter_index17:\
    \ usize = 0;\n    let mut prime_counter_index18: usize = 0;\n    let mut prime_counter_index19:\
    \ usize = 0;\n    let mut prime_counter_index20: usize = 0;\n    let mut prime_counter_index21:\
    \ usize = 0;\n    let mut prime_counter_index22: usize = 0;\n    let mut prime_counter_index23:\
    \ usize = 0;\n    let mut prime_counter_index24: usize = 0;\n    let mut prime_counter_index25:\
    \ usize = 0;\n    let mut prime_counter_index26: usize = 0;\n    let mut prime_counter_index27:\
    \ usize = 0;\n    let mut prime_counter_index28: usize = 0;\n    let mut prime_counter_index29:\
    \ usize = 0;\n    let mut prime_counter_index30: usize = 0;\n    let mut prime_counter_index31:\
    \ usize = 0;\n    let mut prime_counter_index32: usize = 0;\n    let mut prime_counter_index33:\
    \ usize = 0;\n    let mut prime_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_count = 0;\n    let mut prime_digits = vec![];\n    let mut\
    \ prime_digit = vec![];\n    let mut prime_digit_count = 0;\n    let mut prime_digit_index\
    \ = 0;\n    let mut prime_digit_value = 1;\n    let mut prime_digit_index2 = 0;\n\
    \    let mut prime_digit_value2 = 1;\n    let mut prime_digit_index3 = 0;\n  \
    \  let mut prime_digit_value3 = 1;\n    let mut prime_digit_index4 = 0;\n    let\
    \ mut prime_digit_value4 = 1;\n    let mut prime_digit_index5 = 0;\n    let mut\
    \ prime_digit_value5 = 1;\n    let mut prime_digit_index6 = 0;\n    let mut prime_digit_value6\
    \ = 1;\n    let mut prime_digit_index7 = 0;\n    let mut prime_digit_value7 =\
    \ 1;\n    let mut prime_digit_index8 = 0;\n    let mut prime_digit_value8 = 1;\n\
    \    let mut prime_digit_index9 = 0;\n    let mut prime_digit_value9 = 1;\n  \
    \  let mut prime_digit_index10 = 0;\n    let mut prime_digit_value10 = 1;\n  \
    \  let mut prime_digit_index11 = 0;\n    let mut prime_digit_value11 = 1;\n  \
    \  let mut prime_digit_index12 = 0;\n    let mut prime_digit_value12 = 1;\n  \
    \  let mut prime_digit_index13 = 0;\n    let mut prime_digit_value13 = 1;\n  \
    \  let mut prime_digit_index14 = 0;\n    let mut prime_digit_value14 = 1;\n  \
    \  let mut prime_digit_index15 = 0;\n    let mut prime_digit_value15 = 1;\n  \
    \  let mut prime_digit_index16 = 0;\n    let mut prime_digit_value16 = 1;\n  \
    \  let mut prime_digit_index17 = 0;\n    let mut prime_digit_value17 = 1;\n  \
    \  let mut prime_digit_index18 = 0;\n    let mut prime_digit_value18 = 1;\n  \
    \  let mut prime_digit_index19 = 0;\n    let mut prime_digit_value19 = 1;\n  \
    \  let mut prime_digit_index20 = 0;\n    let mut prime_digit_value20 = 1;\n  \
    \  let mut prime_digit_index21 = 0;\n    let mut prime_digit_value21 = 1;\n  \
    \  let mut prime_digit_index22 = 0;\n    let mut prime_digit_value22 = 1;\n  \
    \  let mut prime_digit_index23 = 0;\n    let mut prime_digit_value23 = 1;\n  \
    \  let mut ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut counter:\
    \ usize = 0;\n    let mut i: usize = 0;\n    while i < num.len() {\n        if\
    \ num[i] == num[num.len() - 1] {\n            i += 1;\n        } else {\n    \
    \        prime = prime.iter().filter(|&x| num[i] == x).collect();\n          \
    \  counter += prime.len();\n            i += 1;\n        }\n    }\n    counter",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime_digits\
    \ = vec![false; 16];\n    let mut prime_digits_count = vec![0; 16];\n    let mut\
    \ prime_digits_count_max = vec![0; 16];\n    let mut prime_digits_count_max_index\
    \ = vec![0; 16];\n    let mut prime_digits_count_min = vec![0; 16];\n    let mut\
    \ prime_digits_count_min_index = vec![0; 16];\n    let mut prime_digits_count_max\
    \ = vec![0; 16];\n    let mut prime_digits_count_max_index = vec![0; 16];\n  \
    \  let mut prime_digits_count_min = vec![0; 16];\n    let mut prime_digits_count_min_index\
    \ = vec![0; 16];\n    let mut prime_digits_count_max = vec![0; 16];\n    let mut\
    \ prime_digits_count_max_index = vec![0; 16];\n    let mut prime_digits_count_min\
    \ = vec![0; 16];\n    let mut prime_digits_count_min_index = vec![0; 16];\n  \
    \  let mut prime_digits_count_max = vec![0; 16];\n    let mut prime_digits_count_max_index\
    \ = vec![0; 16];\n    let mut prime_digits_count_min = vec![0; 16];\n    let mut\
    \ prime_digits_count_min_index = vec![0; 16];\n    let mut prime_digits_count_max\
    \ = vec![0; 16];\n    let mut prime_digits_count_max_index = vec![0; 16];\n  \
    \  let mut prime_digits_count_min = vec![0; 16];\n    let mut prime_digits_count_min_index\
    \ = vec![0; 16];\n    let mut prime_digits_count_max = vec![0; 16];\n    let mut\
    \ prime_digits_count_max_index = vec![0; 16];\n    let mut prime_digits_count_min\
    \ = vec![0; 16];\n    let mut prime_digits_count_min_index = vec![0; 16];\n  \
    \  let mut prime_digits_count_max = vec![0; 16];\n    let mut prime_digits_count_max_index\
    \ = vec![0; 16];\n    let mut prime_digits_count_min = vec![0; 16];\n    let mut\
    \ prime_digits_count_min_index = vec![0; 16];\n    let mut prime_digits_count_max\
    \ = vec![0; 16];\n    let mut prime_digits_count_max_index = vec![0; 16];\n",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut count:\
    \ isize = 0;\n    let mut prime: isize = 2;\n    let mut prime_found = false;\n\
    \    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n    let\
    \ mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let mut prime_found6\
    \ = false;\n    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n\
    \    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let\
    \ mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let mut\
    \ prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut prime_found15\
    \ = false;\n    let mut prime_found16 = false;\n    let mut prime_found17 = false;\n\
    \    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n    let\
    \ mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let mut\
    \ prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut prime_found24\
    \ = false;\n    let mut prime_found25 = false;\n    let mut prime_found26 = false;\n\
    \    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n    let\
    \ mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let mut\
    \ prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut prime_found33\
    \ = false;\n    let mut prime_found34 = false;\n    let mut prime_found35 = false;\n\
    \    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n    let\
    \ mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let mut\
    \ prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut prime_found42\
    \ = false;\n    let mut prime_found43 = false;\n    let mut prime_found44 = false;\n\
    \    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n    let\
    \ mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let mut\
    \ prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut prime_found51\
    \ = false;\n    let mut prime_found52 = false;\n    let ", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_2: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_3: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_4:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_5: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_6: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_7: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_8:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_9: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_10: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_11: Vec<u8> = vec![2, 3, 5, 7, 11, ", "    let mut num:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8>\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut i: usize = 0;\n    let mut j: usize =\
    \ 0;\n    let mut k: usize = 0;\n    let mut l: usize = 0;\n    let mut m: usize\
    \ = 0;\n    let mut n: usize = 0;\n    let mut o: usize = 0;\n    let mut p: usize\
    \ = 0;\n    let mut q: usize = 0;\n    let mut r: usize = 0;\n    let mut s: usize\
    \ = 0;\n    let mut t: usize = 0;\n    let mut u: usize = 0;\n    let mut v: usize\
    \ = 0;\n    let mut w: usize = 0;\n    let mut x: usize = 0;\n    let mut y: usize\
    \ = 0;\n    let mut z: usize = 0;\n    let mut a: usize = 0;\n    let mut b: usize\
    \ = 0;\n    let mut c: usize = 0;\n    let mut d: usize = 0;\n    let mut e: usize\
    \ = 0;\n    let mut f: usize = 0;\n    let mut g: usize = 0;\n    let mut h: usize\
    \ = 0;\n    let mut i: usize = 0;\n    let mut j: usize = 0;\n    let mut k: usize\
    \ = 0;\n    let mut l: usize = 0;\n    let mut m: usize = 0;\n    let mut n: usize\
    \ = 0;\n    let mut o: usize = 0;\n    let mut p: usize = 0;\n    let mut q: usize\
    \ = 0;\n    let mut r: usize = 0;\n    let mut s: usize = 0;\n    let mut t: usize\
    \ = 0;\n    let mut u: usize = 0;\n    let mut v: usize = 0;\n    let mut w: usize\
    \ = 0;\n    let mut x: usize = 0;\n    let mut y: usize = 0;\n    let mut z: usize\
    \ = 0;\n    let mut a: usize = 0;\n    let mut b: usize = 0;\n    let mut c: usize\
    \ = 0;\n    let mut d: usize = 0;\n    let mut e: usize = 0;\n    let mut f: usize\
    \ = 0;\n    let mut g: usize = 0;\n    let mut h: usize = 0;\n    let mut i: usize\
    \ = 0;\n    let mut j: usize = 0;\n    let ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime_count: isize = 0;\n    let mut prime_digit: u8 = 0;\n    let\
    \ mut prime_digit_count: usize = 0;\n    let mut prime_digit_index: usize = 0;\n\
    \    let mut prime_digit_value: u8 = 0;\n    let mut prime_digit_is_prime: u8\
    \ = 0;\n    let mut prime_digit_is_prime_2: u8 = 0;\n    let mut prime_digit_is_prime_3:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_4: u8 = 0;\n    let mut prime_digit_is_prime_5:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_6: u8 = 0;\n    let mut prime_digit_is_prime_7:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_8: u8 = 0;\n    let mut prime_digit_is_prime_9:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_10: u8 = 0;\n    let mut prime_digit_is_prime_11:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_12: u8 = 0;\n    let mut prime_digit_is_prime_13:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_14: u8 = 0;\n    let mut prime_digit_is_prime_15:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_16: u8 = 0;\n    let mut prime_digit_is_prime_17:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_18: u8 = 0;\n    let mut prime_digit_is_prime_19:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_20: u8 = 0;\n    let mut prime_digit_is_prime_21:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_22: u8 = 0;\n    let mut prime_digit_is_prime_23:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_24: u8 = 0;\n    let mut prime_digit_is_prime_25:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_26: u8 = 0;\n    let mut prime_digit_is_prime_27:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_28: u8 = 0;\n    let mut prime_digit_is_prime_29:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_30: u8 = 0;\n    let mut prime_digit_is_prime_31:\
    \ u8 = 0;\n    let mut prime_digit_is_prime_32: u8 = 0;", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2:\
    \ usize = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4:\
    \ usize = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6:\
    \ usize = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8:\
    \ usize = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10:\
    \ usize = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n    let mut prime_counter38:\
    \ u", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let\
    \ mut num_str: String = String::new();\n    let mut num_str2: String = String::new();\n\
    \    let mut num_str3: String = String::new();\n    let mut num_str4: String =\
    \ String::new();\n    let mut num_str5: String = String::new();\n    let mut num_str6:\
    \ String = String::new();\n    let mut num_str7: String = String::new();\n   \
    \ let mut num_str8: String = String::new();\n    let mut num_str9: String = String::new();\n\
    \    let mut num_str10: String = String::new();\n    let mut num_str11: String\
    \ = String::new();\n    let mut num_str12: String = String::new();\n    let mut\
    \ num_str13: String = String::new();\n    let mut num_str14: String = String::new();\n\
    \    let mut num_str15: String = String::new();\n    let mut num_str16: String\
    \ = String::new();\n    let mut num_str17: String = String::new();\n    let mut\
    \ num_str18: String = String::new();\n    let mut num_str19: String = String::new();\n\
    \    let mut num_str20: String = String::new();\n    let mut num_str21: String\
    \ = String::new();\n    let mut num_str22: String = String::new();\n    let mut\
    \ num_str23: String = String::new();\n    let mut num_str24: String = String::new();\n\
    \    let mut num_str25: String = String::new();\n    let mut num_str26: String\
    \ = String::new();\n    let mut num_str27: String = String::new();\n    let mut\
    \ num_str28: String = String::new();\n    let mut num_str29: String = String::new();\n\
    \    let mut num_str30: String = String::new();\n    let mut num_str31: String\
    \ = String::new();\n    let mut num_str32: String = String::new();\n    let mut\
    \ num_str33: String = String::new();\n    let mut num_str34: String = String::new();\n\
    \    let mut num_str35: String = String::new();\n    let mut num_str36: String\
    \ = String::new();\n    let mut num_str37: String = String::new();\n    let mut\
    \ num_str38: String = String::new();\n    let mut num_", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x as u8).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x != 0).collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|x| x % 2 == 0).collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|x| x % 3 == 0).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|x| x % 5 == 0).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|x| x % 7 == 0).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|x| x % 11 == 0).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().filter(|x| x % 13 == 0).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().filter(|x| x % 17 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x|\
    \ x % 19 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x\
    \ % 23 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x %\
    \ 29 == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 31\
    \ == 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 37 ==\
    \ 0).collect();\n    let mut num: Vec<u8> = num.iter().filter(|x| x % 41 == 0).collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|x| x % 43 == 0).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().filter(|x| x % 47 == 0).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().filter(|x| x % 53 == 0).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|x| x % 59 == 0).collect();\n    let mut num: ",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime_len = num_prime.len();\n\
    \    let mut num_prime_len = num_prime.len();\n    let mut num_prime", "    let\
    \ mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_count:\
    \ isize = 0;\n    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n    let mut prime_digit_index: usize = 0;\n    let mut prime_digit_count:\
    \ isize = 0;\n", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut prime_digits = Vec::new();\n\
    \    let mut prime_digits_counter = Vec::new();\n    let mut prime_digits_counter2\
    \ = Vec::new();\n    let mut prime_digits_counter3 = Vec::new();\n    let mut\
    \ prime_digits_counter4 = Vec::new();\n    let mut prime_digits_counter5 = Vec::new();\n\
    \    let mut prime_digits_counter6 = Vec::new();\n    let mut prime_digits_counter7\
    \ = Vec::new();\n    let mut prime_digits_counter8 = Vec::new();\n    let mut\
    \ prime_digits_counter9 = Vec::new();\n    let mut prime_digits_counter10 = Vec::new();\n\
    \    let mut prime_digits_counter11 = Vec::new();\n    let mut prime_digits_counter12\
    \ = Vec::new();\n    let mut prime_digits_counter13 = Vec::new();\n    let mut\
    \ prime_digits_counter14 = Vec::new();\n    let mut prime_digits_counter15 = Vec::new();\n\
    \    let mut prime_digits_counter16 = Vec::new();\n    let mut prime_digits_counter17\
    \ = Vec::new();\n    let mut prime_digits_counter18 = Vec::new();\n    let mut\
    \ prime_digits_counter19 = Vec::new();\n    let mut prime_digits_counter20 = Vec::new();\n\
    \    let mut prime_digits_counter21 = Vec::new();\n    let mut prime_digits_counter22\
    \ = Vec::new();\n    let mut prime_digits_counter23 = Vec::new();\n    let mut\
    \ prime_digits_counter24 = Vec::new();\n    let mut prime_digits_counter25 = Vec::new();\n\
    \    let mut prime_digits_counter26 = Vec::new();\n    let mut prime_digits_counter27\
    \ = Vec::new();\n    let mut prime_digits_counter28 = Vec::new();\n    let mut\
    \ prime_digits_counter29 = Vec::new();\n    let mut prime_digits_counter30 = Vec::new();\n\
    \    let mut prime_digits_counter31 = Vec::new();\n    let mut prime_digits_counter32\
    \ = Vec::new();\n    let mu", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![0; 8];\n    let mut num_prime_counter:\
    \ usize = 0;\n    let mut num_prime_counter2: usize = 0;\n    let mut num_prime_counter3:\
    \ usize = 0;\n    let mut num_prime_counter4: usize = 0;\n    let mut num_prime_counter5:\
    \ usize = 0;\n    let mut num_prime_counter6: usize = 0;\n    let mut num_prime_counter7:\
    \ usize = 0;\n    let mut num_prime_counter8: usize = 0;\n    let mut num_prime_counter9:\
    \ usize = 0;\n    let mut num_prime_counter10: usize = 0;\n    let mut num_prime_counter11:\
    \ usize = 0;\n    let mut num_prime_counter12: usize = 0;\n    let mut num_prime_counter13:\
    \ usize = 0;\n    let mut num_prime_counter14: usize = 0;\n    let mut num_prime_counter15:\
    \ usize = 0;\n    let mut num_prime_counter16: usize = 0;\n    let mut num_prime_counter17:\
    \ usize = 0;\n    let mut num_prime_counter18: usize = 0;\n    let mut num_prime_counter19:\
    \ usize = 0;\n    let mut num_prime_counter20: usize = 0;\n    let mut num_prime_counter21:\
    \ usize = 0;\n    let mut num_prime_counter22: usize = 0;\n    let mut num_prime_counter23:\
    \ usize = 0;\n    let mut num_prime_counter24: usize = 0;\n    let mut num_prime_counter25:\
    \ usize = 0;\n    let mut num_prime_counter26: usize = 0;\n    let mut num_prime_counter27:\
    \ usize = 0;\n    let mut num_prime_counter28: usize = 0;\n    let mut num_prime_counter29:\
    \ usize = 0;\n    let mut num_prime_counter30: usize = 0;\n    let mut num_prime_counter31:\
    \ usize = 0;\n    let mut num_prime_counter32: usize = 0;\n    let mut num_prime_counter33:\
    \ usize = 0;\n    let mut num_prime_counter34: usize = 0;\n    let mut num_prime_counter35:\
    \ usize = 0;\n    let mut num_prime_counter36: usize = 0;\n    let mut num_prime_counter37:\
    \ usize = 0;\n", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_count: isize = 0;\n    let mut prime: isize = 2;\n    while\
    \ prime < num.len() {\n        if num[prime - 1] == num[prime] {\n           \
    \ prime_count = prime_count+1;\n        }\n        prime = prime+1;\n    }\n \
    \   prime_count", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime_digits = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mut prime_digits_len = vec![];\n\
    \    let mut prime_digits_len = vec![];\n    let mu", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut count: isize = 0;\n   \
    \ let mut prime: isize = 2;\n    let mut prime_found = false;\n    let mut prime_found2\
    \ = false;\n    let mut prime_found3 = false;\n    let mut prime_found4 = false;\n\
    \    let mut prime_found5 = false;\n    let mut prime_found6 = false;\n    let\
    \ mut prime_found7 = false;\n    let mut prime_found8 = false;\n    let mut prime_found9\
    \ = false;\n    let mut prime_found10 = false;\n    let mut prime_found11 = false;\n\
    \    let mut prime_found12 = false;\n    let mut prime_found13 = false;\n    let\
    \ mut prime_found14 = false;\n    let mut prime_found15 = false;\n    let mut\
    \ prime_found16 = false;\n    let mut prime_found17 = false;\n    let mut prime_found18\
    \ = false;\n    let mut prime_found19 = false;\n    let mut prime_found20 = false;\n\
    \    let mut prime_found21 = false;\n    let mut prime_found22 = false;\n    let\
    \ mut prime_found23 = false;\n    let mut prime_found24 = false;\n    let mut\
    \ prime_found25 = false;\n    let mut prime_found26 = false;\n    let mut prime_found27\
    \ = false;\n    let mut prime_found28 = false;\n    let mut prime_found29 = false;\n\
    \    let mut prime_found30 = false;\n    let mut prime_found31 = false;\n    let\
    \ mut prime_found32 = false;\n    let mut prime_found33 = false;\n    let mut\
    \ prime_found34 = false;\n    let mut prime_found35 = false;\n    let mut prime_found36\
    \ = false;\n    let mut prime_found37 = false;\n    let mut prime_found38 = false;\n\
    \    let mut prime_found39 = false;\n    let mut prime_found40 = false;\n    let\
    \ mut prime_found41 = false;\n    let mut prime_found42 = false;\n    let mut\
    \ prime_found43 = false;\n    let mut prime_found44 = false;\n    let mut prime_found45\
    \ = false;\n    let mut prime_found46 = false;\n    let mut prime_found47 = false;\n\
    \    let mut prime_found48 = false;\n    let mut prime_found49 = false;\n    let\
    \ mut prime_found50 = false;\n    let mut prime_found51 = false;\n    let mut\
    \ prime_found52 = false;\n    let ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = num.clone();\n    let mut num_prime_prime: Vec<u8>\
    \ = num_prime.clone();\n    let mut num_prime_prime_prime: Vec<u8> = num_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8>\
    \ = num_prime_prime_prime_prime_prime_prime_prime_prime_prime.clone();\n    let\
    \ mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num_prime_prime_prime_prime_prime_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_digits = vec![];\n    let mut prime_digits_counter: usize =\
    \ 0;\n    let mut prime_digits_counter2: usize = 0;\n    let mut prime_digits_counter3:\
    \ usize = 0;\n    let mut prime_digits_counter4: usize = 0;\n    let mut prime_digits_counter5:\
    \ usize = 0;\n    let mut prime_digits_counter6: usize = 0;\n    let mut prime_digits_counter7:\
    \ usize = 0;\n    let mut prime_digits_counter8: usize = 0;\n    let mut prime_digits_counter9:\
    \ usize = 0;\n    let mut prime_digits_counter10: usize = 0;\n    let mut prime_digits_counter11:\
    \ usize = 0;\n    let mut prime_digits_counter12: usize = 0;\n    let mut prime_digits_counter13:\
    \ usize = 0;\n    let mut prime_digits_counter14: usize = 0;\n    let mut prime_digits_counter15:\
    \ usize = 0;\n    let mut prime_digits_counter16: usize = 0;\n    let mut prime_digits_counter17:\
    \ usize = 0;\n    let mut prime_digits_counter18: usize = 0;\n    let mut prime_digits_counter19:\
    \ usize = 0;\n    let mut prime_digits_counter20: usize = 0;\n    let mut prime_digits_counter21:\
    \ usize = 0;\n    let mut prime_digits_counter22: usize = 0;\n    let mut prime_digits_counter23:\
    \ usize = 0;\n    let mut prime_digits_counter24: usize = 0;\n    let mut prime_digits_counter25:\
    \ usize = 0;\n    let mut prime_digits_counter26: usize = 0;\n    let mut prime_digits_counter27:\
    \ usize = 0;\n    let mut prime_digits_counter28: usize = 0;\n    let mut prime_digits_counter29:\
    \ usize = 0;\n    let mut prime_digits_counter30: usize = 0;\n    let mut prime_digits_counter31:\
    \ usize = 0;\n    let mut prime_digits_counter32: usize = 0;\n    let mut prime_digits_counter33:\
    \ usize = 0;\n    let mut prime_digits_counter34: usize = 0;\n    let mut prime_digits_counter35:\
    \ u", "    let mut num: isize = 0;\n    let mut digits: Vec<&str> = num.to_string().chars().collect();\n\
    \    let mut primes: Vec<isize> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut primes_set:\
    \ HashSet<isize> = HashSet::new();\n    let mut primes_set_size: isize = 0;\n\
    \    let mut primes_set_size: isize = 0;\n    let mut primes_set_size: isize =\
    \ 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size: isize\
    \ = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;\n    let mut primes_set_size:\
    \ isize = 0;\n    let mut primes_set_size: isize = 0;", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_counter: usize = 0;\n    let mut\
    \ prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n    let\
    \ mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n   \
    \ let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: u", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut primes = vec![];\n    let mut primes_size = primes.len();\n    let\
    \ mut primes_counter = 0;\n    let mut primes_counter_size = 0;\n    let mut primes_counter_rem\
    \ = primes_counter;\n    let mut primes_counter_rem_size = primes_counter;\n \
    \   let mut primes_counter_rem_primes = primes_counter;\n    let mut primes_counter_rem_primes_size\
    \ = primes_counter;\n    let mut primes_counter_rem_primes_primes = primes_counter;\n\
    \    let mut primes_counter_rem_primes_primes_size = primes_counter;\n    let\
    \ mut primes_counter_rem_primes_primes_primes = primes_counter;\n    let mut primes_counter_rem_primes_primes_primes_size\
    \ = primes_counter;\n    let mut primes_counter_rem_primes_primes_primes_primes_size\
    \ = primes_counter;\n    let mut primes_counter_rem_primes_primes_primes_primes_primes_size\
    \ = primes_counter;\n    let mut primes_counter_rem_primes_primes_primes_primes_primes_primes_size\
    \ = primes_counter;\n    let mut primes_counter_rem_primes_primes_primes_primes_primes_primes_size\
    \ = primes_counter;\n    let mut primes_counter_rem_primes_primes_primes_primes_primes_primes_primes_size\
    \ = primes_counter;\n    let mut primes_counter_rem_primes_primes_primes_primes_primes_primes_primes_primes_size\
    \ = primes_counter;\n    let mut primes_counter_rem_primes_primes_primes_primes_primes_primes_primes_primes_primes_size\
    \ = primes_counter;\n    let mut primes_counter_rem_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_size\
    \ = primes_counter;\n    let mut primes_counter_rem_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_size\
    \ = primes_counter;\n    let mut primes_counter_rem_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_size\
    \ = primes_counter;\n    let mut primes_counter_rem_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_size\
    \ = prime", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![];\n    let mut num_prime_counter: usize\
    \ = 0;\n    let mut num_prime_counter2: usize = 0;\n    let mut num_prime_counter3:\
    \ usize = 0;\n    let mut num_prime_counter4: usize = 0;\n    let mut num_prime_counter5:\
    \ usize = 0;\n    let mut num_prime_counter6: usize = 0;\n    let mut num_prime_counter7:\
    \ usize = 0;\n    let mut num_prime_counter8: usize = 0;\n    let mut num_prime_counter9:\
    \ usize = 0;\n    let mut num_prime_counter10: usize = 0;\n    let mut num_prime_counter11:\
    \ usize = 0;\n    let mut num_prime_counter12: usize = 0;\n    let mut num_prime_counter13:\
    \ usize = 0;\n    let mut num_prime_counter14: usize = 0;\n    let mut num_prime_counter15:\
    \ usize = 0;\n    let mut num_prime_counter16: usize = 0;\n    let mut num_prime_counter17:\
    \ usize = 0;\n    let mut num_prime_counter18: usize = 0;\n    let mut num_prime_counter19:\
    \ usize = 0;\n    let mut num_prime_counter20: usize = 0;\n    let mut num_prime_counter21:\
    \ usize = 0;\n    let mut num_prime_counter22: usize = 0;\n    let mut num_prime_counter23:\
    \ usize = 0;\n    let mut num_prime_counter24: usize = 0;\n    let mut num_prime_counter25:\
    \ usize = 0;\n    let mut num_prime_counter26: usize = 0;\n    let mut num_prime_counter27:\
    \ usize = 0;\n    let mut num_prime_counter28: usize = 0;\n    let mut num_prime_counter29:\
    \ usize = 0;\n    let mut num_prime_counter30: usize = 0;\n    let mut num_prime_counter31:\
    \ usize = 0;\n    let mut num_prime_counter32: usize = 0;\n    let mut num_prime_counter33:\
    \ usize = 0;\n    let mut num_prime_counter34: usize = 0;\n    let mut num_prime_counter35:\
    \ usize = 0;\n    let mut num_prime_counter36: usize = 0;\n    let mut num_prime_counter37:\
    \ usize = 0;\n    let mu", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit_count: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_index: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mu", "    let mut num: isize = 0;\n    let mut\
    \ digit: char;\n    let mut prime: isize = 0;\n    let mut prime_found = false;\n\
    \    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n    let\
    \ mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let mut prime_found6\
    \ = false;\n    let mut prime_found7 = false;\n    let mut prime_found8 = false;\n\
    \    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n    let\
    \ mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let mut\
    \ prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut prime_found15\
    \ = false;\n    let mut prime_found16 = false;\n    let mut prime_found17 = false;\n\
    \    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n    let\
    \ mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let mut\
    \ prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut prime_found24\
    \ = false;\n    let mut prime_found25 = false;\n    let mut prime_found26 = false;\n\
    \    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n    let\
    \ mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let mut\
    \ prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut prime_found33\
    \ = false;\n    let mut prime_found34 = false;\n    let mut prime_found35 = false;\n\
    \    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n    let\
    \ mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let mut\
    \ prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut prime_found42\
    \ = false;\n    let mut prime_found43 = false;\n    let mut prime_found44 = false;\n\
    \    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n    let\
    \ mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let mut\
    \ prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut prime_found51\
    \ = false;\n    let mut prime_found52 = false;\n    let mut prime_found53 = false;\n\
    \    let ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: u", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut num_primes = 0;\n    let mut\
    \ num_primes_found = 0;\n    let mut num_primes_found2 = 0;\n    let mut num_primes_found3\
    \ = 0;\n    let mut num_primes_found4 = 0;\n    let mut num_primes_found5 = 0;\n\
    \    let mut num_primes_found6 = 0;\n    let mut num_primes_found7 = 0;\n    let\
    \ mut num_primes_found8 = 0;\n    let mut num_primes_found9 = 0;\n    let mut\
    \ num_primes_found10 = 0;\n    let mut num_primes_found11 = 0;\n    let mut num_primes_found12\
    \ = 0;\n    let mut num_primes_found13 = 0;\n    let mut num_primes_found14 =\
    \ 0;\n    let mut num_primes_found15 = 0;\n    let mut num_primes_found16 = 0;\n\
    \    let mut num_primes_found17 = 0;\n    let mut num_primes_found18 = 0;\n  \
    \  let mut num_primes_found19 = 0;\n    let mut num_primes_found20 = 0;\n    let\
    \ mut num_primes_found21 = 0;\n    let mut num_primes_found22 = 0;\n    let mut\
    \ num_primes_found23 = 0;\n    let mut num_primes_found24 = 0;\n    let mut num_primes_found25\
    \ = 0;\n    let mut num_primes_found26 = 0;\n    let mut num_primes_found27 =\
    \ 0;\n    let mut num_primes_found28 = 0;\n    let mut num_primes_found29 = 0;\n\
    \    let mut num_primes_found30 = 0;\n    let mut num_primes_found31 = 0;\n  \
    \  let mut num_primes_found32 = 0;\n    let mut num_primes_found33 = 0;\n    let\
    \ mut num_primes_found34 = 0;\n    let mut num_primes_found35 = 0;\n    let mut\
    \ num_primes_found36 = 0;\n    let mut num_primes_found37 = 0;\n    let mut num_primes_found38\
    \ = 0;\n    let mut num_primes_found39 = 0;\n    let mut num_primes_found40 =\
    \ 0;\n    let mut num_primes_found41 = 0;\n    let mut num_primes_found42 = 0;\n\
    \    let mut num_primes_found43 = 0;\n    let mut num_primes_found44 = 0;\n  \
    \  let mut num_primes_found45 = 0;\n    let mut num_primes_found46 = 0;\n    let\
    \ mut num_primes_found47 = 0;\n    let mut num_primes_found48 = 0;\n", "    let\
    \ mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut counter: usize = 0;\n\
    \    for &c in num {\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19] {\n\
    \            counter = counter + 1;\n        }\n        if prime == vec![2, 3,\
    \ 5, 7, 11, 13, 17, 19, 31] {\n            counter = counter + 1;\n        }\n\
    \        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 37, 61] {\n            counter\
    \ = counter + 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 37, 61, 79] {\n            counter = counter + 1;\n        }\n        if\
    \ prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 37, 61, 79, 127] {\n            counter\
    \ = counter + 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 37, 61, 79, 127, 255] {\n            counter = counter + 1;\n        }\n\
    \        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 37, 61, 79, 127, 255, 511]\
    \ {\n            counter = counter + 1;\n        }\n        if prime == vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 37, 61, 79, 127, 255, 511, 1023] {\n            counter\
    \ = counter + 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 37, 61, 79, 127, 255, 511, 1023, 2047] {\n            counter = counter\
    \ + 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 37, 61,\
    \ 79, 127, 255, 511, 1023, 2047, 4095] {\n            counter = counter + 1;\n\
    \        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 37, 61, 79, 127,\
    \ 255, 511, 1023, 2047, 4095, 8191] {\n            counter = counter + 1;\n  \
    \      }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 37, 61, 79, 127,\
    \ 255, 511, 1023, 2047, 4095, 8191, 16383] {\n            counter = counter +\
    \ 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 37, 61,\
    \ 79, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767] {\n            counter\
    \ = counter + 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 37, 61, 79, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 327", "    let\
    \ mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_counter: usize\
    \ = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize\
    \ = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize\
    \ = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize\
    \ = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize\
    \ = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit_count: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_2: Vec<u8> = vec![0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_3: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_digit_count_4: Vec<u8> = vec![0, 0, 0, 0,\
    \ 0, 0, 0, 0];\n    let mut prime_digit_count_5: Vec<u8> = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0];\n    let mut prime_digit_count_6: Vec<u8> = vec![0, 0, 0, 0, 0, 0,\
    \ 0, 0];\n    let mut prime_digit_count_7: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_digit_count_8: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n\
    \    let mut prime_digit_count_9: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n  \
    \  let mut prime_digit_count_10: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n   \
    \ let mut prime_digit_count_11: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let\
    \ mut prime_digit_count_12: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut\
    \ prime_digit_count_13: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_14:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_15: Vec<u8>\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_16: Vec<u8> =\
    \ vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_17: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_18: Vec<u8> = vec![0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_19: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_digit_count_20", "    let mut nums = num.to_string().chars().collect::<Vec<_>>();\n\
    \    let mut primes = vec![false; 16];\n    let mut prime_num = 0;\n    let mut\
    \ prime_num_to_check = prime_num;\n    let mut prime_num_to_check = prime_num_to_check\
    \ - 1;\n    let mut prime_num_to_check = prime_num_to_check - 1;\n    let mut\
    \ prime_num_to_check = prime_num_to_check - 1;\n    let mut prime_num_to_check\
    \ = prime_num_to_check - 1;\n    let mut prime_num_to_check = prime_num_to_check\
    \ - 1;\n    let mut prime_num_to_check = prime_num_to_check - 1;\n    let mut\
    \ prime_num_to_check = prime_num_to_check - 1;\n    let mut prime_num_to_check\
    \ = prime_num_to_check - 1;\n    let mut prime_num_to_check = prime_num_to_check\
    \ - 1;\n    let mut prime_num_to_check = prime_num_to_check - 1;\n    let mut\
    \ prime_num_to_check = prime_num_to_check - 1;\n    let mut prime_num_to_check\
    \ = prime_num_to_check - 1;\n    let mut prime_num_to_check = prime_num_to_check\
    \ - 1;\n    let mut prime_num_to_check = prime_num_to_check - 1;\n    let mut\
    \ prime_num_to_check = prime_num_to_check - 1;\n    let mut prime_num_to_check\
    \ = prime_num_to_check - 1;\n    let mut prime_num_to_check = prime_num_to_check\
    \ - 1;\n    let mut prime_num_to_check = prime_num_to_check - 1;\n    let mut\
    \ prime_num_to_check = prime_num_to_check - 1;\n    let mut prime_num_to_check\
    \ = prime_num_to_check - 1;\n    let mut prime_num_to_check = prime_num_to_check\
    \ - 1;\n    let mut prime_num_to_check = prime_num_to_check - 1;\n    let mut\
    \ prime_num_to_check = prime_num_to_check - 1;\n    let mut prime_num_to_check\
    \ = prime_num_to_check - 1;\n    let mut prime_num_to_check = prime_num_to_check\
    \ - 1;\n    let mut prime_num_to_check = prime_num_to_check - 1;\n    let mut\
    \ prime_num_to_check = prime_num_to_check - 1;\n    let mut prime_num_to_check\
    \ = prime_num_to_check - 1;\n    let mut prime_num_to_check = prime_num_to_check\
    \ - ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n   \
    \ let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter2: Vec<u8>\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter3: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter4: Vec<u8> = vec![0, 0, 0, 0,\
    \ 0, 0, 0, 0];\n    let mut prime_counter5: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter6: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n \
    \   let mut prime_counter7: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut\
    \ prime_counter8: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter9:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter10: Vec<u8>\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter11: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter12: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_counter13: Vec<u8> = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0];\n    let mut prime_counter14: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_counter15: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n\
    \    let mut prime_counter16: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let\
    \ mut prime_counter17: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter18:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter19: Vec<u8>\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter20: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_counter21: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_counter22: Vec<u8> = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0];\n    let mut prime_counter23: Vec<u8> = ", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut prime: Vec<u8> = vec![2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97];\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2:\
    \ usize = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4:\
    \ usize = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6:\
    \ usize = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8:\
    \ usize = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10:\
    \ usize = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n    let mut prime_counter38:\
    \ u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let\
    \ mut counter: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_counter:\
    \ usize = 2;\n    let mut prime_counter2: usize = 2;\n    let mut prime_counter3:\
    \ usize = 2;\n    let mut prime_counter4: usize = 2;\n    let mut prime_counter5:\
    \ usize = 2;\n    let mut prime_counter6: usize = 2;\n    let mut prime_counter7:\
    \ usize = 2;\n    let mut prime_counter8: usize = 2;\n    let mut prime_counter9:\
    \ usize = 2;\n    let mut prime_counter10: usize = 2;\n    let mut prime_counter11:\
    \ usize = 2;\n    let mut prime_counter12: usize = 2;\n    let mut prime_counter13:\
    \ usize = 2;\n    let mut prime_counter14: usize = 2;\n    let mut prime_counter15:\
    \ usize = 2;\n    let mut prime_counter16: usize = 2;\n    let mut prime_counter17:\
    \ usize = 2;\n    let mut prime_counter18: usize = 2;\n    let mut prime_counter19:\
    \ usize = 2;\n    let mut prime_counter20: usize = 2;\n    let mut prime_counter21:\
    \ usize = 2;\n    let mut prime_counter22: usize = 2;\n    let mut prime_counter23:\
    \ usize = 2;\n    let mut prime_counter24: usize = 2;\n    let mut prime_counter25:\
    \ usize = 2;\n    let mut prime_counter26: usize = 2;\n    let mut prime_counter27:\
    \ usize = 2;\n    let mut prime_counter28: usize = 2;\n    let mut prime_counter29:\
    \ usize = 2;\n    let mut prime_counter30: usize = 2;\n    let mut prime_counter31:\
    \ usize = 2;\n    let mut prime_counter32: usize = 2;\n    let mut prime_counter33:\
    \ usize = 2;\n    let mut prime_counter34: usize = 2;\n    let mut prime_counter35:\
    \ usize = 2;\n    let mut prime_counter36: usize = 2;\n    let mut prime_counter37:\
    \ usize = 2;\n    let mut prime_counter38: usize = 2;\n    let mut prime_counter39:\
    \ usize = 2;\n    let mut prime_counter40: usize = 2;\n", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: isize = 0;\n   \
    \ let mut prime_found = false;\n    let mut prime_found2 = false;\n    let mut\
    \ prime_found3 = false;\n    let mut prime_found4 = false;\n    let mut prime_found5\
    \ = false;\n    let mut prime_found6 = false;\n    let mut prime_found7 = false;\n\
    \    let mut prime_found8 = false;\n    let mut prime_found9 = false;\n    let\
    \ mut prime_found10 = false;\n    let mut prime_found11 = false;\n    let mut\
    \ prime_found12 = false;\n    let mut prime_found13 = false;\n    let mut prime_found14\
    \ = false;\n    let mut prime_found15 = false;\n    let mut prime_found16 = false;\n\
    \    let mut prime_found17 = false;\n    let mut prime_found18 = false;\n    let\
    \ mut prime_found19 = false;\n    let mut prime_found20 = false;\n    let mut\
    \ prime_found21 = false;\n    let mut prime_found22 = false;\n    let mut prime_found23\
    \ = false;\n    let mut prime_found24 = false;\n    let mut prime_found25 = false;\n\
    \    let mut prime_found26 = false;\n    let mut prime_found27 = false;\n    let\
    \ mut prime_found28 = false;\n    let mut prime_found29 = false;\n    let mut\
    \ prime_found30 = false;\n    let mut prime_found31 = false;\n    let mut prime_found32\
    \ = false;\n    let mut prime_found33 = false;\n    let mut prime_found34 = false;\n\
    \    let mut prime_found35 = false;\n    let mut prime_found36 = false;\n    let\
    \ mut prime_found37 = false;\n    let mut prime_found38 = false;\n    let mut\
    \ prime_found39 = false;\n    let mut prime_found40 = false;\n    let mut prime_found41\
    \ = false;\n    let mut prime_found42 = false;\n    let mut prime_found43 = false;\n\
    \    let mut prime_found44 = false;\n    let mut prime_found45 = false;\n    let\
    \ mut prime_found46 = false;\n    let mut prime_found47 = false;\n    let mut\
    \ prime_found48 = false;\n    let mut prime_found49 = false;\n    let mut prime_found50\
    \ = false;\n    let mut prime_found51 = false;\n    let mut prime_found52 = false;\n\
    \    let mut prime_found53 = false;", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_digits = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digits_set\
    \ = HashSet::new();\n    let mut prime_digits_count = prime_digits.len();\n  \
    \  let mut prime_digits_sum = 0;\n    let mut prime_digits_product = 1;\n    let\
    \ mut prime_digits_product2 = 1;\n    let mut prime_digits_product3 = 1;\n   \
    \ let mut prime_digits_product4 = 0;\n    let mut prime_digits_product5 = 1;\n\
    \    let mut prime_digits_product6 = 1;\n    let mut prime_digits_product7 = 1;\n\
    \    let mut prime_digits_product8 = 1;\n    let mut prime_digits_product9 = 1;\n\
    \    let mut prime_digits_product10 = 1;\n    let mut prime_digits_product11 =\
    \ 1;\n    let mut prime_digits_product12 = 1;\n    let mut prime_digits_product13\
    \ = 1;\n    let mut prime_digits_product14 = 1;\n    let mut prime_digits_product15\
    \ = 1;\n    let mut prime_digits_product16 = 1;\n    let mut prime_digits_product17\
    \ = 1;\n    let mut prime_digits_product18 = 1;\n    let mut prime_digits_product19\
    \ = 1;\n    let mut prime_digits_product20 = 1;\n    let mut prime_digits_product21\
    \ = 1;\n    let mut prime_digits_product22 = 1;\n    let mut prime_digits_product23\
    \ = 1;\n    let mut prime_digits_product24 = 1;\n    let mut prime_digits_product25\
    \ = 1;\n    let mut prime_digits_product26 = 1;\n    let mut prime_digits_product27\
    \ = 1;\n    let mut prime_digits_product28 = 1;\n    let mut prime_digits_product29\
    \ = 1;\n    let mut prime_digits_product30 = 1;\n    let mut prime_digits_product31\
    \ = 1;\n    let mut prime_digits_product32 = 1;\n    let mut prime_digits_product33\
    \ = 1;\n    let mut prime_digits_product34 = 1;\n    let mut prime_digits_product35\
    \ = 1;\n    let mut prime_digits_product36 = 1;\n    let mut prime_digits_product37\
    \ = 1;\n    let mut prime_digits_product38", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![];\n    let mut num_prime_2: Vec<u8> =\
    \ vec![];\n    let mut num_prime_3: Vec<u8> = vec![];\n    let mut num_prime_4:\
    \ Vec<u8> = vec![];\n    let mut num_prime_5: Vec<u8> = vec![];\n    let mut num_prime_6:\
    \ Vec<u8> = vec![];\n    let mut num_prime_7: Vec<u8> = vec![];\n    let mut num_prime_8:\
    \ Vec<u8> = vec![];\n    let mut num_prime_9: Vec<u8> = vec![];\n    let mut num_prime_10:\
    \ Vec<u8> = vec![];\n    let mut num_prime_11: Vec<u8> = vec![];\n    let mut\
    \ num_prime_12: Vec<u8> = vec![];\n    let mut num_prime_13: Vec<u8> = vec![];\n\
    \    let mut num_prime_14: Vec<u8> = vec![];\n    let mut num_prime_15: Vec<u8>\
    \ = vec![];\n    let mut num_prime_16: Vec<u8> = vec![];\n    let mut num_prime_17:\
    \ Vec<u8> = vec![];\n    let mut num_prime_18: Vec<u8> = vec![];\n    let mut\
    \ num_prime_19: Vec<u8> = vec![];\n    let mut num_prime_20: Vec<u8> = vec![];\n\
    \    let mut num_prime_21: Vec<u8> = vec![];\n    let mut num_prime_22: Vec<u8>\
    \ = vec![];\n    let mut num_prime_23: Vec<u8> = vec![];\n    let mut num_prime_24:\
    \ Vec<u8> = vec![];\n    let mut num_prime_25: Vec<u8> = vec![];\n    let mut\
    \ num_prime_26: Vec<u8> = vec![];\n    let mut num_prime_27: Vec<u8> = vec![];\n\
    \    let mut num_prime_28: Vec<u8> = vec![];\n    let mut num_prime_29: Vec<u8>\
    \ = vec![];\n    let mut num_prime_", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut primes = vec![false; 26];\n    let mut primes_counter = 0;\n    let\
    \ mut primes_counter2 = 0;\n    let mut primes_counter3 = 0;\n    let mut primes_counter4\
    \ = 0;\n    let mut primes_counter5 = 0;\n    let mut primes_counter6 = 0;\n \
    \   let mut primes_counter7 = 0;\n    let mut primes_counter8 = 0;\n    let mut\
    \ primes_counter9 = 0;\n    let mut primes_counter10 = 0;\n    let mut primes_counter11\
    \ = 0;\n    let mut primes_counter12 = 0;\n    let mut primes_counter13 = 0;\n\
    \    let mut primes_counter14 = 0;\n    let mut primes_counter15 = 0;\n    let\
    \ mut primes_counter16 = 0;\n    let mut primes_counter17 = 0;\n    let mut primes_counter18\
    \ = 0;\n    let mut primes_counter19 = 0;\n    let mut primes_counter20 = 0;\n\
    \    let mut primes_counter21 = 0;\n    let mut primes_counter22 = 0;\n    let\
    \ mut primes_counter23 = 0;\n    let mut primes_counter24 = 0;\n    let mut primes_counter25\
    \ = 0;\n    let mut primes_counter26 = 0;\n    let mut primes_counter27 = 0;\n\
    \    let mut primes_counter28 = 0;\n    let mut primes_counter29 = 0;\n    let\
    \ mut primes_counter30 = 0;\n    let mut primes_counter31 = 0;\n    let mut primes_counter32\
    \ = 0;\n    let mut primes_counter33 = 0;\n    let mut primes_counter34 = 0;\n\
    \    let mut primes_counter35 = 0;\n    let mut primes_counter36 = 0;\n    let\
    \ mut primes_counter37 = 0;\n    let mut primes_counter38 = 0;\n    let mut primes_counter39\
    \ = 0;\n    let mut primes_counter40 = 0;\n    let mut primes_counter41 = 0;\n\
    \    let mut primes_counter42 = 0;\n    let mut primes_counter43 = 0;\n    let\
    \ mut primes_counter44 = 0;\n    let mut primes_counter45 = 0;\n    let mut primes_counter46\
    \ = 0;\n    let mut primes_counter47 = 0;\n    let mut primes_counter48 = 0;\n\
    \    let mut primes_counter49 = 0;\n    let mut primes_counter50 = 0;\n    let\
    \ mut primes_counter51 = 0;\n    let mut primes_counter52 = 0;\n    let mut primes_counter53\
    \ = 0;\n    let mut primes_counter54 = 0;\n    let mu", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut nums_copy = nums.clone();\n    let mut primes = vec![true; 10];\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut primes_copy = primes.clone();\n\
    \    let mut primes_copy = primes.clone();\n    let mut ", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_prime: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime_prime: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime_prime_prime: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime_prime_prime_prime: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime_prime_prime_prime_prime: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ num_digits = num.len();\n    let mut prime_digits = 2;\n    let mut prime_digits_counter\
    \ = 0;\n    let mut prime_digits_counter2 = 0;\n    let mut prime_digits_counter3\
    \ = 0;\n    let mut prime_digits_counter4 = 0;\n    let mut prime_digits_counter5\
    \ = 0;\n    let mut prime_digits_counter6 = 0;\n    let mut prime_digits_counter7\
    \ = 0;\n    let mut prime_digits_counter8 = 0;\n    let mut prime_digits_counter9\
    \ = 0;\n    let mut prime_digits_counter10 = 0;\n    let mut prime_digits_counter11\
    \ = 0;\n    let mut prime_digits_counter12 = 0;\n    let mut prime_digits_counter13\
    \ = 0;\n    let mut prime_digits_counter14 = 0;\n    let mut prime_digits_counter15\
    \ = 0;\n    let mut prime_digits_counter16 = 0;\n    let mut prime_digits_counter17\
    \ = 0;\n    let mut prime_digits_counter18 = 0;\n    let mut prime_digits_counter19\
    \ = 0;\n    let mut prime_digits_counter20 = 0;\n    let mut prime_digits_counter21\
    \ = 0;\n    let mut prime_digits_counter22 = 0;\n    let mut prime_digits_counter23\
    \ = 0;\n    let mut prime_digits_counter24 = 0;\n    let mut prime_digits_counter25\
    \ = 0;\n    let mut prime_digits_counter26 = 0;\n    let mut prime_digits_counter27\
    \ = 0;\n    let mut prime_digits_counter28 = 0;\n    let mut prime_digits_counter29\
    \ = 0;\n    let mut prime_digits_counter30 = 0;\n    let mut prime_digits_counter31\
    \ = 0;\n    let mut prime_digits_counter32 = 0;\n    let mut prime_digits_counter33\
    \ = 0;\n    let mut prime_digits_counter34 = 0;\n    let mut prime_digits_counter35\
    \ = 0;\n    let mut prime_digits_counter36 = 0;\n    let mut prime_digits_counter37\
    \ = 0;\n    let mut prime_digits_counter38 = 0;\n    let mut prime_digits_counter39\
    \ = 0;\n    let mut prime_digits_counter40 = 0;\n    let mut prime_digits_counter41\
    \ = 0;\n    let mut prime_digits_counter42 = 0;\n    let mut prime_digits_counter43\
    \ = 0;\n    let mut prime_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_count: usize = 0;\n    let mut prime_digit: u8 = 0;\n    let\
    \ mut prime_digit_count: usize = 0;\n    let mut prime_digit_sum: usize = 0;\n\
    \    let mut prime_digit_product: usize = 1;\n    let mut prime_digit_product2:\
    \ usize = 1;\n    let mut prime_digit_product3: usize = 1;\n    let mut prime_digit_product4:\
    \ usize = 1;\n    let mut prime_digit_product5: usize = 1;\n    let mut prime_digit_product6:\
    \ usize = 1;\n    let mut prime_digit_product7: usize = 1;\n    let mut prime_digit_product8:\
    \ usize = 1;\n    let mut prime_digit_product9: usize = 1;\n    let mut prime_digit_product10:\
    \ usize = 1;\n    let mut prime_digit_product11: usize = 1;\n    let mut prime_digit_product12:\
    \ usize = 1;\n    let mut prime_digit_product13: usize = 1;\n    let mut prime_digit_product14:\
    \ usize = 1;\n    let mut prime_digit_product15: usize = 1;\n    let mut prime_digit_product16:\
    \ usize = 1;\n    let mut prime_digit_product17: usize = 1;\n    let mut prime_digit_product18:\
    \ usize = 1;\n    let mut prime_digit_product19: usize = 1;\n    let mut prime_digit_product20:\
    \ usize = 1;\n    let mut prime_digit_product21: usize = 1;\n    let mut prime_digit_product22:\
    \ usize = 1;\n    let mut prime_digit_product23: usize = 1;\n    let mut prime_digit_product24:\
    \ usize = 1;\n    let mut prime_digit_product25: usize = 1;\n    let mut prime_digit_product26:\
    \ usize = 1;\n    let mut prime_digit_product27: usize = 1;\n    let mut prime_digit_product28:\
    \ usize = 1;\n    let mut prime_digit_product29: usize = 1;\n    let mut prime_digit_product30:\
    \ usize = 1;\n    let mut prime_digit_product31: usize = 1;\n    let mut prime_digit_product32:\
    \ usize = 1;\n    let mut prime_digit_product33: usize = 1;\n    let mut prime_digit_product34:\
    \ usize = 1;\n    let mut prime_digit_product35: usize = 1;\n", "    let mut num:\
    \ Vec<u8> = num.to_string().chars().collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&x|\
    \ x >= '0' && x <= '9').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&x|\
    \ x >= 'A' && x <= 'F').collect();\n    let mut num: Vec<u8> = num.into_iter().filter(|&x|\
    \ x >= 'a' && x <= 'f').collect();\n    let mut num: Vec<u8> = num.in", "    let\
    \ mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_prime:\
    \ Vec<u8> = vec![];\n    let mut num_prime_2: Vec<u8> = vec![];\n    let mut num_prime_3:\
    \ Vec<u8> = vec![];\n    let mut num_prime_4: Vec<u8> = vec![];\n    let mut num_prime_5:\
    \ Vec<u8> = vec![];\n    let mut num_prime_6: Vec<u8> = vec![];\n    let mut num_prime_7:\
    \ Vec<u8> = vec![];\n    let mut num_prime_8: Vec<u8> = vec![];\n    let mut num_prime_9:\
    \ Vec<u8> = vec![];\n    let mut num_prime_10: Vec<u8> = vec![];\n    let mut\
    \ num_prime_11: Vec<u8> = vec![];\n    let mut num_prime_12: Vec<u8> = vec![];\n\
    \    let mut num_prime_13: Vec<u8> = vec![];\n    let mut num_prime_14: Vec<u8>\
    \ = vec![];\n    let mut num_prime_15: Vec<u8> = vec![];\n    let mut num_prime_16:\
    \ Vec<u8> = vec![];\n    let mut num_prime_17: Vec<u8> = vec![];\n    let mut\
    \ num_prime_18: Vec<u8> = vec![];\n    let mut num_prime_19: Vec<u8> = vec![];\n\
    \    let mut num_prime_20: Vec<u8> = vec![];\n    let mut num_prime_21: Vec<u8>\
    \ = vec![];\n    let mut num_prime_22: Vec<u8> = vec![];\n    let mut num_prime_23:\
    \ Vec<u8> = vec![];\n    let mut num_prime_24: Vec<u8> = vec![];\n    let mut\
    \ num_prime_25: Vec<u8> = vec![];\n    let mut num_prime_26: Vec<u8> = vec![];\n\
    \    let mut num_prime_27: Vec<u8> = vec![];\n    let mut num_prime_28: Vec<u8>\
    \ = vec![];\n    let mut num_prime_29: Vec<u8> = vec![];\n    let mut num_prime_",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ Vec<u8> = vec![0, 0, 0, 0];\n    let mut prime_counter_index: usize = 0;\n \
    \   let mut prime_counter_index2: usize = 0;\n    let mut prime_counter_index3:\
    \ usize = 0;\n    let mut prime_counter_index4: usize = 0;\n    let mut prime_counter_index5:\
    \ usize = 0;\n    let mut prime_counter_index6: usize = 0;\n    let mut prime_counter_index7:\
    \ usize = 0;\n    let mut prime_counter_index8: usize = 0;\n    let mut prime_counter_index9:\
    \ usize = 0;\n    let mut prime_counter_index10: usize = 0;\n    let mut prime_counter_index11:\
    \ usize = 0;\n    let mut prime_counter_index12: usize = 0;\n    let mut prime_counter_index13:\
    \ usize = 0;\n    let mut prime_counter_index14: usize = 0;\n    let mut prime_counter_index15:\
    \ usize = 0;\n    let mut prime_counter_index16: usize = 0;\n    let mut prime_counter_index17:\
    \ usize = 0;\n    let mut prime_counter_index18: usize = 0;\n    let mut prime_counter_index19:\
    \ usize = 0;\n    let mut prime_counter_index20: usize = 0;\n    let mut prime_counter_index21:\
    \ usize = 0;\n    let mut prime_counter_index22: usize = 0;\n    let mut prime_counter_index23:\
    \ usize = 0;\n    let mut prime_counter_index24: usize = 0;\n    let mut prime_counter_index25:\
    \ usize = 0;\n    let mut prime_counter_index26: usize = 0;\n    let mut prime_counter_index27:\
    \ usize = 0;\n    let mut prime_counter_index28: usize = 0;\n    let mut prime_counter_index29:\
    \ usize = 0;\n    let mut prime_counter_index30: usize = 0;\n    let mut prime_counter_index31:\
    \ usize = 0;\n    let mut prime_counter_index32: usize = 0;\n    let mut prime_counter_index33:\
    \ usize = 0;\n    let mut prime_counter", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut nums_iter = nums.iter();\n    let mut nums_iter = nums_iter.filter(|&c|\
    \ c >= '0' && c <= '9');\n    let mut nums_iter = nums_iter.filter(|&c| c != 'A'\
    \ && c != 'B' && c != 'C' && c != 'D' && c != 'E' && c != 'F');\n    let mut nums_iter\
    \ = nums_iter.map(|&c| c as isize);\n    let mut nums_iter = nums_iter.filter(|&c|\
    \ c < 10);\n    let mut nums_iter = nums_iter.map(|&c| c as isize);\n    let mut\
    \ nums_iter = nums_iter.filter(|&c| c < 16);\n    let mut nums_iter = nums_iter.map(|&c|\
    \ c as isize);\n    let mut nums_iter = nums_iter.filter(|&c| c < 20);\n    let\
    \ mut nums_iter = nums_iter.map(|&c| c as isize);\n    let mut nums_iter = nums_iter.filter(|&c|\
    \ c < 24);\n    let mut nums_iter = nums_iter.map(|&c| c as isize);\n    let mut\
    \ nums_iter = nums_iter.filter(|&c| c < 28);\n    let mut nums_iter = nums_iter.map(|&c|\
    \ c as isize);\n    let mut nums_iter = nums_iter.filter(|&c| c < 32);\n    let\
    \ mut nums_iter = nums_iter.map(|&c| c as isize);\n    let mut nums_iter = nums_iter.filter(|&c|\
    \ c < 36);\n    let mut nums_iter = nums_iter.map(|&c| c as isize);\n    let mut\
    \ nums_iter = nums_iter.filter(|&c| c < 40);\n    let mut nums_iter = nums_iter.map(|&c|\
    \ c as isize);\n    let mut nums_iter = nums_iter.filter(|&c| c < 44);\n    let\
    \ mut nums_iter = nums_iter.map(|&c| c as isize);\n    let mut nums_iter = nums_iter.filter(|&c|\
    \ c < 48);\n    let mut nums_iter = nums_iter.map(|&c| c as isize);\n    let mut\
    \ nums_iter = nums_iter.filter(|&c| c < 52);\n    let mut nums_iter = ", "   \
    \ let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime_digits\
    \ = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut prime_digits_set = HashSet::new();\n \
    \   let mut prime_digits_count = prime_digits.len();\n    let mut prime_digits_index\
    \ = 0;\n    let mut prime_digits_sum = 0;\n    let mut prime_digits_product =\
    \ 1;\n    let mut prime_digits_product2 = 0;\n    let mut prime_digits_product3\
    \ = 0;\n    let mut prime_digits_product4 = 0;\n    let mut prime_digits_product5\
    \ = 0;\n    let mut prime_digits_product6 = 0;\n    let mut prime_digits_product7\
    \ = 0;\n    let mut prime_digits_product8 = 0;\n    let mut prime_digits_product9\
    \ = 0;\n    let mut prime_digits_product10 = 0;\n    let mut prime_digits_product11\
    \ = 0;\n    let mut prime_digits_product12 = 0;\n    let mut prime_digits_product13\
    \ = 0;\n    let mut prime_digits_product14 = 0;\n    let mut prime_digits_product15\
    \ = 0;\n    let mut prime_digits_product16 = 0;\n    let mut prime_digits_product17\
    \ = 0;\n    let mut prime_digits_product18 = 0;\n    let mut prime_digits_product19\
    \ = 0;\n    let mut prime_digits_product20 = 0;\n    let mut prime_digits_product21\
    \ = 0;\n    let mut prime_digits_product22 = 0;\n    let mut prime_digits_product23\
    \ = 0;\n    let mut prime_digits_product24 = 0;\n    let mut prime_digits_product25\
    \ = 0;\n    let mut prime_digits_product26 = 0;\n    let mut prime_digits_product27\
    \ = 0;\n    let mut prime_digits_product28 = 0;\n    let mut prime_digits_product29\
    \ = 0;\n    let mut prime_digits_product30 = 0;\n    let mut prime_digits_product31\
    \ = 0;\n    let mut prime_digits_product32 = 0;\n    let mut prime_digits_product33\
    \ = 0;\n    let mut prime_digits_product34 = 0;\n    let mut prime_digits_product35\
    \ = 0;\n    let mut prime_digits_product36 = 0;\n    let mut prime_digits_product37\
    \ = 0;\n    let ", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.in", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x as u8).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x as u8).collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = num.clone();\n    let mut num_prime_prime: Vec<u8>\
    \ = num_prime.clone();\n    let mut num_prime_prime_prime: Vec<u8> = num_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8>\
    \ = num_prime_prime_prime_prime_prime_prime_prime_prime_prime.clone();\n    let\
    \ mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime: Vec<u8> = num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime.clone();\n\
    \    let mut num_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime:\
    \ Vec<u8> = num_prime_prime_prime_prime_prime_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![];\n    let mut prime_counter: usize = 0;\n\
    \    let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize = 0;\n\
    \    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize = 0;\n\
    \    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize = 0;\n\
    \    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize = 0;\n\
    \    let mut prime_counter10: usize = 0;\n    let mut prime_counter11: usize =\
    \ 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13: usize\
    \ = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: usize = 0;\n    let mut prime", " \
    \   let mut num: isize = 0;\n    let mut digits: Vec<&str> = num.chars().collect();\n\
    \    let mut primes: Vec<&str> = vec![];\n    let mut prime: isize = 0;\n    let\
    \ mut prime_found = false;\n    let mut prime_found2 = false;\n    let mut prime_found3\
    \ = false;\n    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n\
    \    let mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let\
    \ mut prime_found8 = false;\n    let mut prime_found9 = false;\n    let mut prime_found10\
    \ = false;\n    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n\
    \    let mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let\
    \ mut prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut\
    \ prime_found17 = false;\n    let mut prime_found18 = false;\n    let mut prime_found19\
    \ = false;\n    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n\
    \    let mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let\
    \ mut prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut\
    \ prime_found26 = false;\n    let mut prime_found27 = false;\n    let mut prime_found28\
    \ = false;\n    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n\
    \    let mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let\
    \ mut prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut\
    \ prime_found35 = false;\n    let mut prime_found36 = false;\n    let mut prime_found37\
    \ = false;\n    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n\
    \    let mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let\
    \ mut prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut\
    \ prime_found44 = false;\n    let mut prime_found45 = false;\n    let mut prime_found46\
    \ = false;\n    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n\
    \    let mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let\
    \ mut prime_found", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_len\
    \ = prime.len();\n    let mut prime_num = prime[0];\n    let mut prime_num_len\
    \ = prime_num.len();\n    let mut prime_num_pow: Vec<u8> = vec![prime_num];\n\
    \    let mut prime_num_pow_len = prime_num_pow.len();\n    let mut prime_num_pow_pow:\
    \ Vec<u8> = vec![prime_num_pow];\n    let mut prime_num_pow_pow_len = prime_num_pow_pow.len();\n\
    \    let mut prime_num_pow_pow_pow: Vec<u8> = vec![prime_num_pow_pow];\n    let\
    \ mut prime_num_pow_pow_pow_len = prime_num_pow_pow_pow.len();\n    let mut prime_num_pow_pow_pow_pow:\
    \ Vec<u8> = vec![prime_num_pow_pow_pow];\n    let mut prime_num_pow_pow_pow_len\
    \ = prime_num_pow_pow_pow_pow.len();\n    let mut prime_num_pow_pow_pow_pow: Vec<u8>\
    \ = vec![prime_num_pow_pow_pow_pow];\n    let mut prime_num_pow_pow_pow_pow_len\
    \ = prime_num_pow_pow_pow_pow_pow.len();\n    let mut prime_num_pow_pow_pow_pow_pow:\
    \ Vec<u8> = vec![prime_num_pow_pow_pow_pow_pow];\n    let mut prime_num_pow_pow_pow_pow_pow_len\
    \ = prime_num_pow_pow_pow_pow_pow_pow_pow.len();\n    let mut prime_num_pow_pow_pow_pow_pow_pow:\
    \ Vec<u8> = vec![prime_num_pow_pow_pow_pow_pow_pow];\n    let mut prime_num_pow_pow_pow_pow_pow_len\
    \ = prime_num_pow_pow_pow_pow_pow_pow_pow.len();\n    let mut prime_num_pow_pow_pow_pow_pow_pow:\
    \ Vec<u8> = vec![prime_num_pow_pow_pow_pow_pow_pow];\n    let mut prime_num_pow_pow_pow_pow_pow_pow_len\
    \ = prime_num_pow_pow_pow_pow_pow_pow_pow_pow.len();\n    let mut prime_num_pow_pow_pow_pow_pow_pow_pow:\
    \ Vec<u8> = vec![prime_num_pow_pow_pow_pow_", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut prime_digits = 0;\n    let mut\
    \ prime_number = 0;\n    let mut prime_number_prime = 0;\n    let mut prime_number_prime_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime = 0;\n    let mut prime_number_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime = 0;\n    let mut\
    \ prime_number_prime_prime_prime_prime_prime_prime = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut prime_number_prime_prime_prime_prime_prime_prime_prime", " \
    \   let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n   \
    \ let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.into_iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.in", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_2:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_3: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_4: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_5: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_6:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_7: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_8: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_9: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_10:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_11: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![];\n    let mut num_prime_hex: Vec<u8>\
    \ = vec![];\n    let mut num_prime_hex_reverse: Vec<u8> = vec![];\n    let mut\
    \ num_prime_hex_reverse_hex: Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex: Vec<u8>\
    \ = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse: Vec<u8>\
    \ = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex: Vec<u8>\
    \ = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse:\
    \ Vec<u8> = vec![];\n    let mut num_prime_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex_reverse_hex",
  "    let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut prime:\
    \ isize = 0;\n    let mut prime_found = false;\n    let mut prime_found2 = false;\n\
    \    let mut prime_found3 = false;\n    let mut prime_found4 = false;\n    let\
    \ mut prime_found5 = false;\n    let mut prime_found6 = false;\n    let mut prime_found7\
    \ = false;\n    let mut prime_found8 = false;\n    let mut prime_found9 = false;\n\
    \    let mut prime_found10 = false;\n    let mut prime_found11 = false;\n    let\
    \ mut prime_found12 = false;\n    let mut prime_found13 = false;\n    let mut\
    \ prime_found14 = false;\n    let mut prime_found15 = false;\n    let mut prime_found16\
    \ = false;\n    let mut prime_found17 = false;\n    let mut prime_found18 = false;\n\
    \    let mut prime_found19 = false;\n    let mut prime_found20 = false;\n    let\
    \ mut prime_found21 = false;\n    let mut prime_found22 = false;\n    let mut\
    \ prime_found23 = false;\n    let mut prime_found24 = false;\n    let mut prime_found25\
    \ = false;\n    let mut prime_found26 = false;\n    let mut prime_found27 = false;\n\
    \    let mut prime_found28 = false;\n    let mut prime_found29 = false;\n    let\
    \ mut prime_found30 = false;\n    let mut prime_found31 = false;\n    let mut\
    \ prime_found32 = false;\n    let mut prime_found33 = false;\n    let mut prime_found34\
    \ = false;\n    let mut prime_found35 = false;\n    let mut prime_found36 = false;\n\
    \    let mut prime_found37 = false;\n    let mut prime_found38 = false;\n    let\
    \ mut prime_found39 = false;\n    let mut prime_found40 = false;\n    let mut\
    \ prime_found41 = false;\n    let mut prime_found42 = false;\n    let mut prime_found43\
    \ = false;\n    let mut prime_found44 = false;\n    let mut prime_found45 = false;\n\
    \    let mut prime_found46 = false;\n    let mut prime_found47 = false;\n    let\
    \ mut prime_found48 = false;\n    let mut prime_found49 = false;\n    let mut\
    \ prime_found50 = false;\n    let mut prime_found51 = false;\n    let mut prime_found52\
    \ = false;\n    let mut prime_found53 = false;", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit_count: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_2: Vec<u8> = vec![0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_3: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_digit_count_4: Vec<u8> = vec![0, 0, 0, 0,\
    \ 0, 0, 0, 0];\n    let mut prime_digit_count_5: Vec<u8> = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0];\n    let mut prime_digit_count_6: Vec<u8> = vec![0, 0, 0, 0, 0, 0,\
    \ 0, 0];\n    let mut prime_digit_count_7: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_digit_count_8: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n\
    \    let mut prime_digit_count_9: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n  \
    \  let mut prime_digit_count_10: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n   \
    \ let mut prime_digit_count_11: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let\
    \ mut prime_digit_count_12: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut\
    \ prime_digit_count_13: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_14:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_15: Vec<u8>\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_16: Vec<u8> =\
    \ vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_17: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_18: Vec<u8> = vec![0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_19: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_digit_count_20", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num_digits = num.len();\n\
    \    let mut num_primes = 0;\n    let mut num_primes_digits = 0;\n    let mut\
    \ num_primes_digits_primes = 0;\n    let mut num_primes_digits_primes_primes =\
    \ 0;\n    let mut num_primes_digits_primes_primes_primes = 0;\n    let mut num_primes_digits_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes = 0;\n\
    \    let mut num_primes_digits_primes_primes_primes_primes_primes_primes = 0;\n\
    \    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_primes_digits_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes_primes\
    \ = 0;\n    let mut num_prime", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'A' && x <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= 'a' && x <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&x| x >= '0' && x <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num_digits = num.len();\n    let mut num_primes = 0;\n    let mut\
    \ num_primes_found = 0;\n    let mut num_primes_found2 = 0;\n    let mut num_primes_found3\
    \ = 0;\n    let mut num_primes_found4 = 0;\n    let mut num_primes_found5 = 0;\n\
    \    let mut num_primes_found6 = 0;\n    let mut num_primes_found7 = 0;\n    let\
    \ mut num_primes_found8 = 0;\n    let mut num_primes_found9 = 0;\n    let mut\
    \ num_primes_found10 = 0;\n    let mut num_primes_found11 = 0;\n    let mut num_primes_found12\
    \ = 0;\n    let mut num_primes_found13 = 0;\n    let mut num_primes_found14 =\
    \ 0;\n    let mut num_primes_found15 = 0;\n    let mut num_primes_found16 = 0;\n\
    \    let mut num_primes_found17 = 0;\n    let mut num_primes_found18 = 0;\n  \
    \  let mut num_primes_found19 = 0;\n    let mut num_primes_found20 = 0;\n    let\
    \ mut num_primes_found21 = 0;\n    let mut num_primes_found22 = 0;\n    let mut\
    \ num_primes_found23 = 0;\n    let mut num_primes_found24 = 0;\n    let mut num_primes_found25\
    \ = 0;\n    let mut num_primes_found26 = 0;\n    let mut num_primes_found27 =\
    \ 0;\n    let mut num_primes_found28 = 0;\n    let mut num_primes_found29 = 0;\n\
    \    let mut num_primes_found30 = 0;\n    let mut num_primes_found31 = 0;\n  \
    \  let mut num_primes_found32 = 0;\n    let mut num_primes_found33 = 0;\n    let\
    \ mut num_primes_found34 = 0;\n    let mut num_primes_found35 = 0;\n    let mut\
    \ num_primes_found36 = 0;\n    let mut num_primes_found37 = 0;\n    let mut num_primes_found38\
    \ = 0;\n    let mut num_primes_found39 = 0;\n    let mut num_primes_found40 =\
    \ 0;\n    let mut num_primes_found41 = 0;\n    let mut num_primes_found42 = 0;\n\
    \    let mut num_primes_found43 = 0;\n    let mut num_primes_found44 = 0;\n  \
    \  let mut num_primes_found45 = 0;\n    let mut num_primes_found46 = 0;\n    let\
    \ mut num_primes_found47 = 0;\n    let mut num_primes_found48 = 0;\n", "    let\
    \ mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut num_digits\
    \ = num.len();\n    let mut prime_digits = 0;\n    let mut prime_number = 0;\n\
    \    let mut prime_number_digits = 0;\n    let mut prime_number_digits_sum = 0;\n\
    \    let mut prime_number_digits_product = 1;\n    let mut prime_number_digits_product2\
    \ = 1;\n    let mut prime_number_digits_product3 = 1;\n    let mut prime_number_digits_product4\
    \ = 1;\n    let mut prime_number_digits_product5 = 1;\n    let mut prime_number_digits_product6\
    \ = 1;\n    let mut prime_number_digits_product7 = 1;\n    let mut prime_number_digits_product8\
    \ = 1;\n    let mut prime_number_digits_product9 = 1;\n    let mut prime_number_digits_product10\
    \ = 1;\n    let mut prime_number_digits_product11 = 1;\n    let mut prime_number_digits_product12\
    \ = 1;\n    let mut prime_number_digits_product13 = 1;\n    let mut prime_number_digits_product14\
    \ = 1;\n    let mut prime_number_digits_product15 = 1;\n    let mut prime_number_digits_product16\
    \ = 1;\n    let mut prime_number_digits_product17 = 1;\n    let mut prime_number_digits_product18\
    \ = 1;\n    let mut prime_number_digits_product19 = 1;\n    let mut prime_number_digits_product20\
    \ = 1;\n    let mut prime_number_digits_product21 = 1;\n    let mut prime_number_digits_product22\
    \ = 1;\n    let mut prime_number_digits_product23 = 1;\n    let mut prime_number_digits_product24\
    \ = 1;\n    let mut prime_number_digits_product25 = 1;\n    let mut prime_number_digits_product26\
    \ = 1;\n    let mut prime_number_digits_product27 = 1;\n    let mut prime_number_digits_product28\
    \ = 1;\n    let mut prime_number_digits_product29 = 1;\n    let mut prime_number_digits_product30\
    \ = 1;\n    let mut prime_number_digits_product31 = 1;\n    let mut prime_number_digits_product32\
    \ = 1;\n    let mut prime_number_digits_product33 = 1;\n    let mut prime_number_digits_product34\
    \ = 1;\n    let mut prime_number_digits_product35 = 1;\n    let mut prime_number_digits_product36\
    \ = 1;\n    let mut prime_number_digits_product37 = 1;\n    let mut prime", " \
    \   let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut\
    \ num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n   \
    \ let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= '0' && c <= '9').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'A' && c <= 'F').collect();\n\
    \    let mut num: Vec<u8> = num.iter().filter(|&c| c >= 'a' && c <= 'f').collect();\n\
    \    let mut num: Vec<u8> = num.iter", "    let mut nums = num.chars().collect::<Vec<_>>();\n\
    \    let mut primes = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\
    \ 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut primes_len = primes.len();\n\
    \    let mut primes_num = primes.clone();\n    let mut primes_num_len = primes_num.len();\n\
    \    let mut primes_num_num_len = primes_num_len.clone();\n    let mut primes_num_num_num_len\
    \ = primes_num_num_len.clone();\n    let mut primes_num_num_num_num_len = primes_num_num_num_len.clone();\n\
    \    let mut primes_num_num_num_num_num_len = primes_num_num_num_num_len.clone();\n\
    \    let mut primes_num_num_num_num_num_num_len = primes_num_num_num_num_num_len.clone();\n\
    \    let mut primes_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_len.clone();\n\
    \    let mut primes_num_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_num_len.clone();\n\
    \    let mut primes_num_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_num_len.clone();\n\
    \    let mut primes_num_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_num_num_len.clone();\n\
    \    let mut primes_num_num_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_num_num_len.clone();\n\
    \    let mut primes_num_num_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_num_num_num_len.clone();\n\
    \    let mut primes_num_num_num_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_num_num_num_num_len.clone();\n\
    \    let mut primes_num_num_num_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_num_num_num_num_len.clone();\n\
    \    let mut primes_num_num_num_num_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_num_num_num_num_num_len.clone();\n\
    \    let mut primes_num_num_num_num_num_num_num_num_num_num_num_len = primes_num_num_num_num_num_num_num_num_num_num_num_num_num_len.clone();\n\
    \    let mut primes_num_num_num_num_num_num_num_num_num_num_num_len = ", "   \
    \ let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter: usize = 0;\n    let mut\
    \ prime_counter: usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut\
    \ prime_counter3: usize = 0;\n    let mut prime_counter4: usize = 0;\n    let\
    \ mut prime_counter5: usize = 0;\n    let mut prime_counter6: usize = 0;\n   \
    \ let mut prime_counter7: usize = 0;\n    let mut prime_counter8: usize = 0;\n\
    \    let mut prime_counter9: usize = 0;\n    let mut prime_counter10: usize =\
    \ 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12: usize\
    \ = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n", "    let mut nums =\
    \ num.chars().collect::<Vec<_>>();\n    let mut nums_len = nums.len();\n    let\
    \ mut prime_digits = vec![false; 10];\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len2 = prime_digits_len * prime_digits_len;\n    let\
    \ mut prime_digits_len3 = prime_digits_len2 * prime_digits_len2;\n    let mut\
    \ prime_digits_len4 = prime_digits_len3 * prime_digits_len3;\n    let mut prime_digits_len5\
    \ = prime_digits_len4 * prime_digits_len4;\n    let mut prime_digits_len6 = prime_digits_len5\
    \ * prime_digits_len5;\n    let mut prime_digits_len7 = prime_digits_len6 * prime_digits_len6;\n\
    \    let mut prime_digits_len8 = prime_digits_len7 * prime_digits_len7;\n    let\
    \ mut prime_digits_len9 = prime_digits_len8 * prime_digits_len8;\n    let mut\
    \ prime_digits_len10 = prime_digits_len9 * prime_digits_len9;\n    let mut prime_digits_len11\
    \ = prime_digits_len10 * prime_digits_len10;\n    let mut prime_digits_len12 =\
    \ prime_digits_len11 * prime_digits_len11;\n    let mut prime_digits_len13 = prime_digits_len12\
    \ * prime_digits_len12;\n    let mut prime_digits_len14 = prime_digits_len13 *\
    \ prime_digits_len13;\n    let mut prime_digits_len15 = prime_digits_len14 * prime_digits_len14;\n\
    \    let mut prime_digits_len16 = prime_digits_len15 * prime_digits_len15;\n \
    \   let mut prime_digits_len17 = prime_digits_len16 * prime_digits_len16;\n  \
    \  let mut prime_digits_len18 = prime_digits_len17 * prime_digits_len17;\n   \
    \ let mut prime_digits_len19 = prime_digits_len18 * prime_digits_len18;\n    let\
    \ mut prime_digits_len20 = prime_digits_len19 * prime_digits_len19;\n    let mut\
    \ prime_digits_len21 = prime_digits_len20 * ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count: usize = 0;\n    let mut prime: usize = 2;\n    let mut prime_found\
    \ = false;\n    let mut prime_found2 = false;\n    let mut prime_found3 = false;\n\
    \    let mut prime_found4 = false;\n    let mut prime_found5 = false;\n    let\
    \ mut prime_found6 = false;\n    let mut prime_found7 = false;\n    let mut prime_found8\
    \ = false;\n    let mut prime_found9 = false;\n    let mut prime_found10 = false;\n\
    \    let mut prime_found11 = false;\n    let mut prime_found12 = false;\n    let\
    \ mut prime_found13 = false;\n    let mut prime_found14 = false;\n    let mut\
    \ prime_found15 = false;\n    let mut prime_found16 = false;\n    let mut prime_found17\
    \ = false;\n    let mut prime_found18 = false;\n    let mut prime_found19 = false;\n\
    \    let mut prime_found20 = false;\n    let mut prime_found21 = false;\n    let\
    \ mut prime_found22 = false;\n    let mut prime_found23 = false;\n    let mut\
    \ prime_found24 = false;\n    let mut prime_found25 = false;\n    let mut prime_found26\
    \ = false;\n    let mut prime_found27 = false;\n    let mut prime_found28 = false;\n\
    \    let mut prime_found29 = false;\n    let mut prime_found30 = false;\n    let\
    \ mut prime_found31 = false;\n    let mut prime_found32 = false;\n    let mut\
    \ prime_found33 = false;\n    let mut prime_found34 = false;\n    let mut prime_found35\
    \ = false;\n    let mut prime_found36 = false;\n    let mut prime_found37 = false;\n\
    \    let mut prime_found38 = false;\n    let mut prime_found39 = false;\n    let\
    \ mut prime_found40 = false;\n    let mut prime_found41 = false;\n    let mut\
    \ prime_found42 = false;\n    let mut prime_found43 = false;\n    let mut prime_found44\
    \ = false;\n    let mut prime_found45 = false;\n    let mut prime_found46 = false;\n\
    \    let mut prime_found47 = false;\n    let mut prime_found48 = false;\n    let\
    \ mut prime_found49 = false;\n    let mut prime_found50 = false;\n    let mut\
    \ prime_found51 = false;\n    let mut prime_found52 = false;\n    let ", "   \
    \ let mut nums = num.chars().collect::<Vec<_>>();\n    let mut primes = vec![false;\
    \ 26];\n    let mut primes_count = vec![0; 26];\n    let mut primes_count_index\
    \ = vec![0; 26];\n    let mut primes_count_index2 = vec![0; 26];\n    let mut\
    \ primes_count_index3 = vec![0; 26];\n    let mut primes_count_index4 = vec![0;\
    \ 26];\n    let mut primes_count_index5 = vec![0; 26];\n    let mut primes_count_index6\
    \ = vec![0; 26];\n    let mut primes_count_index7 = vec![0; 26];\n    let mut\
    \ primes_count_index8 = vec![0; 26];\n    let mut primes_count_index9 = vec![0;\
    \ 26];\n    let mut primes_count_index10 = vec![0; 26];\n    let mut primes_count_index11\
    \ = vec![0; 26];\n    let mut primes_count_index12 = vec![0; 26];\n    let mut\
    \ primes_count_index13 = vec![0; 26];\n    let mut primes_count_index14 = vec![0;\
    \ 26];\n    let mut primes_count_index15 = vec![0; 26];\n    let mut primes_count_index16\
    \ = vec![0; 26];\n    let mut primes_count_index17 = vec![0; 26];\n    let mut\
    \ primes_count_index18 = vec![0; 26];\n    let mut primes_count_index19 = vec![0;\
    \ 26];\n    let mut primes_count_index20 = vec![0; 26];\n    let mut primes_count_index21\
    \ = vec![0; 26];\n    let mut primes_count_index22 = vec![0; 26];\n    let mut\
    \ primes_count_index23 = vec![0; 26];\n    let mut primes_count_index24 = vec![0;\
    \ 26];\n    let mut primes_count_index25 = vec![0; 26];\n    let mut primes_count_index26\
    \ = vec![0; 26];\n    let mut primes_count_index27 = vec![0; 26];\n    let mut\
    \ primes_count_index28 = vec![0; 26];\n    let mut primes_count_index29 = vec![0;\
    \ 26];\n    let mut primes_count_index30 = vec![0; 26];\n    let mut primes_count_index31\
    \ = vec![0; 26];\n    let mut primes_count_index32 = vec![0; 26];\n    let mut\
    \ prime", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n  \
    \  let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let\
    \ mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut\
    \ num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8>\
    \ = num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> =\
    \ num.iter().map(|x| x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ x.to_digit(16)).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| x.to_digit(16)).collect();\n\
    \    let mut num: Vec<", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_digit_count: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_2: Vec<u8> = vec![0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_3: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_digit_count_4: Vec<u8> = vec![0, 0, 0, 0,\
    \ 0, 0, 0, 0];\n    let mut prime_digit_count_5: Vec<u8> = vec![0, 0, 0, 0, 0,\
    \ 0, 0, 0];\n    let mut prime_digit_count_6: Vec<u8> = vec![0, 0, 0, 0, 0, 0,\
    \ 0, 0];\n    let mut prime_digit_count_7: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0,\
    \ 0];\n    let mut prime_digit_count_8: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n\
    \    let mut prime_digit_count_9: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n  \
    \  let mut prime_digit_count_10: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n   \
    \ let mut prime_digit_count_11: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let\
    \ mut prime_digit_count_12: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut\
    \ prime_digit_count_13: Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_14:\
    \ Vec<u8> = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_15: Vec<u8>\
    \ = vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_16: Vec<u8> =\
    \ vec![0, 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_17: Vec<u8> = vec![0,\
    \ 0, 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_18: Vec<u8> = vec![0, 0,\
    \ 0, 0, 0, 0, 0, 0];\n    let mut prime_digit_count_19: Vec<u8> = vec![0, 0, 0,\
    \ 0, 0, 0, 0, 0];\n    let mut prime_digit_count_20", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= '0' && c <= '9').collect();\n    let mut num: Vec<u8> = num.iter().filter(|&c|\
    \ c >= 'A' && c <= 'F').collect();\n    let mut num: Vec<u8> = num.iter", "  \
    \  let mut num: Vec<u8> = num.to_string().chars().collect();\n    let mut num:\
    \ Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n\
    \    let mut num: Vec<u8> = num.chars().collect();\n    let mut num: Vec<u8> =\
    \ num.chars().collect();\n    let mut num: Vec<u8> = num.chars().collect();\n",
  "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n    let mut prime:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19];\n    let mut prime_counter: usize\
    \ = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3: usize\
    \ = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5: usize\
    \ = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7: usize\
    \ = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9: usize\
    \ = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: usize = 0;\n    let mut prime_counter39:\
    \ usize = 0;\n    let mut prime_counter40: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut num_prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_2:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_3: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_4: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_5: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_6:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_7: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut num_prime_8: Vec<u8> = vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n\
    \    let mut num_prime_9: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_10:\
    \ Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\
    \ 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut num_prime_11: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut counter: usize\
    \ = 0;\n    let mut prime_counter: usize = 0;\n    let mut prime_counter2: usize\
    \ = 0;\n    let mut prime_counter3: usize = 0;\n    let mut prime_counter4: usize\
    \ = 0;\n    let mut prime_counter5: usize = 0;\n    let mut prime_counter6: usize\
    \ = 0;\n    let mut prime_counter7: usize = 0;\n    let mut prime_counter8: usize\
    \ = 0;\n    let mut prime_counter9: usize = 0;\n    let mut prime_counter10: usize\
    \ = 0;\n    let mut prime_counter11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_counter13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_counter15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_counter17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_counter19: usize = 0;\n    let mut prime_counter20:\
    \ usize = 0;\n    let mut prime_counter21: usize = 0;\n    let mut prime_counter22:\
    \ usize = 0;\n    let mut prime_counter23: usize = 0;\n    let mut prime_counter24:\
    \ usize = 0;\n    let mut prime_counter25: usize = 0;\n    let mut prime_counter26:\
    \ usize = 0;\n    let mut prime_counter27: usize = 0;\n    let mut prime_counter28:\
    \ usize = 0;\n    let mut prime_counter29: usize = 0;\n    let mut prime_counter30:\
    \ usize = 0;\n    let mut prime_counter31: usize = 0;\n    let mut prime_counter32:\
    \ usize = 0;\n    let mut prime_counter33: usize = 0;\n    let mut prime_counter34:\
    \ usize = 0;\n    let mut prime_counter35: usize = 0;\n    let mut prime_counter36:\
    \ usize = 0;\n    let mut prime_counter37: usize = 0;\n", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut counter: usize = 0;\n    for &c in num {\n   \
    \     if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter += 1;\n     \
    \   }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter += 1;\n\
    \        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter +=\
    \ 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ += 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ += 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ += 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ += 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ += 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n            counter\
    \ += 1;\n        }\n        if prime == vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 7", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x|\
    \ *x).collect();\n    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n\
    \    let mut num: Vec<u8> = num.iter().map(|x| *x).collect();\n    let mut num:\
    \ Vec<u8> = ", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,\
    \ 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97];\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_counter2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_counter4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_counter6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_counter8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_counter10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_counter12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_counter14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_counter16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_counter18: usize = 0;\n    let mut prime_counter19:\
    \ usize = 0;\n    let mut prime_counter20: usize = 0;\n    let mut prime_counter21:\
    \ usize = 0;\n    let mut prime_counter22: usize = 0;\n    let mut prime_counter23:\
    \ usize = 0;\n    let mut prime_counter24: usize = 0;\n    let mut prime_counter25:\
    \ usize = 0;\n    let mut prime_counter26: usize = 0;\n    let mut prime_counter27:\
    \ usize = 0;\n    let mut prime_counter28: usize = 0;\n    let mut prime_counter29:\
    \ usize = 0;\n    let mut prime_counter30: usize = 0;\n    let mut prime_counter31:\
    \ usize = 0;\n    let mut prime_counter32: usize = 0;\n    let mut prime_counter33:\
    \ usize = 0;\n    let mut prime_counter34: usize = 0;\n    let mut prime_counter35:\
    \ usize = 0;\n    let mut prime_counter36: usize = 0;\n    let mut prime_counter37:\
    \ usize = 0;\n    let mut prime_counter38: u", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut count = 1;\n    let mut prime_count = 0;\n    let mut prime_digit\
    \ = 0;\n    let mut prime_digit_count = 0;\n    let mut prime_digit_index = 0;\n\
    \    let mut prime_digit_index2 = 0;\n    let mut prime_digit_index3 = 0;\n  \
    \  let mut prime_digit_index4 = 0;\n    let mut prime_digit_index5 = 0;\n    let\
    \ mut prime_digit_index6 = 0;\n    let mut prime_digit_index7 = 0;\n    let mut\
    \ prime_digit_index8 = 0;\n    let mut prime_digit_index9 = 0;\n    let mut prime_digit_index10\
    \ = 0;\n    let mut prime_digit_index11 = 0;\n    let mut prime_digit_index12\
    \ = 0;\n    let mut prime_digit_index13 = 0;\n    let mut prime_digit_index14\
    \ = 0;\n    let mut prime_digit_index15 = 0;\n    let mut prime_digit_index16\
    \ = 0;\n    let mut prime_digit_index17 = 0;\n    let mut prime_digit_index18\
    \ = 0;\n    let mut prime_digit_index19 = 0;\n    let mut prime_digit_index20\
    \ = 0;\n    let mut prime_digit_index21 = 0;\n    let mut prime_digit_index22\
    \ = 0;\n    let mut prime_digit_index23 = 0;\n    let mut prime_digit_index24\
    \ = 0;\n    let mut prime_digit_index25 = 0;\n    let mut prime_digit_index26\
    \ = 0;\n    let mut prime_digit_index27 = 0;\n    let mut prime_digit_index28\
    \ = 0;\n    let mut prime_digit_index29 = 0;\n    let mut prime_digit_index30\
    \ = 0;\n    let mut prime_digit_index31 = 0;\n    let mut prime_digit_index32\
    \ = 0;\n    let mut prime_digit_index33 = 0;\n    let mut prime_digit_index34\
    \ = 0;\n    let mut prime_digit_index35 = 0;\n    let mut prime_digit_index36\
    \ = 0;\n    let mut prime_digit_index37 = 0;\n    let mut prime_digit_index38\
    \ = 0;\n    let mut prime_digit_index39 = 0;\n    let mut prime_digit_index40\
    \ = 0;\n    let mut prime_digit_index41 = 0;\n    let mut prime_digit_index42\
    \ = 0;\n    let mut prime_digit_index43 = 0;\n    let mut prime_digit_index44\
    \ = 0;\n    let mut prime_digit_index45 = 0;\n    let mut prime_digit_index46\
    \ = 0;\n    let mut prime_digit_index47 = 0;", "    let mut num: Vec<u8> = num.to_string().chars().collect();\n\
    \    let mut prime: Vec<u8> = vec![2, 3, 5, 7];\n    let mut digit: Vec<u8> =\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97];\n    let mut counter: usize = 0;\n    let mut prime_counter:\
    \ usize = 0;\n    let mut prime_digit: usize = 0;\n    let mut prime_counter2:\
    \ usize = 0;\n    let mut prime_digit2: usize = 0;\n    let mut prime_counter3:\
    \ usize = 0;\n    let mut prime_digit3: usize = 0;\n    let mut prime_counter4:\
    \ usize = 0;\n    let mut prime_digit4: usize = 0;\n    let mut prime_counter5:\
    \ usize = 0;\n    let mut prime_digit5: usize = 0;\n    let mut prime_counter6:\
    \ usize = 0;\n    let mut prime_digit6: usize = 0;\n    let mut prime_counter7:\
    \ usize = 0;\n    let mut prime_digit7: usize = 0;\n    let mut prime_counter8:\
    \ usize = 0;\n    let mut prime_digit8: usize = 0;\n    let mut prime_counter9:\
    \ usize = 0;\n    let mut prime_digit9: usize = 0;\n    let mut prime_counter10:\
    \ usize = 0;\n    let mut prime_digit10: usize = 0;\n    let mut prime_counter11:\
    \ usize = 0;\n    let mut prime_digit11: usize = 0;\n    let mut prime_counter12:\
    \ usize = 0;\n    let mut prime_digit12: usize = 0;\n    let mut prime_counter13:\
    \ usize = 0;\n    let mut prime_digit13: usize = 0;\n    let mut prime_counter14:\
    \ usize = 0;\n    let mut prime_digit14: usize = 0;\n    let mut prime_counter15:\
    \ usize = 0;\n    let mut prime_digit15: usize = 0;\n    let mut prime_counter16:\
    \ usize = 0;\n    let mut prime_digit16: usize = 0;\n    let mut prime_counter17:\
    \ usize = 0;\n    let mut prime_digit17: usize = 0;\n    let mut prime_counter18:\
    \ usize = 0;\n    let mut prime_digit18: usize = 0;\n", "    let mut num: Vec<u8>\
    \ = num.to_lowercase().chars().collect();\n    let mut prime: Vec<u8> = vec![2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97];\n    let mut count: usize = 0;\n    let mut digit: u8 = 0;\n\
    \    let mut prime_digit: u8 = 0;\n    let mut prime_digit_count: usize = 0;\n\
    \    let mut prime_digit_sum: usize = 0;\n    let mut prime_digit_sum2: usize\
    \ = 0;\n    let mut prime_digit_sum3: usize = 0;\n    let mut prime_digit_sum4:\
    \ usize = 0;\n    let mut prime_digit_sum5: usize = 0;\n    let mut prime_digit_sum6:\
    \ usize = 0;\n    let mut prime_digit_sum7: usize = 0;\n    let mut prime_digit_sum8:\
    \ usize = 0;\n    let mut prime_digit_sum9: usize = 0;\n    let mut prime_digit_sum10:\
    \ usize = 0;\n    let mut prime_digit_sum11: usize = 0;\n    let mut prime_digit_sum12:\
    \ usize = 0;\n    let mut prime_digit_sum13: usize = 0;\n    let mut prime_digit_sum14:\
    \ usize = 0;\n    let mut prime_digit_sum15: usize = 0;\n    let mut prime_digit_sum16:\
    \ usize = 0;\n    let mut prime_digit_sum17: usize = 0;\n    let mut prime_digit_sum18:\
    \ usize = 0;\n    let mut prime_digit_sum19: usize = 0;\n    let mut prime_digit_sum20:\
    \ usize = 0;\n    let mut prime_digit_sum21: usize = 0;\n    let mut prime_digit_sum22:\
    \ usize = 0;\n    let mut prime_digit_sum23: usize = 0;\n    let mut prime_digit_sum24:\
    \ usize = 0;\n    let mut prime_digit_sum25: usize = 0;\n    let mut prime_digit_sum26:\
    \ usize = 0;\n    let mut prime_digit_sum27: usize = 0;\n    let mut prime_digit_sum28:\
    \ usize = 0;\n    let mut prime_digit_sum29: usize = 0;\n    let mut prime_digit_sum30:\
    \ usize = 0;\n    let mut prime_digit_sum31: usize = 0;\n    let mut prime_digit_sum32:\
    \ usize = 0;\n", "    let mut num: Vec<u8> = num.to_lowercase().chars().collect();\n\
    \    let mut prime_count: isize = 0;\n    let mut prime_digit: u8 = 0;\n    let\
    \ mut prime_digit_count: isize = 0;\n    let mut prime_digit_sum: isize = 0;\n\
    \    let mut prime_digit_sum2: isize = 0;\n    let mut prime_digit_sum3: isize\
    \ = 0;\n    let mut prime_digit_sum4: isize = 0;\n    let mut prime_digit_sum5:\
    \ isize = 0;\n    let mut prime_digit_sum6: isize = 0;\n    let mut prime_digit_sum7:\
    \ isize = 0;\n    let mut prime_digit_sum8: isize = 0;\n    let mut prime_digit_sum9:\
    \ isize = 0;\n    let mut prime_digit_sum10: isize = 0;\n    let mut prime_digit_sum11:\
    \ isize = 0;\n    let mut prime_digit_sum12: isize = 0;\n    let mut prime_digit_sum13:\
    \ isize = 0;\n    let mut prime_digit_sum14: isize = 0;\n    let mut prime_digit_sum15:\
    \ isize = 0;\n    let mut prime_digit_sum16: isize = 0;\n    let mut prime_digit_sum17:\
    \ isize = 0;\n    let mut prime_digit_sum18: isize = 0;\n    let mut prime_digit_sum19:\
    \ isize = 0;\n    let mut prime_digit_sum20: isize = 0;\n    let mut prime_digit_sum21:\
    \ isize = 0;\n    let mut prime_digit_sum22: isize = 0;\n    let mut prime_digit_sum23:\
    \ isize = 0;\n    let mut prime_digit_sum24: isize = 0;\n    let mut prime_digit_sum25:\
    \ isize = 0;\n    let mut prime_digit_sum26: isize = 0;\n    let mut prime_digit_sum27:\
    \ isize = 0;\n    let mut prime_digit_sum28: isize = 0;\n    let mut prime_digit_sum29:\
    \ isize = 0;\n    let mut prime_digit_sum30: isize = 0;\n    let mut prime_digit_sum31:\
    \ isize = 0;\n    let mut prime_digit_sum32: isize = 0;\n    let mut prime_digit_sum33:\
    \ isize = 0;\n    let mut prime_digit_sum34: isize = 0;\n    let mut prime_digit_sum35:\
    \ isize = 0;\n    let mut prime_digit_sum36: isize = 0;", "    let mut num: Vec<u8>\
    \ = num.to_string().chars().collect();\n    let mut num_digits = num.len();\n\
    \    let mut prime_count = 0;\n    let mut prime_digits = vec![];\n    let mut\
    \ prime_digits_len = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mut prime_digits_len\
    \ = prime_digits.len();\n    let mut prime_digits_len = prime_digits.len();\n\
    \    let mut prime_digits_len = prime_digits.len();\n    let mu"]
stop_tokens:
- "\n}"

name: HumanEval_17_parse_music
language: rs
prompt: "/// Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n/// Your task is to parse this string and return list of integers\
  \ corresponding to how many beats does each\n/// not last.\n/// Here is a legend:\n\
  /// 'o' - whole note, lasts four beats\n/// 'o|' - half note, lasts two beats\n\
  /// '.|' - quater note, lasts one beat\n/// >>> parse_music(String::from(\"o o|\
  \ .| o| o| .| .| .| .| o o\"))\n/// vec![4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\nfn parse_music(music_string:\
  \ String) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = parse_music;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str>\
    \ = music_string.split_whitespace().collect();\n    let mut current_note = String::from(\"\
    \");\n    let mut current_beat = 0;\n    let mut current_note_index = 0;\n   \
    \ let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index",
  "    let mut beats: Vec<isize> = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut last_note = String::from(\"\");\n    let mut last_beat = 0;\n   \
    \ let mut last_beats: isize = 0;\n    let mut last_notes: isize = 0;\n    let\
    \ mut last_notes_beats: isize = 0;\n    let mut last_notes_beats_beats: isize\
    \ = 0;\n    let mut last_notes_beats_beats_beats: isize = 0;\n    let mut last_notes_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats: isize = 0;\n\
    \    let mut last_notes_beats_beats_beats_beats_beats_beats: isize = 0;\n    let\
    \ mut last_notes_beats_beats_beats_beats_beats_beats_beats: isize = 0;\n    let\
    \ mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats: isize = 0;\n\
    \    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    let mut current_note_oct\
    \ = 0;\n    let mut current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n\
    \    let mut current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n    let\
    \ mut current_note_oct6 = 0;\n    let mut current_note_oct7 = 0;\n    let mut\
    \ current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n    let mut current_note_oct10\
    \ = 0;\n    let mut current_note_oct11 = 0;\n    let mut current_note_oct12 =\
    \ 0;\n    let mut current_note_oct13 = 0;\n    let mut current_note_oct14 = 0;\n\
    \    let mut current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n  \
    \  let mut current_note_oct17 = 0;\n    let mut current_note_oct18 = 0;\n    let\
    \ mut current_note_oct19 = 0;\n    let mut current_note_oct20 = 0;\n    let mut\
    \ current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n    let mut current_note_oct23\
    \ = 0;\n    let mut current_note_oct24 = 0;\n    let mut current_note_oct25 =\
    \ 0;\n    let mut current_note_oct26 = 0;\n    let mut current_note_oct27 = 0;\n\
    \    let mut current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n  \
    \  let mut current_note_oct30 = 0;\n    let mut current_note_oct31 = 0;\n    let\
    \ mut current_note_oct32 = 0;\n    let mut current_note_oct33 = 0;\n    let mut\
    \ current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n    let mut current_note_oct36\
    \ = 0;\n    let mut current_note_oct37 = 0;\n    let mut current_note_oct38 =\
    \ 0;\n    let mut current_note_oct39 = 0;\n    let mut current_note_oct40 = 0;\n\
    \    let mut current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n  \
    \  let mut current_note_oct43 = 0;\n    let mut current_note_oct44 = 0;\n    let\
    \ mut current_note_oct45 = 0;\n    let mut current_note_oct46 = 0;\n    let mut\
    \ current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n    let mut current_note_oct49\
    \ = 0;\n    let mut current_note_oct50 = 0;\n    let mut current_note_oct51 =\
    \ 0;\n    let mut current_note_oct52 = 0;\n    let mut current_note_oct53 = 0;\n\
    \    let mut current_note_", "    let mut beats: Vec<isize> = Vec::new();\n  \
    \  let mut current_beat = 0;\n    let mut current_note = String::new();\n    let\
    \ mut current_note_length = 0;\n    for c in music_string.chars() {\n        if\
    \ c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n           \
    \     if current_note != String::new() {\n                    current_beat +=\
    \ 4;\n                    current_note = String::new();\n                }\n \
    \           } else if c.to_ascii_lowercase() == 'o|' {\n                if current_note\
    \ != String::new() {\n                    current_beat += 2;\n               \
    \     current_note = String::new();\n                }\n            } else if\
    \ c.to_ascii_lowercase() == '.|' {\n                if current_note != String::new()\
    \ {\n                    current_beat = 1;\n                    current_note =\
    \ String::new();\n                }\n            } else {\n                current_note\
    \ += c.to_ascii_lowercase();\n            }\n        } else {\n            if\
    \ current_note != String::new() {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            }\n        }\n        if c.is_ascii() {\n            current_note_length\
    \ += 1;\n        }\n    }\n    if current_note != String::new() {\n        beats.push(current_beat);\n\
    \    }\n    beats", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ c)| c != '|');\n    for note in notes {\n        let note = note.0;\n      \
    \  let beat = note.parse::<isize>().unwrap();\n        beats.push(beat);\n   \
    \ }\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut notes:\
    \ Vec<&str> = music_string.split_whitespace().collect();\n    let mut current_note\
    \ = notes.next();\n    let mut current_beat = 0;\n    while let Some(note) = current_note\
    \ {\n        note = note.trim_end().to_string();\n        if note == \"o\" {\n\
    \            beats.push(current_beat);\n            current_beat = 0;\n      \
    \      current_note = notes.next();\n        } else if note == \"o|\" {\n    \
    \        beats.push(current_beat);\n            current_beat += 2;\n         \
    \   current_note = notes.next();\n        } else if note == \".|\" {\n       \
    \     beats.push(current_beat);\n            current_beat += 1;\n            current_note\
    \ = notes.next();\n        } else {\n            panic!(\"Invalid note '{}'\"\
    , note);\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats: Vec<isize> = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_note_length = 0;\n    while let Some(note) = notes.next()\
    \ {\n        if note == current_note {\n            current_beat += 1;\n     \
    \       current_note_length += 1;\n        } else {\n            beats.push(current_beat);\n\
    \            current_note = note;\n            current_beat = 1;\n           \
    \ current_note_length = 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_note\
    \ = String::new();\n    let mut current_beat = 0;\n    let mut current_length\
    \ = 0;\n    for c in music_string.chars() {\n        if c.is_whitespace() {\n\
    \            continue;\n        }\n        if c.is_ascii() {\n            if c.to_ascii_lowercase()\
    \ == 'o' {\n                if current_beat == 0 {\n                    current_note\
    \ = String::new();\n                    current_beat = 0;\n                  \
    \  current_length = 0;\n                }\n                current_note.push_str(&c.to_ascii_lowercase());\n\
    \                current_beat += 1;\n                current_length += 1;\n  \
    \          } else if c.to_ascii_lowercase() == '|' {\n                if current_beat\
    \ == 0 {\n                    current_note = String::new();\n                \
    \    current_beat = 0;\n                    current_length = 0;\n            \
    \    }\n                current_note.push_str(&c.to_ascii_lowercase());\n    \
    \            current_beat += 1;\n                current_length += 1;\n      \
    \      } else if c.to_ascii_lowercase() == '.' {\n                if current_beat\
    \ == 0 {\n                    current_note = String::new();\n                \
    \    current_beat = 0;\n                    current_length = 0;\n            \
    \    }\n                current_note.push_str(&c.to_ascii_lowercase());\n    \
    \            current_beat += 1;\n                current_length += 1;\n      \
    \      } else {\n                println!(\"Invalid music string: {}\", music_string);\n\
    \                panic!(\"Invalid music string\");\n            }\n        } else\
    \ {\n            println!(\"Invalid music string: {}\", music_string);\n     \
    \       panic!(\"Invalid music string\");\n        }\n    }\n    if current_beat\
    \ == 0 {\n        println!(\"Invalid music string: {}\", music_string);\n    \
    \    panic!(\"Invalid music string\");\n    }\n    beats.push(current_beat);\n\
    \    beats.push(current_length);\n    beats", "    let mut beats = Vec::new();\n\
    \    let mut notes = music_string.chars().enumerate().filter(|(_, c)| c != '|');\n\
    \    for note in notes {\n        let note = note.0;\n        let beat = note.parse::<isize>().unwrap();\n\
    \        beats.push(beat);\n    }\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c == 'o' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else if c\
    \ == '|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else if c\
    \ == '.' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else {\n\
    \                current_note.push(c);\n            }\n        } else {\n    \
    \        if current_note.is_empty() {\n                panic!(\"Music string contains\
    \ non-ASCII character\");\n            }\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \      }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats\
    \ = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note = 0;\n\
    \    let mut current_note_length = 0;\n    let mut current_note_length_index =\
    \ 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mut current_note_",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_note_len = 0;\n\
    \    for c in music_string {\n        if c.is_ascii() {\n            if c == 'o'\
    \ {\n                if current_note_len == 0 {\n                    current_note_len\
    \ = 4;\n                } else {\n                    current_note_len += 4;\n\
    \                }\n                current_note = String::new();\n          \
    \  } else if c == '|' {\n                if current_note_len == 0 {\n        \
    \            current_note_len = 2;\n                } else {\n               \
    \     current_note_len += 2;\n                }\n                current_note\
    \ = String::new();\n            } else if c == '.' {\n                if current_note_len\
    \ == 0 {\n                    current_note_len = 1;\n                } else {\n\
    \                    current_note_len = current_note_len + 1;\n              \
    \  }\n                current_note = String::new();\n            } else {\n  \
    \              current_note.push(c);\n                current_note_len = current_note_len\
    \ + 1;\n            }\n        } else {\n            if current_note_len == 0\
    \ {\n                beats.push(current_beat);\n                current_beat =\
    \ 0;\n                current_note = String::new();\n                current_note_len\
    \ = 0;\n            } else {\n                current_beat = current_beat + 1;\n\
    \            }\n        }\n    }\n    beats.push(current_beat);\n    beats", " \
    \   let mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_note_length = 0;\n  \
    \  let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 1;\n    let mut current_note_length_index42\
    \ = 1;\n    let mut current_note_length_index43 = 1;\n    let mut current_note_length_index44\
    \ = 1;\n    let mut current_note_length_index45 = 1;\n    let mut current_note_length_index46\
    \ = 1;\n    let mut current_note_length_index47 = 1;\n    let mut current_", " \
    \   let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n", "    let\
    \ mut beats: Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_octave: isize = 0;\n\
    \    let mut current_note_is_octave = false;\n    let mut current_note_octave:\
    \ isize = 0;\n    let mut current_note_octave_is_octave = false;\n    let mut\
    \ current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;", "    let mut beats: Vec<isize> = Vec::new();\n    let mut notes:\
    \ Vec<&str> = music_string.split_whitespace().collect();\n    let mut current_note\
    \ = 0;\n    let mut current_beat = 0;\n    while notes.len() > 0 {\n        let\
    \ note = notes.remove(0);\n        if note == \"o\" {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note += 1;\n        } else\
    \ if note == \"o|\" {\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note += 2;\n        } else if note == \".|\" {\n \
    \           beats.push(current_beat);\n            current_beat = 0;\n       \
    \     current_note += 4;\n        } else {\n            assert!(notes.len() >\
    \ 0);\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut\
    \ beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut\
    \ current_note = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;", "    let mut beats = Vec::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let ", "    let mut\
    \ beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    let mut current_note_oct\
    \ = 0;\n    let mut current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n\
    \    let mut current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n    let\
    \ mut current_note_oct6 = 0;\n    let mut current_note_oct7 = 0;\n    let mut\
    \ current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n    let mut current_note_oct10\
    \ = 0;\n    let mut current_note_oct11 = 0;\n    let mut current_note_oct12 =\
    \ 0;\n    let mut current_note_oct13 = 0;\n    let mut current_note_oct14 = 0;\n\
    \    let mut current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n  \
    \  let mut current_note_oct17 = 0;\n    let mut current_note_oct18 = 0;\n    let\
    \ mut current_note_oct19 = 0;\n    let mut current_note_oct20 = 0;\n    let mut\
    \ current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n    let mut current_note_oct23\
    \ = 0;\n    let mut current_note_oct24 = 0;\n    let mut current_note_oct25 =\
    \ 0;\n    let mut current_note_oct26 = 0;\n    let mut current_note_oct27 = 0;\n\
    \    let mut current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n  \
    \  let mut current_note_oct30 = 0;\n    let mut current_note_oct31 = 0;\n    let\
    \ mut current_note_oct32 = 0;\n    let mut current_note_oct33 = 0;\n    let mut\
    \ current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n    let mut current_note_oct36\
    \ = 0;\n    let mut current_note_oct37 = 0;\n    let mut current_note_oct38 =\
    \ 0;\n    let mut current_note_oct39 = 0;\n    let mut current_note_oct40 = 0;\n\
    \    let mut current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n  \
    \  let mut current_note_oct43 = 0;\n    let mut current_note_oct44 = 0;\n    let\
    \ mut current_note_oct45 = 0;\n    let mut current_note_oct46 = 0;\n    let mut\
    \ current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n    let mut current_note_oct49\
    \ = 0;\n    let mut current_note_oct50 = 0;\n    let mut current_note_oct51 =\
    \ 0;\n    let mut current_note_oct52 = 0;\n    let mut current_note_oct53 = 0;\n\
    \    let mut current_", "    let mut beats: Vec<isize> = Vec::new();\n    let\
    \ mut notes: Vec<&str> = music_string.split_whitespace().collect();\n    let mut\
    \ current_note = notes.first().unwrap();\n    let mut current_beat = 0;\n    let\
    \ mut current_note_count = 0;\n    let mut current_note_length = 0;\n    for note\
    \ in notes {\n        if note == current_note {\n            current_note_count\
    \ += 1;\n            current_note_length += 1;\n        } else {\n           \
    \ if current_note_count > 0 {\n                beats.push(current_beat);\n   \
    \             current_beat = 0;\n                current_note_count = 0;\n   \
    \         }\n            current_note = note;\n            current_note_length\
    \ = 1;\n        }\n        current_beat += current_note_length;\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_len = 0;\n \
    \   let mut current_note_oct = 0;\n    let mut current_note_oct2 = 0;\n    let\
    \ mut current_note_oct3 = 0;\n    let mut current_note_oct4 = 0;\n    let mut\
    \ current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n    let mut current_note_oct7\
    \ = 0;\n    let mut current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n\
    \    let mut current_note_oct10 = 0;\n    let mut current_note_oct11 = 0;\n  \
    \  let mut current_note_oct12 = 0;\n    let mut current_note_oct13 = 0;\n    let\
    \ mut current_note_oct14 = 0;\n    let mut current_note_oct15 = 0;\n    let mut\
    \ current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n    let mut current_note_oct18\
    \ = 0;\n    let mut current_note_oct19 = 0;\n    let mut current_note_oct20 =\
    \ 0;\n    let mut current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n\
    \    let mut current_note_oct23 = 0;\n    let mut current_note_oct24 = 0;\n  \
    \  let mut current_note_oct25 = 0;\n    let mut current_note_oct26 = 0;\n    let\
    \ mut current_note_oct27 = 0;\n    let mut current_note_oct28 = 0;\n    let mut\
    \ current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n    let mut current_note_oct31\
    \ = 0;\n    let mut current_note_oct32 = 0;\n    let mut current_note_oct33 =\
    \ 0;\n    let mut current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n\
    \    let mut current_note_oct36 = 0;\n    let mut current_note_oct37 = 0;\n  \
    \  let mut current_note_oct38 = 0;\n    let mut current_note_oct39 = 0;\n    let\
    \ mut current_note_oct40 = 0;\n    let mut current_note_oct41 = 0;\n    let mut\
    \ current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n    let mut current_note_oct44\
    \ = 0;\n    let mut current_note_oct45 = 0;\n    let mut current_note_oct46 =\
    \ 0;\n    let mut current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n\
    \    let mut current_note_oct49 = 0;\n    let mut current_note_oct50 = 0;\n  \
    \  let mut current_note_oct51 = 0;\n    let mut current_note_oct52 = 0;\n    let\
    \ mut current_note_oct53 = 0;\n    let mut current_note_", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_len = 0;\n    for c in music_string.chars() {\n    \
    \    if c.is_whitespace() {\n            continue;\n        }\n        if c.is_ascii_digit()\
    \ {\n            current_note = c.to_string();\n            current_note_len =\
    \ c.len() as isize;\n        } else {\n            if current_note_len == 0 {\n\
    \                continue;\n            }\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \          current_note_len = c.len() as isize;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_length = 0;\n\
    \    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;", "    let mut beats = Vec::new();\n    let mut notes = music_string.chars().enumerate();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    let mut current_note_index\
    \ = 0;\n    let mut current_beat_length = 0;\n    let mut last_note = -1;\n  \
    \  let mut last_beat = -1;\n    let mut last_note_index = -1;\n    let mut last_beat_length\
    \ = -1;\n    while let Some(note) = notes.next() {\n        let note = note.0;\n\
    \        let note_index = note.1;\n        let note_length = note.2;\n       \
    \ if note == 'o' {\n            if current_note == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note_index = 0;\n\
    \                current_beat_length = 0;\n            }\n            current_note\
    \ += 1;\n            current_beat += 1;\n            current_note_index += 1;\n\
    \            current_beat_length += note_length;\n            last_note = current_note;\n\
    \            last_beat = current_beat;\n            last_note_index = current_note_index;\n\
    \            last_beat_length = current_beat_length;\n        } else if note ==\
    \ 'o|' {\n            if current_note == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note_index = 0;\n\
    \                current_beat_length = 0;\n            }\n            current_note\
    \ += 1;\n            current_beat += 1;\n            current_note_index += 1;\n\
    \            current_beat_length += note_length;\n            last_note = current_note;\n\
    \            last_beat = current_beat;\n            last_note_index = current_note_index;\n\
    \            last_beat_length = current_beat_length;\n        } else if note ==\
    \ '.|' {\n            if current_note == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note_index = 0;\n\
    \                current_beat_length = 0;\n            }\n            current_note\
    \ += 1;\n            current_beat += 1;\n            current_note_index += 1;\n\
    \            current_beat_length += note_length;\n            last_note = current_note;\n\
    \            last_beat = current_beat;\n            last_note_index = current_note_index;\n\
    \            last_beat_length = current_beat_length;\n        } else {\n     \
    \       assert!(current_note == 0);\n            assert!(current_beat == 0);\n\
    \            assert!(current_note_index == 0);\n            assert!(current_beat_length\
    \ == 0);\n            assert!(last_note == -1);\n            assert!(last_beat\
    \ == -1);\n            assert!(last_note_index == -1);\n            assert!(last_beat_length\
    \ == -1);\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = 0;\n  \
    \  let mut current_note_len = 0;\n    let mut current_note_char = 0;\n    let\
    \ mut last_note_len = 0;\n    let mut last_note_char = 0;\n    let mut last_note\
    \ = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2 = 0;\n    let\
    \ mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2\
    \ = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n  \
    \  let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2\
    \ = 0;\n    let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let\
    \ mut last_note_char2 = 0;\n    let mut last_note2 = 0;\n    let mut last_note_len2\
    \ = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2 = 0;\n    let\
    \ mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2\
    \ = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n  \
    \  let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2\
    \ = 0;\n    let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let\
    \ mut last_note_char2 = 0;\n    let mut last_note2 = 0;\n    let mut last_note_len2\
    \ = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2 = 0;\n    let\
    \ mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2\
    \ = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n  \
    \  let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2\
    \ = 0;\n    let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let\
    \ mut last_note_char2 = 0;\n    let mut last_note2 = 0;\n    let mut last_note_len2\
    \ = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2 = 0;\n    let\
    \ mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2\
    \ = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n  \
    \  let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2\
    \ = 0;\n    let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let\
    \ mut last_note_char2 = 0;", "    let mut beats = vec![];\n    let mut notes =\
    \ music_string.chars().enumerate().filter(|&(_, note)| note != 'o');\n    for\
    \ note in notes {\n        note.1.unwrap();\n        let mut beat = 0;\n     \
    \   let mut last_note = note.0;\n        while note != last_note {\n         \
    \   beat += 1;\n            last_note = note;\n            note = notes.next();\n\
    \        }\n        beats.push(beat);\n    }\n    beats", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;", "    let mut beats = vec![];\n\
    \    let mut note = music_string.chars().nth(1).unwrap();\n    let mut last_beat\
    \ = false;\n    let mut last_note = false;\n    while note != ' ' {\n        if\
    \ note == 'o' {\n            if last_note {\n                beats.push(4);\n\
    \                last_beat = false;\n            } else {\n                beats.push(1);\n\
    \                last_beat = true;\n            }\n            last_note = true;\n\
    \        } else if note == 'o|' {\n            if last_note {\n              \
    \  beats.push(2);\n                last_beat = false;\n            } else {\n\
    \                beats.push(1);\n                last_beat = true;\n         \
    \   }\n            last_note = true;\n        } else if note == '.' {\n      \
    \      if last_note {\n                beats.push(1);\n                last_beat\
    \ = false;\n            } else {\n                beats.push(1);\n           \
    \     last_beat = true;\n            }\n            last_note = true;\n      \
    \  } else {\n            beats.push(0);\n            last_beat = false;\n    \
    \        last_note = false;\n        }\n        note = music_string.chars().nth(1).unwrap();\n\
    \    }\n    beats", "    let mut beats = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_length = 0;\n\
    \    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;\n    let mut current_note_", "    let mut beats = vec![];\n    let mut\
    \ notes = music_string.chars().enumerate().filter(|(_, note)| note != 'o').collect::<Vec<_>>();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    for note in\
    \ notes {\n        if note == 'o' {\n            beats.push(current_beat);\n \
    \           current_beat = 0;\n            current_note++;\n        } else {\n\
    \            current_beat++;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_len = 0;\n   \
    \ let mut current_note_char = 0;\n    let mut current_note_char_len = 0;\n   \
    \ let mut current_note_char_is_octal = false;\n    let mut current_note_char_is_digit\
    \ = false;\n    let mut current_note_char_is_space = false;\n    let mut current_note_char_is_comma\
    \ = false;\n    let mut current_note_char_is_colon = false;\n    let mut current_note_char_is_equal\
    \ = false;\n    let mut current_note_char_is_dash = false;\n    let mut current_note_char_is_slash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  for c in music_string.chars() {\n        if c == 'o' {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \      } else if c == '|' {\n            beats.push(current_beat);\n         \
    \   current_beat = 0;\n            current_note = String::new();\n        } else\
    \ if c == '.' {\n            current_beat = current_beat + 1;\n        } else\
    \ {\n            current_note.push(c);\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_beat_length = 0;\n    loop {\n        match notes.next()\
    \ {\n            Some((i, c)) => {\n                let note = match c {\n   \
    \                 'o' => 1,\n                    'o|' => 2,\n                \
    \    '.|' => 3,\n                    _ => panic!(\"Unexpected note\"),\n     \
    \           };\n                beats.push(current_beat + note);\n           \
    \     current_beat += note;\n                current_note_length += note;\n  \
    \              current_beat_length += note;\n                current_note = note;\n\
    \                current_note_length += 1;\n                current_beat_length\
    \ += 1;\n            }\n            None => break,\n        }\n    }\n    beats",
  "    let mut beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mut current_note_",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    for c in music_string.chars() {\n        if c.is_ascii()\
    \ {\n            if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == '.' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == '|' {\n                current_beat\
    \ = 1;\n            } else {\n                current_note.push(c);\n        \
    \    }\n        } else {\n            if current_note.is_empty() {\n         \
    \       println!(\"Invalid music string\");\n                return beats;\n \
    \           }\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut\
    \ current_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length = 0;\n    let\
    \ mut current_note_length_to_beat_with_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_", "    let mut beats = vec![];\n \
    \   let mut current_beat = 0;\n    let mut current_note = String::new();\n   \
    \ let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mu", "    let mut\
    \ beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut\
    \ current_note = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_length = 0;\n    while current_note != \".\" {\n \
    \       if current_note == \"o\" {\n            beats.push(current_beat);\n  \
    \          current_beat += 1;\n            current_length += 1;\n        }\n \
    \       if current_note == \"o|\" {\n            beats.push(current_beat);\n \
    \           current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".|\" {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".\" {\n            beats.push(current_beat);\n \
    \           current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \"o\" {\n            beats.push(current_beat);\n \
    \           current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \"o|\" {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".|\" {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".\" {\n            beats.push(current_beat);\n \
    \           current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \"o\" {\n            beats.push(current_beat);\n \
    \           current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \"o|\" {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".|\" {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".\" {\n            beats.push(current_beat);\n \
    \           current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \"o\" {\n            beats.push(current_beat);\n \
    \           current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \"o|\" {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".|\" {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".\" {\n            beats.push(current_beat);\n \
    \           current_beat ", "    let mut beats: Vec<isize> = Vec::new();\n   \
    \ let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n    let\
    \ mut current_note = String::from(\"\");\n    let mut current_beat = 0;\n    let\
    \ mut current_beats: isize = 0;\n    let mut current_note_index = 0;\n    let\
    \ mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n \
    \   let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index", "    let mut beats = vec![];\n\
    \    let mut notes = music_string.split_whitespace();\n    let mut current_note\
    \ = 0;\n    let mut current_beat = 0;\n    let mut current_length = 0;\n    for\
    \ note in notes {\n        if note == \"o\" {\n            beats.push(current_beat);\n\
    \            current_beat += 4;\n            current_length = 4;\n        } else\
    \ if note == \"o|\" {\n            beats.push(current_beat);\n            current_beat\
    \ += 2;\n            current_length = 2;\n        } else if note == \".|\" {\n\
    \            beats.push(current_beat);\n            current_beat += 1;\n     \
    \       current_length = 1;\n        } else {\n            current_length += 1;\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats:\
    \ Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    for c in music_string.chars() {\n        if c.is_ascii()\
    \ {\n            if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else {\n                current_note += c.to_ascii_lowercase();\n\
    \            }\n        } else {\n            if current_note.is_empty() {\n \
    \               continue;\n            }\n            let note = current_note.chars().collect::<String>().parse().unwrap();\n\
    \            beats.push(note as isize);\n            current_beat = 0;\n     \
    \       current_note = String::new();\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_len = 0;\n \
    \   let mut current_note_oct = 0;\n    let mut current_note_octlen = 0;\n    let\
    \ mut current_note_octstring = \"\";\n    let mut current_note_octstringlen =\
    \ 0;\n    let mut current_note_octstringlen2 = 0;\n    let mut current_note_octstringlen3\
    \ = 0;\n    let mut current_note_octstringlen4 = 0;\n    let mut current_note_octstringlen5\
    \ = 0;\n    let mut current_note_octstringlen6 = 0;\n    let mut current_note_octstringlen7\
    \ = 0;\n    let mut current_note_octstringlen8 = 0;\n    let mut current_note_octstringlen9\
    \ = 0;\n    let mut current_note_octstringlen10 = 0;\n    let mut current_note_octstringlen11\
    \ = 0;\n    let mut current_note_octstringlen12 = 0;\n    let mut current_note_octstringlen13\
    \ = 0;\n    let mut current_note_octstringlen14 = 0;\n    let mut current_note_octstringlen15\
    \ = 0;\n    let mut current_note_octstringlen16 = 0;\n    let mut current_note_octstringlen17\
    \ = 0;\n    let mut current_note_octstringlen18 = 0;\n    let mut current_note_octstringlen19\
    \ = 0;\n    let mut current_note_octstringlen20 = 0;\n    let mut current_note_octstringlen21\
    \ = 0;\n    let mut current_note_octstringlen22 = 0;\n    let mut current_note_octstringlen23\
    \ = 0;\n    let mut current_note_octstringlen24 = 0;\n    let mut current_note_octstringlen25\
    \ = 0;\n    let mut current_note_octstringlen26 = 0;\n    let mut current_note_octstringlen27\
    \ = 0;\n    let mut current_note_octstringlen28 = 0;\n    let mut current_note_octstringlen29\
    \ = 0;\n    let mut current_note_octstringlen30 = 0;\n    let mut current_note_octstringlen31\
    \ = 0;\n    let mut current_note_octstringlen32 = 0;\n    let mut current_note_octstringlen33\
    \ = 0;\n    let mut current_note_octstringlen34 = 0;\n    let mut current_note_octstringlen35\
    \ = 0;\n    let mut current_note_octstringlen36 = 0;\n    let mut current_note_octstringlen37\
    \ = 0;\n    let mut current_note_octstringlen38 = 0;\n    let mut current_note_octstringlen39\
    \ = 0;\n    let mut current_note_octstringlen40 = 0;\n    let mut current_note_octstringlen41\
    \ = 0;\n    let mut current_note_", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == 'o' {\n                if current_beat == 0 {\n  \
    \                  current_note = c.to_ascii_lowercase();\n                } else\
    \ {\n                    beats.push(current_beat);\n                    current_beat\
    \ = 0;\n                }\n            } else {\n                if current_beat\
    \ == 0 {\n                    current_note = c.to_ascii_lowercase();\n       \
    \         } else {\n                    beats.push(current_beat);\n          \
    \          current_beat = 0;\n                }\n            }\n        } else\
    \ {\n            if c.to_ascii_lowercase() == 'o' {\n                current_beat\
    \ = 4;\n            } else {\n                current_beat = 2;\n            }\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let ", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next = 0;\n    let mut current_note_length_to_beat_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next = 0;\n   \
    \ let mut current_note_length_to_beat_next_next_next_next_next = 0;\n    let mut\
    \ current_note_length_to_beat_next_next_next_next_next = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_"]
stop_tokens:
- "\n}"

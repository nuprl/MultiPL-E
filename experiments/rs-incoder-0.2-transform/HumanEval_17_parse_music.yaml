name: HumanEval_17_parse_music
language: rs
prompt: "/// Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n/// Your task is to parse this string and return list of integers\
  \ corresponding to how many beats does each\n/// not last.\n/// Here is a legend:\n\
  /// 'o' - whole note, lasts four beats\n/// 'o|' - half note, lasts two beats\n\
  /// '.|' - quater note, lasts one beat\n/// >>> parse_music(String::from(\"o o|\
  \ .| o| o| .| .| .| .| o o\"))\n/// vec![4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\nfn parse_music(music_string:\
  \ String) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = parse_music;\n    assert_eq!(candidate(String::from(\"\
  \")), Vec::<isize>::new());\n    assert_eq!(candidate(String::from(\"o o o o\")),\
  \ vec![4, 4, 4, 4]);\n    assert_eq!(candidate(String::from(\".| .| .| .|\")), vec![1,\
  \ 1, 1, 1]);\n    assert_eq!(candidate(String::from(\"o| o| .| .| o o o o\")), vec![2,\
  \ 2, 1, 1, 4, 4, 4, 4]);\n    assert_eq!(candidate(String::from(\"o| .| o| .| o\
  \ o| o o|\")), vec![2, 1, 2, 1, 4, 2, 4, 2]);\n}\n"
completions: ["    let mut beats: Vec<isize> = vec![];\n    let mut current_beat:\
    \ isize = 0;\n    let mut current_note = String::new();\n    let mut current_octave:\
    \ isize = 0;\n    let mut current_is_last = false;\n    let mut current_is_octave\
    \ = false;\n\n    for c in music_string.chars() {\n        if c.is_ascii() {\n\
    \            if c.to_ascii_lowercase() == 'o' {\n                if current_is_last\
    \ {\n                    current_beat += 1;\n                } else {\n      \
    \              current_beat = 0;\n                    current_is_last = true;\n\
    \                }\n            } else if c.to_ascii_lowercase() == '|' {\n  \
    \              if current_is_last {\n                    current_beat += 1;\n\
    \                } else {\n                    current_beat = 0;\n           \
    \         current_is_last = true;\n                }\n            } else if c.to_ascii_lowercase()\
    \ == '.' {\n                if current_is_last {\n                    current_beat\
    \ += 1;\n                } else {\n                    current_beat = 0;\n   \
    \                 current_is_last = true;\n                }\n            } else\
    \ {\n                current_is_last = false;\n                current_is_octave\
    \ = false;\n                current_octave = 0;\n                current_note\
    \ = c.to_ascii_lowercase();\n            }\n        } else {\n            if current_is_last\
    \ {\n                current_beat += 1;\n            } else {\n              \
    \  current_beat = 0;\n                current_is_last = true;\n            }\n\
    \            current_is_octave = false;\n            current_octave = 0;\n   \
    \         current_note = String::new();\n        }\n    }\n\n    beats.push(current_beat);\n\
    \    beats.push(current_beat);\n    beats.push(current_beat);\n\n    current_beat\
    \ = 0;\n    current_is_last = false;\n    current_is_octave = false;\n    current_octave\
    \ = 0;\n    current_note = String::new();\n\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                if current_is_last {\n                    current_beat += 1;\n\
    \                } else {\n                    current_beat = 0;\n           \
    \         current_is_last = true;\n                }\n            } else if c.to_ascii_lowercase()\
    \ == '|' {\n                if current_is_last {\n                    current_beat\
    \ += 1;\n                } else {\n                    current_beat = 0;\n   \
    \                 current_is_last = true;\n                }\n            } else\
    \ if c.to_ascii_lowercase() == '.' {\n                if current_is_last {\n \
    \                   current_beat += 1;\n                } else {\n           \
    \         current_beat = 0;\n                    current_is_last = true;\n   \
    \             }\n            } else {\n                current_is_last = false;\n\
    \                current_is_octave = false;\n                current_octave =\
    \ 0;\n                current_note = c.to_ascii_lowercase();\n            }\n\
    \        } else {\n            if current_is_last {\n                current_beat\
    \ += 1;\n            } else {\n                current_beat = 0;\n           \
    \     current_is_last = true;\n            }\n", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = music_string.len();\n    let mut current_note_length = music_string.len();\n\
    \    let mut current_note_length = music_string.len();\n    let mut current_note_length\
    \ = music_string.len();\n    let mut current_note_length = music_string.len();\n\
    \    let mut current_note_length = music_string.len();\n    let mut current_note_length\
    \ = music_string.len();\n    let mut current_note_length = music_string.len();\n\
    \    let mut current_note_length = music_string.len();\n    let mut current_note_length\
    \ = music_string.len();\n    let mut current_note_length = music_string.len();\n\
    \    let mut current_note_length = music_string.len();\n    let mut current_note_length\
    \ = music_string.len();\n    let mut current_note_length = music_string.len();\n\
    \    let mut current_note_length = music_string.len();\n    let mut current_note_length\
    \ = music_string.len();\n    let mut current_note_length = music_string.len();\n\
    \    let mut current_note_length = music_string.len();\n    let mut current_note_length\
    \ = music_string.len();\n    let mut current_note_length = music_string.len();\n\
    \    let mut current_note_length = music_string.len();\n    let mut current_note_length\
    \ = music_string.len();\n    let mut current_note_length = music_string.len();\n\
    \    let mut current_note_length = music_string.len();\n    let mut current_note_length\
    \ = music_string.len();\n    let mut current_note_length = music_string.len();\n\
    \    let mut current_note_length = music_string.len();\n    let mut current_note_length\
    \ = music_string.len();\n    let mut current_note_length = music_string.len();\n\
    \    let mut current_note_length = music_string.len();\n    let mut current_note_length\
    \ = music_string.len();\n    let mut current_note_length = music_string.len();\n\
    \    let mut current_note_length = music_string.len();\n    let mut current_note_length\
    \ = music_string.len();\n    let mut current_note_length = music_string.len();\n\
    \    let mut current_note_length = music_string.len();\n    let mut current_note_length\
    \ = music_string.len();\n    let mut current_note_length = music_string.len();\n\
    \    let mut current_note_length = music_string.len();\n    let mut current_note_length\
    \ = ", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|&(_,\
    \ note)| note != '|');\n    let mut current_note = 0;\n    let mut current_beat\
    \ = 0;\n    for note in notes {\n        if note.1 == '.' {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note += 1;\n        } else\
    \ {\n            current_beat += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n            } else {\n       \
    \         current_note.push(c);\n            }\n        } else {\n           \
    \ if current_note.is_empty() {\n                println!(\"Invalid music string\"\
    );\n                break;\n            }\n            let note = current_note.chars().collect::<String>();\n\
    \            let beat = note.chars().collect::<String>().parse().unwrap();\n \
    \           beats.push(beat);\n            current_beat = beat;\n            current_note\
    \ = String::new();\n        }\n    }\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let mut\
    \ current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n    let mut current_note_oct4\
    \ = 0;\n    let mut current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n\
    \    let mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n    let\
    \ mut current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n    let mut\
    \ current_note_oct11 = 0;\n    let mut current_note_oct12 = 0;\n    let mut current_note_oct13\
    \ = 0;\n    let mut current_note_oct14 = 0;\n    let mut current_note_oct15 =\
    \ 0;\n    let mut current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n\
    \    let mut current_note_oct18 = 0;\n    let mut current_note_oct19 = 0;\n  \
    \  let mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n    let\
    \ mut current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n    let mut\
    \ current_note_oct24 = 0;\n    let mut current_note_oct25 = 0;\n    let mut current_note_oct26\
    \ = 0;\n    let mut current_note_oct27 = 0;\n    let mut current_note_oct28 =\
    \ 0;\n    let mut current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n\
    \    let mut current_note_oct31 = 0;\n    let mut current_note_oct32 = 0;\n  \
    \  let mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n    let\
    \ mut current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n    let mut\
    \ current_note_oct37 = 0;\n    let mut current_note_oct38 = 0;\n    let mut current_note_oct39\
    \ = 0;\n    let mut current_note_oct40 = 0;\n    let mut current_note_oct41 =\
    \ 0;\n    let mut current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n\
    \    let mut current_note_oct44 = 0;\n    let mut current_note_oct45 = 0;\n  \
    \  let mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n    let\
    \ mut current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n    let mut\
    \ current_note_oct50 = 0;\n    let mut current_note_oct51 = 0;\n    let mut current_note_oct52\
    \ = 0;\n    let mut current_note_oct53 = 0;\n    let mut current_note_", "   \
    \ let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    for c in music_string {\n        if c == 'o' {\n     \
    \       if current_beat > 0 {\n                beats.push(current_beat);\n   \
    \             current_beat = 0;\n            }\n            current_note = String::new();\n\
    \        } else if c == '|' {\n            if current_beat > 0 {\n           \
    \     beats.push(current_beat);\n                current_beat = 0;\n         \
    \   }\n            current_note = String::new();\n        } else if c == '.' {\n\
    \            if current_beat > 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n            }\n            current_note =\
    \ String::new();\n        } else {\n            current_note.push(c);\n      \
    \  }\n    }\n    if current_beat > 0 {\n        beats.push(current_beat);\n  \
    \  }\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut notes:\
    \ Vec<&str> = music_string.split_whitespace().collect();\n    let mut current_note\
    \ = notes.clone();\n    let mut current_beat = 0;\n    while current_note.is_not_empty()\
    \ {\n        let note = current_note.clone();\n        if note.len() == 1 {\n\
    \            beats.push(current_beat);\n            current_beat = 0;\n      \
    \      current_note = notes.clone();\n        } else {\n            if note.chars().any(|c|\
    \ c == 'o') {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = notes.clone();\n            } else {\n\
    \                let mut beat = note.chars().filter(|c| c != 'o').count();\n \
    \               if beat > current_beat {\n                    beats.push(current_beat);\n\
    \                    current_beat = beat;\n                }\n               \
    \ current_note = notes.clone();\n            }\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str>\
    \ = music_string.split_whitespace().collect();\n    let mut current_note = String::from(\"\
    \");\n    let mut current_beat = 0;\n    let mut current_note_index = 0;\n   \
    \ let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_whitespace() {\n            continue;\n        }\n      \
    \  if c.is_ascii_digit() {\n            current_note = c.to_string();\n      \
    \      current_note_len = c.len() as isize;\n        } else {\n            if\
    \ current_note_len == 0 {\n                continue;\n            }\n        \
    \    if c.is_ascii_letter() {\n                beats.push(current_beat + current_note_len);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_len = c.len() as isize;\n            } else {\n\
    \                current_beat += 1;\n            }\n        }\n    }\n    beats.push(current_beat\
    \ + current_note_len);\n    beats", "    let mut beats = vec![];\n    let mut\
    \ current_beat = 0;\n    let mut current_note = String::new();\n    let mut current_note_len\
    \ = 0;\n    let mut last_note = String::new();\n    let mut last_note_len = 0;\n\
    \    for c in music_string.chars() {\n        if c == 'o' {\n            if current_note_len\
    \ == 0 {\n                last_note = current_note;\n                last_note_len\
    \ = current_note_len;\n            }\n            current_note_len = 0;\n    \
    \        current_note = String::new();\n            current_beat += 1;\n     \
    \   } else if c == '|' {\n            if current_note_len == 0 {\n           \
    \     last_note = current_note;\n                last_note_len = current_note_len;\n\
    \            }\n            current_note_len = 0;\n            current_note =\
    \ String::new();\n            current_beat += 1;\n        } else if c == '.' {\n\
    \            if current_note_len == 0 {\n                last_note = current_note;\n\
    \                last_note_len = current_note_len;\n            }\n          \
    \  current_note_len = 0;\n            current_note = String::new();\n        \
    \    current_beat += 1;\n        } else {\n            current_note.push(c);\n\
    \            current_note_len = current_note.len();\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats.push(current_beat);\n    beats.push(current_beat);\n    beats.push(current_beat);\n\
    \    beats.push(current_beat);\n    beats.push(current_beat);\n    beats.push(current_beat);\n\
    \    beats.push(current_beat);\n    beats.push(current_beat);\n    beats.push(current_beat);\n\
    \    beats.push(current_beat);\n    beats.push(current_beat);\n    beats.push(current_beat);\n\
    \    beats.push(current_beat);\n    beats.push(current_beat);\n    beats.push(current_beat);\n\
    \    beats.push(current_beat);\n    beats.push(current_beat);\n    beats.push(current_beat);\n\
    \    beats.push(current_beat);\n    beats.push(current_beat);\n    beats.push(current_beat);\n\
    \    beats.push(current_beat);\n    beats.push(current_beat);\n    beats.push(current_beat);\n\
    \    beats.push(current_beat);\n    beats.push(current_beat);\n    beats.push(current_beat);\n\
    \    beats.push(current_beat);\n    beats.push(current_beat);\n    beats.push(current_beat);\n\
    \    beats.push(current_beat);\n    beats.push(current_beat);\n    beats.push(current_beat);\n\
    \    beats.push(current_beat);\n    beats.push(current_beat);\n    beats.push(current_beat);\n\
    \    beats.push(current_beat);\n    beats.push(", "    let mut beats = vec![];\n\
    \    let mut notes = music_string.chars().collect::<Vec<_>>();\n    let mut current_note\
    \ = notes.len() - 1;\n    let mut last_note = -1;\n    while current_note >= 0\
    \ {\n        let note = notes[current_note];\n        let mut beat = 0;\n    \
    \    if note == 'o' {\n            beat = 4;\n            last_note = current_note;\n\
    \        } else if note == 'o|' {\n            beat = 2;\n            last_note\
    \ = current_note;\n        } else if note == '.|' {\n            beat = 1;\n \
    \           last_note = current_note;\n        } else {\n            beat = 1;\n\
    \        }\n        beats.push(beat);\n        current_note = last_note;\n   \
    \ }\n    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_length = 0;\n\
    \    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 1;\n    let mut current_note_length_index42\
    \ = 1;\n    let mut current_note_length_index43 = 1;\n    let mut current_note_length_index44\
    \ = 1;\n    let mut current_note_length_index45 = 1;\n    let mut current_note_length_index46\
    \ = 1;\n    let mut current_note_length_index47 = 1;\n    let mut current_note_length_index48",
  "    let mut beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let ", "    let mut\
    \ beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index45\
    \ = 1;\n    let mut current_note_length_index46 = 1;\n    let mut current_note_length_index47\
    \ = 1;\n    let mut current_note_length_index48", "    let mut beats: Vec<isize>\
    \ = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    while current_note != \"\" {\n        if current_note == \"o\" {\n\
    \            beats.push(current_beat);\n            current_beat = 0;\n      \
    \      current_note_length = 0;\n            current_note_length_index = 0;\n\
    \            current_note = notes.next();\n        } else if current_note == \"\
    o|\" {\n            beats.push(current_beat);\n            current_beat = 0;\n\
    \            current_note_length = 2;\n            current_note_length_index =\
    \ 0;\n            current_note = notes.next();\n        } else if current_note\
    \ == \".|\" {\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note_length = 1;\n            current_note_length_index\
    \ = 0;\n            current_note = notes.next();\n        } else {\n         \
    \   current_note_length += 1;\n            current_note_length_index += 1;\n \
    \           current_note = notes.next();\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = Vec::new();\n    let mut notes = music_string.split_whitespace();\n\
    \    let mut current_note = notes.next().unwrap();\n    let mut current_beat =\
    \ 0;\n    let mut current_note_length = current_note.chars().count();\n    for\
    \ note in notes {\n        if note != current_note {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = note;\n           \
    \ current_note_length = current_note.chars().count();\n        }\n        current_beat\
    \ += 1;\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats:\
    \ Vec<isize> = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = String::new();\n    let mut current_beat = 0;\n  \
    \  let mut current_note_length = 0;\n    for note in notes {\n        if note\
    \ == \"o\" {\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note_length = 0;\n            current_note = String::new();\n\
    \        } else if note == \"o|\" {\n            beats.push(current_beat);\n \
    \           current_beat = 0;\n            current_note_length = 2;\n        \
    \    current_note = String::new();\n        } else if note == \".|\" {\n     \
    \       beats.push(current_beat);\n            current_beat = 0;\n           \
    \ current_note_length = 1;\n            current_note = String::new();\n      \
    \  } else {\n            current_note.push_str(note);\n            current_note_length\
    \ += 1;\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let\
    \ mut current_note = 0;\n    let mut current_note_len = 0;\n    let mut current_note_char\
    \ = 0;\n    let mut current_note_char_len = 0;\n    let mut current_note_char_index\
    \ = 0;\n    let mut current_note_char_length = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;\n    let mut current_note_char_length_index\
    \ = 0;\n    let mut current_note_char_length_index = 0;", "    let mut beats =\
    \ vec![];\n    let mut current_beat = 0;\n    let mut current_note = 0;\n    let\
    \ mut current_note_length = 0;\n    let mut current_note_length_to_beat = 0;\n\
    \    let mut current_note_length_to_beat_with_note = 0;\n    let mut current_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat = 0;\n\
    \    let mut current_note_length_to_beat_with_note_length_to_beat_with_note =\
    \ 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_note_length = 0;\n  \
    \  for c in music_string {\n        if c.is_ascii() {\n            current_note.push_str(&c.to_string());\n\
    \            current_note_length += 1;\n        } else {\n            if current_note_length\
    \ == 0 {\n                println!(\"Invalid music string\");\n              \
    \  return beats;\n            }\n            if current_note_length == 1 {\n \
    \               if current_note == \"o\" {\n                    beats.push(current_beat);\n\
    \                }\n                current_beat = 0;\n                current_note\
    \ = String::new();\n                current_note_length = 0;\n            } else\
    \ {\n                if current_note == \"o\" {\n                    beats.push(current_beat);\n\
    \                }\n                current_beat = 0;\n                current_note\
    \ = String::new();\n                current_note_length = 0;\n            }\n\
    \        }\n    }\n    if current_note != \"o\" {\n        beats.push(current_beat);\n\
    \    }\n    beats", "    let mut beats = Vec::new();\n    let mut notes = music_string.chars().enumerate().filter(|&(_,\
    \ c)| c != '|');\n    let mut current_note = 0;\n    let mut current_beat = 0;\n\
    \    for note in notes {\n        match note {\n            (0, '.') => {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note += 1;\n            }\n            (1, '.') => {\n\
    \                current_beat += 1;\n            }\n            (2, '.') => {\n\
    \                current_beat += 1;\n            }\n            (3, '|') => {\n\
    \                current_beat += 1;\n            }\n            (4, _) => {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note += 1;\n            }\n            _ => {\n     \
    \           current_beat += 1;\n            }\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut notes:\
    \ Vec<&str> = music_string.split_whitespace().collect();\n    let mut current_note\
    \ = notes.next();\n    let mut current_beat = 0;\n    while let Some(note) = current_note\
    \ {\n        if note == \"o\" {\n            beats.push(current_beat);\n     \
    \       current_beat = 0;\n            current_note = notes.next();\n        }\
    \ else {\n            current_beat += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = 0;\n    let mut current_note_index = 0;\n    let mut\
    \ current_note_length = 0;\n    let mut current_note_length_index = 0;\n    let\
    \ mut current_note_length_value = 0;\n    let mut current_note_length_value_index\
    \ = 0;\n    let mut current_note_length_value_value = 0;\n    let mut current_note_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_", "    let mut beats = vec![];\n    let mut\
    \ current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 1;\n    let mut current_note_length_index42\
    \ = 1;\n    let mut current_note_length_index43 = 1;\n    let mut current_note_length_index44\
    \ = 1;\n    let mut current_note_length_index45 = 1;\n    let mut current_note_length_index46\
    \ = 1;\n    let mut current_note_length_index47 = 1;\n    let mut current_note_length_index48\
    \ = 1;\n    let mut current_", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_octave\
    \ = 0;\n    for c in music_string.chars() {\n        if c == 'o' {\n         \
    \   if current_note != String::new() {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            }\n            current_octave = 0;\n            current_note = c.to_string();\n\
    \        } else if c == '|' {\n            if current_note != String::new() {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n            }\n            current_octave\
    \ = 1;\n            current_note = c.to_string();\n        } else if c == '.'\
    \ {\n            if current_note != String::new() {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            }\n            current_note = c.to_string();\n        } else {\n\
    \            current_note += c.to_string();\n        }\n        current_beat +=\
    \ 1;\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats: Vec<isize>\
    \ = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note = 0;\n\
    \    let mut current_note_length = 0;\n    let mut current_note_length_index =\
    \ 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index45\
    \ = 1;\n    let mut current_note_length_index46 = 1;\n    let mut current_note_length_index47\
    \ = 1;\n    let mut current_note_length_index", "    let mut beats = Vec::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter = 0;\n    let\
    \ mut current_note_length_to_beat_counter_counter_counter = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_counter_counter_", " \
    \   let mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_note_length = 0;\n  \
    \  let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    let mut current_note_oct\
    \ = 0;\n    for c in music_string.chars() {\n        if c == 'o' {\n         \
    \   if current_note_len == 0 {\n                println!(\"Invalid music string\"\
    );\n                return beats;\n            }\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \          current_note_len = 0;\n            current_note_oct = 0;\n        }\
    \ else if c == '|' {\n            if current_note_len == 0 {\n               \
    \ println!(\"Invalid music string\");\n                return beats;\n       \
    \     }\n            beats.push(current_beat);\n            current_beat = 0;\n\
    \            current_note = String::new();\n            current_note_len = 0;\n\
    \            current_note_oct = 0;\n        } else if c == ' ' {\n           \
    \ if current_note_len == 0 {\n                println!(\"Invalid music string\"\
    );\n                return beats;\n            }\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \          current_note_len = 0;\n            current_note_oct = 0;\n        }\
    \ else {\n            if current_note_len == 0 {\n                current_note.push(c);\n\
    \                current_note_len = c.len_utf8();\n                current_note_oct\
    \ = c.oct();\n            } else {\n                current_note.push(c);\n  \
    \              current_note_len = c.len_utf8();\n                current_note_oct\
    \ = c.oct();\n            }\n        }\n    }\n    if current_note_len == 0 {\n\
    \        println!(\"Invalid music string\");\n        return beats;\n    }\n \
    \   beats.push(current_beat);\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n\
    \    let mut current_beat: isize = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length: isize = 0;\n    let mut current_note_length_index:\
    \ usize = 0;\n    let mut current_note_length_index2: usize = 0;\n    let mut\
    \ current_note_length_index3: usize = 0;\n    let mut current_note_length_index4:\
    \ usize = 0;\n    let mut current_note_length_index5: usize = 0;\n    let mut\
    \ current_note_length_index6: usize = 0;\n    let mut current_note_length_index7:\
    \ usize = 0;\n    let mut current_note_length_index8: usize = 0;\n    let mut\
    \ current_note_length_index9: usize = 0;\n    let mut current_note_length_index10:\
    \ usize = 0;\n    let mut current_note_length_index11: usize = 0;\n    let mut\
    \ current_note_length_index12: usize = 0;\n    let mut current_note_length_index13:\
    \ usize = 0;\n    let mut current_note_length_index14: usize = 0;\n    let mut\
    \ current_note_length_index15: usize = 0;\n    let mut current_note_length_index16:\
    \ usize = 0;\n    let mut current_note_length_index17: usize = 0;\n    let mut\
    \ current_note_length_index18: usize = 0;\n    let mut current_note_length_index19:\
    \ usize = 0;\n    let mut current_note_length_index20: usize = 0;\n    let mut\
    \ current_note_length_index21: usize = 0;\n    let mut current_note_length_index22:\
    \ usize = 0;\n    let mut current_note_length_index23: usize = 0;\n    let mut\
    \ current_note_length_index24: usize = 0;\n    let mut current_note_length_index25:\
    \ usize = 0;\n    let mut current_note_length_index26: usize = 0;\n    let mut\
    \ current_note_length_index27: usize = 0;\n    let mut current_note_length_index28:\
    \ usize = 0;\n    let mut current_note_length_index29: usize = 0;\n    let mut\
    \ current_note_length_index30: usize = 0;\n    let mut current_note_length_index31:\
    \ usize = 0;\n    let mut current_note_length_index32: usize = 0;\n    let mut\
    \ current_note_length_index33: usize = 0;\n    let mut current_note_length_index34:\
    \ usize = 0;\n    let mut current_note_length_index35: usize = 0;\n    let mut\
    \ current_note_length_index36: usize = 0;\n    let ", "    let mut beats = vec![];\n\
    \    let mut notes = music_string.chars().enumerate().filter(|(_, note)| note\
    \ != '|');\n    for note in notes {\n        let mut beat = 0;\n        note.for_each(|c|\
    \ {\n            if c == 'o' {\n                beat += 1;\n            }\n  \
    \          beats.push(beat);\n        });\n    }\n    beats", "    let mut beats\
    \ = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = String::new();\n    for c in music_string.chars()\
    \ {\n        if c == 'o' {\n            if current_note.len() > 0 {\n        \
    \        beats.push(current_beat + 1);\n                current_beat = 0;\n  \
    \              current_note = String::new();\n            }\n            current_note.push_str(&c);\n\
    \            current_note_length.push_str(&c.to_string());\n        } else if\
    \ c == '|' {\n            if current_note.len() > 0 {\n                beats.push(current_beat\
    \ + 1);\n                current_beat = 0;\n                current_note = String::new();\n\
    \            }\n            current_note.push_str(&c);\n            current_note_length.push_str(&c.to_string());\n\
    \        } else if c == ' ' {\n            if current_note.len() > 0 {\n     \
    \           beats.push(current_beat + 1);\n                current_beat = 0;\n\
    \                current_note = String::new();\n            }\n            current_note.push_str(&c);\n\
    \            current_note_length.push_str(&c.to_string());\n        } else {\n\
    \            current_note.push_str(&c);\n            current_note_length.push_str(&c.to_string());\n\
    \        }\n    }\n    if current_note.len() > 0 {\n        beats.push(current_beat\
    \ + 1);\n    }\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n   \
    \ let mut current_beat = 0;\n    let mut current_note = String::new();\n    let\
    \ mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let mut current_note_oct2\
    \ = 0;\n    let mut current_note_oct3 = 0;\n    let mut current_note_oct4 = 0;\n\
    \    let mut current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n    let\
    \ mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n    let mut\
    \ current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n    let mut current_note_oct11\
    \ = 0;\n    let mut current_note_oct12 = 0;\n    let mut current_note_oct13 =\
    \ 0;\n    let mut current_note_oct14 = 0;\n    let mut current_note_oct15 = 0;\n\
    \    let mut current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n  \
    \  let mut current_note_oct18 = 0;\n    let mut current_note_oct19 = 0;\n    let\
    \ mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n    let mut\
    \ current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n    let mut current_note_oct24\
    \ = 0;\n    let mut current_note_oct25 = 0;\n    let mut current_note_oct26 =\
    \ 0;\n    let mut current_note_oct27 = 0;\n    let mut current_note_oct28 = 0;\n\
    \    let mut current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n  \
    \  let mut current_note_oct31 = 0;\n    let mut current_note_oct32 = 0;\n    let\
    \ mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n    let mut\
    \ current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n    let mut current_note_oct37\
    \ = 0;\n    let mut current_note_oct38 = 0;\n    let mut current_note_oct39 =\
    \ 0;\n    let mut current_note_oct40 = 0;\n    let mut current_note_oct41 = 0;\n\
    \    let mut current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n  \
    \  let mut current_note_oct44 = 0;\n    let mut current_note_oct45 = 0;\n    let\
    \ mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n    let mut\
    \ current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n    let mut current_note_oct50\
    \ = 0;\n    let mut current_note_oct51 = 0;\n    let mut current_note_oct52 =\
    \ 0;\n    let mut current_note_oct53", "    let mut beats = vec![];\n    let mut\
    \ current_beat = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = String::new();\n    for c in music_string.chars() {\n        if c.is_ascii()\
    \ {\n            if c.to_ascii_lowercase() == 'o' {\n                if current_note.is_empty()\
    \ {\n                    current_note = c.to_ascii_lowercase();\n            \
    \        current_note_length = c.to_ascii_lowercase();\n                } else\
    \ {\n                    current_note += c.to_ascii_lowercase();\n           \
    \         current_note_length += c.to_ascii_lowercase();\n                }\n\
    \            } else {\n                if current_note.is_empty() {\n        \
    \            current_note = c.to_ascii_lowercase();\n                    current_note_length\
    \ = c.to_ascii_lowercase();\n                } else {\n                    current_note\
    \ += c.to_ascii_lowercase();\n                    current_note_length += c.to_ascii_lowercase();\n\
    \                }\n            }\n        } else {\n            if c.to_ascii_lowercase()\
    \ == 'o' {\n                if current_note.is_empty() {\n                   \
    \ current_note = c.to_ascii_lowercase();\n                    current_note_length\
    \ = c.to_ascii_lowercase();\n                } else {\n                    current_note\
    \ += c.to_ascii_lowercase();\n                    current_note_length += c.to_ascii_lowercase();\n\
    \                }\n            } else {\n                if current_note.is_empty()\
    \ {\n                    current_note = c.to_ascii_lowercase();\n            \
    \        current_note_length = c.to_ascii_lowercase();\n                } else\
    \ {\n                    current_note += c.to_ascii_lowercase();\n           \
    \         current_note_length += c.to_ascii_lowercase();\n                }\n\
    \            }\n        }\n    }\n    if current_note.is_empty() {\n        return\
    \ beats;\n    }\n    let mut current_note_length = current_note_length.chars().count();\n\
    \    for c in current_note.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == '|' {\n                if current_note_length == 0\
    \ {\n                    current_note_length += 1;\n                } else {\n\
    \                    current_note_length += 1;\n                }\n          \
    \  } else {\n                if current_note_length == 0 {\n                 \
    \   current_note_length += 1;\n                } else {\n                    current_note_length\
    \ += 1;\n                }\n            }\n        } else {\n            if c.to_ascii_lowercase()\
    \ == '|' {\n                if current_note_length == 0 {\n                  \
    \  current_note_length += 1;\n                } else {\n                    current_note_length\
    \ += 1;\n                }\n            } else {\n                if current_note_length\
    \ == 0 {\n                    current_note_length += 1;\n                } else\
    \ {\n                    current_note_length += 1;\n                }\n      \
    \      }\n        }\n    }\n    for c in current_note.chars() {\n        if c.is_ascii()\
    \ {\n            if c.to_ascii_lowercase() == '|' {\n                if current_note_length\
    \ == 0 {\n                    current_note_length += 1;\n                } else\
    \ {\n                    current_note_", "    let mut beats = vec![];\n    let\
    \ mut current_beat = 0;\n    let mut current_note = String::new();\n    for c\
    \ in music_string {\n        if c == 'o' {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \      } else if c == '|' {\n            beats.push(current_beat);\n         \
    \   current_beat = 0;\n            current_note = String::new();\n        } else\
    \ if c == ' ' {\n            current_beat++;\n        } else {\n            current_note.push(c);\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let ", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut current_beat: isize = 0;\n    let mut current_note =\
    \ String::new();\n    let mut current_octave: isize = 0;\n    let mut current_note_is_octave\
    \ = false;\n    let mut current_note_is_rest = false;\n\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            let note = c.to_ascii_lowercase();\n\
    \            if note == \"o\" {\n                if current_note_is_octave {\n\
    \                    current_note_is_octave = false;\n                    current_note_is_rest\
    \ = true;\n                } else {\n                    current_note_is_octave\
    \ = true;\n                    current_note_is_rest = false;\n               \
    \ }\n            } else if note == \"|\" {\n                if current_note_is_octave\
    \ {\n                    current_note_is_octave = false;\n                   \
    \ current_note_is_rest = true;\n                } else {\n                   \
    \ current_note_is_octave = true;\n                    current_note_is_rest = false;\n\
    \                }\n            } else if note == \".\" {\n                if\
    \ current_note_is_octave {\n                    current_note_is_octave = false;\n\
    \                    current_note_is_rest = true;\n                } else {\n\
    \                    current_note_is_octave = true;\n                    current_note_is_rest\
    \ = false;\n                }\n            } else if note == \"o|\" {\n      \
    \          if current_note_is_octave {\n                    current_note_is_octave\
    \ = false;\n                    current_note_is_rest = true;\n               \
    \ } else {\n                    current_note_is_octave = true;\n             \
    \       current_note_is_rest = false;\n                }\n            } else if\
    \ note == \".|\" {\n                if current_note_is_octave {\n            \
    \        current_note_is_octave = false;\n                    current_note_is_rest\
    \ = true;\n                } else {\n                    current_note_is_octave\
    \ = true;\n                    current_note_is_rest = false;\n               \
    \ }\n            } else {\n                if current_note_is_octave {\n     \
    \               current_note_is_octave = false;\n                    current_note_is_rest\
    \ = true;\n                } else {\n                    current_note_is_octave\
    \ = true;\n                    current_note_is_rest = false;\n               \
    \ }\n            }\n            current_note = note;\n            current_octave\
    \ = 0;\n            current_note_is_octave = false;\n            current_note_is_rest\
    \ = false;\n        } else {\n            if current_note_is_octave {\n      \
    \          current_note_is_octave = false;\n                current_note_is_rest\
    \ = true;\n            } else {\n                current_note_is_octave = true;\n\
    \                current_note_is_rest = false;\n            }\n            current_note\
    \ = String::new();\n            current_octave = 0;\n            current_note_is_octave\
    \ = false;\n            current_note_is_rest = false;\n        }\n        if current_note_is_rest\
    \ {\n            beats.push(current_beat);\n            current_beat = 0;\n  \
    \          current_note = String::new();\n            current_octave = 0;", " \
    \   let mut beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    for\
    \ c in music_string.chars() {\n        if c.is_whitespace() {\n            continue;\n\
    \        }\n        if c.is_ascii_digit() {\n            current_note.push(c);\n\
    \            current_note_length.push(c.to_string());\n        } else {\n    \
    \        if current_note.is_empty() {\n                panic!(\"Music string contains\
    \ invalid note\");\n            }\n            if c.is_ascii_digit() {\n     \
    \           let note = current_note.chars().next().unwrap();\n               \
    \ let note_length = current_note_length.chars().next().unwrap();\n           \
    \     beats.push(note.parse().unwrap() * note_length.parse().unwrap());\n    \
    \            current_note.clear();\n                current_note_length.clear();\n\
    \            } else {\n                panic!(\"Music string contains invalid\
    \ note\");\n            }\n        }\n    }\n    if current_note.is_empty() {\n\
    \        panic!(\"Music string contains invalid note\");\n    }\n    let note\
    \ = current_note.chars().next().unwrap();\n    let note_length = current_note_length.chars().next().unwrap();\n\
    \    beats.push(note.parse().unwrap() * note_length.parse().unwrap());\n    beats",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_octave: isize\
    \ = 0;\n    let mut current_note_is_last = false;\n    let mut current_note_octave:\
    \ isize = 0;\n    for c in music_string.chars() {\n        if c == 'o' {\n   \
    \         if current_note_is_last {\n                beats.push(current_beat);\n\
    \            }\n            current_note_is_last = true;\n            current_note\
    \ = String::new();\n            current_octave = 0;\n            current_note_is_last\
    \ = false;\n            current_note_octave = 0;\n            current_beat = 0;\n\
    \            current_beat += 1;\n        } else if c == '|' {\n            if\
    \ current_note_is_last {\n                beats.push(current_beat);\n        \
    \    }\n            current_note_is_last = true;\n            current_note = String::new();\n\
    \            current_octave = 0;\n            current_note_is_last = false;\n\
    \            current_note_octave = 0;\n            current_beat = 0;\n       \
    \     current_beat += 1;\n        } else if c == '.' {\n            if current_note_is_last\
    \ {\n                beats.push(current_beat);\n            }\n            current_note_is_last\
    \ = true;\n            current_note = String::new();\n            current_octave\
    \ = 0;\n            current_note_is_last = false;\n            current_note_octave\
    \ = 0;\n            current_beat = 0;\n            current_beat += 1;\n      \
    \  } else {\n            if current_note_is_last {\n                beats.push(current_beat);\n\
    \            }\n            current_note_is_last = false;\n            current_note.push(c);\n\
    \            current_note_octave += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    for c in music_string {\n\
    \        if c.is_ascii() {\n            if c == 'o' {\n                if current_note.is_empty()\
    \ {\n                    current_note = String::from(\"o\");\n               \
    \     current_note_length = String::from(\"o\");\n                } else {\n \
    \                   current_note = String::from(current_note.clone());\n     \
    \               current_note_length = String::from(current_note_length.clone());\n\
    \                }\n                beats.push(current_beat);\n              \
    \  current_beat = 0;\n                current_note = String::new();\n        \
    \        current_note_length = String::new();\n            } else if c == '|'\
    \ {\n                if current_note.is_empty() {\n                    current_note\
    \ = String::from(\"|\");\n                    current_note_length = String::from(\"\
    |\");\n                } else {\n                    current_note = String::from(current_note.clone());\n\
    \                    current_note_length = String::from(current_note_length.clone());\n\
    \                }\n                beats.push(current_beat);\n              \
    \  current_beat = 0;\n                current_note = String::new();\n        \
    \        current_note_length = String::new();\n            } else if c == '.'\
    \ {\n                if current_note.is_empty() {\n                    current_note\
    \ = String::from(\".\");\n                    current_note_length = String::from(\"\
    .\");\n                } else {\n                    current_note = String::from(current_note.clone());\n\
    \                    current_note_length = String::from(current_note_length.clone());\n\
    \                }\n                beats.push(current_beat);\n              \
    \  current_beat = 0;\n                current_note = String::new();\n        \
    \        current_note_length = String::new();\n            } else {\n        \
    \        current_note = String::from(current_note.clone());\n                current_note_length\
    \ = String::from(current_note_length.clone());\n            }\n        } else\
    \ {\n            current_note = String::from(current_note.clone());\n        \
    \    current_note_length = String::from(current_note_length.clone());\n      \
    \  }\n        current_beat += 1;\n    }\n    beats.push(current_beat);\n    beats",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index45\
    \ = 1;\n    let mut current_note_length_index46 = 1;\n    let mut current_note_length_index47\
    \ = 1;\n    let mut current_note_length_index48 = 1;\n", "    let mut beats: Vec<isize>\
    \ = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    let mut current_note_count\
    \ = 0;\n    let mut current_beat_count = 0;\n    let mut current_note_length =\
    \ 0;\n    let mut current_beat_length = 0;\n    while current_note < notes.len()\
    \ {\n        let note = notes[current_note];\n        if note == \"o\" {\n   \
    \         if current_note_count == 0 {\n                beats.push(current_beat_count);\n\
    \                current_beat_count = 0;\n            }\n            current_note_length\
    \ += 1;\n            current_note_count += 1;\n            current_beat_length\
    \ += 1;\n            current_note += 1;\n        } else if note == \"o|\" {\n\
    \            if current_note_count == 0 {\n                beats.push(current_beat_count);\n\
    \                current_beat_count = 0;\n            }\n            current_note_length\
    \ += 1;\n            current_note_count += 1;\n            current_beat_length\
    \ += 1;\n            current_note += 1;\n        } else if note == \".|\" {\n\
    \            if current_note_count == 0 {\n                beats.push(current_beat_count);\n\
    \                current_beat_count = 0;\n            }\n            current_note_length\
    \ += 1;\n            current_note_count += 1;\n            current_beat_length\
    \ += 1;\n            current_note += 1;\n        } else {\n            assert!(current_note_count\
    \ == 0);\n            assert!(current_beat_count == 0);\n            assert!(current_note_length\
    \ == 0);\n            assert!(current_beat_length == 0);\n            assert!(current_note\
    \ == notes.len());\n            beats.push(current_beat_length);\n           \
    \ current_beat_length = 0;\n            current_beat_count = 0;\n            current_note_length\
    \ = 0;\n            current_note_count = 0;\n            current_note = 0;\n \
    \       }\n    }\n    beats", "    let mut beats = vec![];\n    let mut notes\
    \ = music_string.chars().enumerate();\n    let mut current_note = notes.next();\n\
    \    while let Some(note) = current_note {\n        let note = note.0;\n     \
    \   let note_index = note.to_string();\n        let note_index = note_index.parse().unwrap();\n\
    \        let note = note_index as usize;\n        let note = note as usize;\n\
    \        beats.push(note);\n        if note % 4 == 0 {\n            beats.push(note\
    \ - 4);\n        }\n        if note % 2 == 0 {\n            beats.push(note -\
    \ 2);\n        }\n        if note == 0 {\n            beats.push(1);\n       \
    \ }\n        current_note = notes.next();\n    }\n    beats", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut current_note = String::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_beats_length = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.is_ascii(10) {\n            \
    \    // new note\n                if current_note.is_empty() {\n             \
    \       current_note = c.to_string();\n                } else {\n            \
    \        current_note = current_note + c.to_string();\n                }\n   \
    \         } else {\n                // new beat\n                if current_note.is_empty()\
    \ {\n                    current_beats_length = 1;\n                } else {\n\
    \                    current_beats_length += 1;\n                }\n         \
    \       if current_beat == 0 {\n                    beats.push(current_beats_length);\n\
    \                    current_beat = 1;\n                } else {\n           \
    \         beats.push(current_beats_length);\n                    current_beat\
    \ = 1;\n                }\n                current_note = String::new();\n   \
    \             current_beats_length = 0;\n            }\n        } else {\n   \
    \         if current_note.is_empty() {\n                // new note\n        \
    \        current_note = c.to_string();\n            } else {\n               \
    \ current_note = current_note + c.to_string();\n            }\n        }\n   \
    \ }\n    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_note_len = 0;\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.is_ascii(8) {\n                current_note = c.to_ascii_lowercase();\n  \
    \              current_note_len = c.len_utf8();\n            } else {\n      \
    \          current_note = c.to_ascii_lowercase();\n                current_note_len\
    \ = c.len_utf8();\n            }\n        } else {\n            current_note =\
    \ String::new();\n            current_note_len = 0;\n        }\n        if current_note_len\
    \ == 0 {\n            beats.push(current_beat);\n            current_beat = 0;\n\
    \            current_note = String::new();\n            current_note_len = 0;\n\
    \        }\n        if c.is_ascii(8) {\n            current_beat += 1;\n     \
    \   } else {\n            current_beat += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut notes:\
    \ Vec<&str> = music_string.split_whitespace().collect();\n    let mut last_note\
    \ = notes.last().unwrap();\n    let mut last_beat = 0;\n    let mut last_beats:\
    \ isize = 0;\n    let mut last_beats_len = 0;\n    while notes.len() > 0 {\n \
    \       let note = notes.remove(0);\n        if note == last_note {\n        \
    \    last_beats_len += 1;\n        } else {\n            beats.push(last_beat);\n\
    \            last_beats_len = 1;\n            last_beat = 0;\n            last_note\
    \ = note;\n        }\n        last_beat += 1;\n    }\n    beats.push(last_beat);\n\
    \    last_beats_len += 1;\n    beats", "    let mut beats = Vec::new();\n    let\
    \ mut current_beat = 0;\n    let mut current_note = String::new();\n    for c\
    \ in music_string.chars() {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase()\
    \ == 'o' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == 'o|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == '.|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else {\n\
    \                current_note.push(c);\n            }\n        } else {\n    \
    \        current_note.push(c);\n        }\n        if c.is_ascii() {\n       \
    \     current_beat += 1;\n        }\n    }\n    beats.push(current_beat);\n  \
    \  beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        if c == 'o' {\n            if current_note == 0 {\n             \
    \   beats.push(current_beat);\n                current_beat = 0;\n           \
    \     current_note = 1;\n                current_note_length = 4;\n          \
    \  } else {\n                current_note += 1;\n                current_note_length\
    \ += 4;\n            }\n        } else if c == '|' {\n            if current_note\
    \ == 0 {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = 2;\n                current_note_length\
    \ = 2;\n            } else {\n                current_note += 2;\n           \
    \     current_note_length += 2;\n            }\n        } else if c == ' ' {\n\
    \            if current_note == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = 3;\n      \
    \          current_note_length = 1;\n            } else {\n                current_note\
    \ += 3;\n                current_note_length += 1;\n            }\n        } else\
    \ {\n            if current_note == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = 0;\n      \
    \          current_note_length = 1;\n            } else {\n                current_note\
    \ += 1;\n                current_note_length += 1;\n            }\n        }\n\
    \        current_beat += 1;\n    }\n    beats.push(current_beat);\n    beats",
  "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate();\n\
    \    let mut current_note = notes.next();\n    let mut current_beat = 0;\n   \
    \ while let Some(note) = current_note {\n        note = note.1;\n        if note\
    \ == 'o' {\n            beats.push(current_beat);\n            current_beat =\
    \ 0;\n            current_note = notes.next();\n        } else if note == '|'\
    \ {\n            beats.push(current_beat);\n            current_beat += 1;\n \
    \           current_note = notes.next();\n        } else {\n            current_beat\
    \ += 1;\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n                current_note_length = String::new();\n   \
    \         } else if c.to_ascii_lowercase() == 'o|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == '.|' {\n \
    \               beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n                current_note_length = String::new();\n   \
    \         } else {\n                current_note.push(c);\n                current_note_length.push(c);\n\
    \            }\n        } else {\n            if current_note.is_empty() {\n \
    \               println!(\"Invalid music string\");\n                return beats;\n\
    \            }\n            if c.is_ascii() {\n                if c.to_ascii_lowercase()\
    \ == 'o' {\n                    beats.push(current_beat);\n                  \
    \  current_beat = 0;\n                    current_note = String::new();\n    \
    \                current_note_length = String::new();\n                    current_note_length\
    \ = String::new();\n                } else if c.to_ascii_lowercase() == 'o|' {\n\
    \                    beats.push(current_beat);\n                    current_beat\
    \ = 0;\n                    current_note = String::new();\n                  \
    \  current_note_length = String::new();\n                    current_note_length\
    \ = String::new();\n                } else if c.to_ascii_lowercase() == '.|' {\n\
    \                    beats.push(current_beat);\n                    current_beat\
    \ = 0;\n                    current_note = String::new();\n                  \
    \  current_note_length = String::new();\n                    current_note_length\
    \ = String::new();\n                } else {\n                    current_note.push(c);\n\
    \                    current_note_length.push(c);\n                }\n       \
    \     } else {\n                if current_note.is_empty() {\n               \
    \     println!(\"Invalid music string\");\n                    return beats;\n\
    \                }\n                if c.is_ascii() {\n                    if\
    \ c.to_ascii_lowercase() == 'o' {\n                        beats.push(current_beat);\n\
    \                        current_beat = 0;\n                        current_note\
    \ = String::new();\n                        current_note_length = String::new();\n\
    \                        current_note_length = String::new();\n              \
    \      } else if c.to_ascii_lowercase() == '", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let mut\
    \ current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n    let mut current_note_oct4\
    \ = 0;\n    let mut current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n\
    \    let mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n    let\
    \ mut current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n    let mut\
    \ current_note_oct11 = 0;\n    let mut current_note_oct12 = 0;\n    let mut current_note_oct13\
    \ = 0;\n    let mut current_note_oct14 = 0;\n    let mut current_note_oct15 =\
    \ 0;\n    let mut current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n\
    \    let mut current_note_oct18 = 0;\n    let mut current_note_oct19 = 0;\n  \
    \  let mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n    let\
    \ mut current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n    let mut\
    \ current_note_oct24 = 0;\n    let mut current_note_oct25 = 0;\n    let mut current_note_oct26\
    \ = 0;\n    let mut current_note_oct27 = 0;\n    let mut current_note_oct28 =\
    \ 0;\n    let mut current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n\
    \    let mut current_note_oct31 = 0;\n    let mut current_note_oct32 = 0;\n  \
    \  let mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n    let\
    \ mut current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n    let mut\
    \ current_note_oct37 = 0;\n    let mut current_note_oct38 = 0;\n    let mut current_note_oct39\
    \ = 0;\n    let mut current_note_oct40 = 0;\n    let mut current_note_oct41 =\
    \ 0;\n    let mut current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n\
    \    let mut current_note_oct44 = 0;\n    let mut current_note_oct45 = 0;\n  \
    \  let mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n    let\
    \ mut current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n    let mut\
    \ current_note_oct50 = 0;\n    let mut current_note_oct51 = 0;\n    let mut current_note_oct52\
    \ = 0;\n    let mut current_note_oct53 = 0;\n    let mut current_note_", "   \
    \ let mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_note_len = 0;\n    let\
    \ mut last_note = String::new();\n    let mut last_note_len = 0;\n    for c in\
    \ music_string {\n        if c == 'o' {\n            if current_note_len > 0 {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_len\
    \ = last_note_len;\n            }\n            last_note = current_note;\n   \
    \         last_note_len = current_note_len;\n            current_note_len = 0;\n\
    \        } else if c == '|' {\n            if current_note_len > 0 {\n       \
    \         beats.push(current_beat);\n                current_beat = 0;\n     \
    \           current_note = String::new();\n                current_note_len =\
    \ last_note_len;\n            }\n            last_note = current_note;\n     \
    \       last_note_len = current_note_len;\n            current_note_len = 0;\n\
    \        } else if c == '.' {\n            if current_note_len > 0 {\n       \
    \         beats.push(current_beat);\n                current_beat = 0;\n     \
    \           current_note = String::new();\n                current_note_len =\
    \ last_note_len;\n            }\n            last_note = current_note;\n     \
    \       last_note_len = current_note_len;\n            current_note_len = 0;\n\
    \        } else {\n            current_note.push(c);\n            current_note_len\
    \ = current_note.len();\n        }\n    }\n    beats.push(current_beat);\n   \
    \ beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mut current_note_length",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index45\
    \ = 1;\n    let mut current_note_length_index46 = 1;\n    let mut current_note_length_index47\
    \ = 1;\n    let mut current_note_length_index48 = 1;\n", "    let mut beats =\
    \ vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_len = 0;\n    for c in music_string.chars() {\n    \
    \    if c.is_ascii() {\n            if c.is_ascii(8) {\n                current_note\
    \ = c.to_ascii_lowercase();\n                current_note_len = c.len_utf8();\n\
    \            } else {\n                current_note = c.to_ascii_lowercase();\n\
    \                current_note_len = c.len_utf8();\n            }\n        } else\
    \ {\n            current_note = String::new();\n            current_note_len =\
    \ 0;\n        }\n        if c.is_ascii(8) {\n            if c.is_ascii(9) {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_len\
    \ = 0;\n            } else {\n                current_beat += 1;\n           \
    \ }\n        } else {\n            current_beat = 0;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = Vec::new();\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ c)| c != '|').collect::<Vec<_>>();\n    let mut last_note = notes.len() - 1;\n\
    \    let mut last_beat = 0;\n    let mut last_beats = 0;\n    notes.iter().for_each(|(_,\
    \ note)| {\n        if note == 'o' {\n            last_beat = 0;\n           \
    \ last_beats = 1;\n        } else if note == '|' {\n            last_beats = 1;\n\
    \        } else {\n            last_beats += 1;\n        }\n        if last_note\
    \ == 0 {\n            beats.push(last_beats);\n            last_beats = 0;\n \
    \           last_note = notes.len() - 1;\n        } else {\n            last_beats\
    \ += last_beat;\n            last_beat = 0;\n        }\n    });\n    beats", " \
    \   let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate();\n\
    \    let mut last_note = notes.next();\n    let mut last_beat = 0;\n    let mut\
    \ last_beats = 4;\n    loop {\n        let note = notes.next();\n        if note.1\
    \ == last_note.1 {\n            last_beats += 1;\n        } else {\n         \
    \   beats.push(last_beats);\n            last_beats = 1;\n            last_beats\
    \ += 1;\n            last_beats += 1;\n            last_beats += 1;\n        \
    \    last_beats += 1;\n            last_beats += 1;\n            last_beats +=\
    \ 1;\n            last_beats += 1;\n            last_beats += 1;\n           \
    \ last_beats += 1;\n            last_beats += 1;\n            last_beats += 1;\n\
    \            last_beats += 1;\n            last_beats += 1;\n            last_beats\
    \ += 1;\n            last_beats += 1;\n            last_beats += 1;\n        \
    \    last_beats += 1;\n            last_beats += 1;\n            last_beats +=\
    \ 1;\n            last_beats += 1;\n            last_beats += 1;\n           \
    \ last_beats += 1;\n            last_beats += 1;\n            last_beats += 1;\n\
    \            last_beats += 1;\n            last_beats += 1;\n            last_beats\
    \ += 1;\n            last_beats += 1;\n            last_beats += 1;\n        \
    \    last_beats += 1;\n            last_beats += 1;\n            last_beats +=\
    \ 1;\n            last_beats += 1;\n            last_beats += 1;\n           \
    \ last_beats += 1;\n            last_beats += 1;\n            last_beats += 1;\n\
    \            last_beats += 1;\n            last_beats += 1;\n            last_beats\
    \ += 1;\n            last_beats += 1;\n            last_beats += 1;\n        \
    \    last_beats += 1;\n            last_beats += 1;\n            last_beats +=\
    \ 1;\n            last_beats += 1;\n            last_beats += 1;\n           \
    \ last_beats += 1;\n            last_beats += 1;\n            last_beats += 1;\n\
    \            last_beats += 1;\n            last_beats += 1;\n            last_beats\
    \ += 1;\n            last_beats += 1;\n            last_beats += 1;\n        \
    \    last_beats += 1;\n            last_beats += 1;\n            last_beats +=\
    \ 1;\n            last_beats += 1;\n            last_beats += 1;\n           \
    \ last_beats += 1;\n            last_beats += 1;\n            last_beats += 1;\n\
    \            last_beats += 1;\n            last_beats += 1;\n            last_beats\
    \ += 1;\n            last_beats += 1;\n            last_beats += 1;\n        \
    \    last_beats += 1;\n            last_beats += 1;\n            last_beats +=\
    \ 1;\n            last_beats += 1;\n            last_beats += 1;\n           \
    \ last_beats += 1;\n            last_beats += 1;\n            last_beats += 1;\n\
    \            last_beats += 1;\n            last_beats += 1;\n            last_beats\
    \ += 1;\n            last_beats += 1;\n            last_beats += 1;\n        \
    \    last_beats += 1;\n            last_beats += 1;\n            last_beats +=\
    \ 1;\n            last_beats += 1;\n            last_", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let ", "    let mut beats = vec![];\n\
    \    let mut notes = music_string.chars().enumerate().filter(|(_, note)| note\
    \ != '|').collect::<Vec<_>>();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    for note in notes {\n      \
    \  if note.1 == '.' {\n            current_note_length += 1;\n        } else {\n\
    \            current_note_length += note.1;\n        }\n        if note.1 == '\
    \ ' {\n            current_note += 1;\n        } else {\n            current_note\
    \ += note.1;\n        }\n        if note.1 == ' ' {\n            current_beat\
    \ += 1;\n        } else {\n            current_beat += note.1;\n        }\n  \
    \      if note.1 == ' ' {\n            beats.push(current_beat);\n           \
    \ current_beat = 0;\n            current_note = 0;\n            current_note_length\
    \ = 0;\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats: Vec<isize> = Vec::new();\n    let mut current_beat: isize = 0;\n\
    \    let mut current_note = String::new();\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == 'o|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == '.|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else {\n\
    \                current_note += c.to_ascii_lowercase();\n            }\n    \
    \    } else {\n            current_note += c.to_ascii_lowercase();\n        }\n\
    \    }\n    beats.push(current_beat);\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_octave = 0;\n    let mut current_note_is_octave = false;\n\
    \    let mut current_note_is_rest = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested", "    let mut beats: Vec<isize>\
    \ = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note = 0;\n\
    \    let mut current_note_length = 0;\n    let mut current_note_length_index =\
    \ 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;", "    let mut beats = vec![];\n\
    \    let mut notes = music_string.chars().enumerate();\n    let mut current_note\
    \ = 0;\n    let mut current_beat = 0;\n    let mut last_note = -1;\n    let mut\
    \ last_beat = -1;\n    let mut last_note_is_half = false;\n    let mut last_note_is_quarter\
    \ = false;\n    let mut last_note_is_whole_note = false;\n    for note, index\
    \ in notes {\n        let note = note.unwrap();\n        if note == 'o' {\n  \
    \          if last_note == -1 {\n                last_note = current_note;\n \
    \               last_beat = current_beat;\n                last_note_is_half =\
    \ false;\n                last_note_is_quarter = false;\n                last_note_is_whole_note\
    \ = false;\n            } else {\n                if last_note == current_note\
    \ {\n                    last_beat = current_beat;\n                    last_note_is_half\
    \ = false;\n                    last_note_is_quarter = false;\n              \
    \      last_note_is_whole_note = false;\n                } else {\n          \
    \          if last_note == current_note + 1 {\n                        last_beat\
    \ = current_beat;\n                        last_note_is_half = true;\n       \
    \                 last_note_is_quarter = false;\n                        last_note_is_whole_note\
    \ = false;\n                    } else {\n                        if last_note\
    \ == current_note + 2 {\n                            last_beat = current_beat;\n\
    \                            last_note_is_half = true;\n                     \
    \       last_note_is_quarter = true;\n                            last_note_is_whole_note\
    \ = false;\n                        } else {\n                            if last_note\
    \ == current_note + 3 {\n                                last_beat = current_beat;\n\
    \                                last_note_is_half = true;\n                 \
    \               last_note_is_quarter = true;\n                               \
    \ last_note_is_whole_note = true;\n                            } else {\n    \
    \                            if last_note == current_note + 4 {\n            \
    \                        last_beat = current_beat;\n                         \
    \           last_note_is_half = true;\n                                    last_note_is_quarter\
    \ = true;\n                                    last_note_is_whole_note = true;\n\
    \                                } else {\n                                  \
    \  if last_note == current_note + 5 {\n                                      \
    \  last_beat = current_beat;\n                                        last_note_is_half\
    \ = true;\n                                        last_note_is_quarter = true;\n\
    \                                        last_note_is_whole_note = true;\n   \
    \                                 } else {\n                                 \
    \       if last_note == current_note + 6 {\n                                 \
    \           last_beat = current_beat;\n                                      \
    \      last_note_is_half = true;\n                                           \
    \ last_note_is_quarter = true;\n                                            last_note_is_whole_note\
    \ = true;\n                                        } else {\n                \
    \                            if last_note == current_note + 7 {\n            \
    \                                    last_beat = current_beat;\n             \
    \                                   last_note_is_half = true;\n              \
    \                                  last_note_is_quarter = true;\n            \
    \                                    last_note_is_whole_note = true;\n       \
    \                                     } else {\n                             \
    \                   if last_note == current_note + 8 {\n                     \
    \                               last_beat", "    let mut beats: Vec<isize> = Vec::new();\n\
    \    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n \
    \   let mut current_note = notes.first().unwrap();\n    let mut current_beat =\
    \ 0;\n    let mut current_note_count = 0;\n    let mut current_note_length = 0;\n\
    \    while current_note != \".\" {\n        if current_note == \"o\" {\n     \
    \       beats.push(current_beat);\n            current_beat = 0;\n           \
    \ current_note_count = 0;\n            current_note_length = 0;\n            current_note\
    \ = notes.next();\n        } else {\n            current_note_count += 1;\n  \
    \          current_note_length += 1;\n            current_beat = current_note_length\
    \ * 4;\n            current_note = notes.next();\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat:\
    \ isize = 0;\n    let mut current_note = String::new();\n    let mut current_note_length:\
    \ isize = 0;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n\
    \            if c.to_ascii_uppercase() == 'O' {\n                if current_note_length\
    \ == 0 {\n                    current_note = c.to_ascii_lowercase();\n       \
    \             current_note_length = 1;\n                } else {\n           \
    \         current_note_length += 1;\n                }\n            } else if\
    \ c.to_ascii_uppercase() == '|' {\n                if current_note_length == 0\
    \ {\n                    current_note = c.to_ascii_lowercase();\n            \
    \        current_note_length = 1;\n                } else {\n                \
    \    current_note_length += 1;\n                }\n            } else if c.to_ascii_uppercase()\
    \ == '.' {\n                if current_note_length == 0 {\n                  \
    \  current_note = c.to_ascii_lowercase();\n                    current_note_length\
    \ = 1;\n                } else {\n                    current_note_length += 1;\n\
    \                }\n            } else {\n                if current_note_length\
    \ == 0 {\n                    current_note = c.to_ascii_lowercase();\n       \
    \             current_note_length = 1;\n                } else {\n           \
    \         current_note_length += 1;\n                }\n            }\n      \
    \  } else {\n            if current_note_length == 0 {\n                current_note\
    \ = c.to_ascii_lowercase();\n                current_note_length = 1;\n      \
    \      } else {\n                current_note_length += 1;\n            }\n  \
    \      }\n    }\n    beats.push(current_beat);\n    current_beat = 0;\n    current_note.clear();\n\
    \    current_note_length = 0;\n    for c in music_string.chars() {\n        if\
    \ c.is_ascii() {\n            if c.to_ascii_uppercase() == 'O' {\n           \
    \     if current_note_length == 0 {\n                    current_note = c.to_ascii_lowercase();\n\
    \                    current_note_length = 1;\n                } else {\n    \
    \                current_note_length += 1;\n                }\n            } else\
    \ if c.to_ascii_uppercase() == '|' {\n                if current_note_length ==\
    \ 0 {\n                    current_note = c.to_ascii_lowercase();\n          \
    \          current_note_length = 1;\n                } else {\n              \
    \      current_note_length += 1;\n                }\n            } else if c.to_ascii_uppercase()\
    \ == '.' {\n                if current_note_length == 0 {\n                  \
    \  current_note = c.to_ascii_lowercase();\n                    current_note_length\
    \ = 1;\n                } else {\n                    current_note_length += 1;\n\
    \                }\n            } else {\n                if current_note_length\
    \ == 0 {\n                    current_note = c.to_ascii_lowercase();\n       \
    \             current_note_length = 1;\n                } else {\n           \
    \         current_note_length += 1;\n                }\n            }\n      \
    \  } else {\n            if current_note_length == 0 {\n                current_note\
    \ = c.to_ascii_lowercase();\n                current_note_length = 1;\n      \
    \      } else {\n                current_note_length += 1;", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_octave = 0;\n    let mut current_note_is_octave\
    \ = false;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n \
    \           if c.to_ascii_lowercase() == 'o' {\n                if current_note_is_octave\
    \ {\n                    current_octave += 1;\n                } else {\n    \
    \                current_octave = 0;\n                    current_note_is_octave\
    \ = true;\n                }\n            }\n            if c.to_ascii_lowercase()\
    \ == '|' {\n                if current_note_is_octave {\n                    current_octave\
    \ += 1;\n                } else {\n                    current_octave = 0;\n \
    \                   current_note_is_octave = true;\n                }\n      \
    \      }\n            if c.to_ascii_lowercase() == '.' {\n                if current_note_is_octave\
    \ {\n                    current_octave += 1;\n                } else {\n    \
    \                current_octave = 0;\n                    current_note_is_octave\
    \ = true;\n                }\n            }\n            if c.to_ascii_lowercase()\
    \ == 'o' {\n                current_note += c.to_ascii_lowercase();\n        \
    \    } else {\n                current_note += c.to_ascii_lowercase();\n     \
    \       }\n        } else {\n            current_note += c.to_ascii_lowercase();\n\
    \        }\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() ==\
    \ 'o' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_octave\
    \ = 0;\n                current_note_is_octave = false;\n            }\n     \
    \       if c.to_ascii_lowercase() == '|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_octave = 0;\n                current_note_is_octave =\
    \ false;\n            }\n            if c.to_ascii_lowercase() == '.' {\n    \
    \            beats.push(current_beat);\n                current_beat = 0;\n  \
    \              current_note = String::new();\n                current_octave =\
    \ 0;\n                current_note_is_octave = false;\n            }\n       \
    \     if c.to_ascii_lowercase() == 'o' {\n                current_note += c.to_ascii_lowercase();\n\
    \            } else {\n                current_note += c.to_ascii_lowercase();\n\
    \            }\n        } else {\n            current_note += c.to_ascii_lowercase();\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats:\
    \ Vec<isize> = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut last_note = String::from(\"\");\n    let mut last_beat = 0;\n   \
    \ let mut last_beats: isize = 0;\n    let mut last_beats_length = 0;\n    let\
    \ mut last_beats_lengths: Vec<isize> = vec![];\n    let mut last_beats_lengths_length\
    \ = 0;\n    let mut last_beats_lengths_lengths: Vec<isize> = vec![];\n    let\
    \ mut last_beats_lengths_lengths_length = 0;\n    let mut last_beats_lengths_lengths_lengths:\
    \ Vec<isize> = vec![];\n    let mut last_beats_lengths_lengths_lengths_length\
    \ = 0;\n    let mut last_beats_lengths_lengths_lengths_lengths: Vec<isize> = vec![];\n\
    \    let mut last_beats_lengths_lengths_lengths_lengths_length = 0;\n    let mut\
    \ last_beats_lengths_lengths_lengths_lengths_lengths: Vec<isize> = vec![];\n \
    \   let mut last_beats_lengths_lengths_lengths_lengths_lengths_length = 0;\n \
    \   let mut last_beats_lengths_lengths_lengths_lengths_lengths_lengths: Vec<isize>\
    \ = vec![];\n    let mut last_beats_lengths_lengths_lengths_lengths_lengths_lengths_length\
    \ = 0;\n    let mut last_beats_lengths_lengths_lengths_lengths_lengths_lengths_lengths:\
    \ Vec<isize> = vec![];\n    let mut last_beats_lengths_lengths_lengths_lengths_lengths_lengths_lengths_length\
    \ = 0;\n    let mut last_beats_lengths_lengths_lengths_lengths_lengths_lengths_lengths_lengths:\
    \ Vec<isize> = vec![];\n    let mut last_beats_lengths_lengths_lengths_lengths_lengths_lengths_lengths_lengths_length\
    \ = 0;\n    let mut last_beats_lengths_lengths_lengths_lengths_lengths_lengths_lengths_lengths_lengths:\
    \ Vec<isize> = vec![];\n    let mut last_beats_lengths_lengths_lengths_lengths_lengths_lengths_lengths_lengths_lengths_length\
    \ = 0;\n    let mut last_beats_lengths_lengths_lengths_lengths_lengths_lengths_lengths_lengths_lengths_lengths_lengths:\
    \ Vec<isize> = vec", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_length = 0;\n\
    \    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;\n", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|&(_,\
    \ note)| note != 'o').collect::<Vec<_>>();\n    let mut current_note = 0;\n  \
    \  let mut current_beat = 0;\n    let mut current_length = 0;\n    for note in\
    \ notes {\n        let note = note.0;\n        let length = note.len();\n    \
    \    if note == 'o' {\n            beats.push(current_beat);\n            current_beat\
    \ += 4;\n            current_length += 4;\n        } else if note == 'o|' {\n\
    \            beats.push(current_beat);\n            current_beat += 2;\n     \
    \       current_length += 2;\n        } else if note == '.|' {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_length += 1;\n        } else\
    \ {\n            beats.push(current_beat);\n            current_beat += 1;\n \
    \           current_length += 1;\n        }\n        if current_length == length\
    \ {\n            current_note = note;\n            current_length = 0;\n     \
    \   }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats: Vec<isize>\
    \ = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note = 0;\n\
    \    let mut current_note_length = 0;\n    let mut current_note_length_index =\
    \ 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let mut\
    \ current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n    let mut current_note_oct4\
    \ = 0;\n    let mut current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n\
    \    let mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n    let\
    \ mut current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n    let mut\
    \ current_note_oct11 = 0;\n    let mut current_note_oct12 = 0;\n    let mut current_note_oct13\
    \ = 0;\n    let mut current_note_oct14 = 0;\n    let mut current_note_oct15 =\
    \ 0;\n    let mut current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n\
    \    let mut current_note_oct18 = 0;\n    let mut current_note_oct19 = 0;\n  \
    \  let mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n    let\
    \ mut current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n    let mut\
    \ current_note_oct24 = 0;\n    let mut current_note_oct25 = 0;\n    let mut current_note_oct26\
    \ = 0;\n    let mut current_note_oct27 = 0;\n    let mut current_note_oct28 =\
    \ 0;\n    let mut current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n\
    \    let mut current_note_oct31 = 0;\n    let mut current_note_oct32 = 0;\n  \
    \  let mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n    let\
    \ mut current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n    let mut\
    \ current_note_oct37 = 0;\n    let mut current_note_oct38 = 0;\n    let mut current_note_oct39\
    \ = 0;\n    let mut current_note_oct40 = 0;\n    let mut current_note_oct41 =\
    \ 0;\n    let mut current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n\
    \    let mut current_note_oct44 = 0;\n    let mut current_note_oct45 = 0;\n  \
    \  let mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n    let\
    \ mut current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n    let mut\
    \ current_note_oct50 = 0;\n    let mut current_note_oct51 = 0;\n    let mut current_note_oct52\
    \ = 0;\n    let mut current_note_oct53 = 0;\n    let mut current_note_", "   \
    \ let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n   \
    \ let mut current_note = 0;\n    let mut current_note_index = 0;\n    let mut\
    \ current_note_length = 0;\n    let mut current_note_length_index = 0;\n    let\
    \ mut current_note_length_value = 0;\n    let mut current_note_length_value_index\
    \ = 0;\n    let mut current_note_length_value_value = 0;\n    let mut current_note_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    for c in music_string {\n        if c == 'o' {\n            if current_note_length_index\
    \ == 0 {\n                current_note += c;\n                current_note_length\
    \ += 1;\n            } else {\n                beats.push(current_beat);\n   \
    \             current_beat += 1;\n                current_note += c;\n       \
    \         current_note_length += 1;\n            }\n        } else if c == '|'\
    \ {\n            if current_note_length_index == 0 {\n                current_note\
    \ += c;\n                current_note_length += 1;\n            } else {\n   \
    \             beats.push(current_beat);\n                current_beat += 1;\n\
    \                current_note += c;\n                current_note_length += 1;\n\
    \            }\n        } else if c == '.' {\n            if current_note_length_index\
    \ == 0 {\n                current_note += c;\n                current_note_length\
    \ += 1;\n            } else {\n                beats.push(current_beat);\n   \
    \             current_beat += 1;\n                current_note += c;\n       \
    \         current_note_length += 1;\n            }\n        } else {\n       \
    \     current_note += c;\n            current_note_length += 1;\n        }\n \
    \       current_note_length_index += 1;\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_len = 0;\n \
    \   for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c == 'o' {\n                if current_note_len == 0 {\n                   \
    \ current_note_len = 4;\n                    current_note = String::from(\"o\"\
    );\n                } else {\n                    current_note_len += 1;\n   \
    \             }\n            } else if c == '|' {\n                if current_note_len\
    \ == 0 {\n                    current_note_len = 2;\n                    current_note\
    \ = String::from(\"|\");\n                } else {\n                    current_note_len\
    \ += 1;\n                }\n            } else if c == '.' {\n               \
    \ if current_note_len == 0 {\n                    current_note_len = 1;\n    \
    \                current_note = String::from(\".\");\n                } else {\n\
    \                    current_note_len = current_note_len - 1;\n              \
    \  }\n            } else {\n                println!(\"Unknown music symbol: {}\"\
    , c);\n            }\n        } else {\n            println!(\"Music symbol {}\
    \ is not ASCII\", c);\n        }\n        if current_note_len > 0 {\n        \
    \    beats.push(current_beat);\n            current_beat = 0;\n            current_note_len\
    \ = 0;\n            current_note = String::new();\n        }\n        current_beat\
    \ += 1;\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats\
    \ = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ c)| c != '|');\n    let mut last_note = notes.next();\n    for note in notes\
    \ {\n        let mut beat = 0;\n        if note.1 == last_note.1 {\n         \
    \   beat = note.0;\n        }\n        beats.push(beat);\n        last_note =\
    \ note;\n    }\n    beats", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_len\
    \ = 0;\n    let mut last_note = String::new();\n    let mut last_note_len = 0;\n\
    \    let mut last_note_len_len = 0;\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new();\n\
    \    let mut last_note_len = String::new();\n    let mut last_note_len = String::new",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_octave: isize\
    \ = 0;\n    for c in music_string.chars() {\n        if c == 'o' {\n         \
    \   if current_note.len() == 0 {\n                println!(\"Music string contains\
    \ invalid note!\");\n                return beats;\n            }\n          \
    \  beats.push(current_beat);\n            current_beat = 0;\n            current_note\
    \ = String::new();\n            current_octave = 0;\n        } else if c == '|'\
    \ {\n            if current_note.len() == 0 {\n                println!(\"Music\
    \ string contains invalid note!\");\n                return beats;\n         \
    \   }\n            beats.push(current_beat);\n            current_beat = 0;\n\
    \            current_note = String::new();\n            current_octave = 0;\n\
    \        } else if c == '.' {\n            if current_note.len() == 0 {\n    \
    \            println!(\"Music string contains invalid note!\");\n            \
    \    return beats;\n            }\n            current_beat = 0;\n           \
    \ current_note = String::new();\n            current_octave = 0;\n        } else\
    \ {\n            if current_note.len() == 0 {\n                current_note.push(c);\n\
    \            } else {\n                current_note.push(c);\n               \
    \ current_beat = current_beat + 1;\n            }\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut notes = music_string.chars().collect::<Vec<_>>();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_beat_length = 0;\n    let mut current_note_is_last\
    \ = false;\n    let mut current_beat_is_last = false;\n    while notes.len() >\
    \ 0 {\n        let note = notes.remove(0);\n        match note {\n           \
    \ 'o' => current_note_is_last = true;\n            current_note += 1;\n      \
    \      current_note_length += 1;\n            current_beat_length += 1;\n    \
    \        current_beat_is_last = false;\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note_is_last = false;\n  \
    \          current_beat_is_last = false;\n            current_note_length = 0;\n\
    \            current_beat_length = 0;\n            current_note = 0;\n       \
    \     _ => current_note += 1,\n        }\n    }\n    beats", "    let mut beats\
    \ = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == 'o|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == '.|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else {\n                current_note.push(c);\n            }\n\
    \        } else {\n            if current_note.is_empty() {\n                continue;\n\
    \            }\n            let note = current_note.chars().collect::<String>().parse().unwrap();\n\
    \            beats.push(note as isize);\n            current_beat = 0;\n     \
    \       current_note = String::new();\n        }\n    }\n    beats", "    let\
    \ mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    let mut current_note_oct\
    \ = 0;\n    let mut current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n\
    \    let mut current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n    let\
    \ mut current_note_oct6 = 0;\n    let mut current_note_oct7 = 0;\n    let mut\
    \ current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n    let mut current_note_oct10\
    \ = 0;\n    let mut current_note_oct11 = 0;\n    let mut current_note_oct12 =\
    \ 0;\n    let mut current_note_oct13 = 0;\n    let mut current_note_oct14 = 0;\n\
    \    let mut current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n  \
    \  let mut current_note_oct17 = 0;\n    let mut current_note_oct18 = 0;\n    let\
    \ mut current_note_oct19 = 0;\n    let mut current_note_oct20 = 0;\n    let mut\
    \ current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n    let mut current_note_oct23\
    \ = 0;\n    let mut current_note_oct24 = 0;\n    let mut current_note_oct25 =\
    \ 0;\n    let mut current_note_oct26 = 0;\n    let mut current_note_oct27 = 0;\n\
    \    let mut current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n  \
    \  let mut current_note_oct30 = 0;\n    let mut current_note_oct31 = 0;\n    let\
    \ mut current_note_oct32 = 0;\n    let mut current_note_oct33 = 0;\n    let mut\
    \ current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n    let mut current_note_oct36\
    \ = 0;\n    let mut current_note_oct37 = 0;\n    let mut current_note_oct38 =\
    \ 0;\n    let mut current_note_oct39 = 0;\n    let mut current_note_oct40 = 0;\n\
    \    let mut current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n  \
    \  let mut current_note_oct43 = 0;\n    let mut current_note_oct44 = 0;\n    let\
    \ mut current_note_oct45 = 0;\n    let mut current_note_oct46 = 0;\n    let mut\
    \ current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n    let mut current_note_oct49\
    \ = 0;\n    let mut current_note_oct50 = 0;\n    let mut current_note_oct51 =\
    \ 0;\n    let mut current_note_oct52 = 0;\n    let mut current_note_oct53 = 0;\n\
    \    let mut current_note_", "    let mut beats = Vec::new();\n    let mut notes\
    \ = music_string.chars().enumerate().filter(|(_, note)| note != 'o');\n    let\
    \ mut current_note = 0;\n    let mut current_beat = 0;\n    for note in notes\
    \ {\n        if note == current_note {\n            current_beat += 1;\n     \
    \   } else {\n            beats.push(current_beat);\n            current_beat\
    \ = 1;\n            current_note = note;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat:\
    \ isize = 0;\n    let mut current_note = String::new();\n    let mut current_note_len\
    \ = 0;\n    let mut current_note_oct = 0;\n    let mut current_note_oct2 = 0;\n\
    \    let mut current_note_oct3 = 0;\n    let mut current_note_oct4 = 0;\n    let\
    \ mut current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n    let mut\
    \ current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n    let mut current_note_oct9\
    \ = 0;\n    let mut current_note_oct10 = 0;\n    let mut current_note_oct11 =\
    \ 0;\n    let mut current_note_oct12 = 0;\n    let mut current_note_oct13 = 0;\n\
    \    let mut current_note_oct14 = 0;\n    let mut current_note_oct15 = 0;\n  \
    \  let mut current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n    let\
    \ mut current_note_oct18 = 0;\n    let mut current_note_oct19 = 0;\n    let mut\
    \ current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n    let mut current_note_oct22\
    \ = 0;\n    let mut current_note_oct23 = 0;\n    let mut current_note_oct24 =\
    \ 0;\n    let mut current_note_oct25 = 0;\n    let mut current_note_oct26 = 0;\n\
    \    let mut current_note_oct27 = 0;\n    let mut current_note_oct28 = 0;\n  \
    \  let mut current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n    let\
    \ mut current_note_oct31 = 0;\n    let mut current_note_oct32 = 0;\n    let mut\
    \ current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n    let mut current_note_oct35\
    \ = 0;\n    let mut current_note_oct36 = 0;\n    let mut current_note_oct37 =\
    \ 0;\n    let mut current_note_oct38 = 0;\n    let mut current_note_oct39 = 0;\n\
    \    let mut current_note_oct40 = 0;\n    let mut current_note_oct41 = 0;\n  \
    \  let mut current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n    let\
    \ mut current_note_oct44 = 0;\n    let mut current_note_oct45 = 0;\n    let mut\
    \ current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n    let mut current_note_oct48\
    \ = 0;\n    let mut current_note_oct49 = 0;\n    let mut current_note_oct50 =\
    \ 0;\n    let mut current_note_oct51 = 0;\n    let mut current_note_oct52 = 0;\n\
    \    let mut current_", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_length = 0;\n\
    \    for c in music_string {\n        if c == 'o' {\n            if current_note\
    \ == 0 {\n                current_note = 1;\n                current_beat += 1;\n\
    \            }\n            else {\n                current_note += 1;\n     \
    \       }\n        }\n        else if c == '|' {\n            if current_note\
    \ == 0 {\n                current_note = 2;\n                current_beat += 2;\n\
    \            }\n            else {\n                current_note += 2;\n     \
    \       }\n        }\n        else if c == '.' {\n            if current_note\
    \ == 0 {\n                current_note = 4;\n                current_beat += 4;\n\
    \            }\n            else {\n                current_note += 4;\n     \
    \       }\n        }\n        else {\n            if current_note == 0 {\n   \
    \             current_note = 1;\n                current_beat += 1;\n        \
    \    }\n            else {\n                current_note += 1;\n            }\n\
    \        }\n        if current_note == 4 {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = 0;\n            current_note_length\
    \ = 0;\n        }\n        current_note_length += 1;\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_length = 0;\n\
    \    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;\n    let mu", "    let mut beats = vec![];\n    let mut current_beat =\
    \ 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let ", "    let mut beats = vec![];\n    let mut notes =\
    \ music_string.chars().enumerate();\n    let mut current_note = 0;\n    let mut\
    \ current_beat = 0;\n    let mut current_note_index = 0;\n    let mut current_beat_length\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_char =\
    \ 0;\n    let mut current_note_char_index = 0;\n    let mut current_note_char_length\
    \ = 0;\n    let mut current_note_char_char = 0;\n    let mut current_note_char_char_index\
    \ = 0;\n    let mut current_note_char_char_length = 0;\n    let mut current_note_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_index = 0;\n    let mut current_note_char_char_char_length\
    \ = 0;\n    let mut current_note_char_char_char_char = 0;\n    let mut current_note_char_char_char_char_index\
    \ = 0;\n    let mut current_note_char_char_char_char_length = 0;\n    let mut\
    \ current_note_char_char_char_char_char = 0;\n    let mut current_note_char_char_char_char_char_index\
    \ = 0;\n    let mut current_note_char_char_char_char_char_length = 0;\n    let\
    \ mut current_note_char_char_char_char_char_char = 0;\n    let mut current_note_char_char_char_char_char_char_index\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_length = 0;\n \
    \   let mut current_note_char_char_char_char_char_char_char = 0;\n    let mut\
    \ current_note_char_char_char_char_char_char_char_index = 0;\n    let mut current_note_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char = 0;\n\
    \    let mut current_note_char_char_char_char_char_char_char_char_index = 0;\n\
    \    let mut current_note_char_char_char_char_char_char_char_char_length = 0;\n\
    \    let mut current_note_char_char_char_char_char_char_char_char_char = 0;\n\
    \    let mut current_note_char_char_char_char_char_char_char_char_char_index =\
    \ 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_index\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_index\
    \ = 0;\n    let mut current_note_char_char_char_char_char_char_char_char_char_char_char_length\
    \ = 0;\n    let ", "    let mut beats = vec![];\n    let mut current_beat = 0;\n\
    \    let mut current_note = 0;\n    let mut current_note_length = 0;\n    for\
    \ c in music_string {\n        if c == 'o' {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_note = 0;\n            current_note_length\
    \ = 0;\n        } else if c == '|' {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_note = 1;\n            current_note_length\
    \ = 0;\n        } else if c == '.' {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_note = 2;\n            current_note_length\
    \ = 0;\n        } else {\n            current_note += 1;\n            current_note_length\
    \ += 1;\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ note)| note != 'o');\n    for note in notes {\n        let mut beat = 0;\n \
    \       let mut note = note.unwrap();\n        note.chars().for_each(|c| {\n \
    \           if c == '|' {\n                beat += 1;\n            }\n       \
    \ });\n        beats.push(beat);\n    }\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let mut\
    \ current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n    let mut current_note_oct4\
    \ = 0;\n    let mut current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n\
    \    let mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n    let\
    \ mut current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n    let mut\
    \ current_note_oct11 = 0;\n    let mut current_note_oct12 = 0;\n    let mut current_note_oct13\
    \ = 0;\n    let mut current_note_oct14 = 0;\n    let mut current_note_oct15 =\
    \ 0;\n    let mut current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n\
    \    let mut current_note_oct18 = 0;\n    let mut current_note_oct19 = 0;\n  \
    \  let mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n    let\
    \ mut current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n    let mut\
    \ current_note_oct24 = 0;\n    let mut current_note_oct25 = 0;\n    let mut current_note_oct26\
    \ = 0;\n    let mut current_note_oct27 = 0;\n    let mut current_note_oct28 =\
    \ 0;\n    let mut current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n\
    \    let mut current_note_oct31 = 0;\n    let mut current_note_oct32 = 0;\n  \
    \  let mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n    let\
    \ mut current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n    let mut\
    \ current_note_oct37 = 0;\n    let mut current_note_oct38 = 0;\n    let mut current_note_oct39\
    \ = 0;\n    let mut current_note_oct40 = 0;\n    let mut current_note_oct41 =\
    \ 0;\n    let mut current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n\
    \    let mut current_note_oct44 = 0;\n    let mut current_note_oct45 = 0;\n  \
    \  let mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n    let\
    \ mut current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n    let mut\
    \ current_note_oct50 = 0;\n    let mut current_note_oct51 = 0;\n    let mut current_note_oct52\
    \ = 0;\n    let mut current_note_oct53 = 0;\n    let mut current_note_", "   \
    \ let mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_value = 0;\n    let mut current_note_length_value_length\
    \ = 0;\n    let mut current_note_length_value_length_index = 0;\n    let mut current_note_length_value_length_value\
    \ = 0;\n    let mut current_note_length_value_length_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value = 0;\n    let mut current_note_length_value_length_value_value\
    \ = 0;\n    let mut current_note_length_value_length_value_value = 0;\n    let\
    \ mut current_note_length_value_length_value_value = 0;\n    let mut current_note_length_value_length_value_value\
    \ = 0;\n    let mut current_note_length_value_length_value_value = 0;\n    let\
    \ mut current_note_length_value_length_value_value = 0;\n    let mut current_note_length_value_length_value_value\
    \ = 0;\n    let mut current_note_length_value_length_value_value = 0;\n    let\
    \ mut current_note_length_value_length_value_value = 0;\n    let mut current_note_length_value_length_value_value\
    \ = 0;\n    let mut current_note_length_value_length_value_value = 0;\n    let\
    \ mut current_note_length_value_length_value_value = 0;\n    let mut current_note_length_value_length_value_value\
    \ = 0;\n    let mut current_note_length_value_length_value_value = 0;\n    let\
    \ mut current_note_length_value_length_value_value = 0;\n    let mut current_note_length_value_length_value_value\
    \ = 0;\n    let mut current_note_length_value_length_value_value = 0;\n    let\
    \ mut current_note_length_value_length_value_value = 0;\n    let mut current_note_length_value_length_value_value\
    \ = 0;\n    let mut current_note_length_value_length_value_value = 0;\n    let\
    \ mut current_note_length_value_length_value_value = 0;\n    let mut current_note_length_value_length_value_value\
    \ = 0;\n    let mut current_note_length_value_length_value_value = 0;\n    let\
    \ mut current_note_length_value_length_value_value = 0;\n    let mut current_note_length_value_length_value_value\
    \ = 0;\n    let mut current_note_length_value_length_value_value = 0;\n    let\
    \ mut current_note_length_value_length_value_value = 0;\n    let mut current_note_length_value_length_value_value\
    \ = 0;\n    let mut current_note_length_value_length_value_value = 0;\n    let\
    \ mut current_note_length_value_length_value_value = 0;\n    let mut current_note_length_value_length_value_value\
    \ = 0;\n    let mut current_note_length_value_length_value_value = 0;\n    let\
    \ mut current_note_length_value_length_value_value = 0;\n    let mut current_note_",
  "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|&(_,\
    \ note)| note != '|');\n    let mut current_note = 0;\n    let mut current_beat\
    \ = 0;\n    for note in notes {\n        let note = note.1;\n        let beat\
    \ = note.parse::<isize>().unwrap();\n        beats.push(beat);\n        if note\
    \ == 'o' {\n            current_note += 1;\n            current_beat = 0;\n  \
    \      } else {\n            current_note -= 1;\n            current_beat += 1;\n\
    \        }\n    }\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n\
    \    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n \
    \   let mut current_note = notes.first().unwrap();\n    let mut current_beat =\
    \ 0;\n    let mut current_note_count = 0;\n    while current_note != \".\" {\n\
    \        if current_note == \"o\" {\n            beats.push(current_beat);\n \
    \           current_beat = 0;\n            current_note_count += 1;\n        }\n\
    \        if current_note == \"|\" {\n            beats.push(current_beat);\n \
    \           current_beat = 0;\n            current_note_count += 1;\n        }\n\
    \        if current_note == \".\" {\n            beats.push(current_beat);\n \
    \           current_beat = 0;\n            current_note_count += 1;\n        }\n\
    \        current_note += notes.next()?;\n        current_beat++;\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = 0;\n    let mut current_note_length = 0;\n    for c in\
    \ music_string.chars() {\n        match c {\n            'o' => {\n          \
    \      beats.push(current_beat);\n                current_beat = 0;\n        \
    \        current_note++;\n                current_note_length = 0;\n         \
    \   }\n            'o|' => {\n                beats.push(current_beat);\n    \
    \            current_beat = 0;\n                current_note++;\n            \
    \    current_note_length = 1;\n            }\n            '.|' => {\n        \
    \        beats.push(current_beat);\n                current_beat = 0;\n      \
    \          current_note++;\n                current_note_length = 2;\n       \
    \     }\n            _ => {\n                current_beat += 1;\n            \
    \    current_note_length += 1;\n            }\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    for c in music_string.chars() {\n\
    \        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n \
    \               beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == 'o|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == '.|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else {\n\
    \                current_note += c.to_ascii_lowercase();\n            }\n    \
    \    } else {\n            current_note += c.to_ascii_lowercase();\n        }\n\
    \    }\n    beats.push(current_beat);\n    beats", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut current_beat: isize = 0;\n    let mut current_note =\
    \ String::new();\n    let mut current_note_length: isize = 0;\n    for c in music_string\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = 0;\n            } else if c.to_ascii_lowercase() == 'o|' {\n             \
    \   beats.push(current_beat);\n                current_beat = 0;\n           \
    \     current_note = String::new();\n                current_note_length = 1;\n\
    \            } else if c.to_ascii_lowercase() == '.|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 2;\n            } else {\n            \
    \    let mut note = c.to_ascii_lowercase();\n                note.push(0);\n \
    \               current_note.push_str(note);\n                current_note_length\
    \ += 1;\n            }\n        } else {\n            if current_note.is_empty()\
    \ {\n                println!(\"Invalid music string\");\n                return\
    \ beats;\n            }\n            let note = current_note.clone();\n      \
    \      let note_length = current_note_length;\n            current_note = String::new();\n\
    \            current_note_length = 0;\n            beats.push(current_beat + note_length);\n\
    \            current_beat += note_length;\n            current_note.push_str(note);\n\
    \        }\n    }\n    beats", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;\n    let mu", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat:\
    \ isize = 0;\n    let mut current_note = String::new();\n    let mut current_octave:\
    \ isize = 0;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n\
    \            if c.to_ascii_lowercase() == 'o' {\n                if current_note\
    \ != String::new() {\n                    beats.push(current_beat);\n        \
    \            current_beat = 0;\n                    current_note = String::new();\n\
    \                }\n                current_octave = 0;\n            } else if\
    \ c.to_ascii_lowercase() == 'o|' {\n                if current_note != String::new()\
    \ {\n                    beats.push(current_beat);\n                    current_beat\
    \ = 0;\n                    current_note = String::new();\n                }\n\
    \                current_octave = 1;\n            } else if c.to_ascii_lowercase()\
    \ == '.|' {\n                if current_note != String::new() {\n            \
    \        beats.push(current_beat);\n                    current_beat = 0;\n  \
    \                  current_note = String::new();\n                }\n        \
    \        current_octave = 2;\n            } else {\n                panic!(\"\
    Unknown note in music string: {}\", c);\n            }\n        } else {\n   \
    \         current_note.push(c);\n        }\n        current_beat += 1;\n    }\n\
    \    beats.push(current_beat);\n    beats", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n \
    \   let mut current_note = notes.last().unwrap();\n    let mut current_beat =\
    \ 0;\n    let mut current_length = 0;\n    for note in notes {\n        if note\
    \ == current_note {\n            current_beat += 1;\n            current_length\
    \ += 1;\n        } else {\n            beats.push(current_beat);\n           \
    \ current_beat = 1;\n            current_length = 1;\n            current_note\
    \ = note;\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let mut\
    \ current_note = String::new();\n    let mut current_note_len = 0;\n    let mut\
    \ current_note_oct = 0;\n    let mut current_note_oct2 = 0;\n    let mut current_note_oct3\
    \ = 0;\n    let mut current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n\
    \    let mut current_note_oct6 = 0;\n    let mut current_note_oct7 = 0;\n    let\
    \ mut current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n    let mut\
    \ current_note_oct10 = 0;\n    let mut current_note_oct11 = 0;\n    let mut current_note_oct12\
    \ = 0;\n    let mut current_note_oct13 = 0;\n    let mut current_note_oct14 =\
    \ 0;\n    let mut current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n\
    \    let mut current_note_oct17 = 0;\n    let mut current_note_oct18 = 0;\n  \
    \  let mut current_note_oct19 = 0;\n    let mut current_note_oct20 = 0;\n    let\
    \ mut current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n    let mut\
    \ current_note_oct23 = 0;\n    let mut current_note_oct24 = 0;\n    let mut current_note_oct25\
    \ = 0;\n    let mut current_note_oct26 = 0;\n    let mut current_note_oct27 =\
    \ 0;\n    let mut current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n\
    \    let mut current_note_oct30 = 0;\n    let mut current_note_oct31 = 0;\n  \
    \  let mut current_note_oct32 = 0;\n    let mut current_note_oct33 = 0;\n    let\
    \ mut current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n    let mut\
    \ current_note_oct36 = 0;\n    let mut current_note_oct37 = 0;\n    let mut current_note_oct38\
    \ = 0;\n    let mut current_note_oct39 = 0;\n    let mut current_note_oct40 =\
    \ 0;\n    let mut current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n\
    \    let mut current_note_oct43 = 0;\n    let mut current_note_oct44 = 0;\n  \
    \  let mut current_note_oct45 = 0;\n    let mut current_note_oct46 = 0;\n    let\
    \ mut current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n    let mut\
    \ current_note_oct49 = 0;\n    let mut current_note_oct50 = 0;\n    let mut current_note_oct51\
    \ = 0;\n    let mut current_note_oct52 = 0;\n    let mut current_note_oct53 =\
    \ 0;", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ c)| c != '|');\n    for note in notes {\n        let note = note.0;\n      \
    \  let beat = note.parse::<isize>().unwrap();\n        beats.push(beat);\n   \
    \ }\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n     \
    \       if c.is_ascii(8) {\n                current_note = c.to_ascii_lowercase();\n\
    \                current_note_length = 1;\n            } else {\n            \
    \    current_note += c.to_ascii_lowercase();\n                current_note_length\
    \ += 1\n            }\n        } else {\n            if current_note.is_empty()\
    \ {\n                println!(\"Invalid music string\");\n                return\
    \ beats;\n            }\n            if c.is_ascii(8) {\n                beats.push(current_beat\
    \ + current_note_length);\n                current_note = String::new();\n   \
    \             current_note_length = 0;\n                current_beat += 1;\n \
    \           } else {\n                current_note += c.to_ascii_lowercase();\n\
    \                current_note_length += 1\n            }\n        }\n    }\n \
    \   if current_note.is_empty() {\n        println!(\"Invalid music string\");\n\
    \        return beats;\n    }\n    beats.push(current_beat + current_note_length);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_octave\
    \ = 0;\n    let mut current_note_is_octave = false;\n    let mut current_note_is_rest\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_resting\
    \ = false;\n    let mut current_note_is_resting_octave = 0;\n    let mut current_note_is_resting_note\
    \ = String::new();\n    let mut current_note_is_resting_octave_is_octave = false;\n\
    \    let mut current_note_is_resting_octave_is_rest = false;\n    let mut current_note_is_resting_octave_is_rested\
    \ = false;\n    let mut current_note_is_resting_octave_is_resting = false;\n \
    \   let mut current_note_is_resting_note_is_octave = false;\n    let mut current_note_is_resting_note_is_rest\
    \ = false;\n    let mut current_note_is_resting_note_is_rested = false;\n    let\
    \ mut current_note_is_resting_note_is_resting = false;\n    let mut current_note_is_resting_note_is_resting_octave\
    \ = 0;\n    let mut current_note_is_resting_note_is_resting_note = String::new();\n\
    \    let mut current_note_is_resting_note_is_resting_octave_is_octave = false;\n\
    \    let mut current_note_is_resting_note_is_resting_octave_is_rest = false;\n\
    \    let mut current_note_is_resting_note_is_resting_octave_is_rested = false;\n\
    \    let mut current_note_is_resting_note_is_resting_octave_is_resting = false;\n\
    \    let mut current_note_is_resting_note_is_resting_note_is_octave = false;\n\
    \    let mut current_note_is_resting_note_is_resting_note_is_rest = false;\n \
    \   let mut current_note_is_resting_note_is_resting_note_is_rested = false;\n\
    \    let mut current_note_is_resting_note_is_resting_note_is_resting = false;\n\
    \    let mut current_note_is_resting_note_is_resting_note_is_resting_octave =\
    \ 0;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note\
    \ = String::new();\n    let mut current_note_is_resting_note_is_resting_note_is_resting_octave_is_octave\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_octave_is_rest\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_octave_is_rested\
    \ = false;", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    for c in music_string\
    \ {\n        if c == 'o' {\n            if current_note != \"\" {\n          \
    \      beats.push(current_beat);\n                current_beat = 0;\n        \
    \        current_note = String::new();\n            }\n            current_note_length\
    \ = 0;\n            current_note_length_index = 0;\n            current_note.push_str(&c);\n\
    \        } else if c == '|' {\n            if current_note != \"\" {\n       \
    \         beats.push(current_beat);\n                current_beat = 0;\n     \
    \           current_note = String::new();\n            }\n            current_note_length\
    \ += 1;\n            current_note_length_index += 1;\n            current_note.push_str(&c);\n\
    \        } else if c == '.' {\n            if current_note != \"\" {\n       \
    \         beats.push(current_beat);\n                current_beat = 0;\n     \
    \           current_note = String::new();\n            }\n            current_note_length\
    \ += 1;\n            current_note_length_index += 1;\n            current_note.push_str(&c);\n\
    \        } else {\n            current_beat += 1;\n            current_note.push_str(&c);\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats\
    \ = vec![];\n    let mut notes = music_string.chars().enumerate().skip(1).collect::<Vec<_>>();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    for note in\
    \ notes {\n        if note.1.is_ascii() {\n            let note = note.1.to_ascii_lowercase();\n\
    \            if note == \"o\" {\n                beats.push(current_beat);\n \
    \               current_beat = 0;\n            } else if note == \"o|\" {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \            } else if note == \".|\" {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n            } else {\n                let\
    \ beat = note.parse().unwrap();\n                beats.push(beat);\n         \
    \       current_beat += beat;\n            }\n        } else {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut notes = music_string.split_whitespace();\n\
    \    let mut current_note = notes.next().unwrap();\n    for note in notes {\n\
    \        if note == \"o\" {\n            beats.push(4);\n            current_note\
    \ = note;\n        } else if note == \"o|\" {\n            beats.push(2);\n  \
    \          current_note = note;\n        } else if note == \".|\" {\n        \
    \    beats.push(1);\n            current_note = note;\n        } else {\n    \
    \        beats.push(0);\n        }\n    }\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_octave = 0;\n    let mut current_note_is_octave = false;\n\
    \    for c in music_string.chars() {\n        match c {\n            'o' | 'o|'\
    \ => current_note_is_octave = true,\n            '.' | '|' => current_note_is_octave\
    \ = false,\n            c => {\n                if current_note_is_octave {\n\
    \                    current_octave += 1;\n                } else {\n        \
    \            current_note += c;\n                }\n            }\n        }\n\
    \        if current_note == \".\" {\n            beats.push(current_beat);\n \
    \           current_beat = 0;\n            current_note = String::new();\n   \
    \         current_octave = 0;\n            current_note_is_octave = false;\n \
    \       }\n        current_beat += 1;\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut\
    \ current_note_length_index = 0;\n    let mut current_note_length_index2 = 0;\n\
    \    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;\n    let mut current_note_length", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut notes: Vec<&'static str> = vec![];\n    let mut last_note = String::new();\n\
    \    let mut last_beat = 0;\n    let mut last_beats: isize = 0;\n    let mut last_beats_str:\
    \ String = String::new();\n    let mut last_beats_str_index = 0;\n    let mut\
    \ last_beats_str_index2 = 0;\n    let mut last_beats_str_index3 = 0;\n    let\
    \ mut last_beats_str_index4 = 0;\n    let mut last_beats_str_index5 = 0;\n   \
    \ let mut last_beats_str_index6 = 0;\n    let mut last_beats_str_index7 = 0;\n\
    \    let mut last_beats_str_index8 = 0;\n    let mut last_beats_str_index9 = 0;\n\
    \    let mut last_beats_str_index10 = 0;\n    let mut last_beats_str_index11 =\
    \ 0;\n    let mut last_beats_str_index12 = 0;\n    let mut last_beats_str_index13\
    \ = 0;\n    let mut last_beats_str_index14 = 0;\n    let mut last_beats_str_index15\
    \ = 0;\n    let mut last_beats_str_index16 = 0;\n    let mut last_beats_str_index17\
    \ = 0;\n    let mut last_beats_str_index18 = 0;\n    let mut last_beats_str_index19\
    \ = 0;\n    let mut last_beats_str_index20 = 0;\n    let mut last_beats_str_index21\
    \ = 0;\n    let mut last_beats_str_index22 = 0;\n    let mut last_beats_str_index23\
    \ = 0;\n    let mut last_beats_str_index24 = 0;\n    let mut last_beats_str_index25\
    \ = 0;\n    let mut last_beats_str_index26 = 0;\n    let mut last_beats_str_index27\
    \ = 0;\n    let mut last_beats_str_index28 = 0;\n    let mut last_beats_str_index29\
    \ = 0;\n    let mut last_beats_str_index30 = 0;\n    let mut last_beats_str_index31\
    \ = 0;\n    let mut last_beats_str_index32 = 0;\n    let mut last_beats_str_index33\
    \ = 0;\n    let mut last_beats_str_index34 = 0;\n    let mut last_beats_str_index35\
    \ = 0;\n    let mut last_beats_str_index36 = 0;\n    let mut last_beats_str_index37\
    \ = 0;\n    let mut last_beats_str_index38 = 0;\n    let mut last_beats_str_index39\
    \ = 0;\n    let mut last_beats_str_index40 = 0;\n    let mut ", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let\
    \ mut current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n    let mut\
    \ current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n    let mut current_note_oct6\
    \ = 0;\n    let mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n\
    \    let mut current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n   \
    \ let mut current_note_oct11 = 0;\n    let mut current_note_oct12 = 0;\n    let\
    \ mut current_note_oct13 = 0;\n    let mut current_note_oct14 = 0;\n    let mut\
    \ current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n    let mut current_note_oct17\
    \ = 0;\n    let mut current_note_oct18 = 0;\n    let mut current_note_oct19 =\
    \ 0;\n    let mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n\
    \    let mut current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n  \
    \  let mut current_note_oct24 = 0;\n    let mut current_note_oct25 = 0;\n    let\
    \ mut current_note_oct26 = 0;\n    let mut current_note_oct27 = 0;\n    let mut\
    \ current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n    let mut current_note_oct30\
    \ = 0;\n    let mut current_note_oct31 = 0;\n    let mut current_note_oct32 =\
    \ 0;\n    let mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n\
    \    let mut current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n  \
    \  let mut current_note_oct37 = 0;\n    let mut current_note_oct38 = 0;\n    let\
    \ mut current_note_oct39 = 0;\n    let mut current_note_oct40 = 0;\n    let mut\
    \ current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n    let mut current_note_oct43\
    \ = 0;\n    let mut current_note_oct44 = 0;\n    let mut current_note_oct45 =\
    \ 0;\n    let mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n\
    \    let mut current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n  \
    \  let mut current_note_oct50 = 0;\n    let mut current_note_oct51 = 0;\n    let\
    \ mut current_note_oct52 = 0;\n    let mut current_note_oct53 = 0;\n    let mut\
    \ current_note_", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat:\
    \ isize = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = 0;\n                current_note_length_index = 0;\n            } else if\
    \ c.to_ascii_lowercase() == 'o|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 2;\n                current_note_length_index\
    \ = 0;\n            } else if c.to_ascii_lowercase() == '.|' {\n             \
    \   beats.push(current_beat);\n                current_beat = 0;\n           \
    \     current_note = String::new();\n                current_note_length = 1;\n\
    \                current_note_length_index = 0;\n            } else {\n      \
    \          current_note.push(c);\n                current_note_length += 1;\n\
    \            }\n        } else {\n            if current_note_length_index ==\
    \ 0 {\n                current_note.push(c);\n                current_note_length\
    \ += 1;\n            } else {\n                beats.push(current_beat);\n   \
    \             current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n                current_note_length_index\
    \ = 0;\n            }\n        }\n        current_note_length_index += 1;\n  \
    \  }\n    beats.push(current_beat);\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n                current_note_length_index\
    \ = 0;\n            } else if c.to_ascii_lowercase() == 'o|' {\n             \
    \   beats.push(current_beat);\n                current_beat = 0;\n           \
    \     current_note = String::new();\n                current_note_length = 2;\n\
    \                current_note_length_index = 0;\n            } else if c.to_ascii_lowercase()\
    \ == '.|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_length\
    \ = 1;\n                current_note_length_index = 0;\n            } else {\n\
    \                current_note.push(c);\n                current_note_length +=\
    \ 1;\n            }\n        } else {\n            if current_note_length_index\
    \ == 0 {\n                current_note_length_index = 1;\n            } else {\n\
    \                current_note_length_index += 1;\n            }\n        }\n \
    \   }\n    beats.push(current_beat);\n    beats", "    let mut beats = vec![];\n\
    \    let mut notes = music_string.chars().enumerate().filter(|(_, note)| note\
    \ != '|').collect::<Vec<_>>();\n    let mut current_note = 0;\n    let mut current_beat\
    \ = 0;\n    for note in notes {\n        if note == 'o' {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note++;\n        } else if\
    \ note == 'o|' {\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note += 2;\n        } else if note == '.|' {\n   \
    \         beats.push(current_beat);\n            current_beat = 0;\n         \
    \   current_note++;\n        } else {\n            current_beat += 1;\n      \
    \  }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = 0;\n    let mut current_note_length_to_beat:\
    \ Vec<isize> = vec![];\n    let mut current_note_length_to_beat_counter = 0;\n\
    \    let mut current_note_length_to_beat_counter_to_beat: Vec<isize> = vec![];\n\
    \    let mut current_note_length_to_beat_counter_to_beat_counter = 0;\n    let\
    \ mut current_note_length_to_beat_counter_to_beat_counter_to_beat: Vec<isize>\
    \ = vec![];\n    let mut current_note_length_to_beat_counter_to_beat_counter_to_beat_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_to_beat_counter_to_beat_counter_to_beat:\
    \ Vec<isize> = vec![];\n    let mut current_note_length_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter\
    \ = 0;\n    let mut current_note_length_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat:\
    \ Vec<isize> = vec![];\n    let mut current_note_length_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter:\
    \ Vec<isize> = vec![];\n    let mut current_note_length_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat:\
    \ Vec<isize> = vec![];\n    let mut current_note_length_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter:\
    \ Vec<isize> = vec![];\n    let mut current_note_length_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat:\
    \ Vec<isize> = vec![];\n    let mut current_note_length_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter:\
    \ Vec<isize> = vec![];\n    let mut current_note_length_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter_to_beat_counter:\
    \ Vec<isize> = vec![];\n    let mut current_note_length_to_beat_counter", "  \
    \  let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mut current_note_length",
  "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate();\n\
    \    let mut current_note = 0;\n    let mut last_note = 0;\n    let mut last_beat\
    \ = 0;\n    let mut last_beats = 0;\n    let mut last_beats_after_note = 0;\n\
    \    let mut last_beats_after_notes = 0;\n    let mut last_beats_after_notes_after_note\
    \ = 0;\n    let mut last_beats_after_notes_after_notes = 0;\n    let mut last_beats_after_notes_after_notes_after_note\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes = 0;\n    let\
    \ mut last_beats_after_notes_after_notes_after_notes_after_note = 0;\n    let\
    \ mut last_beats_after_notes_after_notes_after_notes_after_notes = 0;\n    let\
    \ mut last_beats_after_notes_after_notes_after_notes_after_notes_after_note =\
    \ 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note",
  "    let mut beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    let mut current_note_oct\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octoct\
    \ = 0;\n    let mut current_note_octoctlen = 0;\n    let mut current_note_octoctlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen\
    \ = 0;\n    let mut current_note_octlen = 0;\n    let mut current_note_octlen",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        match c {\n            'o' => current_note += 1,\n            'o|'\
    \ => current_note += 2,\n            '.|' => current_note += 4,\n            '.|'\
    \ => current_note += 1,\n            _ => (),\n        }\n        if current_note\
    \ == 4 {\n            beats.push(current_beat);\n            current_beat = 0;\n\
    \            current_note = 0;\n            current_note_length = 0;\n       \
    \ }\n        current_beat += 1;\n        current_note_length += 1;\n    }\n  \
    \  beats.push(current_beat);\n    current_beat = 0;\n    current_note = 0;\n \
    \   current_note_length = 0;\n    beats", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_note = String::new();\n    let mut current_beat = 0;\n  \
    \  let mut current_beats_length = 0;\n\n    for c in music_string {\n        if\
    \ c == 'o' {\n            if current_note.is_empty() {\n                println!(\"\
    Invalid music string\");\n                return beats;\n            }\n     \
    \       beats.push(current_beats_length);\n            current_beats_length =\
    \ 0;\n            current_note = String::new();\n            current_beat = 0;\n\
    \        } else if c == '|' {\n            if current_note.is_empty() {\n    \
    \            println!(\"Invalid music string\");\n                return beats;\n\
    \            }\n            current_beats_length += 1;\n            current_note.push(c);\n\
    \        } else if c == '.' {\n            if current_note.is_empty() {\n    \
    \            println!(\"Invalid music string\");\n                return beats;\n\
    \            }\n            current_beats_length += 1;\n            current_note.push(c);\n\
    \        } else {\n            current_note.push(c);\n        }\n        current_beat\
    \ += 1;\n    }\n    beats.push(current_beats_length);\n    beats", "    let mut\
    \ beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let\
    \ mut current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n    let mut\
    \ current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n    let mut current_note_oct6\
    \ = 0;\n    let mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n\
    \    let mut current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n   \
    \ let mut current_note_oct11 = 0;\n    let mut current_note_oct12 = 0;\n    let\
    \ mut current_note_oct13 = 0;\n    let mut current_note_oct14 = 0;\n    let mut\
    \ current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n    let mut current_note_oct17\
    \ = 0;\n    let mut current_note_oct18 = 0;\n    let mut current_note_oct19 =\
    \ 0;\n    let mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n\
    \    let mut current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n  \
    \  let mut current_note_oct24 = 0;\n    let mut current_note_oct25 = 0;\n    let\
    \ mut current_note_oct26 = 0;\n    let mut current_note_oct27 = 0;\n    let mut\
    \ current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n    let mut current_note_oct30\
    \ = 0;\n    let mut current_note_oct31 = 0;\n    let mut current_note_oct32 =\
    \ 0;\n    let mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n\
    \    let mut current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n  \
    \  let mut current_note_oct37 = 0;\n    let mut current_note_oct38 = 0;\n    let\
    \ mut current_note_oct39 = 0;\n    let mut current_note_oct40 = 0;\n    let mut\
    \ current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n    let mut current_note_oct43\
    \ = 0;\n    let mut current_note_oct44 = 0;\n    let mut current_note_oct45 =\
    \ 0;\n    let mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n\
    \    let mut current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n  \
    \  let mut current_note_oct50 = 0;\n    let mut current_note_oct51 = 0;\n    let\
    \ mut current_note_oct52 = 0;\n    let mut current_note_oct53 = 0;\n    let mut\
    \ current_note_", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ c)| c != '|');\n    let mut last_note = notes.next();\n    for note in notes\
    \ {\n        if note.1 == last_note.1 {\n            beats.push(note.1 - last_note.1);\n\
    \        } else {\n            beats.push(0);\n        }\n        last_note =\
    \ note;\n    }\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n   \
    \ let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n    let\
    \ mut current_note = notes.iter().next().unwrap();\n    let mut current_beat =\
    \ 0;\n    let mut current_note_count = 0;\n    for note in notes {\n        if\
    \ note != current_note {\n            beats.push(current_beat);\n            current_note_count\
    \ = 1;\n            current_note = note;\n            current_beat = 0;\n    \
    \    } else {\n            current_note_count += 1;\n            current_beat\
    \ += 1;\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mut current_note_",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    for c in music_string {\n        if c.is_ascii() {\n            current_note\
    \ += c;\n        } else {\n            if current_note.len() > 0 {\n         \
    \       beats.push(current_beat);\n                current_beat = 0;\n       \
    \         current_note = String::new();\n            }\n            current_note\
    \ += c;\n        }\n        if c.is_ascii() || c.is_whitespace() {\n         \
    \   current_note_length += 1;\n            if current_note_length_index == current_note_length\
    \ {\n                current_note_length_index = 0;\n            }\n        }\
    \ else {\n            current_note_length_index += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    for c in music_string.chars() {\n\
    \        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n \
    \               beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == 'o|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == '.|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else {\n\
    \                current_note += c.to_ascii_lowercase();\n            }\n    \
    \    } else {\n            current_note += c.to_ascii_lowercase();\n        }\n\
    \    }\n    beats.push(current_beat);\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;\n    let mut current_note_length", "    let mut beats: Vec<isize> = Vec::new();\n\
    \    let mut current_beat: isize = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length: isize = 0;\n    let mut current_note_length_index:\
    \ usize = 0;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n\
    \            current_note += c.to_string();\n            current_note_length +=\
    \ 1;\n            if current_note_length_index == 0 {\n                current_note_length_index\
    \ = 1;\n            } else {\n                current_note_length_index += 1;\n\
    \            }\n        } else {\n            if current_note != \"\" {\n    \
    \            beats.push(current_beat);\n                current_beat = 0;\n  \
    \              current_note = String::new();\n                current_note_length\
    \ = 0;\n                current_note_length_index = 0;\n            }\n      \
    \  }\n    }\n    beats.push(current_beat);\n    current_beat = 0;\n    current_note\
    \ = String::new();\n    current_note_length = 0;\n    current_note_length_index\
    \ = 0;\n    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_note_length =\
    \ 0;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n       \
    \     if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n            } else if c.to_ascii_lowercase()\
    \ == 'o|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_length\
    \ = 1;\n            } else if c.to_ascii_lowercase() == '.|' {\n             \
    \   beats.push(current_beat);\n                current_beat = 0;\n           \
    \     current_note = String::new();\n                current_note_length = 2;\n\
    \            } else {\n                current_note.push(c);\n               \
    \ current_note_length += 1;\n            }\n        } else {\n            if current_note.is_empty()\
    \ {\n                println!(\"Invalid music string\");\n                return\
    \ beats;\n            }\n            let note = current_note.chars().collect::<String>().parse().unwrap();\n\
    \            beats.push(current_beat + note);\n            current_beat = 0;\n\
    \            current_note = String::new();\n            current_note_length =\
    \ 0;\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut\
    \ beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let ", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut notes: Vec<&'static str> = vec![];\n    let mut current_note\
    \ = String::new();\n    let mut current_beat = 0;\n    let mut current_length\
    \ = 0;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n     \
    \       if c.to_ascii_lowercase() == 'o' {\n                notes.push(current_note);\n\
    \                current_note = String::new();\n                current_beat =\
    \ 0;\n                current_length = 0;\n            } else if c.to_ascii_lowercase()\
    \ == 'o|' {\n                notes.push(current_note);\n                current_note\
    \ = String::new();\n                current_beat = 0;\n                current_length\
    \ = 1;\n            } else if c.to_ascii_lowercase() == '.|' {\n             \
    \   notes.push(current_note);\n                current_note = String::new();\n\
    \                current_beat = 1;\n                current_length = 1;\n    \
    \        } else {\n                current_note.push(c);\n            }\n    \
    \    } else {\n            if current_note != String::new() {\n              \
    \  beats.push(current_beat);\n                current_beat = 0;\n            \
    \    current_length = 0;\n            }\n            current_note.clear();\n \
    \       }\n    }\n    if current_note != String::new() {\n        beats.push(current_beat);\n\
    \    }\n    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length",
  "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|&(_,\
    \ c)| c != '|');\n    for note in notes {\n        let beat = note.1.to_digit(10).unwrap();\n\
    \        beats.push(beat);\n    }\n    beats", "    let mut beats = vec![];\n\
    \    let mut notes = music_string.chars().enumerate();\n    let mut current_note\
    \ = 0;\n    let mut current_beat = 0;\n    let mut current_note_len = 0;\n   \
    \ let mut current_beat_len = 0;\n    let mut current_note_char = 0;\n    let mut\
    \ current_beat_char = 0;\n    let mut current_note_char_count = 0;\n    let mut\
    \ current_beat_char_count = 0;\n    let mut current_note_char_is_octave = false;\n\
    \    let mut current_beat_char_is_octave = false;\n    let mut current_note_char_is_chord\
    \ = false;\n    let mut current_beat_char_is_chord = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let mut current_note_char_is_rest\
    \ = false;\n    let mut current_beat_char_is_rest = false;\n    let ", "    let\
    \ mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let mut\
    \ current_note = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = ", "    let mut beats =\
    \ vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == 'o|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == '.|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else {\n                current_note += c.to_ascii_lowercase();\n\
    \            }\n        } else {\n            if current_note.is_empty() {\n \
    \               println!(\"Invalid music string\");\n                return beats;\n\
    \            }\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_len\
    \ = 0;\n    for c in music_string {\n        if c == 'o' {\n            if current_note_len\
    \ > 0 {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_len\
    \ = 0;\n            }\n        } else if c == '|' {\n            current_note_len\
    \ += 1;\n        } else if c == '.' {\n            current_note_len = current_note_len\
    \ - 1;\n        } else {\n            current_note.push(c);\n        }\n    }\n\
    \    beats.push(current_beat);\n    beats", "    let mut beats = Vec::new();\n\
    \    let mut note = music_string.chars().nth(1).unwrap();\n    let mut last_beat\
    \ = 0;\n    let mut last_note = 0;\n    let mut last_note_count = 0;\n    let\
    \ mut last_note_duration = 0;\n    let mut last_note_duration_index = 0;\n   \
    \ let mut last_note_duration_index2 = 0;\n    let mut last_note_duration_index3\
    \ = 0;\n    let mut last_note_duration_index4 = 0;\n    let mut last_note_duration_index5\
    \ = 0;\n    let mut last_note_duration_index6 = 0;\n    let mut last_note_duration_index7\
    \ = 0;\n    let mut last_note_duration_index8 = 0;\n    let mut last_note_duration_index9\
    \ = 0;\n    let mut last_note_duration_index10 = 0;\n    let mut last_note_duration_index11\
    \ = 0;\n    let mut last_note_duration_index12 = 0;\n    let mut last_note_duration_index13\
    \ = 0;\n    let mut last_note_duration_index14 = 0;\n    let mut last_note_duration_index15\
    \ = 0;\n    let mut last_note_duration_index16 = 0;\n    let mut last_note_duration_index17\
    \ = 0;\n    let mut last_note_duration_index18 = 0;\n    let mut last_note_duration_index19\
    \ = 0;\n    let mut last_note_duration_index20 = 0;\n    let mut last_note_duration_index21\
    \ = 0;\n    let mut last_note_duration_index22 = 0;\n    let mut last_note_duration_index23\
    \ = 0;\n    let mut last_note_duration_index24 = 0;\n    let mut last_note_duration_index25\
    \ = 0;\n    let mut last_note_duration_index26 = 0;\n    let mut last_note_duration_index27\
    \ = 0;\n    let mut last_note_duration_index28 = 0;\n    let mut last_note_duration_index29\
    \ = 0;\n    let mut last_note_duration_index30 = 0;\n    let mut last_note_duration_index31\
    \ = 0;\n    let mut last_note_duration_index32 = 0;\n    let mut last_note_duration_index33\
    \ = 0;\n    let mut last_note_duration_index34 = 0;\n    let mut last_note_duration_index35\
    \ = 0;\n    let mut last_note_duration_index36 = 0;\n    let mut last_note_duration_index37\
    \ = 0;\n    let mut last_note_duration_index38 = 0;\n    let mut last_note_duration_index39\
    \ = 0;\n    let mut last_note_duration_index40 = 0;\n    let mut last_note_duration_index41\
    \ = 1;\n    let mut last_note_duration_index42 = 1;\n    let mut last_note_duration_index43\
    \ = 1;\n    let mut last_note_duration_index44 = 1;\n    let mut last_note_duration_index45\
    \ = 1;\n    let mut last_note_duration_index46 = 1;", "    let mut beats = vec![];\n\
    \    let mut notes = music_string.split_whitespace();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_length = 0;\n\
    \    for note in notes {\n        if note == \"o\" {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note++;\n            current_note_length\
    \ = 1;\n        } else if note == \"o|\" {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note++;\n            current_note_length\
    \ = 2;\n        } else if note == \".|\" {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note++;\n            current_note_length\
    \ = 1;\n        } else {\n            current_beat += 1;\n            current_note_length\
    \ += 1;\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let\
    \ mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_octave = 0;\n    let mut current_note_is_octave = false;\n\n\
    \    for c in music_string.chars() {\n        if c == 'o' {\n            if current_note_is_octave\
    \ {\n                beats.push(current_beat);\n                current_beat =\
    \ 0;\n                current_note_is_octave = false;\n            }\n       \
    \     current_note = String::new();\n            current_octave = 0;\n       \
    \     current_note_is_octave = true;\n        } else if c == '|' {\n         \
    \   current_note = current_note.push_str(\"|\");\n            current_note_is_octave\
    \ = false;\n        } else if c == '.' {\n            current_note = current_note.push_str(\"\
    . \");\n            current_note_is_octave = false;\n        } else {\n      \
    \      current_note = current_note.push_str(&c.to_string());\n        }\n    \
    \    current_beat += 1;\n    }\n    beats.push(current_beat);\n    beats", " \
    \   let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n \
    \   let mut current_note = 0;\n    let mut current_note_len = 0;\n    let mut\
    \ current_note_char = 0;\n    let mut current_note_char_len = 0;\n    let mut\
    \ current_note_char_index = 0;\n    let mut current_note_char_index2 = 0;\n  \
    \  let mut current_note_char_index3 = 0;\n    let mut current_note_char_index4\
    \ = 0;\n    let mut current_note_char_index5 = 0;\n    let mut current_note_char_index6\
    \ = 0;\n    let mut current_note_char_index7 = 0;\n    let mut current_note_char_index8\
    \ = 0;\n    let mut current_note_char_index9 = 0;\n    let mut current_note_char_index10\
    \ = 0;\n    let mut current_note_char_index11 = 0;\n    let mut current_note_char_index12\
    \ = 0;\n    let mut current_note_char_index13 = 0;\n    let mut current_note_char_index14\
    \ = 0;\n    let mut current_note_char_index15 = 0;\n    let mut current_note_char_index16\
    \ = 0;\n    let mut current_note_char_index17 = 0;\n    let mut current_note_char_index18\
    \ = 0;\n    let mut current_note_char_index19 = 0;\n    let mut current_note_char_index20\
    \ = 0;\n    let mut current_note_char_index21 = 0;\n    let mut current_note_char_index22\
    \ = 0;\n    let mut current_note_char_index23 = 0;\n    let mut current_note_char_index24\
    \ = 0;\n    let mut current_note_char_index25 = 0;\n    let mut current_note_char_index26\
    \ = 0;\n    let mut current_note_char_index27 = 0;\n    let mut current_note_char_index28\
    \ = 0;\n    let mut current_note_char_index29 = 0;\n    let mut current_note_char_index30\
    \ = 0;\n    let mut current_note_char_index31 = 0;\n    let mut current_note_char_index32\
    \ = 0;\n    let mut current_note_char_index33 = 0;\n    let mut current_note_char_index34\
    \ = 0;\n    let mut current_note_char_index35 = 0;\n    let mut current_note_char_index36\
    \ = 0;\n    let mut current_note_char_index37 = 0;\n    let mut current_note_char_index38\
    \ = 0;\n    let mut current_note_char_index39 = 0;\n    let mut current_note_char_index40\
    \ = 0;\n    let mut current_note_char_index41 = 0;\n    let mut current_note_char_index42\
    \ = 0;\n    let mut current_note_char_index43 = 0;\n    let mut current_note_char_index44\
    \ = 0;\n    let mut current_note_char_index45 = 0;\n    let mut current_note_char_index46\
    \ = 0;\n    let mu", "    let mut beats = vec![];\n    let mut current_beat =\
    \ 0;\n    let mut current_note = 0;\n    let mut current_note_index = 0;\n   \
    \ let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    let mut current_note_length_value = 0;\n    let mut current_note_length_value_index\
    \ = 0;\n    let mut current_note_length_value_value = 0;\n    let mut current_note_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_index = 0;\n    let mut current_note_length_value_value_value_value\
    \ = 0;\n    let mut current_note_", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_len = 0;\n    let mut last_note = String::new();\n   \
    \ let mut last_note_len = 0;\n    for c in music_string.chars() {\n        if\
    \ c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n           \
    \     beats.push(current_beat);\n                current_beat = 0;\n         \
    \       current_note = String::new();\n                current_note_len = 0;\n\
    \            } else if c.to_ascii_lowercase() == 'o|' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_len = 0;\n            } else if c.to_ascii_lowercase()\
    \ == '.' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_len\
    \ = 0;\n            } else {\n                current_note.push(c);\n        \
    \        current_note_len = c.len_utf8();\n            }\n        } else {\n \
    \           if current_note_len == 0 {\n                last_note.push(c);\n \
    \               last_note_len = c.len_utf8();\n            } else {\n        \
    \        if current_note_len == last_note_len {\n                    current_beat\
    \ += 1;\n                }\n                current_note.push(c);\n          \
    \      current_note_len = c.len_utf8();\n            }\n        }\n    }\n   \
    \ beats.push(current_beat);\n    beats", "    let mut beats = vec![];\n    let\
    \ mut current_beat = 0;\n    let mut current_note = String::new();\n    let mut\
    \ current_note_len = 0;\n    let mut current_note_oct = 0;\n    let mut current_note_oct2\
    \ = 0;\n    let mut current_note_oct3 = 0;\n    let mut current_note_oct4 = 0;\n\
    \    let mut current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n    let\
    \ mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n    let mut\
    \ current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n    let mut current_note_oct11\
    \ = 0;\n    let mut current_note_oct12 = 0;\n    let mut current_note_oct13 =\
    \ 0;\n    let mut current_note_oct14 = 0;\n    let mut current_note_oct15 = 0;\n\
    \    let mut current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n  \
    \  let mut current_note_oct18 = 0;\n    let mut current_note_oct19 = 0;\n    let\
    \ mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n    let mut\
    \ current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n    let mut current_note_oct24\
    \ = 0;\n    let mut current_note_oct25 = 0;\n    let mut current_note_oct26 =\
    \ 0;\n    let mut current_note_oct27 = 0;\n    let mut current_note_oct28 = 0;\n\
    \    let mut current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n  \
    \  let mut current_note_oct31 = 0;\n    let mut current_note_oct32 = 0;\n    let\
    \ mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n    let mut\
    \ current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n    let mut current_note_oct37\
    \ = 0;\n    let mut current_note_oct38 = 0;\n    let mut current_note_oct39 =\
    \ 0;\n    let mut current_note_oct40 = 0;\n    let mut current_note_oct41 = 0;\n\
    \    let mut current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n  \
    \  let mut current_note_oct44 = 0;\n    let mut current_note_oct45 = 0;\n    let\
    \ mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n    let mut\
    \ current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n    let mut current_note_oct50\
    \ = 0;\n    let mut current_note_oct51 = 0;\n    let mut current_note_oct52 =\
    \ 0;\n    let mut current_note_oct53 = 0;\n    let mut current_note_", "    let\
    \ mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat += 4;\n\
    \            } else if c.to_ascii_lowercase() == 'o|' {\n                beats.push(current_beat);\n\
    \                current_beat += 2;\n            } else if c.to_ascii_lowercase()\
    \ == '.|' {\n                beats.push(current_beat);\n                current_beat\
    \ += 1;\n            } else {\n                current_note += c.to_ascii_lowercase();\n\
    \                current_note_length += 1;\n            }\n        } else {\n\
    \            current_note += c.to_ascii_lowercase();\n            current_note_length\
    \ += 1;\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut last_note = String::from(\"\");\n    let mut last_beat: isize = 0;\n\
    \    let mut last_beats: isize = 0;\n    for note in notes {\n        if note\
    \ != \".\" {\n            if note == \"o\" {\n                beats.push(last_beat);\n\
    \                last_beat = 0;\n                last_beats += 1;\n          \
    \  } else if note == \"o|\" {\n                beats.push(last_beat);\n      \
    \          last_beat = 0;\n                last_beats += 2;\n            } else\
    \ if note == \".|\" {\n                beats.push(last_beat);\n              \
    \  last_beat = 0;\n                last_beats += 1;\n            } else {\n  \
    \              last_beats += 1;\n            }\n            last_note = note;\n\
    \        } else {\n            beats.push(last_beat);\n            last_beat =\
    \ 0;\n            last_beats += 1;\n        }\n    }\n    beats.push(last_beat);\n\
    \    last_beat = 0;\n    last_beats += 1;\n    beats", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut current_beat: isize = 0;\n    let mut current_note =\
    \ String::new();\n    for c in music_string.chars() {\n        if c == 'o' {\n\
    \            if current_beat == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n            }\n            current_beat +=\
    \ 1;\n            current_note = String::new();\n        } else if c == '|' {\n\
    \            if current_beat == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n            }\n            current_beat +=\
    \ 1;\n            current_note.push(c);\n        } else if c == '.' {\n      \
    \      if current_beat == 0 {\n                beats.push(current_beat);\n   \
    \             current_beat = 0;\n            }\n            current_beat += 1;\n\
    \            current_note.push(c);\n        } else {\n            current_note.push(c);\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    let mut current_note_oct\
    \ = 0;\n    let mut current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n\
    \    let mut current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n    let\
    \ mut current_note_oct6 = 0;\n    let mut current_note_oct7 = 0;\n    let mut\
    \ current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n    let mut current_note_oct10\
    \ = 0;\n    let mut current_note_oct11 = 0;\n    let mut current_note_oct12 =\
    \ 0;\n    let mut current_note_oct13 = 0;\n    let mut current_note_oct14 = 0;\n\
    \    let mut current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n  \
    \  let mut current_note_oct17 = 0;\n    let mut current_note_oct18 = 0;\n    let\
    \ mut current_note_oct19 = 0;\n    let mut current_note_oct20 = 0;\n    let mut\
    \ current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n    let mut current_note_oct23\
    \ = 0;\n    let mut current_note_oct24 = 0;\n    let mut current_note_oct25 =\
    \ 0;\n    let mut current_note_oct26 = 0;\n    let mut current_note_oct27 = 0;\n\
    \    let mut current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n  \
    \  let mut current_note_oct30 = 0;\n    let mut current_note_oct31 = 0;\n    let\
    \ mut current_note_oct32 = 0;\n    let mut current_note_oct33 = 0;\n    let mut\
    \ current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n    let mut current_note_oct36\
    \ = 0;\n    let mut current_note_oct37 = 0;\n    let mut current_note_oct38 =\
    \ 0;\n    let mut current_note_oct39 = 0;\n    let mut current_note_oct40 = 0;\n\
    \    let mut current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n  \
    \  let mut current_note_oct43 = 0;\n    let mut current_note_oct44 = 0;\n    let\
    \ mut current_note_oct45 = 0;\n    let mut current_note_oct46 = 0;\n    let mut\
    \ current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n    let mut current_note_oct49\
    \ = 0;\n    let mut current_note_oct50 = 0;\n    let mut current_note_oct51 =\
    \ 0;\n    let mut current_note_oct52 = 0;\n    let mut current_note_oct53", " \
    \   let mut beats: Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_note_len = 0;\n\
    \    let mut current_note_oct = 0;\n    let mut current_note_oct2 = 0;\n    let\
    \ mut current_note_oct3 = 0;\n    let mut current_note_oct4 = 0;\n    let mut\
    \ current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n    let mut current_note_oct7\
    \ = 0;\n    let mut current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n\
    \    let mut current_note_oct10 = 0;\n    let mut current_note_oct11 = 0;\n  \
    \  let mut current_note_oct12 = 0;\n    let mut current_note_oct13 = 0;\n    let\
    \ mut current_note_oct14 = 0;\n    let mut current_note_oct15 = 0;\n    let mut\
    \ current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n    let mut current_note_oct18\
    \ = 0;\n    let mut current_note_oct19 = 0;\n    let mut current_note_oct20 =\
    \ 0;\n    let mut current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n\
    \    let mut current_note_oct23 = 0;\n    let mut current_note_oct24 = 0;\n  \
    \  let mut current_note_oct25 = 0;\n    let mut current_note_oct26 = 0;\n    let\
    \ mut current_note_oct27 = 0;\n    let mut current_note_oct28 = 0;\n    let mut\
    \ current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n    let mut current_note_oct31\
    \ = 0;\n    let mut current_note_oct32 = 0;\n    let mut current_note_oct33 =\
    \ 0;\n    let mut current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n\
    \    let mut current_note_oct36 = 0;\n    let mut current_note_oct37 = 0;\n  \
    \  let mut current_note_oct38 = 0;\n    let mut current_note_oct39 = 0;\n    let\
    \ mut current_note_oct40 = 0;\n    let mut current_note_oct41 = 0;\n    let mut\
    \ current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n    let mut current_note_oct44\
    \ = 0;\n    let mut current_note_oct45 = 0;\n    let mut current_note_oct46 =\
    \ 0;\n    let mut current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n\
    \    let mut current_note_oct49 = 0;\n    let mut current_note_oct50 = 0;\n  \
    \  let mut current_note_oct51 = 0;\n    let mut current_note_oct52 = 0;\n    let\
    \ mut current_note_", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate();\n\
    \    let mut last_note = notes.next();\n    while let Some(note) = last_note {\n\
    \        let mut beat = 0;\n        let mut last_beat = 0;\n        while let\
    \ Some(note) = notes.next() {\n            let note = note.0;\n            if\
    \ note == 'o' {\n                beat += 1;\n                last_beat = beat;\n\
    \            } else if note == 'o|' {\n                beat += 2;\n          \
    \      last_beat = beat;\n            } else if note == '.|' {\n             \
    \   beat += 1;\n                last_beat = beat;\n            } else {\n    \
    \            break;\n            }\n        }\n        beats.push(beat);\n   \
    \     last_note = note;\n    }\n    beats", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length", "    let mut beats = vec![];\n    let\
    \ mut current_beat = 0;\n    let mut current_note = String::new();\n    let mut\
    \ current_note_length = 0;\n    let mut current_note_length_index = 0;\n    let\
    \ mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mu", "    let mut\
    \ beats = vec![];\n    let mut notes = music_string.chars().enumerate();\n   \
    \ let mut current_note = 0;\n    let mut current_beat = 0;\n    let mut current_note_length\
    \ = 0;\n    for note in notes {\n        let note_length = note.1.len_utf8();\n\
    \        if note_length == 0 {\n            notes.remove(note);\n            continue;\n\
    \        }\n        if note.1.is_ascii() {\n            let note_char = note.1.to_ascii_lowercase();\n\
    \            if note_char == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat += 4;\n            } else if note_char == 'o|' {\n\
    \                beats.push(current_beat);\n                current_beat += 2;\n\
    \            } else if note_char == '.|' {\n                beats.push(current_beat);\n\
    \                current_beat += 1;\n            } else {\n                panic!(\"\
    Invalid note character in music string: {}\", note_char);\n            }\n   \
    \     } else {\n            panic!(\"Invalid note character in music string: {}\"\
    , note.1);\n        }\n        current_note_length += note_length;\n        if\
    \ current_note_length >= 4 {\n            current_note += 1;\n            current_beat\
    \ += 1;\n            current_note_length -= 4;\n        }\n    }\n    beats.push(current_beat);\n\
    \    current_beat += 1;\n    beats", "    let mut beats = Vec::new();\n    let\
    \ mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;\n    let mut current_note_", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_len\
    \ = 0;\n    for c in music_string.chars() {\n        if c == 'o' {\n         \
    \   current_note_len = 4;\n            current_note += 1;\n            current_beat\
    \ += 1;\n        } else if c == '|' {\n            current_note_len = 2;\n   \
    \         current_note += 1;\n            current_beat += 1;\n        } else if\
    \ c == '.' {\n            current_note_len = 1;\n            current_note += 1;\n\
    \            current_beat += 1;\n        } else {\n            current_note_len\
    \ = 0;\n            current_note += 1;\n            current_beat += 1;\n     \
    \   }\n        beats.push(current_beat);\n    }\n    beats", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_note_count = 0;\n    let mut current_note_length =\
    \ 0;\n    for note in notes {\n        if note == current_note {\n           \
    \ current_note_count += 1;\n            current_note_length += 1;\n        } else\
    \ {\n            if current_note_count > 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note_count = 0;\n\
    \            }\n            current_note = note;\n            current_note_length\
    \ = 1;\n        }\n    }\n    if current_note_count > 0 {\n        beats.push(current_beat);\n\
    \    }\n    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut notes:\
    \ Vec<&str> = music_string.split_whitespace().collect();\n    let mut current_note\
    \ = notes.first().unwrap();\n    let mut current_beat = 0;\n    let mut current_note_count\
    \ = 0;\n    let mut last_note_count = 0;\n    while current_note != \"\" {\n \
    \       if current_note == \"o\" {\n            beats.push(current_beat);\n  \
    \          current_beat = 0;\n            current_note_count += 1;\n         \
    \   last_note_count += 1;\n        } else if current_note == \"o|\" {\n      \
    \      beats.push(current_beat);\n            current_beat = 0;\n            current_note_count\
    \ += 1;\n            last_note_count += 2;\n        } else if current_note ==\
    \ \".|\" {\n            beats.push(current_beat);\n            current_beat =\
    \ 0;\n            current_note_count += 1;\n            last_note_count += 1;\n\
    \        } else {\n            current_beat += 1;\n        }\n        current_note\
    \ = notes.remove(0);\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|&(_,\
    \ c)| c == 'o' || c == '|' || c == '.').collect::<Vec<_>>();\n    for note in\
    \ notes {\n        if note.1 == notes.len() - 1 {\n            beats.push(4);\n\
    \        } else {\n            beats.push(note.1 - notes.len() + 1);\n       \
    \ }\n    }\n    beats", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else {\n                current_note += c.to_string();\n      \
    \      }\n        } else {\n            if current_note.is_empty() {\n       \
    \         println!(\"Invalid music string\");\n                return beats;\n\
    \            }\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = 0;\n    let mut current_note_value = 0;\n    let mut\
    \ current_note_length = 0;\n    let mut current_note_length_value = 0;\n    let\
    \ mut current_note_length_value_value = 0;\n    let mut current_note_length_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_note_length =\
    \ 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut ", "    let\
    \ mut beats = vec![];\n    let mut notes = music_string.chars().collect::<Vec<_>>();\n\
    \    let mut current_note = notes.len() - 1;\n    let mut current_beat = 0;\n\
    \    let mut current_note_length = notes[current_note].len_utf8();\n    let mut\
    \ last_note = current_note;\n    while current_note > 0 {\n        let mut current_note_length\
    \ = notes[current_note].len_utf8();\n        if current_note_length == 0 {\n \
    \           current_note -= 1;\n            continue;\n        }\n        let\
    \ mut current_beat = 0;\n        while current_beat < current_note_length {\n\
    \            let mut current_beat_length = notes[current_note].as_bytes()[current_beat].len_utf8();\n\
    \            if current_beat_length == 0 {\n                current_beat += 1;\n\
    \                continue;\n            }\n            beats.push(current_beat\
    \ as isize);\n            current_beat += 1;\n        }\n        last_note = current_note;\n\
    \        current_note -= 1;\n    }\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let mut\
    \ current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n    let mut current_note_oct4\
    \ = 0;\n    let mut current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n\
    \    let mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n    let\
    \ mut current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n    let mut\
    \ current_note_oct11 = 0;\n    let mut current_note_oct12 = 0;\n    let mut current_note_oct13\
    \ = 0;\n    let mut current_note_oct14 = 0;\n    let mut current_note_oct15 =\
    \ 0;\n    let mut current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n\
    \    let mut current_note_oct18 = 0;\n    let mut current_note_oct19 = 0;\n  \
    \  let mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n    let\
    \ mut current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n    let mut\
    \ current_note_oct24 = 0;\n    let mut current_note_oct25 = 0;\n    let mut current_note_oct26\
    \ = 0;\n    let mut current_note_oct27 = 0;\n    let mut current_note_oct28 =\
    \ 0;\n    let mut current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n\
    \    let mut current_note_oct31 = 0;\n    let mut current_note_oct32 = 0;\n  \
    \  let mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n    let\
    \ mut current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n    let mut\
    \ current_note_oct37 = 0;\n    let mut current_note_oct38 = 0;\n    let mut current_note_oct39\
    \ = 0;\n    let mut current_note_oct40 = 0;\n    let mut current_note_oct41 =\
    \ 0;\n    let mut current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n\
    \    let mut current_note_oct44 = 0;\n    let mut current_note_oct45 = 0;\n  \
    \  let mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n    let\
    \ mut current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n    let mut\
    \ current_note_oct50 = 0;\n    let mut current_note_oct51 = 0;\n    let mut current_note_oct52\
    \ = 0;\n    let mut current_note_oct53 = 0;\n    let mut current_note_", "   \
    \ let mut beats: Vec<isize> = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.clone();\n    let mut current_beat = 0;\n  \
    \  let mut current_note_len = 0;\n    let mut last_note_len = 0;\n    let mut\
    \ last_note = notes.clone();\n    while current_note.len() > 0 {\n        let\
    \ note = current_note.clone();\n        let note_len = note.len();\n        if\
    \ note_len == 0 {\n            notes.push(current_note.clone());\n           \
    \ current_note = notes.clone();\n            current_beat = 0;\n            current_note_len\
    \ = note_len;\n            last_note_len = 0;\n            last_note = notes.clone();\n\
    \            continue;\n        }\n        if note_len == last_note_len {\n  \
    \          notes.push(current_note.clone());\n            current_note = notes.clone();\n\
    \            current_beat = 0;\n            current_note_len = note_len;\n   \
    \         last_note_len = 0;\n            last_note = notes.clone();\n       \
    \     continue;\n        }\n        if note_len > last_note_len {\n          \
    \  notes.push(current_note.clone());\n            current_note = notes.clone();\n\
    \            current_beat = 0;\n            current_note_len = note_len;\n   \
    \         last_note = notes.clone();\n            continue;\n        }\n     \
    \   let mut beats_count = current_beat;\n        if note_len > 4 {\n         \
    \   beats_count += 1;\n        }\n        if note_len > 2 {\n            beats_count\
    \ += 1;\n        }\n        if note_len > 1 {\n            beats_count += 1;\n\
    \        }\n        beats.push(beats_count);\n        current_note = notes.clone();\n\
    \        current_beat = 0;\n        current_note_len = note_len;\n        last_note\
    \ = notes.clone();\n    }\n    beats", "    let mut beats = vec![];\n    let mut\
    \ notes = music_string.chars().enumerate().filter(|&(_, note)| note != 'o');\n\
    \    for note in notes {\n        let mut beat = 0;\n        let mut note = note.unwrap();\n\
    \        note.chars().for_each(|c| {\n            if c == '|' {\n            \
    \    beat += 1;\n            }\n            beat += 1;\n        });\n        beats.push(beat);\n\
    \    }\n    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_note\
    \ = String::from(\"\");\n    let mut current_beat = 0;\n    let mut current_length\
    \ = 0;\n    for c in music_string.chars() {\n        match c {\n            'o'\
    \ => current_note = String::from(\"\"),\n            'o|' => current_note = String::from(\"\
    \"),\n            '.|' => current_note = String::from(\"\"),\n            'o'\
    \ => beats.push(current_beat),\n            'o|' => beats.push(current_beat),\n\
    \            '.|' => beats.push(current_beat),\n            '.' => current_beat\
    \ = 1,\n            _ => current_note.push(c),\n        }\n        current_beat\
    \ += 1;\n        current_length += 1;\n    }\n    beats", "    let mut beats =\
    \ vec![];\n    let mut notes = music_string.chars().enumerate();\n    let mut\
    \ current_note = 0;\n    let mut current_beat = 0;\n    let mut current_note_index\
    \ = 0;\n    let mut last_note_index = 0;\n    let mut last_beat_index = 0;\n \
    \   let mut last_note = String::new();\n    let mut last_beat = String::new();\n\
    \    let mut last_note_index = 0;\n    let mut last_beat_index = 0;\n    let mut\
    \ last_note = String::new();\n    let mut last_beat = String::new();\n    let\
    \ mut last_note_index = 0;\n    let mut last_beat_index = 0;\n    let mut last_note\
    \ = String::new();\n    let mut last_beat = String::new();\n    let mut last_note_index\
    \ = 0;\n    let mut last_beat_index = 0;\n    let mut last_note = String::new();\n\
    \    let mut last_beat = String::new();\n    let mut last_note_index = 0;\n  \
    \  let mut last_beat_index = 0;\n    let mut last_note = String::new();\n    let\
    \ mut last_beat = String::new();\n    let mut last_note_index = 0;\n    let mut\
    \ last_beat_index = 0;\n    let mut last_note = String::new();\n    let mut last_beat\
    \ = String::new();\n    let mut last_note_index = 0;\n    let mut last_beat_index\
    \ = 0;\n    let mut last_note = String::new();\n    let mut last_beat = String::new();\n\
    \    let mut last_note_index = 0;\n    let mut last_beat_index = 0;\n    let mut\
    \ last_note = String::new();\n    let mut last_beat = String::new();\n    let\
    \ mut last_note_index = 0;\n    let mut last_beat_index = 0;\n    let mut last_note\
    \ = String::new();\n    let mut last_beat = String::new();\n    let mut last_note_index\
    \ = 0;\n    let mut last_beat_index = 0;\n    let mut last_note = String::new();\n\
    \    let mut last_beat = String::new();\n    let mut last_note_index = 0;\n  \
    \  let mut last_beat_index = 0;\n    let mut last_note = String::new();\n    let\
    \ mut last_beat = String::new();\n    let mut last_note_index = 0;\n    let mut\
    \ last_beat_index = 0;\n    let mut last_note = String::new();\n    let mut last_beat\
    \ = String::new();\n    let mut last_note_index = 0;\n    let mut last_", "  \
    \  let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n  \
    \  let mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut\
    \ current_note_length_index = 0;\n    let mut current_note_length_index2 = 0;\n\
    \    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ c)| c != '|').collect::<Vec<_>>();\n    let mut last_note = notes.len() - 1;\n\
    \    let mut last_beat = 0;\n    let mut last_beats_length = 0;\n    let mut last_beats_length_to_beat\
    \ = 0;\n    let mut last_beats_length_to_note = 0;\n    let mut last_note_to_beat\
    \ = 0;\n    let mut last_note_to_note = 0;\n    let mut last_note_to_length =\
    \ 0;\n    let mut last_note_to_length_to_beat = 0;\n    let mut last_note_to_length_to_note\
    \ = 0;\n    let mut last_note_to_length_to_length = 0;\n    let mut last_note_to_length_to_length_to_beat\
    \ = 0;\n    let mut last_note_to_length_to_length_to_note = 0;\n    let mut last_note_to_length_to_length_to_length\
    \ = 0;\n    let mut last_note_to_length_to_length_to_length_to_beat = 0;\n   \
    \ let mut last_note_to_length_to_length_to_length_to_note = 0;\n    let mut last_note_to_length_to_length_to_length_to_length\
    \ = 0;\n    let mut last_note_to_length_to_length_to_length_to_length_to_beat\
    \ = 0;\n    let mut last_note_to_length_to_length_to_length_to_length_to_note\
    \ = 0;\n    let mut last_note_to_length_to_length_to_length_to_length_to_length\
    \ = 0;\n    let mut last_note_to_length_to_length_to_length_to_length_to_length_to_beat\
    \ = 0;\n    let mut last_note_to_length_to_length_to_length_to_length_to_length_to_note\
    \ = 0;\n    let mut last_note_to_length_to_length_to_length_to_length_to_length_to_length\
    \ = 0;\n    let mut last_note_to_length_to_length_to_length_to_length_to_length_to_length_to_beat\
    \ = 0;\n    let mut last_note_to_length_to_length_to_length_to_length_to_length_to_length_to_note\
    \ = 0;\n    let mut last_note_to_length_to_length_to_length_to_length_to_length_to_length_to_length\
    \ = 0;\n    let mut last_note_to_length_to_length_to_length_to_length_to_length_to_length_to_length_to_beat\
    \ = 0;\n    let mut last_note_to_length_to_length_to_length_to_length_to_length_to_length_to_length_to_note\
    \ = 0;\n    let mut last_note_to_length_to_length_to_length_to_length_to_length_to_length_to_length_to_length_to_beat\
    \ = 0;\n    let mut last_note_to_length_to_length_to_length_to_length_to_length_to_length_to_length_to_length_to_note\
    \ = 0;\n    let mut last_note_to_length_to_length_to_length_to_", "    let mut\
    \ beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ c)| c != '|');\n    for note in notes {\n        let mut beat = 0;\n       \
    \ let mut note = note.1;\n        while note != 'o' {\n            beat += 1;\n\
    \            note += 1;\n        }\n        beats.push(beat);\n    }\n    beats",
  "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|&(_,\
    \ note)| note != 'o');\n    let mut last_note = notes.next().unwrap().1;\n   \
    \ for note in notes {\n        if note != last_note {\n            beats.push(4);\n\
    \        }\n        beats.push(note as isize);\n        last_note = note;\n  \
    \  }\n    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    for c in music_string\
    \ {\n        if c.is_ascii() {\n            current_note += c;\n            current_note_length\
    \ += 1;\n            if current_note_length == 4 {\n                beats.push(current_beat);\n\
    \                current_beat += 1;\n                current_note_length = 0;\n\
    \                current_note_length_index += 1;\n            }\n        } else\
    \ {\n            if current_note_length_index == 0 {\n                current_note\
    \ += c;\n                current_note_length += 1;\n            } else {\n   \
    \             current_note += c;\n                current_note_length += 1;\n\
    \            }\n        }\n    }\n    beats.push(current_beat);\n    current_beat\
    \ += 1;\n    current_note_length = 0;\n    current_note_length_index = 0;\n  \
    \  beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_note_len = 0;\n    let\
    \ mut current_note_oct = 0;\n    let mut current_note_oct2 = 0;\n    for c in\
    \ music_string.chars() {\n        if c == 'o' {\n            if current_note_len\
    \ == 0 {\n                println!(\"Invalid music string\");\n              \
    \  break;\n            }\n            current_note += c.to_string();\n       \
    \     current_note_oct = c.to_digit(10).unwrap();\n            current_note_oct2\
    \ = current_note_oct / 2;\n            current_note_len -= 1;\n            current_beat\
    \ += 1;\n            beats.push(current_beat);\n            current_beat = 0;\n\
    \            current_note = String::new();\n            current_note_len = 0;\n\
    \            current_note_oct = 0;\n            current_note_oct2 = 0;\n     \
    \   } else if c == '|' {\n            if current_note_len == 0 {\n           \
    \     println!(\"Invalid music string\");\n                break;\n          \
    \  }\n            current_note += c.to_string();\n            current_note_oct\
    \ = c.to_digit(10).unwrap();\n            current_note_len += 1;\n           \
    \ current_beat += 1;\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n            current_note_len\
    \ = 0;\n            current_note_oct = 0;\n            current_note_oct2 = 0;\n\
    \        } else if c == '.' {\n            if current_note_len == 0 {\n      \
    \          println!(\"Invalid music string\");\n                break;\n     \
    \       }\n            current_note += c.to_string();\n            current_note_oct\
    \ = c.to_digit(10).unwrap();\n            current_note_len += 1;\n           \
    \ current_beat += 1;\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n            current_note_len\
    \ = 0;\n            current_note_oct = 0;\n            current_note_oct2 = 0;\n\
    \        } else {\n            current_note += c.to_string();\n            current_note_oct\
    \ += c.to_digit(10).unwrap();\n            current_note_len += 1;\n          \
    \  current_beat += 1;\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n            current_note_len\
    \ = 0;\n            current_note_oct = 0;\n            current_note_oct2 = 0;\n\
    \        }\n    }\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n\
    \    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n \
    \   let mut current_note = notes.first().unwrap();\n    let mut current_beat =\
    \ 0;\n    let mut current_beats: isize = 0;\n    let mut current_notes: isize\
    \ = 0;\n    for note in notes {\n        if note == current_note {\n         \
    \   current_beats += 1;\n            current_beats += current_beats;\n       \
    \     current_beats += current_beats;\n            current_beats += current_beats;\n\
    \            current_notes += 1;\n        } else {\n            beats.push(current_beats);\n\
    \            current_beats = 0;\n            current_notes = 0;\n            current_note\
    \ = note;\n            current_beat = 1;\n        }\n    }\n    beats.push(current_beats);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat:\
    \ isize = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n     \
    \       if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n            } else if c.to_ascii_lowercase()\
    \ == 'o|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_length\
    \ = 1;\n            } else if c.to_ascii_lowercase() == '.|' {\n             \
    \   beats.push(current_beat);\n                current_beat = 0;\n           \
    \     current_note = String::new();\n                current_note_length = 2;\n\
    \            } else {\n                let mut note = String::new();\n       \
    \         note.push_str(&c.to_ascii_lowercase());\n                note.push_str(&c.to_ascii_lowercase());\n\
    \                note.push_str(&c.to_ascii_lowercase());\n                note.push_str(&c.to_ascii_lowercase());\n\
    \                note.push_str(&c.to_ascii_lowercase());\n                note.push_str(&c.to_ascii_lowercase());\n\
    \                note.push_str(&c.to_ascii_lowercase());\n                note.push_str(&c.to_ascii_lowercase());\n\
    \                note.push_str(&c.to_ascii_lowercase());\n                note.push_str(&c.to_ascii_lowercase());\n\
    \                note.push_str(&c.to_ascii_lowercase());\n                note.push_str(&c.to_ascii_lowercase());\n\
    \                note.push_str(&c.to_ascii_lowercase());\n                note.push_str(&c.to_ascii_lowercase());\n\
    \                note.push_str(&c.to_ascii_lowercase());\n                note.push_str(&c.to_ascii_lowercase());\n\
    \                note.push_str(&c.to_ascii_lowercase());\n                note.push_str(&c.to_ascii_lowercase());\n\
    \                note.push_str(&c.to_ascii_lowercase());\n                note.push_str(&c.to_ascii_lowercase());\n\
    \                note.push_str(&c.to_ascii_lowercase());\n                note.push_str(&c.to_ascii_lowercase());\n\
    \                note.push_str(&c.to_ascii_lowercase());\n                note.push_str(&c.to_ascii_lowercase());\n\
    \                note.push_str(&c.to_ascii_lowercase());\n                note.push_str(&c.to_ascii_lowercase());\n\
    \                note.push_str(&c.to_ascii_lowercase());\n                note.push_str(&c.to_ascii_lowercase",
  "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n  \
    \  let mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut\
    \ current_note_length_index = 0;\n    let mut current_note_length_value = 0;\n\
    \    let mut current_note_length_value_length = 0;\n    let mut current_note_length_value_length_index\
    \ = 0;\n    let mut current_note_length_value_length_value = 0;\n    let mut current_note_length_value_length_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value = 0;\n    let\
    \ mut current_note_length_value_length_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value = 0;\n    let mut current_note_length_value_length_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value", "   \
    \ let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index45\
    \ = 1;\n    let mut current_note_length_index46 = 1;\n    let mut current_note_length_index47\
    \ = 1;\n    let mut current_note_length_index48 = 1;\n", "    let mut beats: Vec<isize>\
    \ = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note = 0;\n\
    \    let mut current_note_length = 0;\n    for c in music_string.chars() {\n \
    \       if c == 'o' {\n            if current_note == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = 1;\n      \
    \          current_note_length = 1;\n            } else {\n                current_note\
    \ += 1;\n                current_note_length += 1;\n            }\n        } else\
    \ if c == '|' {\n            if current_note == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = 2;\n      \
    \          current_note_length = 1;\n            } else {\n                current_note\
    \ += 2;\n                current_note_length += 2;\n            }\n        } else\
    \ if c == '.' {\n            if current_note == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = 3;\n      \
    \          current_note_length = 1;\n            } else {\n                current_note\
    \ += 3;\n                current_note_length += 3;\n            }\n        } else\
    \ {\n            if current_note == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = 0;\n      \
    \          current_note_length = 1;\n            } else {\n                current_note\
    \ += 1;\n                current_note_length += 1;\n            }\n        }\n\
    \        current_beat += 1;\n    }\n    beats.push(current_beat);\n    beats",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_note_length = 0;\n  \
    \  let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 1;\n    let mut current_note_length_index42\
    \ = 1;\n    let mut current_note_length_index43 = 1;\n    let mut current_note_length_index44\
    \ = 1;\n    let mut current_note_length_index45 = 1;\n    let mut current_note_length_index46\
    \ = 1;\n    let mut current_note_length_index47 = 1;\n    let mut current_", " \
    \   let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_whitespace() {\n            continue;\n        }\n      \
    \  if c.is_ascii_digit() {\n            current_note.push(c);\n            current_note_len\
    \ = current_note.len();\n        } else {\n            if current_note_len ==\
    \ 0 {\n                continue;\n            }\n            if c.is_ascii_letter()\
    \ {\n                let note = current_note.to_string();\n                beats.push(current_beat\
    \ + note.chars().filter(|c| c.is_ascii_digit()).count());\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_len\
    \ = current_note.len();\n            } else {\n                current_note.push(c);\n\
    \                current_note_len = current_note.len();\n            }\n     \
    \   }\n    }\n    beats", "    let mut beats = Vec::new();\n    let mut notes\
    \ = music_string.chars().collect::<Vec<_>>();\n    let mut current_note = notes.len()\
    \ - 1;\n    let mut last_note = -1;\n    let mut last_beat = -1;\n    while current_note\
    \ > -1 {\n        let note = notes[current_note];\n        if note == 'o' {\n\
    \            if last_note == -1 {\n                last_note = current_note;\n\
    \                last_beat = beats.len();\n            }\n            beats.push(beats.len());\n\
    \            current_note = -1;\n        } else {\n            if note == '|'\
    \ {\n                if last_note == -1 {\n                    last_note = current_note;\n\
    \                    last_beat = beats.len();\n                }\n           \
    \     beats.push(beats.len());\n                current_note = -1;\n         \
    \   } else {\n                if note == '.' {\n                    if last_note\
    \ == -1 {\n                        last_note = current_note;\n               \
    \         last_beat = beats.len();\n                    }\n                  \
    \  beats.push(beats.len());\n                    current_note = -1;\n        \
    \        } else {\n                    current_note = -1;\n                }\n\
    \            }\n        }\n    }\n    beats", "    let mut beats = vec![];\n \
    \   let mut current_beat = 0;\n    let mut current_note = String::new();\n   \
    \ let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let mut\
    \ current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n    let mut current_note_oct4\
    \ = 0;\n    let mut current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n\
    \    let mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n    let\
    \ mut current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n    let mut\
    \ current_note_oct11 = 0;\n    let mut current_note_oct12 = 0;\n    let mut current_note_oct13\
    \ = 0;\n    let mut current_note_oct14 = 0;\n    let mut current_note_oct15 =\
    \ 0;\n    let mut current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n\
    \    let mut current_note_oct18 = 0;\n    let mut current_note_oct19 = 0;\n  \
    \  let mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n    let\
    \ mut current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n    let mut\
    \ current_note_oct24 = 0;\n    let mut current_note_oct25 = 0;\n    let mut current_note_oct26\
    \ = 0;\n    let mut current_note_oct27 = 0;\n    let mut current_note_oct28 =\
    \ 0;\n    let mut current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n\
    \    let mut current_note_oct31 = 0;\n    let mut current_note_oct32 = 0;\n  \
    \  let mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n    let\
    \ mut current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n    let mut\
    \ current_note_oct37 = 0;\n    let mut current_note_oct38 = 0;\n    let mut current_note_oct39\
    \ = 0;\n    let mut current_note_oct40 = 0;\n    let mut current_note_oct41 =\
    \ 0;\n    let mut current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n\
    \    let mut current_note_oct44 = 0;\n    let mut current_note_oct45 = 0;\n  \
    \  let mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n    let\
    \ mut current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n    let mut\
    \ current_note_oct50 = 0;\n    let mut current_note_oct51 = 0;\n    let mut current_note_oct52\
    \ = 0;\n    let mut current_note_oct53 = 0;\n    let mut current_note_", "   \
    \ let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str> = vec![];\n\
    \    let mut current_note = String::new();\n    let mut current_beat = 0;\n  \
    \  let mut current_note_index = 0;\n    let mut current_note_length = 0;\n   \
    \ let mut current_note_octave = 0;\n    let mut current_note_octave_change = 0;\n\
    \    let mut current_note_octave_change_direction = 0;\n    let mut current_note_octave_change_direction_change\
    \ = 0;\n    let mut current_note_octave_change_direction_change_direction = 0;\n\
    \    let mut current_note_octave_change_direction_change_direction_change = 0;\n\
    \    let mut current_note_octave_change_direction_change_direction_change_direction\
    \ = 0;\n    let mut current_note_octave_change_direction_change_direction_change_direction_change\
    \ = 0;\n    let mut current_note_octave_change_direction_change_direction_change_direction_change_direction\
    \ = 0;\n    let mut current_note_octave_change_direction_change_direction_change_direction_change_direction_change\
    \ = 0;\n    let mut current_note_octave_change_direction_change_direction_change_direction_change_direction_change_direction\
    \ = 0;\n    let mut current_note_octave_change_direction_change_direction_change_direction_change_direction_change_direction\
    \ = 0;\n    let mut current_note_octave_change_direction_change_direction_change_direction_change_direction_change_direction\
    \ = 0;\n    let mut current_note_octave_change_direction_change_direction_change_direction_change_direction_change_direction_change\
    \ = 0;\n    let mut current_note_octave_change_direction_change_direction_change_direction_change_direction_change_direction_change_direction\
    \ = 0;\n    let mut current_note_octave_change_direction_change_direction_change_direction_change_direction_change_direction_change_direction\
    \ = 0;\n    let mut current_note_octave_change_direction_change_direction_change_direction_change_direction_change_direction_change_direction\
    \ = 0;\n    let mut current_note_octave_change_direction_change_direction_change_direction_change_direction_change_direction_change_direction_change\
    \ = 0;\n    let mut current_note_octave_change_direction_change_direction_change_direction_change_direction_change_direction_change_direction_change_direction\
    \ = 0;\n    let mut current_note_octave_change_direction_change_direction_change_direction_change_direction_change_direction_change_direction_change_direction\
    \ = 0;\n    let mut current_note_octave_change_direction_change_direction_change_direction_change_direction_",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_note_len = 0;\n    let\
    \ mut current_note_oct = 0;\n    let mut current_note_oct2 = 0;\n    for c in\
    \ music_string.chars() {\n        if c == 'o' {\n            if current_note_len\
    \ == 0 {\n                println!(\"Invalid music string\");\n              \
    \  return beats;\n            }\n            beats.push(current_beat);\n     \
    \       current_beat = 0;\n            current_note_len = 0;\n            current_note\
    \ = String::new();\n            current_note_oct = 0;\n            current_note_oct2\
    \ = 0;\n            current_note.push(c);\n        } else if c == '|' {\n    \
    \        if current_note_len == 0 {\n                println!(\"Invalid music\
    \ string\");\n                return beats;\n            }\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note_len = 0;\n          \
    \  current_note = String::new();\n            current_note_oct = 0;\n        \
    \    current_note_oct2 = 0;\n            current_note.push(c);\n        } else\
    \ if c == '.' {\n            if current_note_len == 0 {\n                println!(\"\
    Invalid music string\");\n                return beats;\n            }\n     \
    \       beats.push(current_beat);\n            current_beat = 0;\n           \
    \ current_note_len = 0;\n            current_note = String::new();\n         \
    \   current_note_oct = 0;\n            current_note_oct2 = 0;\n            current_note.push(c);\n\
    \        } else if c == 'o' {\n            current_note_oct += 1;\n        } else\
    \ if c == '|' {\n            current_note_oct2 += 1;\n        } else if c == '.'\
    \ {\n            current_note_oct += 1;\n            current_note_oct2 += 1;\n\
    \        }\n        current_note_len = c.len_utf8();\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_len = 0;\n \
    \   for c in music_string.chars() {\n        if c == 'o' {\n            if current_note_len\
    \ > 0 {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_len\
    \ = 0;\n            }\n        } else if c == '|' {\n            if current_note_len\
    \ > 0 {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_len\
    \ = 0;\n            }\n        } else if c.is_whitespace() {\n            continue;\n\
    \        } else {\n            current_note.push(c);\n            current_note_len\
    \ = current_note.len();\n        }\n    }\n    if current_note_len > 0 {\n   \
    \     beats.push(current_beat);\n    }\n    beats", "    let mut beats: Vec<isize>\
    \ = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    for\
    \ c in music_string.chars() {\n        if c.is_ascii() {\n            if c.is_ascii(10)\
    \ {\n                current_note = c.to_string();\n                current_note_len\
    \ = current_note.len();\n                current_note_oct = current_note.chars().next().unwrap();\n\
    \            } else {\n                let note = c.to_string();\n           \
    \     let note_len = note.len();\n                let note_oct = note.chars().next().unwrap();\n\
    \                if note_oct != current_note_oct {\n                    current_beat\
    \ = current_beat + 1;\n                    current_note = note.to_string();\n\
    \                    current_note_len = note_len;\n                    current_note_oct\
    \ = note_oct;\n                }\n            }\n        } else {\n          \
    \  if current_note_len == 0 {\n                beats.push(current_beat);\n   \
    \             current_beat = 0;\n                current_note = c.to_string();\n\
    \                current_note_len = current_note.len();\n                current_note_oct\
    \ = current_note.chars().next().unwrap();\n            } else {\n            \
    \    let note = c.to_string();\n                let note_len = note.len();\n \
    \               let note_oct = note.chars().next().unwrap();\n               \
    \ if note_oct != current_note_oct {\n                    current_beat = current_beat\
    \ + 1;\n                    current_note = note.to_string();\n               \
    \     current_note_len = note_len;\n                    current_note_oct = note_oct;\n\
    \                }\n            }\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = Vec::new();\n    let mut current_beat = 0;\n\
    \    let mut current_note = 0;\n    let mut current_note_length = 0;\n    let\
    \ mut current_note_length_index = 0;\n    let mut current_note_length_index2 =\
    \ 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;\n    let mut current_note_", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut notes: Vec<&str> = vec![];\n    let mut last_note = String::new();\n\
    \    let mut last_beat = 0;\n    let mut last_beat_index = 0;\n    let mut last_beat_length\
    \ = 0;\n    let mut last_beat_length_index = 0;\n    let mut last_beat_length_index2\
    \ = 0;\n    let mut last_beat_length_index3 = 0;\n    let mut last_beat_length_index4\
    \ = 0;\n    let mut last_beat_length_index5 = 0;\n    let mut last_beat_length_index6\
    \ = 0;\n    let mut last_beat_length_index7 = 0;\n    let mut last_beat_length_index8\
    \ = 0;\n    let mut last_beat_length_index9 = 0;\n    let mut last_beat_length_index10\
    \ = 0;\n    let mut last_beat_length_index11 = 0;\n    let mut last_beat_length_index12\
    \ = 0;\n    let mut last_beat_length_index13 = 0;\n    let mut last_beat_length_index14\
    \ = 0;\n    let mut last_beat_length_index15 = 0;\n    let mut last_beat_length_index16\
    \ = 0;\n    let mut last_beat_length_index17 = 0;\n    let mut last_beat_length_index18\
    \ = 0;\n    let mut last_beat_length_index19 = 0;\n    let mut last_beat_length_index20\
    \ = 0;\n    let mut last_beat_length_index21 = 0;\n    let mut last_beat_length_index22\
    \ = 0;\n    let mut last_beat_length_index23 = 0;\n    let mut last_beat_length_index24\
    \ = 0;\n    let mut last_beat_length_index25 = 0;\n    let mut last_beat_length_index26\
    \ = 0;\n    let mut last_beat_length_index27 = 0;\n    let mut last_beat_length_index28\
    \ = 0;\n    let mut last_beat_length_index29 = 0;\n    let mut last_beat_length_index30\
    \ = 0;\n    let mut last_beat_length_index31 = 0;\n    let mut last_beat_length_index32\
    \ = 0;\n    let mut last_beat_length_index33 = 0;\n    let mut last_beat_length_index34\
    \ = 0;\n    let mut last_beat_length_index35 = 0;\n    let mut last_beat_length_index36\
    \ = 0;\n    let mut last_beat_length_index37 = 0;\n    let mut last_beat_length_index38\
    \ = 0;\n    let mut last_beat_length_index39 = 0;\n    let mut last_beat_length_index40\
    \ = 0;\n    let mut last_beat_length_index41 = 0;\n    let ", "    let mut beats\
    \ = vec![];\n    let mut notes = music_string.chars().enumerate();\n    let mut\
    \ current_note = 0;\n    let mut last_note = 0;\n    let mut last_beat = 0;\n\
    \    let mut last_beats = 0;\n    let mut last_beats_after_note = 0;\n    let\
    \ mut last_beats_after_notes = 0;\n    let mut last_beats_after_notes_after_note\
    \ = 0;\n    let mut last_beats_after_notes_after_notes = 0;\n    let mut last_beats_after_notes_after_notes_after_note\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes = 0;\n    let\
    \ mut last_beats_after_notes_after_notes_after_notes_after_note = 0;\n    let\
    \ mut last_beats_after_notes_after_notes_after_notes_after_notes = 0;\n    let\
    \ mut last_beats_after_notes_after_notes_after_notes_after_notes_after_note =\
    \ 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_note\
    \ = 0;\n    let mut last_beats_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes_after_notes\
    \ = 0;\n    let mut last_beats_after_notes_after_", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut notes: Vec<&str> = vec![];\n    let mut last_note = String::from(\"\
    o\");\n    let mut last_beat = 0;\n    let mut last_beats: isize = 0;\n    let\
    \ mut last_beats_idx = 0;\n    let mut last_beats_idx2 = 0;\n    let mut last_beats_idx3\
    \ = 0;\n    let mut last_beats_idx4 = 0;\n    let mut last_beats_idx5 = 0;\n \
    \   let mut last_beats_idx6 = 0;\n    let mut last_beats_idx7 = 0;\n    let mut\
    \ last_beats_idx8 = 0;\n    let mut last_beats_idx9 = 0;\n    let mut last_beats_idx10\
    \ = 0;\n    let mut last_beats_idx11 = 0;\n    let mut last_beats_idx12 = 0;\n\
    \    let mut last_beats_idx13 = 0;\n    let mut last_beats_idx14 = 0;\n    let\
    \ mut last_beats_idx15 = 0;\n    let mut last_beats_idx16 = 0;\n    let mut last_beats_idx17\
    \ = 0;\n    let mut last_beats_idx18 = 0;\n    let mut last_beats_idx19 = 0;\n\
    \    let mut last_beats_idx20 = 0;\n    let mut last_beats_idx21 = 0;\n    let\
    \ mut last_beats_idx22 = 0;\n    let mut last_beats_idx23 = 0;\n    let mut last_beats_idx24\
    \ = 0;\n    let mut last_beats_idx25 = 0;\n    let mut last_beats_idx26 = 0;\n\
    \    let mut last_beats_idx27 = 0;\n    let mut last_beats_idx28 = 0;\n    let\
    \ mut last_beats_idx29 = 0;\n    let mut last_beats_idx30 = 0;\n    let mut last_beats_idx31\
    \ = 0;\n    let mut last_beats_idx32 = 0;\n    let mut last_beats_idx33 = 0;\n\
    \    let mut last_beats_idx34 = 0;\n    let mut last_beats_idx35 = 0;\n    let\
    \ mut last_beats_idx36 = 0;\n    let mut last_beats_idx37 = 0;\n    let mut last_beats_idx38\
    \ = 0;\n    let mut last_beats_idx39 = 0;\n    let mut last_beats_idx40 = 0;\n\
    \    let mut last_beats_idx41 = 0;\n    let mut last_beats_idx42 = 0;\n    let\
    \ mut last_beats_idx43 = 0;\n    let mut last_beats_idx44 = 0;\n    let mut last_beats_idx45\
    \ = 0;\n    let mut last_beats_idx", "    let mut beats = vec![];\n    let mut\
    \ current_beat = 0;\n    let mut current_note = String::new();\n    let mut current_note_len\
    \ = 0;\n    for c in music_string.chars() {\n        if c == 'o' {\n         \
    \   if current_note_len > 0 {\n                beats.push(current_beat);\n   \
    \             current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_len = 0;\n            }\n        } else if c ==\
    \ '|' {\n            current_note_len = current_note.len() + 1;\n        } else\
    \ if c == '.' {\n            current_beat += 1;\n        }\n        current_note.push(c);\n\
    \    }\n    beats.push(current_beat);\n    beats", "    let mut beats = Vec::new();\n\
    \    let mut notes = music_string.chars().collect::<Vec<_>>();\n    let mut current_note\
    \ = notes.len() - 1;\n    let mut last_note = notes.len() - 1;\n    let mut last_beat\
    \ = 0;\n    while current_note > 0 {\n        if notes[current_note] == '.' {\n\
    \            beats.push(last_beat);\n            last_beat = 0;\n            current_note--;\n\
    \            last_note = current_note;\n        } else {\n            last_beat\
    \ = last_beat + 1;\n            current_note--;\n        }\n    }\n    beats.push(last_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_len = 0;\n \
    \   let mut current_note_oct = 0;\n    let mut current_note_oct2 = 0;\n    let\
    \ mut current_note_oct3 = 0;\n    let mut current_note_oct4 = 0;\n    let mut\
    \ current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n    let mut current_note_oct7\
    \ = 0;\n    let mut current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n\
    \    let mut current_note_oct10 = 0;\n    let mut current_note_oct11 = 0;\n  \
    \  let mut current_note_oct12 = 0;\n    let mut current_note_oct13 = 0;\n    let\
    \ mut current_note_oct14 = 0;\n    let mut current_note_oct15 = 0;\n    let mut\
    \ current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n    let mut current_note_oct18\
    \ = 0;\n    let mut current_note_oct19 = 0;\n    let mut current_note_oct20 =\
    \ 0;\n    let mut current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n\
    \    let mut current_note_oct23 = 0;\n    let mut current_note_oct24 = 0;\n  \
    \  let mut current_note_oct25 = 0;\n    let mut current_note_oct26 = 0;\n    let\
    \ mut current_note_oct27 = 0;\n    let mut current_note_oct28 = 0;\n    let mut\
    \ current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n    let mut current_note_oct31\
    \ = 0;\n    let mut current_note_oct32 = 0;\n    let mut current_note_oct33 =\
    \ 0;\n    let mut current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n\
    \    let mut current_note_oct36 = 0;\n    let mut current_note_oct37 = 0;\n  \
    \  let mut current_note_oct38 = 0;\n    let mut current_note_oct39 = 0;\n    let\
    \ mut current_note_oct40 = 0;\n    let mut current_note_oct41 = 0;\n    let mut\
    \ current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n    let mut current_note_oct44\
    \ = 0;\n    let mut current_note_oct45 = 0;\n    let mut current_note_oct46 =\
    \ 0;\n    let mut current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n\
    \    let mut current_note_oct49 = 0;\n    let mut current_note_oct50 = 0;\n  \
    \  let mut current_note_oct51 = 0;\n    let mut current_note_oct52 = 0;\n    let\
    \ mut current_note_oct53 = 0;\n    let mut current_note_", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = 0;\n    for c in music_string.chars() {\n \
    \       if c.is_ascii() {\n            if c.is_ascii(8) {\n                if\
    \ current_note.is_empty() {\n                    current_note = c.to_string();\n\
    \                    current_note_length = 1;\n                } else {\n    \
    \                current_note += c.to_string();\n                    current_note_length\
    \ += 1\n                }\n            } else {\n                if current_note.is_empty()\
    \ {\n                    current_note = c.to_string();\n                    current_note_length\
    \ = 1;\n                } else {\n                    current_note += c.to_string();\n\
    \                    current_note_length += 1\n                }\n           \
    \ }\n        } else {\n            if current_note.is_empty() {\n            \
    \    current_note = c.to_string();\n                current_note_length = 1;\n\
    \            } else {\n                current_note += c.to_string();\n      \
    \          current_note_length += 1\n            }\n        }\n        if current_note_length\
    \ == 4 {\n            beats.push(current_beat);\n            current_beat = 0;\n\
    \            current_note_length = 0;\n            current_note = String::new();\n\
    \        }\n        current_beat += 1;\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if current_note_length_index == 0\
    \ {\n                current_note += c;\n                current_note_length =\
    \ 1;\n            } else {\n                current_note += c;\n             \
    \   current_note_length += 1;\n            }\n            current_note_length_index\
    \ += 1;\n        } else {\n            if current_note_length_index == 0 {\n \
    \               current_note += c;\n                current_note_length = 1;\n\
    \            } else {\n                current_note += c;\n                current_note_length\
    \ += 1;\n            }\n            current_note_length_index += 1;\n        \
    \    if current_note_length_index == 4 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note_length_index\
    \ = 0;\n                current_note_length = 1;\n            }\n        }\n \
    \   }\n    beats.push(current_beat);\n    beats"]
stop_tokens:
- "\n}"

name: HumanEval_17_parse_music
language: rs
prompt: "/// Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n/// Your task is to parse this string and return list of integers\
  \ corresponding to how many beats does each\n/// not last.\n/// Here is a legend:\n\
  /// 'o' - whole note, lasts four beats\n/// 'o|' - half note, lasts two beats\n\
  /// '.|' - quater note, lasts one beat\n/// >>> parse_music(String::from(\"o o|\
  \ .| o| o| .| .| .| .| o o\"))\n/// vec![4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\nfn parse_music(music_string:\
  \ String) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = parse_music;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str>\
    \ = music_string.split_whitespace().collect();\n    let mut current_note = String::from(\"\
    \");\n    let mut current_beat = 0;\n    let mut current_note_index = 0;\n   \
    \ let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index",
  "    let mut beats: Vec<isize> = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut last_note = String::from(\"\");\n    let mut last_beat = 0;\n   \
    \ let mut last_beats: isize = 0;\n    let mut last_notes: isize = 0;\n    let\
    \ mut last_notes_beats: isize = 0;\n    let mut last_notes_beats_beats: isize\
    \ = 0;\n    let mut last_notes_beats_beats_beats: isize = 0;\n    let mut last_notes_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats: isize = 0;\n\
    \    let mut last_notes_beats_beats_beats_beats_beats_beats: isize = 0;\n    let\
    \ mut last_notes_beats_beats_beats_beats_beats_beats_beats: isize = 0;\n    let\
    \ mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats: isize = 0;\n\
    \    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats:\
    \ isize = 0;\n    let mut last_notes_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_beats_",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    let mut current_note_oct\
    \ = 0;\n    let mut current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n\
    \    let mut current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n    let\
    \ mut current_note_oct6 = 0;\n    let mut current_note_oct7 = 0;\n    let mut\
    \ current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n    let mut current_note_oct10\
    \ = 0;\n    let mut current_note_oct11 = 0;\n    let mut current_note_oct12 =\
    \ 0;\n    let mut current_note_oct13 = 0;\n    let mut current_note_oct14 = 0;\n\
    \    let mut current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n  \
    \  let mut current_note_oct17 = 0;\n    let mut current_note_oct18 = 0;\n    let\
    \ mut current_note_oct19 = 0;\n    let mut current_note_oct20 = 0;\n    let mut\
    \ current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n    let mut current_note_oct23\
    \ = 0;\n    let mut current_note_oct24 = 0;\n    let mut current_note_oct25 =\
    \ 0;\n    let mut current_note_oct26 = 0;\n    let mut current_note_oct27 = 0;\n\
    \    let mut current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n  \
    \  let mut current_note_oct30 = 0;\n    let mut current_note_oct31 = 0;\n    let\
    \ mut current_note_oct32 = 0;\n    let mut current_note_oct33 = 0;\n    let mut\
    \ current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n    let mut current_note_oct36\
    \ = 0;\n    let mut current_note_oct37 = 0;\n    let mut current_note_oct38 =\
    \ 0;\n    let mut current_note_oct39 = 0;\n    let mut current_note_oct40 = 0;\n\
    \    let mut current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n  \
    \  let mut current_note_oct43 = 0;\n    let mut current_note_oct44 = 0;\n    let\
    \ mut current_note_oct45 = 0;\n    let mut current_note_oct46 = 0;\n    let mut\
    \ current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n    let mut current_note_oct49\
    \ = 0;\n    let mut current_note_oct50 = 0;\n    let mut current_note_oct51 =\
    \ 0;\n    let mut current_note_oct52 = 0;\n    let mut current_note_oct53 = 0;\n\
    \    let mut current_note_", "    let mut beats: Vec<isize> = Vec::new();\n  \
    \  let mut current_beat = 0;\n    let mut current_note = String::new();\n    let\
    \ mut current_note_length = 0;\n    for c in music_string.chars() {\n        if\
    \ c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n           \
    \     if current_note != String::new() {\n                    current_beat +=\
    \ 4;\n                    current_note = String::new();\n                }\n \
    \           } else if c.to_ascii_lowercase() == 'o|' {\n                if current_note\
    \ != String::new() {\n                    current_beat += 2;\n               \
    \     current_note = String::new();\n                }\n            } else if\
    \ c.to_ascii_lowercase() == '.|' {\n                if current_note != String::new()\
    \ {\n                    current_beat = 1;\n                    current_note =\
    \ String::new();\n                }\n            } else {\n                current_note\
    \ += c.to_ascii_lowercase();\n            }\n        } else {\n            if\
    \ current_note != String::new() {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            }\n        }\n        if c.is_ascii() {\n            current_note_length\
    \ += 1;\n        }\n    }\n    if current_note != String::new() {\n        beats.push(current_beat);\n\
    \    }\n    beats", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ c)| c != '|');\n    for note in notes {\n        let note = note.0;\n      \
    \  let beat = note.parse::<isize>().unwrap();\n        beats.push(beat);\n   \
    \ }\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut notes:\
    \ Vec<&str> = music_string.split_whitespace().collect();\n    let mut current_note\
    \ = notes.next();\n    let mut current_beat = 0;\n    while let Some(note) = current_note\
    \ {\n        note = note.trim_end().to_string();\n        if note == \"o\" {\n\
    \            beats.push(current_beat);\n            current_beat = 0;\n      \
    \      current_note = notes.next();\n        } else if note == \"o|\" {\n    \
    \        beats.push(current_beat);\n            current_beat += 2;\n         \
    \   current_note = notes.next();\n        } else if note == \".|\" {\n       \
    \     beats.push(current_beat);\n            current_beat += 1;\n            current_note\
    \ = notes.next();\n        } else {\n            panic!(\"Invalid note '{}'\"\
    , note);\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats: Vec<isize> = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_note_length = 0;\n    while let Some(note) = notes.next()\
    \ {\n        if note == current_note {\n            current_beat += 1;\n     \
    \       current_note_length += 1;\n        } else {\n            beats.push(current_beat);\n\
    \            current_note = note;\n            current_beat = 1;\n           \
    \ current_note_length = 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_note\
    \ = String::new();\n    let mut current_beat = 0;\n    let mut current_length\
    \ = 0;\n    for c in music_string.chars() {\n        if c.is_whitespace() {\n\
    \            continue;\n        }\n        if c.is_ascii() {\n            if c.to_ascii_lowercase()\
    \ == 'o' {\n                if current_beat == 0 {\n                    current_note\
    \ = String::new();\n                    current_beat = 0;\n                  \
    \  current_length = 0;\n                }\n                current_note.push_str(&c.to_ascii_lowercase());\n\
    \                current_beat += 1;\n                current_length += 1;\n  \
    \          } else if c.to_ascii_lowercase() == '|' {\n                if current_beat\
    \ == 0 {\n                    current_note = String::new();\n                \
    \    current_beat = 0;\n                    current_length = 0;\n            \
    \    }\n                current_note.push_str(&c.to_ascii_lowercase());\n    \
    \            current_beat += 1;\n                current_length += 1;\n      \
    \      } else if c.to_ascii_lowercase() == '.' {\n                if current_beat\
    \ == 0 {\n                    current_note = String::new();\n                \
    \    current_beat = 0;\n                    current_length = 0;\n            \
    \    }\n                current_note.push_str(&c.to_ascii_lowercase());\n    \
    \            current_beat += 1;\n                current_length += 1;\n      \
    \      } else {\n                println!(\"Invalid music string: {}\", music_string);\n\
    \                panic!(\"Invalid music string\");\n            }\n        } else\
    \ {\n            println!(\"Invalid music string: {}\", music_string);\n     \
    \       panic!(\"Invalid music string\");\n        }\n    }\n    if current_beat\
    \ == 0 {\n        println!(\"Invalid music string: {}\", music_string);\n    \
    \    panic!(\"Invalid music string\");\n    }\n    beats.push(current_beat);\n\
    \    beats.push(current_length);\n    beats", "    let mut beats = Vec::new();\n\
    \    let mut notes = music_string.chars().enumerate().filter(|(_, c)| c != '|');\n\
    \    for note in notes {\n        let note = note.0;\n        let beat = note.parse::<isize>().unwrap();\n\
    \        beats.push(beat);\n    }\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c == 'o' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else if c\
    \ == '|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else if c\
    \ == '.' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else {\n\
    \                current_note.push(c);\n            }\n        } else {\n    \
    \        if current_note.is_empty() {\n                panic!(\"Music string contains\
    \ non-ASCII character\");\n            }\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \      }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats\
    \ = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note = 0;\n\
    \    let mut current_note_length = 0;\n    let mut current_note_length_index =\
    \ 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mut current_note_",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_note_len = 0;\n\
    \    for c in music_string {\n        if c.is_ascii() {\n            if c == 'o'\
    \ {\n                if current_note_len == 0 {\n                    current_note_len\
    \ = 4;\n                } else {\n                    current_note_len += 4;\n\
    \                }\n                current_note = String::new();\n          \
    \  } else if c == '|' {\n                if current_note_len == 0 {\n        \
    \            current_note_len = 2;\n                } else {\n               \
    \     current_note_len += 2;\n                }\n                current_note\
    \ = String::new();\n            } else if c == '.' {\n                if current_note_len\
    \ == 0 {\n                    current_note_len = 1;\n                } else {\n\
    \                    current_note_len = current_note_len + 1;\n              \
    \  }\n                current_note = String::new();\n            } else {\n  \
    \              current_note.push(c);\n                current_note_len = current_note_len\
    \ + 1;\n            }\n        } else {\n            if current_note_len == 0\
    \ {\n                beats.push(current_beat);\n                current_beat =\
    \ 0;\n                current_note = String::new();\n                current_note_len\
    \ = 0;\n            } else {\n                current_beat = current_beat + 1;\n\
    \            }\n        }\n    }\n    beats.push(current_beat);\n    beats", " \
    \   let mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_note_length = 0;\n  \
    \  let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 1;\n    let mut current_note_length_index42\
    \ = 1;\n    let mut current_note_length_index43 = 1;\n    let mut current_note_length_index44\
    \ = 1;\n    let mut current_note_length_index45 = 1;\n    let mut current_note_length_index46\
    \ = 1;\n    let mut current_note_length_index47 = 1;\n    let mut current_", " \
    \   let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n", "    let\
    \ mut beats: Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_octave: isize = 0;\n\
    \    let mut current_note_is_octave = false;\n    let mut current_note_octave:\
    \ isize = 0;\n    let mut current_note_octave_is_octave = false;\n    let mut\
    \ current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;\n    let mut current_note_octave_is_octave = false;\n    let mut current_note_octave_is_octave\
    \ = false;", "    let mut beats: Vec<isize> = Vec::new();\n    let mut notes:\
    \ Vec<&str> = music_string.split_whitespace().collect();\n    let mut current_note\
    \ = 0;\n    let mut current_beat = 0;\n    while notes.len() > 0 {\n        let\
    \ note = notes.remove(0);\n        if note == \"o\" {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note += 1;\n        } else\
    \ if note == \"o|\" {\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note += 2;\n        } else if note == \".|\" {\n \
    \           beats.push(current_beat);\n            current_beat = 0;\n       \
    \     current_note += 4;\n        } else {\n            assert!(notes.len() >\
    \ 0);\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut\
    \ beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut\
    \ current_note = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;", "    let mut beats = Vec::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let ", "    let mut\
    \ beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    let mut current_note_oct\
    \ = 0;\n    let mut current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n\
    \    let mut current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n    let\
    \ mut current_note_oct6 = 0;\n    let mut current_note_oct7 = 0;\n    let mut\
    \ current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n    let mut current_note_oct10\
    \ = 0;\n    let mut current_note_oct11 = 0;\n    let mut current_note_oct12 =\
    \ 0;\n    let mut current_note_oct13 = 0;\n    let mut current_note_oct14 = 0;\n\
    \    let mut current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n  \
    \  let mut current_note_oct17 = 0;\n    let mut current_note_oct18 = 0;\n    let\
    \ mut current_note_oct19 = 0;\n    let mut current_note_oct20 = 0;\n    let mut\
    \ current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n    let mut current_note_oct23\
    \ = 0;\n    let mut current_note_oct24 = 0;\n    let mut current_note_oct25 =\
    \ 0;\n    let mut current_note_oct26 = 0;\n    let mut current_note_oct27 = 0;\n\
    \    let mut current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n  \
    \  let mut current_note_oct30 = 0;\n    let mut current_note_oct31 = 0;\n    let\
    \ mut current_note_oct32 = 0;\n    let mut current_note_oct33 = 0;\n    let mut\
    \ current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n    let mut current_note_oct36\
    \ = 0;\n    let mut current_note_oct37 = 0;\n    let mut current_note_oct38 =\
    \ 0;\n    let mut current_note_oct39 = 0;\n    let mut current_note_oct40 = 0;\n\
    \    let mut current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n  \
    \  let mut current_note_oct43 = 0;\n    let mut current_note_oct44 = 0;\n    let\
    \ mut current_note_oct45 = 0;\n    let mut current_note_oct46 = 0;\n    let mut\
    \ current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n    let mut current_note_oct49\
    \ = 0;\n    let mut current_note_oct50 = 0;\n    let mut current_note_oct51 =\
    \ 0;\n    let mut current_note_oct52 = 0;\n    let mut current_note_oct53 = 0;\n\
    \    let mut current_", "    let mut beats: Vec<isize> = Vec::new();\n    let\
    \ mut notes: Vec<&str> = music_string.split_whitespace().collect();\n    let mut\
    \ current_note = notes.first().unwrap();\n    let mut current_beat = 0;\n    let\
    \ mut current_note_count = 0;\n    let mut current_note_length = 0;\n    for note\
    \ in notes {\n        if note == current_note {\n            current_note_count\
    \ += 1;\n            current_note_length += 1;\n        } else {\n           \
    \ if current_note_count > 0 {\n                beats.push(current_beat);\n   \
    \             current_beat = 0;\n                current_note_count = 0;\n   \
    \         }\n            current_note = note;\n            current_note_length\
    \ = 1;\n        }\n        current_beat += current_note_length;\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_len = 0;\n \
    \   let mut current_note_oct = 0;\n    let mut current_note_oct2 = 0;\n    let\
    \ mut current_note_oct3 = 0;\n    let mut current_note_oct4 = 0;\n    let mut\
    \ current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n    let mut current_note_oct7\
    \ = 0;\n    let mut current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n\
    \    let mut current_note_oct10 = 0;\n    let mut current_note_oct11 = 0;\n  \
    \  let mut current_note_oct12 = 0;\n    let mut current_note_oct13 = 0;\n    let\
    \ mut current_note_oct14 = 0;\n    let mut current_note_oct15 = 0;\n    let mut\
    \ current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n    let mut current_note_oct18\
    \ = 0;\n    let mut current_note_oct19 = 0;\n    let mut current_note_oct20 =\
    \ 0;\n    let mut current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n\
    \    let mut current_note_oct23 = 0;\n    let mut current_note_oct24 = 0;\n  \
    \  let mut current_note_oct25 = 0;\n    let mut current_note_oct26 = 0;\n    let\
    \ mut current_note_oct27 = 0;\n    let mut current_note_oct28 = 0;\n    let mut\
    \ current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n    let mut current_note_oct31\
    \ = 0;\n    let mut current_note_oct32 = 0;\n    let mut current_note_oct33 =\
    \ 0;\n    let mut current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n\
    \    let mut current_note_oct36 = 0;\n    let mut current_note_oct37 = 0;\n  \
    \  let mut current_note_oct38 = 0;\n    let mut current_note_oct39 = 0;\n    let\
    \ mut current_note_oct40 = 0;\n    let mut current_note_oct41 = 0;\n    let mut\
    \ current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n    let mut current_note_oct44\
    \ = 0;\n    let mut current_note_oct45 = 0;\n    let mut current_note_oct46 =\
    \ 0;\n    let mut current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n\
    \    let mut current_note_oct49 = 0;\n    let mut current_note_oct50 = 0;\n  \
    \  let mut current_note_oct51 = 0;\n    let mut current_note_oct52 = 0;\n    let\
    \ mut current_note_oct53 = 0;\n    let mut current_note_", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_len = 0;\n    for c in music_string.chars() {\n    \
    \    if c.is_whitespace() {\n            continue;\n        }\n        if c.is_ascii_digit()\
    \ {\n            current_note = c.to_string();\n            current_note_len =\
    \ c.len() as isize;\n        } else {\n            if current_note_len == 0 {\n\
    \                continue;\n            }\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \          current_note_len = c.len() as isize;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_length = 0;\n\
    \    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;", "    let mut beats = Vec::new();\n    let mut notes = music_string.chars().enumerate();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    let mut current_note_index\
    \ = 0;\n    let mut current_beat_length = 0;\n    let mut last_note = -1;\n  \
    \  let mut last_beat = -1;\n    let mut last_note_index = -1;\n    let mut last_beat_length\
    \ = -1;\n    while let Some(note) = notes.next() {\n        let note = note.0;\n\
    \        let note_index = note.1;\n        let note_length = note.2;\n       \
    \ if note == 'o' {\n            if current_note == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note_index = 0;\n\
    \                current_beat_length = 0;\n            }\n            current_note\
    \ += 1;\n            current_beat += 1;\n            current_note_index += 1;\n\
    \            current_beat_length += note_length;\n            last_note = current_note;\n\
    \            last_beat = current_beat;\n            last_note_index = current_note_index;\n\
    \            last_beat_length = current_beat_length;\n        } else if note ==\
    \ 'o|' {\n            if current_note == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note_index = 0;\n\
    \                current_beat_length = 0;\n            }\n            current_note\
    \ += 1;\n            current_beat += 1;\n            current_note_index += 1;\n\
    \            current_beat_length += note_length;\n            last_note = current_note;\n\
    \            last_beat = current_beat;\n            last_note_index = current_note_index;\n\
    \            last_beat_length = current_beat_length;\n        } else if note ==\
    \ '.|' {\n            if current_note == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note_index = 0;\n\
    \                current_beat_length = 0;\n            }\n            current_note\
    \ += 1;\n            current_beat += 1;\n            current_note_index += 1;\n\
    \            current_beat_length += note_length;\n            last_note = current_note;\n\
    \            last_beat = current_beat;\n            last_note_index = current_note_index;\n\
    \            last_beat_length = current_beat_length;\n        } else {\n     \
    \       assert!(current_note == 0);\n            assert!(current_beat == 0);\n\
    \            assert!(current_note_index == 0);\n            assert!(current_beat_length\
    \ == 0);\n            assert!(last_note == -1);\n            assert!(last_beat\
    \ == -1);\n            assert!(last_note_index == -1);\n            assert!(last_beat_length\
    \ == -1);\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = 0;\n  \
    \  let mut current_note_len = 0;\n    let mut current_note_char = 0;\n    let\
    \ mut last_note_len = 0;\n    let mut last_note_char = 0;\n    let mut last_note\
    \ = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2 = 0;\n    let\
    \ mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2\
    \ = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n  \
    \  let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2\
    \ = 0;\n    let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let\
    \ mut last_note_char2 = 0;\n    let mut last_note2 = 0;\n    let mut last_note_len2\
    \ = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2 = 0;\n    let\
    \ mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2\
    \ = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n  \
    \  let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2\
    \ = 0;\n    let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let\
    \ mut last_note_char2 = 0;\n    let mut last_note2 = 0;\n    let mut last_note_len2\
    \ = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2 = 0;\n    let\
    \ mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2\
    \ = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n  \
    \  let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2\
    \ = 0;\n    let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let\
    \ mut last_note_char2 = 0;\n    let mut last_note2 = 0;\n    let mut last_note_len2\
    \ = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2 = 0;\n    let\
    \ mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n    let mut last_note2\
    \ = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2 = 0;\n  \
    \  let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let mut last_note_char2\
    \ = 0;\n    let mut last_note2 = 0;\n    let mut last_note_len2 = 0;\n    let\
    \ mut last_note_char2 = 0;", "    let mut beats = vec![];\n    let mut notes =\
    \ music_string.chars().enumerate().filter(|&(_, note)| note != 'o');\n    for\
    \ note in notes {\n        note.1.unwrap();\n        let mut beat = 0;\n     \
    \   let mut last_note = note.0;\n        while note != last_note {\n         \
    \   beat += 1;\n            last_note = note;\n            note = notes.next();\n\
    \        }\n        beats.push(beat);\n    }\n    beats", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;", "    let mut beats = vec![];\n\
    \    let mut note = music_string.chars().nth(1).unwrap();\n    let mut last_beat\
    \ = false;\n    let mut last_note = false;\n    while note != ' ' {\n        if\
    \ note == 'o' {\n            if last_note {\n                beats.push(4);\n\
    \                last_beat = false;\n            } else {\n                beats.push(1);\n\
    \                last_beat = true;\n            }\n            last_note = true;\n\
    \        } else if note == 'o|' {\n            if last_note {\n              \
    \  beats.push(2);\n                last_beat = false;\n            } else {\n\
    \                beats.push(1);\n                last_beat = true;\n         \
    \   }\n            last_note = true;\n        } else if note == '.' {\n      \
    \      if last_note {\n                beats.push(1);\n                last_beat\
    \ = false;\n            } else {\n                beats.push(1);\n           \
    \     last_beat = true;\n            }\n            last_note = true;\n      \
    \  } else {\n            beats.push(0);\n            last_beat = false;\n    \
    \        last_note = false;\n        }\n        note = music_string.chars().nth(1).unwrap();\n\
    \    }\n    beats", "    let mut beats = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_length = 0;\n\
    \    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;\n    let mut current_note_", "    let mut beats = vec![];\n    let mut\
    \ notes = music_string.chars().enumerate().filter(|(_, note)| note != 'o').collect::<Vec<_>>();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    for note in\
    \ notes {\n        if note == 'o' {\n            beats.push(current_beat);\n \
    \           current_beat = 0;\n            current_note++;\n        } else {\n\
    \            current_beat++;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_len = 0;\n   \
    \ let mut current_note_char = 0;\n    let mut current_note_char_len = 0;\n   \
    \ let mut current_note_char_is_octal = false;\n    let mut current_note_char_is_digit\
    \ = false;\n    let mut current_note_char_is_space = false;\n    let mut current_note_char_is_comma\
    \ = false;\n    let mut current_note_char_is_colon = false;\n    let mut current_note_char_is_equal\
    \ = false;\n    let mut current_note_char_is_dash = false;\n    let mut current_note_char_is_slash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash = false;\n    let mut current_note_char_is_slash_or_dash\
    \ = false;\n    let mut current_note_char_is_slash_or_dash = false;\n    let mut\
    \ current_note_char_is_slash_or_dash", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  for c in music_string.chars() {\n        if c == 'o' {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::new();\n  \
    \      } else if c == '|' {\n            beats.push(current_beat);\n         \
    \   current_beat = 0;\n            current_note = String::new();\n        } else\
    \ if c == '.' {\n            current_beat = current_beat + 1;\n        } else\
    \ {\n            current_note.push(c);\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_beat_length = 0;\n    loop {\n        match notes.next()\
    \ {\n            Some((i, c)) => {\n                let note = match c {\n   \
    \                 'o' => 1,\n                    'o|' => 2,\n                \
    \    '.|' => 3,\n                    _ => panic!(\"Unexpected note\"),\n     \
    \           };\n                beats.push(current_beat + note);\n           \
    \     current_beat += note;\n                current_note_length += note;\n  \
    \              current_beat_length += note;\n                current_note = note;\n\
    \                current_note_length += 1;\n                current_beat_length\
    \ += 1;\n            }\n            None => break,\n        }\n    }\n    beats",
  "    let mut beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mut current_note_",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    for c in music_string.chars() {\n        if c.is_ascii()\
    \ {\n            if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == '.' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else if c.to_ascii_lowercase() == '|' {\n                current_beat\
    \ = 1;\n            } else {\n                current_note.push(c);\n        \
    \    }\n        } else {\n            if current_note.is_empty() {\n         \
    \       println!(\"Invalid music string\");\n                return beats;\n \
    \           }\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut\
    \ current_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length = 0;\n    let\
    \ mut current_note_length_to_beat_with_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_", "    let mut beats = vec![];\n \
    \   let mut current_beat = 0;\n    let mut current_note = String::new();\n   \
    \ let mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n\
    \    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mu", "    let mut\
    \ beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut\
    \ current_note = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_length = 0;\n    while current_note != \".\" {\n \
    \       if current_note == \"o\" {\n            beats.push(current_beat);\n  \
    \          current_beat += 1;\n            current_length += 1;\n        }\n \
    \       if current_note == \"o|\" {\n            beats.push(current_beat);\n \
    \           current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".|\" {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".\" {\n            beats.push(current_beat);\n \
    \           current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \"o\" {\n            beats.push(current_beat);\n \
    \           current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \"o|\" {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".|\" {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".\" {\n            beats.push(current_beat);\n \
    \           current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \"o\" {\n            beats.push(current_beat);\n \
    \           current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \"o|\" {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".|\" {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".\" {\n            beats.push(current_beat);\n \
    \           current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \"o\" {\n            beats.push(current_beat);\n \
    \           current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \"o|\" {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".|\" {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_length += 1;\n        }\n\
    \        if current_note == \".\" {\n            beats.push(current_beat);\n \
    \           current_beat ", "    let mut beats: Vec<isize> = Vec::new();\n   \
    \ let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n    let\
    \ mut current_note = String::from(\"\");\n    let mut current_beat = 0;\n    let\
    \ mut current_beats: isize = 0;\n    let mut current_note_index = 0;\n    let\
    \ mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n \
    \   let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index", "    let mut beats = vec![];\n\
    \    let mut notes = music_string.split_whitespace();\n    let mut current_note\
    \ = 0;\n    let mut current_beat = 0;\n    let mut current_length = 0;\n    for\
    \ note in notes {\n        if note == \"o\" {\n            beats.push(current_beat);\n\
    \            current_beat += 4;\n            current_length = 4;\n        } else\
    \ if note == \"o|\" {\n            beats.push(current_beat);\n            current_beat\
    \ += 2;\n            current_length = 2;\n        } else if note == \".|\" {\n\
    \            beats.push(current_beat);\n            current_beat += 1;\n     \
    \       current_length = 1;\n        } else {\n            current_length += 1;\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats:\
    \ Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    for c in music_string.chars() {\n        if c.is_ascii()\
    \ {\n            if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else {\n                current_note += c.to_ascii_lowercase();\n\
    \            }\n        } else {\n            if current_note.is_empty() {\n \
    \               continue;\n            }\n            let note = current_note.chars().collect::<String>().parse().unwrap();\n\
    \            beats.push(note as isize);\n            current_beat = 0;\n     \
    \       current_note = String::new();\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_len = 0;\n \
    \   let mut current_note_oct = 0;\n    let mut current_note_octlen = 0;\n    let\
    \ mut current_note_octstring = \"\";\n    let mut current_note_octstringlen =\
    \ 0;\n    let mut current_note_octstringlen2 = 0;\n    let mut current_note_octstringlen3\
    \ = 0;\n    let mut current_note_octstringlen4 = 0;\n    let mut current_note_octstringlen5\
    \ = 0;\n    let mut current_note_octstringlen6 = 0;\n    let mut current_note_octstringlen7\
    \ = 0;\n    let mut current_note_octstringlen8 = 0;\n    let mut current_note_octstringlen9\
    \ = 0;\n    let mut current_note_octstringlen10 = 0;\n    let mut current_note_octstringlen11\
    \ = 0;\n    let mut current_note_octstringlen12 = 0;\n    let mut current_note_octstringlen13\
    \ = 0;\n    let mut current_note_octstringlen14 = 0;\n    let mut current_note_octstringlen15\
    \ = 0;\n    let mut current_note_octstringlen16 = 0;\n    let mut current_note_octstringlen17\
    \ = 0;\n    let mut current_note_octstringlen18 = 0;\n    let mut current_note_octstringlen19\
    \ = 0;\n    let mut current_note_octstringlen20 = 0;\n    let mut current_note_octstringlen21\
    \ = 0;\n    let mut current_note_octstringlen22 = 0;\n    let mut current_note_octstringlen23\
    \ = 0;\n    let mut current_note_octstringlen24 = 0;\n    let mut current_note_octstringlen25\
    \ = 0;\n    let mut current_note_octstringlen26 = 0;\n    let mut current_note_octstringlen27\
    \ = 0;\n    let mut current_note_octstringlen28 = 0;\n    let mut current_note_octstringlen29\
    \ = 0;\n    let mut current_note_octstringlen30 = 0;\n    let mut current_note_octstringlen31\
    \ = 0;\n    let mut current_note_octstringlen32 = 0;\n    let mut current_note_octstringlen33\
    \ = 0;\n    let mut current_note_octstringlen34 = 0;\n    let mut current_note_octstringlen35\
    \ = 0;\n    let mut current_note_octstringlen36 = 0;\n    let mut current_note_octstringlen37\
    \ = 0;\n    let mut current_note_octstringlen38 = 0;\n    let mut current_note_octstringlen39\
    \ = 0;\n    let mut current_note_octstringlen40 = 0;\n    let mut current_note_octstringlen41\
    \ = 0;\n    let mut current_note_", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == 'o' {\n                if current_beat == 0 {\n  \
    \                  current_note = c.to_ascii_lowercase();\n                } else\
    \ {\n                    beats.push(current_beat);\n                    current_beat\
    \ = 0;\n                }\n            } else {\n                if current_beat\
    \ == 0 {\n                    current_note = c.to_ascii_lowercase();\n       \
    \         } else {\n                    beats.push(current_beat);\n          \
    \          current_beat = 0;\n                }\n            }\n        } else\
    \ {\n            if c.to_ascii_lowercase() == 'o' {\n                current_beat\
    \ = 4;\n            } else {\n                current_beat = 2;\n            }\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let ", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_to_beat = 0;\n    let mut current_note_length_to_beat_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next = 0;\n    let mut current_note_length_to_beat_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next = 0;\n   \
    \ let mut current_note_length_to_beat_next_next_next_next_next = 0;\n    let mut\
    \ current_note_length_to_beat_next_next_next_next_next = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_to_beat_next_", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_octave = 0;\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_", "    let mut beats: Vec<isize> = Vec::new();\n\
    \    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n \
    \   let mut current_note = notes.first().unwrap();\n    let mut current_beat =\
    \ 0;\n    let mut current_note_length = 0;\n    for note in notes {\n        if\
    \ note != current_note {\n            beats.push(current_beat);\n            current_note\
    \ = note;\n            current_beat = 0;\n            current_note_length = 0;\n\
    \        }\n        current_beat += 1;\n        current_note_length += 1;\n  \
    \  }\n    beats.push(current_beat);\n    beats", "    let mut beats: Vec<isize>\
    \ = Vec::new();\n    let mut current_beat: isize = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    let mut current_note_oct\
    \ = 0;\n    let mut current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n\
    \    let mut current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n    let\
    \ mut current_note_oct6 = 0;\n    let mut current_note_oct7 = 0;\n    let mut\
    \ current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n    let mut current_note_oct10\
    \ = 0;\n    let mut current_note_oct11 = 0;\n    let mut current_note_oct12 =\
    \ 0;\n    let mut current_note_oct13 = 0;\n    let mut current_note_oct14 = 0;\n\
    \    let mut current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n  \
    \  let mut current_note_oct17 = 0;\n    let mut current_note_oct18 = 0;\n    let\
    \ mut current_note_oct19 = 0;\n    let mut current_note_oct20 = 0;\n    let mut\
    \ current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n    let mut current_note_oct23\
    \ = 0;\n    let mut current_note_oct24 = 0;\n    let mut current_note_oct25 =\
    \ 0;\n    let mut current_note_oct26 = 0;\n    let mut current_note_oct27 = 0;\n\
    \    let mut current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n  \
    \  let mut current_note_oct30 = 0;\n    let mut current_note_oct31 = 0;\n    let\
    \ mut current_note_oct32 = 0;\n    let mut current_note_oct33 = 0;\n    let mut\
    \ current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n    let mut current_note_oct36\
    \ = 0;\n    let mut current_note_oct37 = 0;\n    let mut current_note_oct38 =\
    \ 0;\n    let mut current_note_oct39 = 0;\n    let mut current_note_oct40 = 0;\n\
    \    let mut current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n  \
    \  let mut current_note_oct43 = 0;\n    let mut current_note_oct44 = 0;\n    let\
    \ mut current_note_oct45 = 0;\n    let mut current_note_oct46 = 0;\n    let mut\
    \ current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n    let mut current_note_oct49\
    \ = 0;\n    let mut current_note_oct50 = 0;\n    let mut current_note_oct51 =\
    \ 0;\n    let mut current_note_oct52 = 0;\n    let mut current_", "    let mut\
    \ beats: Vec<isize> = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_note_count = 0;\n    for note in notes {\n       \
    \ if note == current_note {\n            current_note_count += 1;\n        } else\
    \ {\n            beats.push(current_beat);\n            current_note_count = 1;\n\
    \            current_beat = 0;\n            current_note = note;\n        }\n\
    \        current_beat += current_note_count;\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_len = 0;\n \
    \   let mut last_note = String::new();\n    let mut last_note_len = 0;\n    let\
    \ mut last_note_beat = 0;\n    let mut last_note_beat_len = 0;\n    let mut last_note_note_len\
    \ = String::new();\n    let mut last_note_note_beat_len = String::new();\n   \
    \ let mut last_note_note_beat_note_len = String::new();\n    let mut last_note_note_beat_note_beat_len\
    \ = String::new();\n    let mut last_note_note_beat_note_beat_note_len = String::new();\n\
    \    let mut last_note_note_beat_note_beat_note_beat_len = String::new();\n  \
    \  let mut last_note_note_beat_note_beat_note_beat_note_len = String::new();\n\
    \    let mut last_note_note_beat_note_beat_note_beat_note_beat_len = String::new();\n\
    \    let mut last_note_note_beat_note_beat_note_beat_note_beat_len = String::new();\n\
    \    let mut last_note_note_beat_note_beat_note_beat_note_beat_note_len = String::new();\n\
    \    let mut last_note_note_beat_note_beat_note_beat_note_beat_note_beat_len =\
    \ String::new();\n    let mut last_note_note_beat_note_beat_note_beat_note_beat_note_beat_len\
    \ = String::new();\n    let mut last_note_note_beat_note_beat_note_beat_note_beat_note_beat_note_len\
    \ = String::new();\n    let mut last_note_note_beat_note_beat_note_beat_note_beat_note_beat_note_beat_len\
    \ = String::new();\n    let mut last_note_note_beat_note_beat_note_beat_note_beat_note_beat_note_beat_len\
    \ = String::new();\n    let mut last_note_note_beat_note_beat_note_beat_note_beat_note_beat_note_beat_note_len\
    \ = String::new();\n    let mut last_note_note_beat_note_beat_note_beat_note_beat_note_beat_note_beat_note_beat_len\
    \ = String::new();\n    let mut last_note_note_beat_note_beat_note_beat_note_beat_note_beat_note_beat_note_beat_note_len\
    \ = String::new();\n    let mut last_note_note_beat_note_beat_note_beat_note_beat_note_beat_note_",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mut current_note_length",
  "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ note)| note != 'o');\n    for note in notes {\n        let mut beat = 0;\n \
    \       note.for_each(|c| {\n            if c == '|' {\n                beat +=\
    \ 1;\n            } else {\n                beats.push(beat);\n              \
    \  beat = 0;\n            }\n        });\n    }\n    beats", "    let mut beats\
    \ = vec![];\n    let mut notes = music_string.chars().enumerate();\n    let mut\
    \ current_note = 0;\n    let mut last_note = 0;\n    let mut last_beat = 0;\n\
    \    let mut last_beats_left = 0;\n    let mut last_beats_right = 0;\n    let\
    \ mut last_beats_left_and_right = 0;\n    let mut last_beats_left_and_right_and_half\
    \ = 0;\n    let mut last_beats_left_and_right_and_half_and_quarter = 0;\n    let\
    \ mut last_beats_left_and_right_and_half_and_quarter_and_whole = 0;\n    let mut\
    \ last_beats_left_and_right_and_half_and_quarter_and_whole_and_quarter = 0;\n\
    \    let mut last_beats_left_and_right_and_half_and_quarter_and_whole_and_quarter_and_whole\
    \ = 0;\n    let mut last_beats_left_and_right_and_half_and_quarter_and_whole_and_quarter_and_whole_and_half\
    \ = 0;\n    let mut last_beats_left_and_right_and_half_and_quarter_and_whole_and_quarter_and_whole_and_half_and_quarter\
    \ = 0;\n    let mut last_beats_left_and_right_and_half_and_quarter_and_whole_and_quarter_and_whole_and_half_and_quarter_and_whole\
    \ = 0;\n    let mut last_beats_left_and_right_and_half_and_quarter_and_whole_and_quarter_and_whole_and_half_and_quarter_and_whole_and_half\
    \ = 0;\n    let mut last_beats_left_and_right_and_half_and_quarter_and_whole_and_quarter_and_whole_and_half_and_quarter_and_whole_and_half_and_quarter\
    \ = 0;\n    let mut last_beats_left_and_right_and_half_and_quarter_and_whole_and_quarter_and_whole_and_half_and_quarter_and_whole_and_half_and_quarter_and_whole\
    \ = 0;\n    let mut last_beats_left_and_right_and_half_and_quarter_and_whole_and_quarter_and_whole_and_half_and_quarter_and_whole_and_half_and_quarter_and_whole_and_half\
    \ = 0;\n    let mut last_beats_left_and_right_and_half_and_quarter_and_whole_and_quarter_and_whole_and_half_and_quarter_and_whole_and_half_and_quarter_and_whole_and_half_and_quarter\
    \ = 0;\n    let mut last_beats_left_and_right_and_half_and_quarter_and_whole_and_quarter_and_whole_and_half_and_quarter_and_whole_and_half_and_quarter_and_whole_and_half_and_quarter_and_whole\
    \ = 0;\n    let mut last_beats_left_and_", "    let mut beats: Vec<isize> = Vec::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 1;\n    let mut current_note_length_index42\
    \ = 1;\n    let mut current_note_length_index43 = 1;\n    let mut current_note_length_index44\
    \ = 1;\n    let mut current_note_length_index45 = 1;\n    let mut current_note_length_index46\
    \ = 1;\n    let mut current_note_length_index47 = 1;\n    let mut current_note_length_index",
  "    let mut beats = Vec::new();\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ note)| note != 'o');\n    for note in notes {\n        let mut beat = 0;\n \
    \       let mut note = note.unwrap();\n        note.chars().for_each(|c| {\n \
    \           if c == '|' {\n                beat += 1;\n            }\n       \
    \     beat += 1;\n        });\n        beats.push(beat);\n    }\n    beats", " \
    \   let mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_octave = 0;\n    let\
    \ mut current_note_is_octave = false;\n    let mut current_note_is_rest = false;\n\
    \    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mu", "    let\
    \ mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let mut\
    \ current_note = String::new();\n    let mut current_octave = 0;\n    for c in\
    \ music_string.chars() {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase()\
    \ == 'o' {\n                if current_octave == 0 {\n                    current_octave\
    \ = 4;\n                } else {\n                    current_octave--;\n    \
    \            }\n            }\n            if c.to_ascii_lowercase() == '|' {\n\
    \                if current_octave == 0 {\n                    current_octave\
    \ = 2;\n                } else {\n                    current_octave--;\n    \
    \            }\n            }\n            if c.to_ascii_lowercase() == '.' {\n\
    \                if current_octave == 0 {\n                    current_octave\
    \ = 1;\n                } else {\n                    current_octave--;\n    \
    \            }\n            }\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_octave\
    \ = 0;\n            }\n            if c.to_ascii_lowercase() == '|' {\n      \
    \          beats.push(current_beat);\n                current_beat = 0;\n    \
    \            current_note = String::new();\n                current_octave = 0;\n\
    \            }\n            if c.to_ascii_lowercase() == '.' {\n             \
    \   beats.push(current_beat);\n                current_beat = 0;\n           \
    \     current_note = String::new();\n                current_octave = 0;\n   \
    \         }\n            current_note += c.to_ascii_lowercase();\n        } else\
    \ {\n            if current_octave == 0 {\n                current_octave = 4;\n\
    \            } else {\n                current_octave--;\n            }\n    \
    \    }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats =\
    \ vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = 0;\n    let mut current_note_length_index =\
    \ 0;\n    for c in music_string {\n        if c == 'o' {\n            if current_note_length_index\
    \ == 0 {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_length\
    \ = 0;\n                current_note_length_index = 0;\n            }\n      \
    \      current_note += c;\n            current_note_length += 1;\n           \
    \ current_note_length_index += 1;\n        } else if c == '|' {\n            if\
    \ current_note_length_index == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n                current_note_length_index\
    \ = 0;\n            }\n            current_note += c;\n            current_note_length\
    \ += 1;\n            current_note_length_index += 1;\n        } else if c == '.'\
    \ {\n            if current_note_length_index == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n                current_note_length_index\
    \ = 0;\n            }\n            current_note += c;\n            current_note_length\
    \ += 1;\n            current_note_length_index += 1;\n        } else {\n     \
    \       if current_note_length_index == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n                current_note_length_index\
    \ = 0;\n            }\n            current_note += c;\n            current_note_length\
    \ += 1;\n            current_note_length_index += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = Vec::new();\n    let mut current_beat = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    for c\
    \ in music_string {\n        if c == 'o' {\n            if current_note.len()\
    \ > 0 {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            }\n       \
    \ } else if c == '|' {\n            if current_note_length.len() > 0 {\n     \
    \           beats.push(current_beat);\n                current_beat = 0;\n   \
    \             current_note_length = String::new();\n            }\n        } else\
    \ if c == '.' {\n            if current_note_length.len() > 0 {\n            \
    \    beats.push(current_beat);\n                current_beat = 0;\n          \
    \      current_note_length = String::new();\n            }\n        } else {\n\
    \            current_note.push(c);\n            current_note_length.push(c);\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats:\
    \ Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_octave: isize = 0;\n    let mut current_note_is_octave\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_resting = false;\n    let mut current_note_is_resting_octave\
    \ = false;\n    let mut current_note_is_resting_octave_rest = false;\n    let\
    \ mut current_note_is_resting_octave_rested = false;\n    let mut current_note_is_resting_octave_resting\
    \ = false;\n    let mut current_note_is_resting_octave_resting_octave = false;\n\
    \    let mut current_note_is_resting_octave_resting_octave_rest = false;\n   \
    \ let mut current_note_is_resting_octave_resting_octave_rest = false;\n    let\
    \ mut current_note_is_resting_octave_resting_octave_rest = false;\n    let mut\
    \ current_note_is_resting_octave_resting_octave_rest = false;\n    let mut current_note_is_resting_octave_resting_octave_rest\
    \ = false;\n    let mut current_note_is_resting_octave_resting_octave_rest = false;\n\
    \    let mut current_note_is_resting_octave_resting_octave_rest = false;\n   \
    \ let mut current_note_is_resting_octave_resting_octave_rest = false;\n    let\
    \ mut current_note_is_resting_octave_resting_octave_rest = false;\n    let mut\
    \ current_note_is_resting_octave_resting_octave_rest = false;\n    let mut current_note_is_resting_octave_resting_octave_rest\
    \ = false;\n    let mut current_note_is_resting_octave_resting_octave_rest = false;\n\
    \    let mut current_note_is_resting_octave_resting_octave_rest = false;\n   \
    \ let mut current_note_is_resting_octave_resting_octave_rest = false;\n    let\
    \ mut current_note_is_resting_octave_resting_octave_rest = false;\n    let mut\
    \ current_note_is_resting_octave_resting_octave_rest = false;\n    let mut current_note_is_resting_octave_resting_octave_rest\
    \ = false;\n    let mut current_note_is_resting_octave_resting_octave_rest = false;\n\
    \    let mut current_note_is_resting_octave_re", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut current_beat: isize = 0;\n    let mut current_note =\
    \ String::new();\n    let mut current_note_length: isize = 0;\n    let mut current_note_length_index:\
    \ usize = 0;\n    let mut current_note_length_index2: usize = 0;\n    let mut\
    \ current_note_length_index3: usize = 0;\n    let mut current_note_length_index4:\
    \ usize = 0;\n    let mut current_note_length_index5: usize = 0;\n    let mut\
    \ current_note_length_index6: usize = 0;\n    let mut current_note_length_index7:\
    \ usize = 0;\n    let mut current_note_length_index8: usize = 0;\n    let mut\
    \ current_note_length_index9: usize = 0;\n    let mut current_note_length_index10:\
    \ usize = 0;\n    let mut current_note_length_index11: usize = 0;\n    let mut\
    \ current_note_length_index12: usize = 0;\n    let mut current_note_length_index13:\
    \ usize = 0;\n    let mut current_note_length_index14: usize = 0;\n    let mut\
    \ current_note_length_index15: usize = 0;\n    let mut current_note_length_index16:\
    \ usize = 0;\n    let mut current_note_length_index17: usize = 0;\n    let mut\
    \ current_note_length_index18: usize = 0;\n    let mut current_note_length_index19:\
    \ usize = 0;\n    let mut current_note_length_index20: usize = 0;\n    let mut\
    \ current_note_length_index21: usize = 0;\n    let mut current_note_length_index22:\
    \ usize = 0;\n    let mut current_note_length_index23: usize = 0;\n    let mut\
    \ current_note_length_index24: usize = 0;\n    let mut current_note_length_index25:\
    \ usize = 0;\n    let mut current_note_length_index26: usize = 0;\n    let mut\
    \ current_note_length_index27: usize = 0;\n    let mut current_note_length_index28:\
    \ usize = 0;\n    let mut current_note_length_index29: usize = 0;\n    let mut\
    \ current_note_length_index30: usize = 0;\n    let mut current_note_length_index31:\
    \ usize = 0;\n    let mut current_note_length_index32: usize = 0;\n    let mut\
    \ current_note_length_index33: usize = 0;\n    let mut current_note_length_index34:\
    \ usize = 0;\n    let mut current_note_length_index35: usize = 0;\n    let mut\
    \ current_note_length_index36: usize = 0;\n    let mu", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = 0;\n    for c in music_string {\n        if\
    \ c == 'o' {\n            if current_beat == 0 {\n                current_note\
    \ = String::new();\n                current_note_length = 0;\n            }\n\
    \            current_beat += 1;\n            current_note.push(c);\n         \
    \   current_note_length += 1;\n        } else if c == '|' {\n            if current_beat\
    \ == 0 {\n                current_note = String::new();\n                current_note_length\
    \ = 0;\n            }\n            current_beat += 1;\n            current_note.push(c);\n\
    \            current_note_length += 1;\n        } else if c == '.' {\n       \
    \     if current_beat == 0 {\n                current_note = String::new();\n\
    \                current_note_length = 0;\n            }\n            current_beat\
    \ += 1;\n            current_note.push(c);\n            current_note_length +=\
    \ 1;\n        } else {\n            if current_beat == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n            }\n            current_note.push(c);\n\
    \            current_note_length += 1;\n        }\n    }\n    if current_beat\
    \ > 0 {\n        beats.push(current_beat);\n    }\n    beats", "    let mut beats:\
    \ Vec<isize> = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_note_count = 0;\n    for note in notes {\n       \
    \ if note == current_note {\n            current_note_count = current_note_count\
    \ + 1;\n        } else {\n            beats.push(current_beat);\n            current_note_count\
    \ = 1;\n            current_beat = 0;\n            current_note = note;\n    \
    \    }\n        current_beat = current_beat + 1;\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str>\
    \ = music_string.split_whitespace().collect();\n    let mut current_beat: isize\
    \ = 0;\n    let mut current_note = notes.next();\n    while let Some(note) = current_note\
    \ {\n        note = note.to_string();\n        if note == \"o\" {\n          \
    \  beats.push(current_beat);\n            current_beat += 4;\n        } else if\
    \ note == \"o|\" {\n            beats.push(current_beat);\n            current_beat\
    \ += 2;\n        } else if note == \".|\" {\n            beats.push(current_beat);\n\
    \            current_beat = 1;\n        } else {\n            panic!(\"Unknown\
    \ note '{}'\", note);\n        }\n        current_note = notes.next();\n    }\n\
    \    beats.push(current_beat);\n    beats", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat: isize = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length: isize = 0;\n    let mut current_note_length_index:\
    \ usize = 0;\n    let mut current_note_length_index2: usize = 0;\n    let mut\
    \ current_note_length_index3: usize = 0;\n    let mut current_note_length_index4:\
    \ usize = 0;\n    let mut current_note_length_index5: usize = 0;\n    let mut\
    \ current_note_length_index6: usize = 0;\n    let mut current_note_length_index7:\
    \ usize = 0;\n    let mut current_note_length_index8: usize = 0;\n    let mut\
    \ current_note_length_index9: usize = 0;\n    let mut current_note_length_index10:\
    \ usize = 0;\n    let mut current_note_length_index11: usize = 0;\n    let mut\
    \ current_note_length_index12: usize = 0;\n    let mut current_note_length_index13:\
    \ usize = 0;\n    let mut current_note_length_index14: usize = 0;\n    let mut\
    \ current_note_length_index15: usize = 0;\n    let mut current_note_length_index16:\
    \ usize = 0;\n    let mut current_note_length_index17: usize = 0;\n    let mut\
    \ current_note_length_index18: usize = 0;\n    let mut current_note_length_index19:\
    \ usize = 0;\n    let mut current_note_length_index20: usize = 0;\n    let mut\
    \ current_note_length_index21: usize = 0;\n    let mut current_note_length_index22:\
    \ usize = 0;\n    let mut current_note_length_index23: usize = 0;\n    let mut\
    \ current_note_length_index24: usize = 0;\n    let mut current_note_length_index25:\
    \ usize = 0;\n    let mut current_note_length_index26: usize = 0;\n    let mut\
    \ current_note_length_index27: usize = 0;\n    let mut current_note_length_index28:\
    \ usize = 0;\n    let mut current_note_length_index29: usize = 0;\n    let mut\
    \ current_note_length_index30: usize = 0;\n    let mut current_note_length_index31:\
    \ usize = 0;\n    let mut current_note_length_index32: usize = 0;\n    let mut\
    \ current_note_length_index33: usize = 0;\n    let mut current_note_length_index34:\
    \ usize = 0;\n    let mut current_note_length_index35: usize = 0;\n    let mut\
    \ current_note_length_index36: usize = 0;\n    let mu", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut notes: Vec<&str> = vec![];\n    let mut last_note = String::new();\n\
    \    let mut last_beat = 0;\n    let mut last_beats: isize = 0;\n    let mut last_beats_cnt\
    \ = 0;\n    let mut last_beats_cnt2 = 0;\n    let mut last_beats_cnt3 = 0;\n \
    \   let mut last_beats_cnt4 = 0;\n    let mut last_beats_cnt5 = 0;\n    let mut\
    \ last_beats_cnt6 = 0;\n    let mut last_beats_cnt7 = 0;\n    let mut last_beats_cnt8\
    \ = 0;\n    let mut last_beats_cnt9 = 0;\n    let mut last_beats_cnt10 = 0;\n\
    \    let mut last_beats_cnt11 = 0;\n    let mut last_beats_cnt12 = 0;\n    let\
    \ mut last_beats_cnt13 = 0;\n    let mut last_beats_cnt14 = 0;\n    let mut last_beats_cnt15\
    \ = 0;\n    let mut last_beats_cnt16 = 0;\n    let mut last_beats_cnt17 = 0;\n\
    \    let mut last_beats_cnt18 = 0;\n    let mut last_beats_cnt19 = 0;\n    let\
    \ mut last_beats_cnt20 = 0;\n    let mut last_beats_cnt21 = 0;\n    let mut last_beats_cnt22\
    \ = 0;\n    let mut last_beats_cnt23 = 0;\n    let mut last_beats_cnt24 = 0;\n\
    \    let mut last_beats_cnt25 = 0;\n    let mut last_beats_cnt26 = 0;\n    let\
    \ mut last_beats_cnt27 = 0;\n    let mut last_beats_cnt28 = 0;\n    let mut last_beats_cnt29\
    \ = 0;\n    let mut last_beats_cnt30 = 0;\n    let mut last_beats_cnt31 = 0;\n\
    \    let mut last_beats_cnt32 = 0;\n    let mut last_beats_cnt33 = 0;\n    let\
    \ mut last_beats_cnt34 = 0;\n    let mut last_beats_cnt35 = 0;\n    let mut last_beats_cnt36\
    \ = 0;\n    let mut last_beats_cnt37 = 0;\n    let mut last_beats_cnt38 = 0;\n\
    \    let mut last_beats_cnt39 = 0;\n    let mut last_beats_cnt40 = 0;\n    let\
    \ mut last_beats_cnt41 = 0;\n    let mut last_beats_cnt42 = 0;\n    let mut last_beats_cnt43\
    \ = 0;\n    let mut last_beats_cnt44 = 0;\n    let mut last_beats_cnt45 = 0;\n\
    \    let mut last_beats_cnt46 = 0;", "    let mut beats = vec![];\n    let mut\
    \ current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 1;\n    let mut current_note_length_index42\
    \ = 1;\n    let mut current_note_length_index43 = 1;\n    let mut current_note_length_index44\
    \ = 1;\n    let mut current_note_length_index45 = 1;\n    let mut current_note_length_index46\
    \ = 1;\n    let mut current_note_length_index47 = 1;\n    let mut current_note_length_index48\
    \ = 1;\n    let mut current_", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_length = 0;\n\
    \    for c in music_string {\n        if c == 'o' {\n            if current_note\
    \ == 0 {\n                current_note = 1;\n                current_beat += 1;\n\
    \            } else {\n                current_note += 1;\n            }\n   \
    \         current_note_length = 1;\n        } else {\n            if current_note\
    \ == 0 {\n                panic!(\"Invalid music string\");\n            }\n \
    \           current_note -= 1;\n            current_beat += 1;\n            current_note_length\
    \ += 1;\n        }\n        beats.push(current_beat);\n    }\n    beats", "  \
    \  let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n  \
    \  let mut current_note = String::new();\n    let mut current_note_len = 0;\n\
    \    let mut current_note_oct = 0;\n    let mut current_note_oct2 = 0;\n    let\
    \ mut current_note_oct3 = 0;\n    let mut current_note_oct4 = 0;\n    let mut\
    \ current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n    let mut current_note_oct7\
    \ = 0;\n    let mut current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n\
    \    let mut current_note_oct10 = 0;\n    let mut current_note_oct11 = 0;\n  \
    \  let mut current_note_oct12 = 0;\n    let mut current_note_oct13 = 0;\n    let\
    \ mut current_note_oct14 = 0;\n    let mut current_note_oct15 = 0;\n    let mut\
    \ current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n    let mut current_note_oct18\
    \ = 0;\n    let mut current_note_oct19 = 0;\n    let mut current_note_oct20 =\
    \ 0;\n    let mut current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n\
    \    let mut current_note_oct23 = 0;\n    let mut current_note_oct24 = 0;\n  \
    \  let mut current_note_oct25 = 0;\n    let mut current_note_oct26 = 0;\n    let\
    \ mut current_note_oct27 = 0;\n    let mut current_note_oct28 = 0;\n    let mut\
    \ current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n    let mut current_note_oct31\
    \ = 0;\n    let mut current_note_oct32 = 0;\n    let mut current_note_oct33 =\
    \ 0;\n    let mut current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n\
    \    let mut current_note_oct36 = 0;\n    let mut current_note_oct37 = 0;\n  \
    \  let mut current_note_oct38 = 0;\n    let mut current_note_oct39 = 0;\n    let\
    \ mut current_note_oct40 = 0;\n    let mut current_note_oct41 = 0;\n    let mut\
    \ current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n    let mut current_note_oct44\
    \ = 0;\n    let mut current_note_oct45 = 0;\n    let mut current_note_oct46 =\
    \ 0;\n    let mut current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n\
    \    let mut current_note_oct49 = 0;\n    let mut current_note_oct50 = 0;\n  \
    \  let mut current_note_oct51 = 0;\n    let mut current_note_oct52 = 0;\n    let\
    \ mut current_note_oct53", "    let mut beats = vec![];\n    let mut note = music_string.chars().nth(1).unwrap();\n\
    \    let mut last_beat = false;\n    let mut last_note = false;\n    for c in\
    \ music_string.chars() {\n        if c == note {\n            if last_note {\n\
    \                beats.push(4);\n            } else {\n                beats.push(1);\n\
    \            }\n            last_beat = true;\n            last_note = true;\n\
    \        } else {\n            if last_note {\n                beats.push(2);\n\
    \            } else {\n                beats.push(1);\n            }\n       \
    \     last_beat = false;\n            last_note = false;\n        }\n        note\
    \ = c;\n    }\n    beats", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_index\
    \ = 0;\n    let mut last_note = String::new();\n    let mut last_note_index =\
    \ 0;\n    let mut last_note_index2 = 0;\n    let mut last_note_index3 = 0;\n \
    \   let mut last_note_index4 = 0;\n    let mut last_note_index5 = 0;\n    let\
    \ mut last_note_index6 = 0;\n    let mut last_note_index7 = 0;\n    let mut last_note_index8\
    \ = 0;\n    let mut last_note_index9 = 0;\n    let mut last_note_index10 = 0;\n\
    \    let mut last_note_index11 = 0;\n    let mut last_note_index12 = 0;\n    let\
    \ mut last_note_index13 = 0;\n    let mut last_note_index14 = 0;\n    let mut\
    \ last_note_index15 = 0;\n    let mut last_note_index16 = 0;\n    let mut last_note_index17\
    \ = 0;\n    let mut last_note_index18 = 0;\n    let mut last_note_index19 = 0;\n\
    \    let mut last_note_index20 = 0;\n    let mut last_note_index21 = 0;\n    let\
    \ mut last_note_index22 = 0;\n    let mut last_note_index23 = 0;\n    let mut\
    \ last_note_index24 = 0;\n    let mut last_note_index25 = 0;\n    let mut last_note_index26\
    \ = 0;\n    let mut last_note_index27 = 0;\n    let mut last_note_index28 = 0;\n\
    \    let mut last_note_index29 = 0;\n    let mut last_note_index30 = 0;\n    let\
    \ mut last_note_index31 = 0;\n    let mut last_note_index32 = 0;\n    let mut\
    \ last_note_index33 = 0;\n    let mut last_note_index34 = 0;\n    let mut last_note_index35\
    \ = 0;\n    let mut last_note_index36 = 0;\n    let mut last_note_index37 = 0;\n\
    \    let mut last_note_index38 = 0;\n    let mut last_note_index39 = 0;\n    let\
    \ mut last_note_index40 = 0;\n    let mut last_note_index41 = 0;\n    let mut\
    \ last_note_index42 = 0;\n    let mut last_note_index43 = 0;\n    let mut last_note_index44\
    \ = 0;\n    let mut last_note_index45 = 0;\n    let mut last_note_index46 = 0;\n\
    \    let mut last_note_index47 = 0;\n    let mut last_note_index48 = 0;\n    let\
    \ mut last_note_index49 = 0;\n    let mut last_note_index50 = 0;\n    let mut\
    \ last_note_index51 = 0;\n    let mut last_note_index52 = 0;\n    let mut ", " \
    \   let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n  \
    \  let mut current_note = 0;\n    let mut current_note_value = 0;\n    let mut\
    \ current_note_length = 0;\n    let mut current_note_length_value = 0;\n    let\
    \ mut current_note_length_value_value = 0;\n    let mut current_note_length_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_value_value_value_value = 0;\n    let mut current_note_length_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_value_value", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_octave = 0;\n    for c in music_string.chars() {\n      \
    \  if c.is_ascii() {\n            let note = match c {\n                'o' =>\
    \ \"o\",\n                'o|' => \"o|\",\n                '.|' => \".|\",\n \
    \               _ => unreachable!(),\n            };\n            let octave =\
    \ match c {\n                'o' => 0,\n                'o|' => 1,\n         \
    \       '.|' => 2,\n                _ => unreachable!(),\n            };\n   \
    \         current_note = note;\n            current_octave = octave;\n       \
    \ } else {\n            if current_note != String::new() && current_octave !=\
    \ 0 {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_octave\
    \ = 0;\n            }\n            current_note += c;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_note\
    \ = String::new();\n    let mut current_beat = 0;\n    let mut current_duration\
    \ = 0;\n    let mut current_note_duration = 0;\n    let mut current_note_duration_index\
    \ = 0;\n    for c in music_string.chars() {\n        if c.is_ascii() {\n     \
    \       current_note.push(c);\n        } else {\n            if current_note.is_empty()\
    \ {\n                continue;\n            }\n            beats.push(current_beat);\n\
    \            current_note.clear();\n            current_beat = 0;\n        }\n\
    \        if c.is_ascii() && c.is_ascii(..=b'|') {\n            current_note.push(c);\n\
    \            current_duration = current_note_duration;\n            current_note_duration_index\
    \ = 0;\n        } else if c.is_ascii() && c.is_ascii(..=b'o') {\n            current_note.push(c);\n\
    \            current_duration = current_note_duration;\n            current_note_duration_index\
    \ = 1;\n        } else if c.is_ascii() && c.is_ascii(..=b'|') {\n            current_note.push(c);\n\
    \            current_duration = current_note_duration;\n            current_note_duration_index\
    \ = 2;\n        } else if c.is_ascii() && c.is_ascii(..=b'o') {\n            current_note.push(c);\n\
    \            current_duration = current_note_duration;\n            current_note_duration_index\
    \ = 3;\n        } else if c.is_ascii() && c.is_ascii(..=b'|') {\n            current_note.push(c);\n\
    \            current_duration = current_note_duration;\n            current_note_duration_index\
    \ = 4;\n        } else if c.is_ascii() && c.is_ascii(..=b'o') {\n            current_note.push(c);\n\
    \            current_duration = current_note_duration;\n            current_note_duration_index\
    \ = 5;\n        } else if c.is_ascii() && c.is_ascii(..=b'|') {\n            current_note.push(c);\n\
    \            current_duration = current_note_duration;\n            current_note_duration_index\
    \ = 6;\n        } else if c.is_ascii() && c.is_ascii(..=b'o') {\n            current_note.push(c);\n\
    \            current_duration = current_note_duration;\n            current_note_duration_index\
    \ = 7;\n        } else if c.is_ascii() && c.is_ascii(..=b'|') {\n            current_note.push(c);\n\
    \            current_duration = current_note_duration;\n            current_note_duration_index\
    \ = 8;\n        } else if c.is_ascii() && c.is_ascii(..=b'o') {\n            current_note.push(c);\n\
    \            current_duration = current_note_duration;\n            current_note_duration_index\
    \ = 9;\n        } else if c.is_ascii() && c.is_ascii(..=b'|') {\n            current_note.push(c);\n\
    \            current_duration = current_note_duration;\n            current_note_duration_index\
    \ = 10;\n        } else if c.is_ascii() && c.is_", "    let mut beats: Vec<isize>\
    \ = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note = 0;\n\
    \    let mut current_note_length = 0;\n    let mut current_note_length_index =\
    \ 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;", "    let mut beats = vec![];\n\
    \    let mut notes = music_string.split_whitespace();\n    let mut current_note\
    \ = 0;\n    let mut current_beat = 0;\n    for note in notes {\n        if note\
    \ == \"o\" {\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note += 1;\n        } else if note == \"o|\" {\n \
    \           beats.push(current_beat);\n            current_beat = 0;\n       \
    \     current_note += 2;\n        } else if note == \".|\" {\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note += 4;\n        } else\
    \ {\n            current_beat += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut notes:\
    \ Vec<&str> = music_string.split_whitespace().collect();\n    let mut current_note\
    \ = notes.last().unwrap();\n    let mut current_beat = 0;\n    let mut current_length\
    \ = 0;\n    while notes.len() > 0 {\n        if notes.len() == 1 {\n         \
    \   beats.push(current_beat);\n            current_length = 1;\n            current_beat\
    \ = 0;\n            current_note = notes.last().unwrap();\n        } else {\n\
    \            let mut current_length = current_length + 1;\n            let mut\
    \ current_note = notes.last().unwrap();\n            let mut current_beat = current_beat\
    \ + 1;\n            notes.pop();\n        }\n    }\n    beats", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat: isize = 0;\n    let mut\
    \ current_note = String::new();\n    let mut current_note_length = 0;\n    let\
    \ mut current_note_length_index = 0;\n    let mut current_note_length_index2 =\
    \ 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mu", "    let mut\
    \ beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let\
    \ mut current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n    let mut\
    \ current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n    let mut current_note_oct6\
    \ = 0;\n    let mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n\
    \    let mut current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n   \
    \ let mut current_note_oct11 = 0;\n    let mut current_note_oct12 = 0;\n    let\
    \ mut current_note_oct13 = 0;\n    let mut current_note_oct14 = 0;\n    let mut\
    \ current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n    let mut current_note_oct17\
    \ = 0;\n    let mut current_note_oct18 = 0;\n    let mut current_note_oct19 =\
    \ 0;\n    let mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n\
    \    let mut current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n  \
    \  let mut current_note_oct24 = 0;\n    let mut current_note_oct25 = 0;\n    let\
    \ mut current_note_oct26 = 0;\n    let mut current_note_oct27 = 0;\n    let mut\
    \ current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n    let mut current_note_oct30\
    \ = 0;\n    let mut current_note_oct31 = 0;\n    let mut current_note_oct32 =\
    \ 0;\n    let mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n\
    \    let mut current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n  \
    \  let mut current_note_oct37 = 0;\n    let mut current_note_oct38 = 0;\n    let\
    \ mut current_note_oct39 = 0;\n    let mut current_note_oct40 = 0;\n    let mut\
    \ current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n    let mut current_note_oct43\
    \ = 0;\n    let mut current_note_oct44 = 0;\n    let mut current_note_oct45 =\
    \ 0;\n    let mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n\
    \    let mut current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n  \
    \  let mut current_note_oct50 = 0;\n    let mut current_note_oct51 = 0;\n    let\
    \ mut current_note_oct52 = 0;\n    let mut current_note_oct53 = 0;\n    let mut\
    \ current_note_", "    let mut beats = vec![];\n    let mut current_beat = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_note_len = 0;\n\
    \    let mut current_note_oct = 0;\n    let mut current_note_oct2 = 0;\n    let\
    \ mut current_note_oct3 = 0;\n    let mut current_note_oct4 = 0;\n    let mut\
    \ current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n    let mut current_note_oct7\
    \ = 0;\n    let mut current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n\
    \    let mut current_note_oct10 = 0;\n    let mut current_note_oct11 = 0;\n  \
    \  let mut current_note_oct12 = 0;\n    let mut current_note_oct13 = 0;\n    let\
    \ mut current_note_oct14 = 0;\n    let mut current_note_oct15 = 0;\n    let mut\
    \ current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n    let mut current_note_oct18\
    \ = 0;\n    let mut current_note_oct19 = 0;\n    let mut current_note_oct20 =\
    \ 0;\n    let mut current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n\
    \    let mut current_note_oct23 = 0;\n    let mut current_note_oct24 = 0;\n  \
    \  let mut current_note_oct25 = 0;\n    let mut current_note_oct26 = 0;\n    let\
    \ mut current_note_oct27 = 0;\n    let mut current_note_oct28 = 0;\n    let mut\
    \ current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n    let mut current_note_oct31\
    \ = 0;\n    let mut current_note_oct32 = 0;\n    let mut current_note_oct33 =\
    \ 0;\n    let mut current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n\
    \    let mut current_note_oct36 = 0;\n    let mut current_note_oct37 = 0;\n  \
    \  let mut current_note_oct38 = 0;\n    let mut current_note_oct39 = 0;\n    let\
    \ mut current_note_oct40 = 0;\n    let mut current_note_oct41 = 0;\n    let mut\
    \ current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n    let mut current_note_oct44\
    \ = 0;\n    let mut current_note_oct45 = 0;\n    let mut current_note_oct46 =\
    \ 0;\n    let mut current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n\
    \    let mut current_note_oct49 = 0;\n    let mut current_note_oct50 = 0;\n  \
    \  let mut current_note_oct51 = 0;\n    let mut current_note_oct52 = 0;\n    let\
    \ mut current_note_oct53 = 0;\n    let mut current_note_", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let ", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_length = 0;\n    let mut current_note_octave = 0;\n  \
    \  let mut current_note_octave_change = 0;\n    let mut current_note_octave_change_length\
    \ = 0;\n    let mut current_note_octave_change_octave = 0;\n    let mut current_note_octave_change_octave_change\
    \ = 0;\n    let mut current_note_octave_change_octave_change_length = 0;\n   \
    \ let mut current_note_octave_change_octave_change_octave = 0;\n    let mut current_note_octave_change_octave_change_octave_change\
    \ = 0;\n    let mut current_note_octave_change_octave_change_octave_change_length\
    \ = 0;\n    let mut current_note_octave_change_octave_change_octave_change_octave\
    \ = 0;\n    let mut current_note_octave_change_octave_change_octave_change_octave_change\
    \ = 0;\n    let mut current_note_octave_change_octave_change_octave_change_octave_change_length\
    \ = 0;\n    let mut current_note_octave_change_octave_change_octave_change_octave_change_octave\
    \ = 0;\n    let mut current_note_octave_change_octave_change_octave_change_octave_change_octave\
    \ = 0;\n    let mut current_note_octave_change_octave_change_octave_change_octave_change_octave_change\
    \ = 0;\n    let mut current_note_octave_change_octave_change_octave_change_octave_change_octave_change_length\
    \ = 0;\n    let mut current_note_octave_change_octave_change_octave_change_octave_change_octave_change_octave\
    \ = 0;\n    let mut current_note_octave_change_octave_change_octave_change_octave_change_octave_change_octave\
    \ = 0;\n    let mut current_note_octave_change_octave_change_octave_change_octave_change_octave_change_octave_change\
    \ = 0;\n    let mut current_note_octave_change_octave_change_octave_change_octave_change_octave_change_octave_change_length\
    \ = 0;\n    let mut current_note_octave_change_octave_change_octave_change_octave_change_octave_change_octave_change_octave\
    \ = 0;\n    let mut current_note_octave_change_octave_change_octave_change_oct",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_type = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let ", "    let mut beats:\
    \ Vec<isize> = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_length = 0;\n    for note in notes {\n        if note\
    \ == current_note {\n            current_beat += 1;\n            current_length\
    \ += 1;\n        } else {\n            beats.push(current_beat);\n           \
    \ current_beat = 1;\n            current_length = 1;\n            current_note\
    \ = note;\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    let mut current_note_len\
    \ = music_string.len();\n    while current_note_len > 0 {\n        let mut note_len\
    \ = current_note_len;\n        if note_len > 4 {\n            note_len = 4 - note_len;\n\
    \        }\n        let mut note = String::new();\n        for _ in 0..note_len\
    \ {\n            note.push('o');\n        }\n        note.push(music_string[current_note_len..]);\n\
    \        note.push(music_string[current_note_len..]);\n        note.push(music_string[current_note_len..]);\n\
    \        note.push(music_string[current_note_len..]);\n        note.push(music_string[current_note_len..]);\n\
    \        note.push(music_string[current_note_len..]);\n        note.push(music_string[current_note_len..]);\n\
    \        note.push(music_string[current_note_len..]);\n        note.push(music_string[current_note_len..]);\n\
    \        note.push(music_string[current_note_len..]);\n        note.push(music_string[current_note_len..]);\n\
    \        note.push(music_string[current_note_len..]);\n        note.push(music_string[current_note_len..]);\n\
    \        note.push(music_string[current_note_len..]);\n        note.push(music_string[current_note_len..]);\n\
    \        note.push(music_string[current_note_len..]);\n        note.push(music_string[current_note_len..]);\n\
    \        note.push(music_string[current_note_len..]);\n        note.push(music_string[current_note_len..]);\n\
    \        note.push(music_string[current_note_len..]);\n        note.push(music_string[current_note_len..]);\n\
    \        note.push(music_string[current_note_len..]);\n        note.push(music_string[current_note_len..]);\n\
    \        note.push(music_string[current_note_len..]);\n        note.push(music_string[current_note_len..]);\n\
    \        note.push(music_string[current_note_len..]);\n        note.push(music_string[current_note_len..]);\n\
    \        note.push(music_string[current_note_len..]);\n        note.push(music_string[current_note_len..]);",
  "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|&(_,\
    \ note)| note != 'o');\n    for note in notes {\n        let mut beat = 0;\n \
    \       let mut last_note = note.1;\n        while note != last_note {\n     \
    \       beat += 1;\n            last_note = note.1;\n            note = note.2;\n\
    \        }\n        beats.push(beat);\n    }\n    beats", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.clone();\n    let mut current_beat = 0;\n  \
    \  let mut current_note_index = 0;\n    while current_note_index < notes.len()\
    \ {\n        let note = &notes[current_note_index];\n        note = note.trim_end().to_string();\n\
    \        if note == \"o\" {\n            beats.push(current_beat);\n         \
    \   current_beat += 4;\n            current_note_index += 1;\n        } else if\
    \ note == \"o|\" {\n            beats.push(current_beat);\n            current_beat\
    \ += 2;\n            current_note_index += 1;\n        } else if note == \".|\"\
    \ {\n            beats.push(current_beat);\n            current_beat += 1;\n \
    \           current_note_index += 1;\n        } else {\n            current_note_index\
    \ += 1;\n        }\n    }\n    beats", "    let mut beats = vec![];\n    let mut\
    \ current_beat = 0;\n    let mut current_note = String::new();\n    for c in music_string.chars()\
    \ {\n        if c == 'o' {\n            if current_beat > 4 {\n              \
    \  beats.push(current_beat);\n                current_beat = 0;\n            }\n\
    \            current_note = String::new();\n        } else if c == '|' {\n   \
    \         if current_beat > 2 {\n                beats.push(current_beat);\n \
    \               current_beat = 0;\n            }\n            current_note = String::new();\n\
    \        } else if c == '.' {\n            if current_beat > 1 {\n           \
    \     beats.push(current_beat);\n                current_beat = 0;\n         \
    \   }\n            current_note = String::new();\n        } else {\n         \
    \   current_note.push(c);\n        }\n    }\n    beats.push(current_beat);\n \
    \   beats", "    let mut beats = vec![];\n    let mut notes = music_string.split_whitespace();\n\
    \    let mut current_note = notes.next().unwrap();\n    let mut current_beat =\
    \ 0;\n    let mut current_beat_length = 0;\n    while let Some(note) = notes.next()\
    \ {\n        match note {\n            \"o\" => {\n                beats.push(current_beat);\n\
    \                current_beat_length = 4;\n                current_beat = 0;\n\
    \                current_note = note;\n            }\n            \"o|\" => {\n\
    \                beats.push(current_beat);\n                current_beat_length\
    \ = 2;\n                current_beat = 0;\n                current_note = note;\n\
    \            }\n            \".|\" => {\n                beats.push(current_beat);\n\
    \                current_beat_length = 1;\n                current_beat = 0;\n\
    \                current_note = note;\n            }\n            _ => {\n   \
    \             current_beat += 1;\n                current_beat_length += 1;\n\
    \                current_note = note;\n            }\n        }\n    }\n    beats.push(current_beat);\n\
    \    current_beat_length += 1;\n    beats", "    let mut beats = vec![];\n   \
    \ let mut current_beat = 0;\n    let mut current_note = String::new();\n    let\
    \ mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n \
    \   let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index45\
    \ = 1;\n    let mut current_note_length_index46 = 1;\n    let mut current_note_length_index47\
    \ = 1;\n    let mut current_note_length_index48 = 1;\n", "    let mut beats =\
    \ Vec::new();\n    let mut notes = music_string.chars().enumerate().filter(|&(_,\
    \ c)| c != '|');\n    let mut current_note = 0;\n    let mut current_beat = 0;\n\
    \    let mut current_note_length = 0;\n    let mut last_note = -1;\n    let mut\
    \ last_beat = -1;\n    let mut last_note_length = -1;\n    for note in notes {\n\
    \        let note_length = note.1.len();\n        if current_note == 0 {\n   \
    \         current_note = note.0;\n            current_beat = 0;\n            current_note_length\
    \ = note_length;\n            last_note = -1;\n            last_beat = -1;\n \
    \           last_note_length = -1;\n        } else if current_note != note.0 {\n\
    \            if current_note != last_note {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note_length = note_length;\n\
    \            }\n            current_note = note.0;\n            current_beat =\
    \ 0;\n            current_note_length = note_length;\n            last_note =\
    \ -1;\n            last_beat = -1;\n            last_note_length = -1;\n     \
    \   }\n        if note.1 == ' ' {\n            if current_note != last_note {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note_length = note_length;\n            }\n         \
    \   current_note = note.0;\n            current_beat = 0;\n            current_note_length\
    \ = note_length;\n            last_note = -1;\n            last_beat = -1;\n \
    \           last_note_length = -1;\n        } else if note.1 == '|' {\n      \
    \      if current_note != last_note {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note_length = note_length;\n\
    \            }\n            current_note = note.0;\n            current_beat =\
    \ 0;\n            current_note_length = note_length;\n            last_note =\
    \ -1;\n            last_beat = -1;\n            last_note_length = -1;\n     \
    \   } else {\n            if current_note != note.0 {\n                if current_note\
    \ != last_note {\n                    beats.push(current_beat);\n            \
    \        current_beat = 0;\n                    current_note_length = note_length;\n\
    \                }\n                current_note = note.0;\n                current_beat\
    \ = 0;\n                current_note_length = note_length;\n                last_note\
    \ = -1;\n                last_beat = -1;\n                last_note_length = -1;\n\
    \            }\n            current_beat += 1;\n            current_note_length\
    \ += 1;\n            last_note = -1;\n            last_beat = -1;\n          \
    \  last_note_length = -1;\n        }\n    }\n    if current_note != last_note\
    \ {\n        beats.push(current_beat);\n    }\n    beats", "    let mut beats\
    \ = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ note)| note != '|');\n    for note in notes {\n        note.1.push(note.0);\n\
    \    }\n    for note in notes {\n        let mut beat = 0;\n        let mut note\
    \ = note.1;\n        while note != note {\n            beat += 1;\n          \
    \  note = note.next();\n        }\n        beats.push(beat);\n    }\n    beats",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    for c in music_string\
    \ {\n        if c == 'o' {\n            if current_note_len == 0 {\n         \
    \       println!(\"Invalid music string\");\n                return beats;\n \
    \           }\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note_len = 0;\n            current_note = String::new();\n\
    \        } else if c == '|' {\n            if current_note_len == 0 {\n      \
    \          println!(\"Invalid music string\");\n                return beats;\n\
    \            }\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note_len = 0;\n            current_note = String::new();\n\
    \        } else if c == '.' {\n            current_note.push_str(&current_note_len.to_string());\n\
    \            current_note_len = 0;\n        } else {\n            current_note.push_str(&c.to_string());\n\
    \            current_note_len = c.len();\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = String::from(\"\");\n    let mut current_beat = 0;\n\
    \    let mut current_beats_left = 0;\n    let mut current_notes_left = 0;\n  \
    \  let mut current_notes_left_index = 0;\n    let mut current_notes_left_index2\
    \ = 0;\n    let mut current_notes_left_index3 = 0;\n    let mut current_notes_left_index4\
    \ = 0;\n    let mut current_notes_left_index5 = 0;\n    let mut current_notes_left_index6\
    \ = 0;\n    let mut current_notes_left_index7 = 0;\n    let mut current_notes_left_index8\
    \ = 0;\n    let mut current_notes_left_index9 = 0;\n    let mut current_notes_left_index10\
    \ = 0;\n    let mut current_notes_left_index11 = 0;\n    let mut current_notes_left_index12\
    \ = 0;\n    let mut current_notes_left_index13 = 0;\n    let mut current_notes_left_index14\
    \ = 0;\n    let mut current_notes_left_index15 = 0;\n    let mut current_notes_left_index16\
    \ = 0;\n    let mut current_notes_left_index17 = 0;\n    let mut current_notes_left_index18\
    \ = 0;\n    let mut current_notes_left_index19 = 0;\n    let mut current_notes_left_index20\
    \ = 0;\n    let mut current_notes_left_index21 = 0;\n    let mut current_notes_left_index22\
    \ = 0;\n    let mut current_notes_left_index23 = 0;\n    let mut current_notes_left_index24\
    \ = 0;\n    let mut current_notes_left_index25 = 0;\n    let mut current_notes_left_index26\
    \ = 0;\n    let mut current_notes_left_index27 = 0;\n    let mut current_notes_left_index28\
    \ = 0;\n    let mut current_notes_left_index29 = 0;\n    let mut current_notes_left_index30\
    \ = 0;\n    let mut current_notes_left_index31 = 0;\n    let mut current_notes_left_index32\
    \ = 0;\n    let mut current_notes_left_index33 = 0;\n    let mut current_notes_left_index34\
    \ = 0;\n    let mut current_notes_left_index35 = 0;\n    let mut current_notes_left_index36\
    \ = 0;\n    let mut current_notes_left_index37 = 0;\n    let mut current_notes_left_index38\
    \ = 0;\n    let mut current_notes_left_index39 = 0;\n    let mut current_notes_left_index40\
    \ = 0;\n    let mut current_notes_", "    let mut beats: Vec<isize> = Vec::new();\n\
    \    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n \
    \   let mut current_note = notes.last().unwrap();\n    let mut current_beat =\
    \ 0;\n    let mut current_note_index = 0;\n    let mut current_note_length = 0;\n\
    \    while current_note_index < notes.len() {\n        let mut current_note_length\
    \ = notes[current_note_index].len();\n        let mut current_note = notes[current_note_index];\n\
    \        if current_note.len() > current_note_length {\n            current_note_length\
    \ = current_note.len();\n        }\n        if current_note.len() == current_note_length\
    \ {\n            beats.push(current_beat);\n            current_beat += 1;\n \
    \           current_note_index += 1;\n            current_note_length = 0;\n \
    \           current_note = notes[current_note_index];\n        }\n        if current_note.len()\
    \ == current_note_length {\n            beats.push(current_beat);\n          \
    \  current_beat += 1;\n            current_note_index += 1;\n            current_note_length\
    \ = 0;\n            current_note = notes[current_note_index];\n        }\n   \
    \     if current_note.len() == current_note_length {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n            current_note_index += 1;\n      \
    \      current_note_length = 0;\n            current_note = notes[current_note_index];\n\
    \        }\n        if current_note.len() == current_note_length {\n         \
    \   beats.push(current_beat);\n            current_beat += 1;\n            current_note_index\
    \ += 1;\n            current_note_length = 0;\n            current_note = notes[current_note_index];\n\
    \        }\n        if current_note.len() == current_note_length {\n         \
    \   beats.push(current_beat);\n            current_beat += 1;\n            current_note_index\
    \ += 1;\n            current_note_length = 0;\n            current_note = notes[current_note_index];\n\
    \        }\n        if current_note.len() == current_note_length {\n         \
    \   beats.push(current_beat);\n            current_beat += 1;\n            current_note_index\
    \ += 1;\n            current_note_length = 0;\n            current_note = notes[current_note_index];\n\
    \        }\n        if current_note.len() == current_note_length {\n         \
    \   beats.push(current_beat);\n            current_beat += 1;\n            current_note_index\
    \ += 1;\n            current_note_length = 0;\n            current_note = notes[current_note_index];\n\
    \        }\n        if current_note.len() == current_note_length {\n         \
    \   beats.push(current_beat);\n            current_beat += 1;\n            current_note_index\
    \ += 1;\n            current_note_length = 0;\n            current_note = notes[current_note_index];\n\
    \        }\n        if current_note.len(", "    let mut beats = vec![];\n    let\
    \ mut notes = music_string.chars().enumerate();\n    let mut current_note = 0;\n\
    \    let mut current_beat = 0;\n    loop {\n        let note = notes.next().unwrap().0;\n\
    \        let beat = notes.next().unwrap().1;\n        if note == 'o' {\n     \
    \       beats.push(beat);\n            current_note += 1;\n            current_beat\
    \ = 0;\n        } else if note == 'o|' {\n            beats.push(beat);\n    \
    \        current_note += 1;\n            current_beat = 1;\n        } else if\
    \ note == '.|' {\n            beats.push(beat);\n            current_note += 1;\n\
    \            current_beat = 2;\n        } else {\n            current_note +=\
    \ 1;\n        }\n        if current_note > 4 {\n            break;\n        }\n\
    \    }\n    beats", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ note)| note != 'o').collect::<Vec<_>>();\n    let mut current_beat = 0;\n  \
    \  for note in notes {\n        let mut current_note = note.1;\n        let mut\
    \ current_beats = beats.len();\n        while current_note != 'o' {\n        \
    \    if current_note == '|' {\n                beats.push(current_beats);\n  \
    \              current_beats += 1;\n                current_note = notes[notes.len()\
    \ - 1].1;\n            } else {\n                current_note += 1;\n        \
    \    }\n        }\n        beats.push(current_beats);\n    }\n    beats", "  \
    \  let mut beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    for c in music_string.chars() {\n        if c.is_ascii()\
    \ {\n            if c.to_ascii_lowercase() == 'o' {\n                if current_beat\
    \ > 0 {\n                    beats.push(current_beat);\n                }\n  \
    \              current_beat = 0;\n                current_note = String::new();\n\
    \            } else {\n                if current_beat > 0 {\n               \
    \     beats.push(current_beat);\n                }\n                current_beat\
    \ = 0;\n                current_note.push(c);\n            }\n        } else {\n\
    \            if c.to_ascii_lowercase() == 'o' {\n                current_beat\
    \ += 1;\n            } else {\n                current_beat += 4;\n          \
    \  }\n        }\n    }\n    if current_beat > 0 {\n        beats.push(current_beat);\n\
    \    }\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut\
    \ notes: Vec<&str> = music_string.split_whitespace().collect();\n    let mut current_note\
    \ = notes.first().unwrap();\n    let mut current_beat = 0;\n    let mut current_length\
    \ = 0;\n    for note in notes {\n        if note == current_note {\n         \
    \   current_beat += 1;\n            current_length += 1;\n        } else {\n \
    \           beats.push(current_beat);\n            current_beat = 1;\n       \
    \     current_length = 1;\n            current_note = note;\n        }\n    }\n\
    \    beats.push(current_beat);\n    beats", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_len = 0;\n    for c in music_string {\n        if c ==\
    \ 'o' {\n            if current_note_len == 0 {\n                println!(\"Invalid\
    \ music string\");\n                return beats;\n            }\n           \
    \ beats.push(current_beat);\n            current_beat += current_note_len;\n \
    \           current_note = String::new();\n            current_note_len = 0;\n\
    \        } else if c == '|' {\n            if current_note_len == 0 {\n      \
    \          println!(\"Invalid music string\");\n                return beats;\n\
    \            }\n            beats.push(current_beat);\n            current_beat\
    \ += current_note_len;\n            current_note = String::new();\n          \
    \  current_note_len = 0;\n        } else if c == '.' {\n            if current_note_len\
    \ == 0 {\n                println!(\"Invalid music string\");\n              \
    \  return beats;\n            }\n            current_note_len = current_note.len()\
    \ as isize;\n        } else {\n            current_note.push(c);\n           \
    \ current_note_len = current_note.len() as isize;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_length = 0;\n\
    \    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;", "    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str>\
    \ = music_string.split_whitespace().collect();\n    let mut current_note = notes.first().unwrap();\n\
    \    let mut current_beat = 0;\n    let mut current_note_count = 0;\n    let mut\
    \ current_note_length = 0;\n    let mut current_note_length_index = 0;\n    let\
    \ mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length",
  "    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_note_count = 0;\n    let mut current_note_last_beat\
    \ = 0;\n    let mut current_note_last_note = 0;\n    let mut current_note_last_note_beat\
    \ = 0;\n    let mut current_note_last_note_octave = 0;\n    let mut current_note_octave\
    \ = 0;\n    let mut current_note_octave_octave = 0;\n    let mut current_note_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave = 0;\n    let mut\
    \ current_note_octave_octave_octave_octave_octave = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave_octave\
    \ = 0;", "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note = 0;\n    let mut current_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat = 0;\n\
    \    let mut current_note_length_to_beat_with_note_length_to_beat_with_note =\
    \ 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mu", "    let mut\
    \ beats = vec![];\n    let mut notes = music_string.chars().enumerate();\n   \
    \ let mut current_note = 0;\n    let mut current_beat = 0;\n    let mut current_note_index\
    \ = 0;\n    let mut current_beat_length = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_value = 0;\n    let mut current_note_octave =\
    \ 0;\n    let mut current_note_octave_length = 0;\n    let mut current_note_octave_offset\
    \ = 0;\n    let mut current_note_octave_octave = 0;\n    let mut current_note_octave_octave_length\
    \ = 0;\n    let mut current_note_octave_octave_offset = 0;\n    let mut current_note_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_length = 0;\n    let mut\
    \ current_note_octave_octave_octave_offset = 0;\n    let mut current_note_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_length = 0;\n   \
    \ let mut current_note_octave_octave_octave_octave_offset = 0;\n    let mut current_note_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_length = 0;\n\
    \    let mut current_note_octave_octave_octave_octave_octave_offset = 0;\n   \
    \ let mut current_note_octave_octave_octave_octave_octave_octave = 0;\n    let\
    \ mut current_note_octave_octave_octave_octave_octave_octave_length = 0;\n   \
    \ let mut current_note_octave_octave_octave_octave_octave_offset = 0;\n    let\
    \ mut current_note_octave_octave_octave_octave_octave_octave_octave = 0;\n   \
    \ let mut current_note_octave_octave_octave_octave_octave_octave_octave_length\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_offset\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octa", "    let mut beats = vec![];\n\
    \    let mut notes = music_string.chars().enumerate().filter(|(_, note)| note\
    \ != '|');\n    for note in notes {\n        let mut beat = 0;\n        let mut\
    \ note = note.unwrap();\n        if note == 'o' {\n            beat = 4;\n   \
    \     } else if note == 'o|' {\n            beat = 2;\n        } else if note\
    \ == '.|' {\n            beat = 1;\n        }\n        for _ in 0..beat {\n  \
    \          beats.push(beat);\n        }\n    }\n    beats", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = 0;\n    for c in music_string {\n        if\
    \ c == 'o' {\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n            current_note_length\
    \ = 0;\n        } else if c == '|' {\n            current_beat += 1;\n       \
    \ } else if c == '.' {\n            current_beat += 1;\n            current_note_length\
    \ += 1;\n        } else {\n            current_note += c;\n            current_note_length\
    \ += 1;\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let\
    \ mut current_note = 0;\n    let mut current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_uppercase() == 'O' {\n\
    \                beats.push(current_beat);\n                current_beat += 4;\n\
    \                current_note++;\n                current_note_length = 4;\n \
    \           } else if c.to_ascii_uppercase() == '|' {\n                beats.push(current_beat);\n\
    \                current_beat += 2;\n                current_note++;\n       \
    \         current_note_length = 2;\n            } else if c.to_ascii_uppercase()\
    \ == '.' {\n                beats.push(current_beat);\n                current_beat\
    \ += 1;\n                current_note++;\n                current_note_length\
    \ = 1;\n            } else {\n                println!(\"Invalid music note: {:?}\"\
    , c);\n            }\n        } else {\n            println!(\"Invalid music note:\
    \ {:?}\", c);\n        }\n    }\n    beats.push(current_beat);\n    current_beat\
    \ += current_note;\n    beats.push(current_beat);\n    beats", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            let note = match c {\n           \
    \     'o' => 0,\n                'o|' => 1,\n                '.|' => 2,\n    \
    \            _ => panic!(\"Unexpected character in music string: {}\", c),\n \
    \           };\n            beats.push(current_beat);\n            current_beat\
    \ += note;\n            current_note_length += note;\n            current_note\
    \ += note;\n        } else {\n            current_beat += 1;\n            current_note_length\
    \ += 1;\n            current_note += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    for c in music_string.chars() {\n        if c == 'o' {\n\
    \            if current_beat == 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else {\n                current_beat += 1;\n            }\n   \
    \     } else if c == '|' {\n            if current_beat == 0 {\n             \
    \   beats.push(current_beat);\n                current_beat = 0;\n           \
    \     current_note = String::new();\n            } else {\n                current_beat\
    \ += 1;\n            }\n        } else if c == '.' {\n            if current_beat\
    \ == 0 {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n            } else {\n\
    \                current_beat += 1;\n            }\n        } else {\n       \
    \     current_note.push(c);\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|&(_,\
    \ note)| note != 'o');\n    for note in notes {\n        if note.1 == notes.len()\
    \ - 1 {\n            beats.push(4);\n        } else {\n            beats.push(note.1.saturating_sub(note.0));\n\
    \        }\n    }\n    beats", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let ", "    let mut beats = vec![];\n    let mut notes =\
    \ music_string.chars().enumerate().filter(|(_, note)| note != '|');\n    let mut\
    \ last_note = notes.next().unwrap();\n    let mut last_beat = last_note.1.chars().enumerate().filter(|(_,\
    \ beat)| beat != 'o').next().unwrap().1;\n    let mut last_beat = last_beat.chars().enumerate().filter(|(_,\
    \ beat)| beat != '|').next().unwrap().1;\n    let mut last_beat = last_beat.chars().enumerate().filter(|(_,\
    \ beat)| beat != 'o').next().unwrap().1;\n    let mut last_beat = last_beat.chars().enumerate().filter(|(_,\
    \ beat)| beat != '|').next().unwrap().1;\n    let mut last_beat = last_beat.chars().enumerate().filter(|(_,\
    \ beat)| beat != 'o').next().unwrap().1;\n    let mut last_beat = last_beat.chars().enumerate().filter(|(_,\
    \ beat)| beat != '|').next().unwrap().1;\n    let mut last_beat = last_beat.chars().enumerate().filter(|(_,\
    \ beat)| beat != 'o').next().unwrap().1;\n    let mut last_beat = last_beat.chars().enumerate().filter(|(_,\
    \ beat)| beat != '|').next().unwrap().1;\n    let mut last_beat = last_beat.chars().enumerate().filter(|(_,\
    \ beat)| beat != 'o').next().unwrap().1;\n    let mut last_beat = last_beat.chars().enumerate().filter(|(_,\
    \ beat)| beat != '|').next().unwrap().1;\n    let mut last_beat = last_beat.chars().enumerate().filter(|(_,\
    \ beat)| beat != 'o').next().unwrap().1;\n    let mut last_beat = last_beat.chars().enumerate().filter(|(_,\
    \ beat)| beat != '|').next().unwrap().1;\n    let mut last_beat = last_beat.chars().enumerate().filter(|(_,\
    \ beat)| beat != 'o').next().unwrap().1;\n    let mut last_beat = last_beat.chars().enumerate().filter(|(_,\
    \ beat)| beat != '|').next().unwrap().1;\n    let mut last_beat = last_beat.chars().enumerate().filter(|(_,\
    \ beat)| beat != 'o').next().unwrap().1;\n    let mut last_beat = last_beat.chars().enumerate().filter(|(_",
  "    let mut beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    for c in music_string\
    \ {\n        if c.is_ascii() {\n            if c.is_ascii(..='o') {\n        \
    \        current_note = c.to_string();\n                current_note_len = c.len_utf8();\n\
    \            } else if c.is_ascii(..='|') {\n                current_note = c.to_string();\n\
    \                current_note_len = c.len_utf8();\n            } else {\n    \
    \            let note = c.to_string();\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = note;\n   \
    \             current_note_len = note.len_utf8();\n            }\n        } else\
    \ {\n            current_beat += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_note\
    \ = String::from(\"\");\n    let mut current_beat = 0;\n    let mut current_duration\
    \ = 0;\n    for c in music_string {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::from(\"\
    \");\n            } else if c.to_ascii_lowercase() == 'o|' {\n               \
    \ beats.push(current_beat);\n                current_beat = 0;\n             \
    \   current_note = String::from(\"\");\n            } else if c.to_ascii_lowercase()\
    \ == '.|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::from(\"\");\n            } else\
    \ {\n                current_note += c.to_ascii_lowercase();\n            }\n\
    \        } else {\n            if c.to_ascii_lowercase() == 'o' {\n          \
    \      current_beat += 1;\n            } else if c.to_ascii_lowercase() == 'o|'\
    \ {\n                current_beat += 2;\n            } else if c.to_ascii_lowercase()\
    \ == '.|' {\n                current_beat += 1;\n            } else {\n      \
    \          println!(\"{}\", current_note);\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::from(\"\
    \");\n            }\n        }\n    }\n    beats.push(current_beat);\n    beats",
  "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n  \
    \  let mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut\
    \ current_note_length_index = 0;\n    let mut current_note_length_index2 = 0;\n\
    \    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;", "    let mut beats: Vec<isize> = vec![];\n    let mut current_note =\
    \ String::from(\"\");\n    let mut current_beat = 0;\n    for c in music_string\
    \ {\n        if c.is_whitespace() {\n            if current_note.is_empty() {\n\
    \                continue;\n            }\n            beats.push(current_beat);\n\
    \            current_beat = 0;\n            current_note = String::from(\"\");\n\
    \        } else {\n            if c.is_ascii_digit() {\n                current_beat\
    \ += c.to_digit(10).unwrap();\n            } else {\n                current_note\
    \ += c;\n            }\n        }\n    }\n    beats.push(current_beat);\n    beats",
  "    let mut beats = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index45\
    \ = 1;\n    let mut current_note_length_index46 = 1;\n    let mut current_note_length_index47\
    \ = 1;\n    let mut current_note_length_index48 = 1;\n    let mut ", "    let\
    \ mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ c)| c != '|');\n    let mut current_note = notes.next().unwrap().0;\n    let\
    \ mut current_beat = 0;\n    for note in notes {\n        let mut beats_count\
    \ = current_beat + 1;\n        if note == current_note {\n            beats_count\
    \ += 1;\n        }\n        beats.push(beats_count);\n        current_beat = beats_count;\n\
    \        current_note = note;\n    }\n    beats", "    let mut beats: Vec<isize>\
    \ = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_note_count = 0;\n    for note in notes {\n       \
    \ if note != current_note {\n            beats.push(current_beat);\n         \
    \   current_note_count = 1;\n            current_beat = 0;\n            current_note\
    \ = note;\n        } else {\n            current_note_count += 1;\n          \
    \  current_beat += 1;\n        }\n    }\n    beats.push(current_beat);\n    beats",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n\
    \    let mut current_note = String::new();\n    let mut current_note_len = 0;\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == 'o' {\n                if current_note_len > 0 {\n\
    \                    beats.push(current_beat);\n                    current_beat\
    \ = 0;\n                    current_note_len = String::new();\n              \
    \  }\n                current_note += c.to_ascii_lowercase();\n            } else\
    \ if c.to_ascii_lowercase() == '|' {\n                if current_note_len > 0\
    \ {\n                    beats.push(current_beat);\n                    current_beat\
    \ = 0;\n                    current_note_len = String::new();\n              \
    \  }\n                current_note += c.to_ascii_lowercase();\n            } else\
    \ if c.to_ascii_lowercase() == '.' {\n                if current_note_len > 0\
    \ {\n                    beats.push(current_beat);\n                    current_beat\
    \ = 0;\n                    current_note_len = String::new();\n              \
    \  }\n                current_note += c.to_ascii_lowercase();\n            } else\
    \ {\n                current_note_len = c.to_ascii_lowercase().len() + 1;\n  \
    \          }\n        } else {\n            current_note_len = c.to_ascii_lowercase().len()\
    \ + 1;\n        }\n    }\n    if current_note_len > 0 {\n        beats.push(current_beat);\n\
    \    }\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut\
    \ current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;", "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n    let mut current_note_length",
  "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut last_note = -1;\n    let mut last_beat = -1;\n    let mut\
    \ last_note_length = -1;\n    let mut last_note_length = -1;\n    let mut last_note_length\
    \ = -1;\n    let mut last_note_length = -1;\n    let mut last_note_length = -1;\n\
    \    let mut last_note_length = -1;\n    let mut last_note_length = -1;\n    let\
    \ mut last_note_length = -1;\n    let mut last_note_length = -1;\n    let mut\
    \ last_note_length = -1;\n    let mut last_note_length = -1;\n    let mut last_note_length\
    \ = -1;\n    let mut last_note_length = -1;\n    let mut last_note_length = -1;\n\
    \    let mut last_note_length = -1;\n    let mut last_note_length = -1;\n    let\
    \ mut last_note_length = -1;\n    let mut last_note_length = -1;\n    let mut\
    \ last_note_length = -1;\n    let mut last_note_length = -1;\n    let mut last_note_length\
    \ = -1;\n    let mut last_note_length = -1;\n    let mut last_note_length = -1;\n\
    \    let mut last_note_length = -1;\n    let mut last_note_length = -1;\n    let\
    \ mut last_note_length = -1;\n    let mut last_note_length = -1;\n    let mut\
    \ last_note_length = -1;\n    let mut last_note_length = -1;\n    let mut last_note_length\
    \ = -1;\n    let mut last_note_length = -1;\n    let mut last_note_length = -1;\n\
    \    let mut last_note_length = -1;\n    let mut last_note_length = -1;\n    let\
    \ mut last_note_length = -1;\n    let mut last_note_length = -1;\n    let mut\
    \ last_note_length = -1;\n    let mut last_note_length = -1;\n    let mut last_note_length\
    \ = -1;\n    let mut last_note_length = -1;\n    let mut last_note_length = -1;\n\
    \    let mut last_note_length = -1;\n    let mut last_note_length = -1;\n    let\
    \ mut last_note_length = -1;\n    let mut last_note_length = -1;\n    let mut\
    \ last_note_length = -1;\n    let mut last_note_length = -1;\n    let mut last_note_length\
    \ = -1;\n    let mut last_note_length = -1;\n    let mut last_note_length = -1;\n\
    \    let mut last_note_length = -1;\n    let mut last_note_length = -1;\n    let\
    \ mut last_note_length = -1;\n    let mut last_note_length = -1;\n    let mut\
    \ last_note_length = -1;\n    let mut last_note_length = -1;\n    let mut last_",
  "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let\
    \ mut current_note = String::new();\n    let mut current_note_len = 0;\n    let\
    \ mut current_note_oct = 0;\n    let mut current_note_oct2 = 0;\n    for c in\
    \ music_string {\n        if c == 'o' {\n            if current_note_oct == 0\
    \ {\n                beats.push(current_beat);\n                current_beat =\
    \ 0;\n                current_note_len = 0;\n                current_note_oct\
    \ = 0;\n                current_note_oct2 = 0;\n            } else {\n       \
    \         current_note_oct2 += 1;\n            }\n            current_note +=\
    \ c;\n            current_note_oct += 1;\n            current_note_oct2 += 1;\n\
    \        } else if c == '|' {\n            if current_note_oct2 == 0 {\n     \
    \           beats.push(current_beat);\n                current_beat = 0;\n   \
    \             current_note_len = 0;\n                current_note_oct = 0;\n \
    \               current_note_oct2 = 0;\n            } else {\n               \
    \ current_note_oct += 1;\n            }\n            current_note += c;\n    \
    \        current_note_oct2 += 1;\n        } else if c == '.' {\n            if\
    \ current_note_oct2 == 0 {\n                beats.push(current_beat);\n      \
    \          current_beat = 0;\n                current_note_len = 0;\n        \
    \        current_note_oct = 0;\n                current_note_oct2 = 0;\n     \
    \       } else {\n                current_note_oct2 += 1;\n            }\n   \
    \         current_note += c;\n            current_note_oct2 += 1;\n        } else\
    \ {\n            current_note += c;\n            current_note_oct += 1;\n    \
    \        current_note_oct2 += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat:\
    \ isize = 0;\n    let mut current_note = String::new();\n    let mut current_note_len\
    \ = 0;\n    let mut current_note_oct = 0;\n    let mut current_note_oct2 = 0;\n\
    \    let mut current_note_oct3 = 0;\n    let mut current_note_oct4 = 0;\n    let\
    \ mut current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n    let mut\
    \ current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n    let mut current_note_oct9\
    \ = 0;\n    let mut current_note_oct10 = 0;\n    let mut current_note_oct11 =\
    \ 0;\n    let mut current_note_oct12 = 0;\n    let mut current_note_oct13 = 0;\n\
    \    let mut current_note_oct14 = 0;\n    let mut current_note_oct15 = 0;\n  \
    \  let mut current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n    let\
    \ mut current_note_oct18 = 0;\n    let mut current_note_oct19 = 0;\n    let mut\
    \ current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n    let mut current_note_oct22\
    \ = 0;\n    let mut current_note_oct23 = 0;\n    let mut current_note_oct24 =\
    \ 0;\n    let mut current_note_oct25 = 0;\n    let mut current_note_oct26 = 0;\n\
    \    let mut current_note_oct27 = 0;\n    let mut current_note_oct28 = 0;\n  \
    \  let mut current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n    let\
    \ mut current_note_oct31 = 0;\n    let mut current_note_oct32 = 0;\n    let mut\
    \ current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n    let mut current_note_oct35\
    \ = 0;\n    let mut current_note_oct36 = 0;\n    let mut current_note_oct37 =\
    \ 0;\n    let mut current_note_oct38 = 0;\n    let mut current_note_oct39 = 0;\n\
    \    let mut current_note_oct40 = 0;\n    let mut current_note_oct41 = 0;\n  \
    \  let mut current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n    let\
    \ mut current_note_oct44 = 0;\n    let mut current_note_oct45 = 0;\n    let mut\
    \ current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n    let mut current_note_oct48\
    \ = 0;\n    let mut current_note_oct49 = 0;\n    let mut current_note_oct50 =\
    \ 0;\n    let mut current_note_oct51 = 0;\n    let mut current_note_oct52 = 0;\n\
    \    let mut current_", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    let mut current_note_index\
    \ = 0;\n    let mut current_note_value = 0;\n    let mut current_note_length =\
    \ 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_value\
    \ = 0;\n    let mut current_note_length_value_length = 0;\n    let mut current_note_length_value_length_index\
    \ = 0;\n    let mut current_note_length_value_length_value = 0;\n    let mut current_note_length_value_length_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value = 0;\n    let\
    \ mut current_note_length_value_length_value_value_index = 0;\n    let mut current_note_length_value_length_value_value_value\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value_index =\
    \ 0;\n    let mut current_note_length_value_length_value_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_value_index = 0;\n \
    \   let mut current_note_length_value_length_value_value_value_value = 0;\n  \
    \  let mut current_note_length_value_length_value_value_value_index = 0;\n   \
    \ let mut current_note_length_value_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value_index = 0;\n    let mut\
    \ current_note_length_value_length_value_value_value_value = 0;\n    let mut current_note_length_value_length_value_value_value_index\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value_value =\
    \ 0;\n    let mut current_note_length_value_length_value_value_value_index = 0;\n\
    \    let mut current_note_length_value_length_value_value_value_value = 0;\n \
    \   let mut current_note_length_value_length_value_value_value_index = 0;\n  \
    \  let mut current_note_length_value_length_value_value_value_value = 0;\n   \
    \ let mut current_note_length_value_length_value_value_value_index = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value_value = 0;\n    let mut\
    \ current_note_length_value_length_value_value_value_index = 0;\n    let mut current_note_length_value_length_value_value_value_value\
    \ = 0;\n    let mut current_note_length_value_length_value_value_value_index =\
    \ 0;\n    let mut current_note_length_value_length_value_value_value_value = 0;\n\
    \    let mut current_note_length_value_length_value_value_value_index = 0;\n \
    \   let mut current_note_length_value_length_value_value_value_value = 0;\n  \
    \  let mut current_note_length_value_length_value_value_value_index = 0;\n   \
    \ let mut current_note_length_value_length_value_value_value_value = 0;\n    let\
    \ mut current_note_length_value_length_value_value_value_index = 0;\n    let mu",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_octave = 0;\n    let mut current_note_is_octave\
    \ = false;\n    let mut current_note_is_rest = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_resting = false;\n    let mut current_note_is_resting_octave\
    \ = 0;\n    let mut current_note_is_resting_note = String::new();\n    let mut\
    \ current_note_is_resting_octave_is_octave = false;\n    let mut current_note_is_resting_note_is_rest\
    \ = false;\n    let mut current_note_is_resting_note_is_rested = false;\n    let\
    \ mut current_note_is_resting_note_is_resting = false;\n    let mut current_note_is_resting_note_is_resting_octave\
    \ = 0;\n    let mut current_note_is_resting_note_is_resting_note = String::new();\n\
    \    let mut current_note_is_resting_note_is_resting_octave_is_octave = false;\n\
    \    let mut current_note_is_resting_note_is_resting_note_is_rest = false;\n \
    \   let mut current_note_is_resting_note_is_resting_note_is_rested = false;\n\
    \    let mut current_note_is_resting_note_is_resting_note_is_resting = false;\n\
    \    let mut current_note_is_resting_note_is_resting_note_is_resting_octave =\
    \ 0;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note\
    \ = String::new();\n    let mut current_note_is_resting_note_is_resting_note_is_resting_octave_is_octave\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note_is_rest\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note_is_rested\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note_is_resting\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note_is_resting_octave\
    \ = 0;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note_is_resting_note\
    \ = String::new();\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note_is_resting_octave_is_octave\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_resting_note_is_resting_note_is_rest\
    \ = false;\n    let mut current_note_is_resting_note_is_resting_note_is_", " \
    \   let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_octave = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                if current_note.is_empty() {\n                    current_note\
    \ = String::from(\"o\");\n                } else {\n                    current_note\
    \ = current_note + String::from(\"o\");\n                }\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_octave = 0;\n            } else if c.to_ascii_lowercase()\
    \ == '|' {\n                if current_note.is_empty() {\n                   \
    \ current_note = String::from(\"|\");\n                } else {\n            \
    \        current_note = current_note + String::from(\"|\");\n                }\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_octave\
    \ = 0;\n            } else if c.to_ascii_lowercase() == '.' {\n              \
    \  if current_note.is_empty() {\n                    current_note = String::from(\"\
    .\");\n                } else {\n                    current_note = current_note\
    \ + String::from(\".\");\n                }\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_octave = 0;\n            } else {\n                let\
    \ note = c.to_ascii_lowercase();\n                if note == \"o\" {\n       \
    \             current_note = current_note + note;\n                    current_octave\
    \ = current_octave + 1;\n                } else if note == \"|\" {\n         \
    \           current_note = current_note + note;\n                    current_octave\
    \ = current_octave + 1;\n                } else if note == \".\" {\n         \
    \           current_note = current_note + note;\n                    current_octave\
    \ = current_octave + 1;\n                } else {\n                    current_note\
    \ = current_note + note;\n                }\n                current_beat = current_beat\
    \ + 1;\n            }\n        } else {\n            current_note = current_note\
    \ + c.to_ascii_lowercase();\n            current_beat = current_beat + 1;\n  \
    \      }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats:\
    \ Vec<isize> = vec![];\n    let mut current_beat: isize = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length: isize = 0;\n    let mut current_note_length_index:\
    \ usize = 0;\n    let mut current_note_length_index2: usize = 0;\n    let mut\
    \ current_note_length_index3: usize = 0;\n    let mut current_note_length_index4:\
    \ usize = 0;\n    let mut current_note_length_index5: usize = 0;\n    let mut\
    \ current_note_length_index6: usize = 0;\n    let mut current_note_length_index7:\
    \ usize = 0;\n    let mut current_note_length_index8: usize = 0;\n    let mut\
    \ current_note_length_index9: usize = 0;\n    let mut current_note_length_index10:\
    \ usize = 0;\n    let mut current_note_length_index11: usize = 0;\n    let mut\
    \ current_note_length_index12: usize = 0;\n    let mut current_note_length_index13:\
    \ usize = 0;\n    let mut current_note_length_index14: usize = 0;\n    let mut\
    \ current_note_length_index15: usize = 0;\n    let mut current_note_length_index16:\
    \ usize = 0;\n    let mut current_note_length_index17: usize = 0;\n    let mut\
    \ current_note_length_index18: usize = 0;\n    let mut current_note_length_index19:\
    \ usize = 0;\n    let mut current_note_length_index20: usize = 0;\n    let mut\
    \ current_note_length_index21: usize = 0;\n    let mut current_note_length_index22:\
    \ usize = 0;\n    let mut current_note_length_index23: usize = 0;\n    let mut\
    \ current_note_length_index24: usize = 0;\n    let mut current_note_length_index25:\
    \ usize = 0;\n    let mut current_note_length_index26: usize = 0;\n    let mut\
    \ current_note_length_index27: usize = 0;\n    let mut current_note_length_index28:\
    \ usize = 0;\n    let mut current_note_length_index29: usize = 0;\n    let mut\
    \ current_note_length_index30: usize = 0;\n    let mut current_note_length_index31:\
    \ usize = 0;\n    let mut current_note_length_index32: usize = 0;\n    let mut\
    \ current_note_length_index33: usize = 0;\n    let mut current_note_length_index34:\
    \ usize = 0;\n    let mut current_note_length_index35: usize = 0;\n    let mut\
    \ current_note_length_index36: usize = 0;\n    let mu", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_octave = 0;\n\n    for c in music_string.chars() {\n      \
    \  if c.is_ascii() {\n            let note = match c {\n                'o' =>\
    \ 4,\n                'o|' => 2,\n                '.|' => 1,\n               \
    \ _ => panic!(\"Invalid note in music string: {}\", c),\n            };\n    \
    \        current_note += c.to_string();\n            current_octave += note;\n\
    \        } else {\n            if current_note != \"\" {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_octave = 0;\n            }\n            current_note\
    \ += c.to_string();\n        }\n    }\n    beats.push(current_beat);\n    current_beat\
    \ = 0;\n    current_note = String::new();\n    current_octave = 0;\n    beats",
  "    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str> = music_string.split_whitespace().collect();\n\
    \    let mut current_note = notes.first().unwrap();\n    let mut current_beat\
    \ = 0;\n    let mut current_beats_left = 0;\n    while let Some(note) = notes.pop()\
    \ {\n        match note {\n            \"o\" => {\n                beats.push(current_beat);\n\
    \                current_beat += 1;\n                current_beats_left += 1;\n\
    \            }\n            \"o|\" => {\n                beats.push(current_beat);\n\
    \                current_beat += 1;\n                current_beats_left += 2;\n\
    \            }\n            \".|\" => {\n                beats.push(current_beat);\n\
    \                current_beat += 1;\n                current_beats_left += 1;\n\
    \            }\n            _ => {\n                let beats_left = current_beats_left;\n\
    \                beats.push(current_beat);\n                current_beat += 1;\n\
    \                current_beats_left = beats_left;\n            }\n        }\n\
    \        current_note = note;\n    }\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    for c in music_string {\n        match c {\n            'o' => current_note\
    \ += 1,\n            '|' => current_note_length += 1,\n            '.' => current_note\
    \ += 1,\n            _ => (),\n        }\n        if current_note == 4 {\n   \
    \         beats.push(current_beat);\n            current_beat = 0;\n         \
    \   current_note = 0;\n            current_note_length = 0;\n        }\n    }\n\
    \    beats.push(current_beat);\n    current_beat = 0;\n    current_note = 0;\n\
    \    current_note_length = 0;\n    beats", "    let mut beats = vec![];\n    let\
    \ mut current_beat = 0;\n    let mut current_note = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let ", "    let mut beats: Vec<isize> = vec![];\n    let\
    \ mut notes: Vec<&str> = vec![];\n    let mut current_note = String::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note_index = 0;\n    let mut\
    \ current_note_length = 0;\n    let mut current_note_octave = 0;\n    let mut\
    \ current_note_octave_length = 0;\n    let mut current_note_octave_octave = 0;\n\
    \    let mut current_note_octave_octave_length = 0;\n    let mut current_note_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_length = 0;\n    let mut\
    \ current_note_octave_octave_octave_octave = 0;\n    let mut current_note_octave_octave_octave_octave_length\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave = 0;\n   \
    \ let mut current_note_octave_octave_octave_octave_octave_length = 0;\n    let\
    \ mut current_note_octave_octave_octave_octave_octave_octave = 0;\n    let mut\
    \ current_note_octave_octave_octave_octave_octave_octave_length = 0;\n    let\
    \ mut current_note_octave_octave_octave_octave_octave_octave_octave = 0;\n   \
    \ let mut current_note_octave_octave_octave_octave_octave_octave_octave_length\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave_length\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave_octave_length\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octave_octave_octave\
    \ = 0;\n    let mut current_note_octave_octave_octave_octave_octave_octave_octa",
  "    let mut beats = Vec::new();\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ note)| note != 'o');\n    let mut current_note = 0;\n    for note in notes {\n\
    \        if note == current_note {\n            beats.push(1);\n        } else\
    \ {\n            beats.push(beats[beats.len() - 1] + 1);\n        }\n        current_note\
    \ = note;\n    }\n    beats", "    let mut beats: Vec<isize> = Vec::new();\n \
    \   let mut current_beat = 0;\n    let mut current_note = String::new();\n   \
    \ let mut current_note_length = 0;\n    for c in music_string {\n        if c.is_whitespace()\
    \ {\n            continue;\n        }\n        if c.is_ascii_digit() {\n     \
    \       current_note_length += 1;\n            current_note += c.to_string();\n\
    \        } else {\n            if current_note_length == 0 {\n               \
    \ println!(\"Invalid music string\");\n                panic!(\"Invalid music\
    \ string\");\n            }\n            if current_note_length == 1 {\n     \
    \           beats.push(current_beat);\n                current_beat = 0;\n   \
    \             current_note = String::new();\n                current_note_length\
    \ = 0;\n            }\n            current_beat += 1;\n            current_note_length\
    \ = 0;\n            current_note += c.to_string();\n        }\n    }\n    beats.push(current_beat);\n\
    \    current_beat = 0;\n    current_note = String::new();\n    current_note_length\
    \ = 0;\n    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_len\
    \ = 0;\n    let mut current_note_oct = 0;\n    let mut current_note_oct2 = 0;\n\
    \    let mut current_note_oct3 = 0;\n    let mut current_note_oct4 = 0;\n    let\
    \ mut current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n    let mut\
    \ current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n    let mut current_note_oct9\
    \ = 0;\n    let mut current_note_oct10 = 0;\n    let mut current_note_oct11 =\
    \ 0;\n    let mut current_note_oct12 = 0;\n    let mut current_note_oct13 = 0;\n\
    \    let mut current_note_oct14 = 0;\n    let mut current_note_oct15 = 0;\n  \
    \  let mut current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n    let\
    \ mut current_note_oct18 = 0;\n    let mut current_note_oct19 = 0;\n    let mut\
    \ current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n    let mut current_note_oct22\
    \ = 0;\n    let mut current_note_oct23 = 0;\n    let mut current_note_oct24 =\
    \ 0;\n    let mut current_note_oct25 = 0;\n    let mut current_note_oct26 = 0;\n\
    \    let mut current_note_oct27 = 0;\n    let mut current_note_oct28 = 0;\n  \
    \  let mut current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n    let\
    \ mut current_note_oct31 = 0;\n    let mut current_note_oct32 = 0;\n    let mut\
    \ current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n    let mut current_note_oct35\
    \ = 0;\n    let mut current_note_oct36 = 0;\n    let mut current_note_oct37 =\
    \ 0;\n    let mut current_note_oct38 = 0;\n    let mut current_note_oct39 = 0;\n\
    \    let mut current_note_oct40 = 0;\n    let mut current_note_oct41 = 0;\n  \
    \  let mut current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n    let\
    \ mut current_note_oct44 = 0;\n    let mut current_note_oct45 = 0;\n    let mut\
    \ current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n    let mut current_note_oct48\
    \ = 0;\n    let mut current_note_oct49 = 0;\n    let mut current_note_oct50 =\
    \ 0;\n    let mut current_note_oct51 = 0;\n    let mut current_note_oct52 = 0;\n\
    \    let mut current_note_oct53 = 0;", "    let mut beats = vec![];\n    let mut\
    \ current_beat = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    for\
    \ c in music_string {\n        if c == 'o' {\n            if current_beat == 0\
    \ {\n                beats.push(0);\n            }\n            current_beat +=\
    \ 1;\n            current_note = String::new();\n            current_note_length\
    \ = String::new();\n            current_note_length = String::new();\n       \
    \ } else if c == '|' {\n            if current_beat == 0 {\n                beats.push(0);\n\
    \            }\n            current_beat += 1;\n            current_note = String::new();\n\
    \            current_note_length = String::new();\n            current_note_length\
    \ = String::new();\n        } else if c == '.' {\n            if current_beat\
    \ == 0 {\n                beats.push(0);\n            }\n            current_beat\
    \ += 1;\n            current_note = String::new();\n            current_note_length\
    \ = String::new();\n            current_note_length = String::new();\n       \
    \ } else {\n            if current_beat == 0 {\n                beats.push(0);\n\
    \            }\n            current_beat += 1;\n            current_note.push(c);\n\
    \            current_note_length.push(c);\n        }\n    }\n    beats", "   \
    \ let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ c)| c != '|');\n    let mut last_note = notes.next().unwrap().0;\n    let mut\
    \ last_beat = 0;\n    for note in notes {\n        if note.1 == last_note {\n\
    \            beats.push(last_beat);\n            last_beat = 0;\n        } else\
    \ {\n            last_beat = beats.last().unwrap() + 1;\n        }\n        last_note\
    \ = note.1;\n    }\n    beats.push(last_beat);\n    beats", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_octave = 0;\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_", "    let mut beats = vec![];\n    let\
    \ mut notes = music_string.chars().enumerate().filter(|(_, note)| note != 'o');\n\
    \    for note in notes {\n        let mut beat = 0;\n        let mut last_note\
    \ = note.1;\n        while note != last_note {\n            beat += 1;\n     \
    \       last_note = note.1;\n            note = note.2;\n        }\n        beats.push(beat);\n\
    \    }\n    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n\
    \    let mut current_note = 0;\n    let mut current_note_length = 0;\n    let\
    \ mut current_note_length_index = 0;\n    let mut current_note_length_index2 =\
    \ 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;\n    let mut current_note_length", "    let mut beats = Vec::new();\n \
    \   let mut notes = music_string.chars().enumerate().filter(|(_, c)| c != '|');\n\
    \    let mut current_note = 0;\n    for note in notes {\n        if note.1 ==\
    \ notes.len() {\n            notes.remove(note);\n        }\n        let note\
    \ = note.0;\n        let beat = note.1 as isize;\n        if note == 'o' {\n \
    \           beats.push(beat);\n            current_note += beat;\n        } else\
    \ if note == 'o|' {\n            beats.push(beat);\n            current_note +=\
    \ beat;\n        } else if note == '.|' {\n            beats.push(beat);\n   \
    \         current_note += beat;\n        } else {\n            panic!(\"Unknown\
    \ note '{}' at {}\", note, notes.len());\n        }\n    }\n    beats", "    let\
    \ mut beats: Vec<isize> = vec![];\n    let mut current_beat = 0;\n    let mut\
    \ current_note = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;\n", "    let mut beats =\
    \ Vec::new();\n    let mut notes = music_string.chars().enumerate().skip(1).collect::<Vec<_>>();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    for note in\
    \ notes {\n        if note.1.is_ascii() {\n            if note.1.unwrap() == 'o'\
    \ {\n                beats.push(current_beat);\n                current_beat =\
    \ 0;\n            } else {\n                current_beat += 1;\n            }\n\
    \        } else {\n            current_note += 1;\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = vec![];\n    let mut notes: Vec<&str>\
    \ = music_string.split_whitespace().collect();\n    let mut current_note = notes.first().unwrap();\n\
    \    let mut current_beat = 0;\n    let mut current_length = 0;\n    while let\
    \ Some(note) = notes.pop() {\n        match note {\n            \"o\" => {\n \
    \               beats.push(current_beat);\n                current_beat += 4;\n\
    \                current_length = 4;\n            }\n            \"o|\" => {\n\
    \                beats.push(current_beat);\n                current_beat += 2;\n\
    \                current_length = 2;\n            }\n            \".|\" => {\n\
    \                beats.push(current_beat);\n                current_beat += 1;\n\
    \                current_length = 1;\n            }\n            _ => {\n    \
    \            panic!(\"Unknown note '{}'\", note);\n            }\n        }\n\
    \    }\n    beats.push(current_beat);\n    current_beat += 1;\n    beats.push(current_length);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = 0;\n    for c in music_string {\n        if c.is_whitespace() {\n        \
    \    continue;\n        }\n        if c.is_ascii_digit() {\n            current_note_length\
    \ += 1;\n            current_note += c;\n        } else {\n            if current_note_length\
    \ == 0 {\n                println!(\"Invalid music string\");\n              \
    \  break;\n            }\n            if current_note_length == 1 {\n        \
    \        beats.push(current_beat);\n                current_beat = 0;\n      \
    \          current_note = String::new();\n                current_note_length\
    \ = 0;\n            }\n            if current_note_length == 2 {\n           \
    \     beats.push(current_beat);\n                current_beat = 0;\n         \
    \       current_note = String::new();\n                current_note_length = 0;\n\
    \            }\n            if current_note_length == 3 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n            }\n            if current_note_length\
    \ == 4 {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_length\
    \ = 0;\n            }\n            if current_note_length == 5 {\n           \
    \     beats.push(current_beat);\n                current_beat = 0;\n         \
    \       current_note = String::new();\n                current_note_length = 0;\n\
    \            }\n            if current_note_length == 6 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n            }\n            if current_note_length\
    \ == 7 {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_length\
    \ = 0;\n            }\n            if current_note_length == 8 {\n           \
    \     beats.push(current_beat);\n                current_beat = 0;\n         \
    \       current_note = String::new();\n                current_note_length = 0;\n\
    \            }\n            if current_note_length == 9 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = 0;\n            }\n            if current_note_length\
    \ == 10 {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_length\
    \ = 0;\n            }\n            if current_note_length == 11 {\n          \
    \      beats.push(current_beat);\n                current_beat = 0;\n        \
    \        current_note = String::new();\n                current_note_length =\
    \ 0;\n            }\n            if current_note_length == 12 {\n            \
    \    beats.push(current_beat);\n                current_beat = 0;\n          \
    \      current_note = String::new();\n                current_note_length = 0;\n\
    \            }\n            if current_note_length == 13 {\n                beats.push(current_beat);",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_octave = 0;\n    let mut current_length\
    \ = 0;\n\n    for c in music_string.chars() {\n        match c {\n           \
    \ 'o' => current_note = String::new(),\n            '|' => current_octave = 1,\n\
    \            '.' => current_length = 1,\n            _ => {\n                let\
    \ note = match c {\n                    'o' => \"whole\".to_string(),\n      \
    \              '|' => \"half\".to_string(),\n                    '.' => \"quarter\"\
    .to_string(),\n                    _ => c.to_string(),\n                };\n \
    \               beats.push(current_beat);\n                current_beat += current_length;\n\
    \                current_length = 0;\n                current_note = note;\n \
    \               current_octave = 1;\n            }\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    for c in music_string {\n       \
    \ if c == 'o' {\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n        } else if c == '|'\
    \ {\n            beats.push(current_beat);\n            current_beat = 0;\n  \
    \          current_note = String::new();\n        } else if c == '.' {\n     \
    \       current_beat += 1;\n        } else {\n            current_note += c;\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index45\
    \ = 1;\n    let mut current_note_length_index46 = 1;\n    let mut current_note_length_index47\
    \ = 1;\n    let mut current_note_length_index", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_uppercase() == 'O' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \            } else {\n                current_note.push(c);\n            }\n\
    \        } else {\n            if current_note.is_empty() {\n                panic!(\"\
    Music string contains non-ascii character\");\n            }\n            let\
    \ note = current_note.to_ascii_uppercase();\n            if note == 'O' {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n            } else {\n       \
    \         current_beat = beats.len() as isize;\n                current_note =\
    \ String::new();\n            }\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats: Vec<isize> = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    for c in music_string {\n\
    \        if c == 'o' {\n            if current_beat == 0 {\n                current_note\
    \ = String::new();\n            }\n            current_beat += 1;\n          \
    \  current_note.push_str(&c.to_string());\n        } else if c == '|' {\n    \
    \        if current_beat == 0 {\n                current_note = String::new();\n\
    \            }\n            current_beat += 1;\n            current_note.push_str(&c.to_string());\n\
    \        } else if c == '.' {\n            if current_beat == 0 {\n          \
    \      current_note = String::new();\n            }\n            current_beat\
    \ += 1;\n            current_note.push_str(&c.to_string());\n        } else {\n\
    \            if current_beat == 0 {\n                beats.push(0);\n        \
    \    }\n            beats.push(current_beat);\n            current_beat = 0;\n\
    \            current_note.push_str(&c.to_string());\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut current_beat = 0;\n   \
    \ let mut current_note = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n                current_note_length = String::new();\n   \
    \         } else if c.to_ascii_lowercase() == 'o' {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_length = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == '|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == '.' {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == '|' {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == '|' {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == '|' {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == '|' {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == '|' {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == '|' {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == '|' {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_length\
    \ = String::new();\n            } else if c.to_ascii_lowercase() == '|' {\n  \
    \              beat", "    let mut beats = vec![];\n    let mut current_beat =\
    \ 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let ", "    let mut beats: Vec<isize> = Vec::new();\n  \
    \  let mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 1;\n    let mut current_note_length_index42\
    \ = 1;\n    let mut current_note_length_index43 = 1;\n    let mut current_note_length_index44\
    \ = 1;\n    let mut current_note_length_index45 = 1;\n    let mut current_note_length_index46\
    \ = 1;\n    let mut current_note_length_index47 = 1;\n    let mut current_note_length_index",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let ",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    let mut current_note_oct\
    \ = 0;\n    let mut current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n\
    \    let mut current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n    let\
    \ mut current_note_oct6 = 0;\n    let mut current_note_oct7 = 0;\n    let mut\
    \ current_note_oct8 = 0;\n    let mut current_note_oct9 = 0;\n    let mut current_note_oct10\
    \ = 0;\n    let mut current_note_oct11 = 0;\n    let mut current_note_oct12 =\
    \ 0;\n    let mut current_note_oct13 = 0;\n    let mut current_note_oct14 = 0;\n\
    \    let mut current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n  \
    \  let mut current_note_oct17 = 0;\n    let mut current_note_oct18 = 0;\n    let\
    \ mut current_note_oct19 = 0;\n    let mut current_note_oct20 = 0;\n    let mut\
    \ current_note_oct21 = 0;\n    let mut current_note_oct22 = 0;\n    let mut current_note_oct23\
    \ = 0;\n    let mut current_note_oct24 = 0;\n    let mut current_note_oct25 =\
    \ 0;\n    let mut current_note_oct26 = 0;\n    let mut current_note_oct27 = 0;\n\
    \    let mut current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n  \
    \  let mut current_note_oct30 = 0;\n    let mut current_note_oct31 = 0;\n    let\
    \ mut current_note_oct32 = 0;\n    let mut current_note_oct33 = 0;\n    let mut\
    \ current_note_oct34 = 0;\n    let mut current_note_oct35 = 0;\n    let mut current_note_oct36\
    \ = 0;\n    let mut current_note_oct37 = 0;\n    let mut current_note_oct38 =\
    \ 0;\n    let mut current_note_oct39 = 0;\n    let mut current_note_oct40 = 0;\n\
    \    let mut current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n  \
    \  let mut current_note_oct43 = 0;\n    let mut current_note_oct44 = 0;\n    let\
    \ mut current_note_oct45 = 0;\n    let mut current_note_oct46 = 0;\n    let mut\
    \ current_note_oct47 = 0;\n    let mut current_note_oct48 = 0;\n    let mut current_note_oct49\
    \ = 0;\n    let mut current_note_oct50 = 0;\n    let mut current_note_oct51 =\
    \ 0;\n    let mut current_note_oct52 = 0;\n    let mut current_note_oct53 = 0;\n\
    \    let mut current_note_", "    let mut beats: Vec<isize> = vec![];\n    let\
    \ mut notes: Vec<&str> = music_string.split_whitespace().collect();\n    let mut\
    \ current_note = 0;\n    let mut current_beat = 0;\n    let mut current_length\
    \ = 0;\n    while current_note != notes.len() {\n        let note = notes[current_note];\n\
    \        if note == \"o\" {\n            beats.push(current_beat);\n         \
    \   current_beat += 4;\n            current_length = 4;\n            current_note++;\n\
    \        } else if note == \"o|\" {\n            beats.push(current_beat);\n \
    \           current_beat += 2;\n            current_length = 2;\n            current_note++;\n\
    \        } else if note == \".|\" {\n            beats.push(current_beat);\n \
    \           current_beat += 1;\n            current_length = 1;\n            current_note++;\n\
    \        } else {\n            assert!(current_note == notes.len());\n       \
    \     beats.push(current_beat);\n            current_beat += 1;\n            current_length\
    \ = 1;\n            current_note++;\n        }\n    }\n    beats", "    let mut\
    \ beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|&(_,\
    \ note)| note != '|').collect::<Vec<_>>();\n    let mut last_note = notes.len()\
    \ - 1;\n    let mut last_beat = 0;\n    let mut last_beats_used = 0;\n    for\
    \ note in notes {\n        let beats_used = note.1.chars().enumerate().filter(|&(_,\
    \ beat)| beat != '|').count();\n        if beats_used > last_beats_used {\n  \
    \          beats.push(last_beats_used);\n            last_beats_used = beats_used;\n\
    \        }\n        if note.1 == last_note {\n            last_beats_used += 1;\n\
    \        } else {\n            last_beats_used = 0;\n        }\n        last_note\
    \ = note.1;\n    }\n    beats.push(last_beats_used);\n    beats", "    let mut\
    \ beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let ", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 1;\n    let mut current_note_length_index42\
    \ = 1;\n    let mut current_note_length_index43 = 1;\n    let mut current_note_length_index44\
    \ = 1;\n    let mut current_note_length_index45 = 1;\n    let mut current_note_length_index46\
    \ = 1;\n    let mut current_note_length_index47 = 1;\n    let mut current_note_length_index48\
    \ = 1;\n    let mut current_", "    let mut beats = vec![];\n    let mut notes\
    \ = music_string.chars().collect::<Vec<_>>();\n    let mut current_note = 0;\n\
    \    let mut current_beat = 0;\n    let mut last_note = notes.len() - 1;\n   \
    \ let mut last_beat = notes[last_note].len() - 1;\n    while current_note != last_note\
    \ {\n        if notes[current_note][current_beat] == 'o' {\n            beats.push(current_beat);\n\
    \            current_beat += 1;\n        } else {\n            current_beat +=\
    \ 1;\n        }\n        current_note += 1;\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate();\n\
    \    let mut current_note = 0;\n    let mut current_beat = 0;\n    let mut current_note_index\
    \ = 0;\n    let mut last_note = -1;\n    let mut last_beat = 0;\n    let mut last_note_index\
    \ = 0;\n    let mut last_note_index2 = 0;\n    let mut last_note_index3 = 0;\n\
    \    let mut last_note_index4 = 0;\n    let mut last_note_index5 = 0;\n    let\
    \ mut last_note_index6 = 0;\n    let mut last_note_index7 = 0;\n    let mut last_note_index8\
    \ = 0;\n    let mut last_note_index9 = 0;\n    let mut last_note_index10 = 0;\n\
    \    let mut last_note_index11 = 0;\n    let mut last_note_index12 = 0;\n    let\
    \ mut last_note_index13 = 0;\n    let mut last_note_index14 = 0;\n    let mut\
    \ last_note_index15 = 0;\n    let mut last_note_index16 = 0;\n    let mut last_note_index17\
    \ = 0;\n    let mut last_note_index18 = 0;\n    let mut last_note_index19 = 0;\n\
    \    let mut last_note_index20 = 0;\n    let mut last_note_index21 = 0;\n    let\
    \ mut last_note_index22 = 0;\n    let mut last_note_index23 = 0;\n    let mut\
    \ last_note_index24 = 0;\n    let mut last_note_index25 = 0;\n    let mut last_note_index26\
    \ = 0;\n    let mut last_note_index27 = 0;\n    let mut last_note_index28 = 0;\n\
    \    let mut last_note_index29 = 0;\n    let mut last_note_index30 = 0;\n    let\
    \ mut last_note_index31 = 0;\n    let mut last_note_index32 = 0;\n    let mut\
    \ last_note_index33 = 0;\n    let mut last_note_index34 = 0;\n    let mut last_note_index35\
    \ = 0;\n    let mut last_note_index36 = 0;\n    let mut last_note_index37 = 0;\n\
    \    let mut last_note_index38 = 0;\n    let mut last_note_index39 = 0;\n    let\
    \ mut last_note_index40 = 0;\n    let mut last_note_index41 = 0;\n    let mut\
    \ last_note_index42 = 0;\n    let mut last_note_index43 = 0;\n    let mut last_note_index44\
    \ = 0;\n    let mut last_note_index45 = 0;\n    let mut last_note_index46 = 0;\n\
    \    let mut last_note_index47 = 0;\n    let mut last_note_index48 = 0;\n    let\
    \ mut last_note_index49 = 0;\n    let mut last_note_index50 = 0;\n    let mut\
    \ last_note_index51 = 0;", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    for c in music_string.chars()\
    \ {\n        if c == 'o' {\n            beats.push(current_beat);\n          \
    \  current_beat = 0;\n            current_note = String::new();\n        } else\
    \ if c == '|' {\n            current_beat += 1;\n        } else if c == '.' {\n\
    \            current_beat += 1;\n            current_note.push(c);\n        }\
    \ else {\n            current_note.push(c);\n        }\n    }\n    beats.push(current_beat);\n\
    \    beats", "    let mut beats = Vec::new();\n    let mut current_beat = 0;\n\
    \    let mut current_note = 0;\n    let mut current_note_length = 0;\n    for\
    \ c in music_string.chars() {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase()\
    \ == 'o' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = c.to_ascii_lowercase();\n             \
    \   current_note_length = 1;\n            } else if c.to_ascii_lowercase() ==\
    \ 'o|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = c.to_ascii_lowercase();\n             \
    \   current_note_length = 2;\n            } else if c.to_ascii_lowercase() ==\
    \ '.|' {\n                beats.push(current_beat);\n                current_beat\
    \ = 0;\n                current_note = c.to_ascii_lowercase();\n             \
    \   current_note_length = 1;\n            } else {\n                panic!(\"\
    Unknown note {}\", c);\n            }\n        } else {\n            current_beat\
    \ += 1;\n        }\n    }\n    beats.push(current_beat);\n    beats", "    let\
    \ mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ note)| note != '|');\n    let mut last_note = notes.next().unwrap().0;\n   \
    \ let mut last_beat = 0;\n    for note in notes {\n        let beat = note.1 -\
    \ last_note;\n        beats.push(beat);\n        last_note = note.1;\n       \
    \ last_beat = beat;\n    }\n    beats", "    let mut beats = vec![];\n    let\
    \ mut notes = music_string.split_whitespace();\n    for note in notes {\n    \
    \    if note == \"o\" {\n            beats.push(4);\n        } else if note ==\
    \ \"o|\" {\n            beats.push(2);\n        } else if note == \".|\" {\n \
    \           beats.push(1);\n        } else {\n            panic!(\"Unknown note\
    \ '{}'\", note);\n        }\n    }\n    beats", "    let mut beats: Vec<isize>\
    \ = Vec::new();\n    let mut current_beat: usize = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mu", "    let mut beats = vec![];\n    let mut current_beat =\
    \ 0;\n    let mut current_note = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let ", "    let mut beats: Vec<isize> = Vec::new();\n  \
    \  let mut current_beat = 0;\n    let mut current_note = String::new();\n    let\
    \ mut current_note_length = 0;\n    let mut current_note_length_index = 0;\n \
    \   let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 1;\n    let mut current_note_length_index42 = 1;\n    let mut current_note_length_index43\
    \ = 1;\n    let mut current_note_length_index44 = 1;\n    let mut current_note_length_index45\
    \ = 1;\n    let mut current_note_length_index46 = 1;\n    let mut current_note_length_index47\
    \ = 1;\n    let mut ", "    let mut beats = Vec::new();\n    let mut current_beat\
    \ = 0;\n    let mut current_note = 0;\n    let mut current_note_length = 0;\n\
    \    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;\n    let mut current_note_", "    let mut beats = Vec::new();\n    let\
    \ mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_index2\
    \ = 0;\n    let mut current_note_length_index3 = 0;\n    let mut current_note_length_index4\
    \ = 0;\n    let mut current_note_length_index5 = 0;\n    let mut current_note_length_index6\
    \ = 0;\n    let mut current_note_length_index7 = 0;\n    let mut current_note_length_index8\
    \ = 0;\n    let mut current_note_length_index9 = 0;\n    let mut current_note_length_index10\
    \ = 0;\n    let mut current_note_length_index11 = 0;\n    let mut current_note_length_index12\
    \ = 0;\n    let mut current_note_length_index13 = 0;\n    let mut current_note_length_index14\
    \ = 0;\n    let mut current_note_length_index15 = 0;\n    let mut current_note_length_index16\
    \ = 0;\n    let mut current_note_length_index17 = 0;\n    let mut current_note_length_index18\
    \ = 0;\n    let mut current_note_length_index19 = 0;\n    let mut current_note_length_index20\
    \ = 0;\n    let mut current_note_length_index21 = 0;\n    let mut current_note_length_index22\
    \ = 0;\n    let mut current_note_length_index23 = 0;\n    let mut current_note_length_index24\
    \ = 0;\n    let mut current_note_length_index25 = 0;\n    let mut current_note_length_index26\
    \ = 0;\n    let mut current_note_length_index27 = 0;\n    let mut current_note_length_index28\
    \ = 0;\n    let mut current_note_length_index29 = 0;\n    let mut current_note_length_index30\
    \ = 0;\n    let mut current_note_length_index31 = 0;\n    let mut current_note_length_index32\
    \ = 0;\n    let mut current_note_length_index33 = 0;\n    let mut current_note_length_index34\
    \ = 0;\n    let mut current_note_length_index35 = 0;\n    let mut current_note_length_index36\
    \ = 0;\n    let mut current_note_length_index37 = 0;\n    let mut current_note_length_index38\
    \ = 0;\n    let mut current_note_length_index39 = 0;\n    let mut current_note_length_index40\
    \ = 0;\n    let mut current_note_length_index41 = 0;\n    let mut current_note_length_index42\
    \ = 0;\n    let mut current_note_length_index43 = 0;\n    let mut current_note_length_index44\
    \ = 0;\n    let mut current_note_length_index45 = 0;\n    let mut current_note_length_index46\
    \ = 0;\n    let mut current_note_length_index47 = 0;\n    let mut current_note_length_index48\
    \ = 0;\n    let mut current_note_", "    let mut beats: Vec<isize> = Vec::new();\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let mut\
    \ current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n    let mut current_note_oct4\
    \ = 0;\n    let mut current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n\
    \    let mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n    let\
    \ mut current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n    let mut\
    \ current_note_oct11 = 0;\n    let mut current_note_oct12 = 0;\n    let mut current_note_oct13\
    \ = 0;\n    let mut current_note_oct14 = 0;\n    let mut current_note_oct15 =\
    \ 0;\n    let mut current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n\
    \    let mut current_note_oct18 = 0;\n    let mut current_note_oct19 = 0;\n  \
    \  let mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n    let\
    \ mut current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n    let mut\
    \ current_note_oct24 = 0;\n    let mut current_note_oct25 = 0;\n    let mut current_note_oct26\
    \ = 0;\n    let mut current_note_oct27 = 0;\n    let mut current_note_oct28 =\
    \ 0;\n    let mut current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n\
    \    let mut current_note_oct31 = 0;\n    let mut current_note_oct32 = 0;\n  \
    \  let mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n    let\
    \ mut current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n    let mut\
    \ current_note_oct37 = 0;\n    let mut current_note_oct38 = 0;\n    let mut current_note_oct39\
    \ = 0;\n    let mut current_note_oct40 = 0;\n    let mut current_note_oct41 =\
    \ 0;\n    let mut current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n\
    \    let mut current_note_oct44 = 0;\n    let mut current_note_oct45 = 0;\n  \
    \  let mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n    let\
    \ mut current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n    let mut\
    \ current_note_oct50 = 0;\n    let mut current_note_oct51 = 0;\n    let mut current_note_oct52\
    \ = 0;\n    let mut current_note_oct53", "    let mut beats = vec![];\n    let\
    \ mut current_beat = 0;\n    let mut current_note = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let mut current_note_length = String::new();\n    let\
    \ mut current_note_length = String::new();\n    let mut current_note_length =\
    \ String::new();\n    let mut current_note_length = String::new();\n    let mut\
    \ current_note_length = String::new();\n    let mut current_note_length = String::new();\n\
    \    let mut current_note_length = String::new();\n    let mut current_note_length\
    \ = String::new();\n    let ", "    let mut beats = vec![];\n    let mut current_beat\
    \ = 0;\n    let mut current_note = String::new();\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat += 4;\n\
    \                current_note = String::new();\n            } else if c.to_ascii_lowercase()\
    \ == 'o|' {\n                beats.push(current_beat);\n                current_beat\
    \ += 2;\n                current_note = String::new();\n            } else if\
    \ c.to_ascii_lowercase() == '.|' {\n                beats.push(current_beat);\n\
    \                current_beat += 1;\n                current_note = String::new();\n\
    \            } else {\n                current_note += c.to_ascii_lowercase();\n\
    \            }\n        } else {\n            current_note += c.to_ascii_lowercase();\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_octave = 0;\n    let mut current_note_is_octave = false;\n\
    \    let mut current_note_is_rest = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested = false;\n    let mut current_note_is_rested\
    \ = false;\n    let mut current_note_is_rested", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let mut\
    \ current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n    let mut current_note_oct4\
    \ = 0;\n    let mut current_note_oct5 = 0;\n    let mut current_note_oct6 = 0;\n\
    \    let mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n    let\
    \ mut current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n    let mut\
    \ current_note_oct11 = 0;\n    let mut current_note_oct12 = 0;\n    let mut current_note_oct13\
    \ = 0;\n    let mut current_note_oct14 = 0;\n    let mut current_note_oct15 =\
    \ 0;\n    let mut current_note_oct16 = 0;\n    let mut current_note_oct17 = 0;\n\
    \    let mut current_note_oct18 = 0;\n    let mut current_note_oct19 = 0;\n  \
    \  let mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n    let\
    \ mut current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n    let mut\
    \ current_note_oct24 = 0;\n    let mut current_note_oct25 = 0;\n    let mut current_note_oct26\
    \ = 0;\n    let mut current_note_oct27 = 0;\n    let mut current_note_oct28 =\
    \ 0;\n    let mut current_note_oct29 = 0;\n    let mut current_note_oct30 = 0;\n\
    \    let mut current_note_oct31 = 0;\n    let mut current_note_oct32 = 0;\n  \
    \  let mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n    let\
    \ mut current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n    let mut\
    \ current_note_oct37 = 0;\n    let mut current_note_oct38 = 0;\n    let mut current_note_oct39\
    \ = 0;\n    let mut current_note_oct40 = 0;\n    let mut current_note_oct41 =\
    \ 0;\n    let mut current_note_oct42 = 0;\n    let mut current_note_oct43 = 0;\n\
    \    let mut current_note_oct44 = 0;\n    let mut current_note_oct45 = 0;\n  \
    \  let mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n    let\
    \ mut current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n    let mut\
    \ current_note_oct50 = 0;\n    let mut current_note_oct51 = 0;\n    let mut current_note_oct52\
    \ = 0;\n    let mut current_note_oct53 = 0;\n    let mut current_note_", "   \
    \ let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_len = 0;\n    for c in music_string.chars()\
    \ {\n        if c.is_ascii() {\n            if c.to_ascii_lowercase() == 'o' {\n\
    \                beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_len\
    \ = c.len_utf8();\n            } else if c.to_ascii_lowercase() == 'o|' {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_len\
    \ = c.len_utf8();\n            } else if c.to_ascii_lowercase() == '.|' {\n  \
    \              beats.push(current_beat);\n                current_beat = 0;\n\
    \                current_note = String::new();\n                current_note_len\
    \ = c.len_utf8();\n            } else {\n                current_note.push(c);\n\
    \                current_note_len = c.len_utf8();\n            }\n        } else\
    \ {\n            current_note.push(c);\n            current_note_len = c.len_utf8();\n\
    \        }\n        if current_note_len == 0 {\n            current_beat++;\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_index\
    \ = 0;\n    let mut current_note_length_index2 = 0;\n    let mut current_note_length_index3\
    \ = 0;\n    let mut current_note_length_index4 = 0;\n    let mut current_note_length_index5\
    \ = 0;\n    let mut current_note_length_index6 = 0;\n    let mut current_note_length_index7\
    \ = 0;\n    let mut current_note_length_index8 = 0;\n    let mut current_note_length_index9\
    \ = 0;\n    let mut current_note_length_index10 = 0;\n    let mut current_note_length_index11\
    \ = 0;\n    let mut current_note_length_index12 = 0;\n    let mut current_note_length_index13\
    \ = 0;\n    let mut current_note_length_index14 = 0;\n    let mut current_note_length_index15\
    \ = 0;\n    let mut current_note_length_index16 = 0;\n    let mut current_note_length_index17\
    \ = 0;\n    let mut current_note_length_index18 = 0;\n    let mut current_note_length_index19\
    \ = 0;\n    let mut current_note_length_index20 = 0;\n    let mut current_note_length_index21\
    \ = 0;\n    let mut current_note_length_index22 = 0;\n    let mut current_note_length_index23\
    \ = 0;\n    let mut current_note_length_index24 = 0;\n    let mut current_note_length_index25\
    \ = 0;\n    let mut current_note_length_index26 = 0;\n    let mut current_note_length_index27\
    \ = 0;\n    let mut current_note_length_index28 = 0;\n    let mut current_note_length_index29\
    \ = 0;\n    let mut current_note_length_index30 = 0;\n    let mut current_note_length_index31\
    \ = 0;\n    let mut current_note_length_index32 = 0;\n    let mut current_note_length_index33\
    \ = 0;\n    let mut current_note_length_index34 = 0;\n    let mut current_note_length_index35\
    \ = 0;\n    let mut current_note_length_index36 = 0;\n    let mut current_note_length_index37\
    \ = 0;\n    let mut current_note_length_index38 = 0;\n    let mut current_note_length_index39\
    \ = 0;\n    let mut current_note_length_index40 = 0;\n    let mut current_note_length_index41\
    \ = 0;\n    let mut current_note_length_index42 = 0;\n    let mut current_note_length_index43\
    \ = 0;\n    let mut current_note_length_index44 = 0;\n    let mut current_note_length_index45\
    \ = 0;\n    let mut current_note_length_index46 = 0;\n    let mut current_note_length_index47\
    \ = 0;\n    let mut current_note_length_index48 = 0;", "    let mut beats = vec![];\n\
    \    let mut notes = music_string.chars().enumerate().filter(|(_, c)| c != '|');\n\
    \    for note in notes {\n        let mut beat = 0;\n        note.1.unwrap().to_ascii_lowercase().chars().enumerate().for_each(|(_,\
    \ c)| {\n            if c == 'o' {\n                beat += 1;\n            }\n\
    \            if c == '|' {\n                beat += 2;\n            }\n      \
    \  });\n        beats.push(beat);\n    }\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_octave = 0;\n    let mut current_note_is_octave = false;\n\
    \    for c in music_string.chars() {\n        if c.is_ascii() {\n            if\
    \ c.to_ascii_lowercase() == 'o' {\n                if current_note_is_octave {\n\
    \                    current_octave += 1;\n                } else {\n        \
    \            current_note_is_octave = true;\n                    current_octave\
    \ = 1;\n                }\n                current_note = String::new();\n   \
    \         } else if c.to_ascii_lowercase() == '|' {\n                if current_note_is_octave\
    \ {\n                    current_octave += 1;\n                } else {\n    \
    \                current_note_is_octave = true;\n                    current_octave\
    \ = 1;\n                }\n                current_note = String::new();\n   \
    \         } else {\n                current_note.push_str(&c.to_ascii_lowercase());\n\
    \            }\n        } else {\n            if current_note.is_empty() {\n \
    \               println!(\"Invalid music string\");\n                return beats;\n\
    \            }\n            if c.is_ascii() {\n                let beat = current_beat\
    \ + current_octave * 12;\n                beats.push(beat);\n                current_beat\
    \ = 0;\n                current_note = String::new();\n                current_octave\
    \ = 0;\n                current_note_is_octave = false;\n            } else {\n\
    \                println!(\"Invalid music string\");\n                return beats;\n\
    \            }\n        }\n    }\n    beats.push(current_beat + current_octave\
    \ * 12);\n    beats", "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ note)| note != 'o').collect::<Vec<_>>();\n    let mut current_beat = 0;\n  \
    \  let mut current_note = 0;\n    let mut current_note_length = 0;\n    let mut\
    \ current_note_length_to_beat = 0;\n    for note in notes {\n        if note ==\
    \ 'o' {\n            beats.push(current_beat);\n            current_beat = 0;\n\
    \            current_note = note;\n            current_note_length = 0;\n    \
    \        current_note_length_to_beat = 0;\n        } else if note == 'o|' {\n\
    \            beats.push(current_beat);\n            current_beat = 0;\n      \
    \      current_note = note;\n            current_note_length = 2;\n          \
    \  current_note_length_to_beat = 0;\n        } else if note == '.|' {\n      \
    \      beats.push(current_beat);\n            current_beat = 0;\n            current_note\
    \ = note;\n            current_note_length = 1;\n            current_note_length_to_beat\
    \ = 0;\n        } else {\n            current_beat += 1;\n            current_note_length\
    \ += 1;\n            current_note_length_to_beat += 1;\n        }\n    }\n   \
    \ beats.push(current_beat);\n    beats", "    let mut beats = vec![];\n    let\
    \ mut notes = music_string.chars().enumerate();\n    let mut current_note = notes.next();\n\
    \    let mut current_beat = 0;\n    loop {\n        if current_note.1 == Some('o')\
    \ {\n            beats.push(current_beat);\n            current_beat += 4;\n \
    \           current_note = notes.next();\n        } else if current_note.1 ==\
    \ Some('o|') {\n            beats.push(current_beat);\n            current_beat\
    \ += 2;\n            current_note = notes.next();\n        } else if current_note.1\
    \ == Some('.|') {\n            beats.push(current_beat);\n            current_beat\
    \ += 1;\n            current_note = notes.next();\n        } else {\n        \
    \    break;\n        }\n    }\n    beats", "    let mut beats: Vec<isize> = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = 0;\n    let mut current_note_length\
    \ = 0;\n    let mut current_note_length_index = 0;\n    let mut current_note_length_value\
    \ = 0;\n    let mut current_note_length_value_next = 0;\n    let mut current_note_length_value_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next = 0;\n    let mut\
    \ current_note_length_value_next_next_next_next = 0;\n    let mut current_note_length_value_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next =\
    \ 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut current_note_length_value_next_next_next_", "    let mut beats\
    \ = vec![];\n    let mut current_beat = 0;\n    let mut current_note = String::new();\n\
    \    let mut current_note_len = 0;\n    let mut current_note_oct = 0;\n    let\
    \ mut current_note_oct2 = 0;\n    let mut current_note_oct3 = 0;\n    let mut\
    \ current_note_oct4 = 0;\n    let mut current_note_oct5 = 0;\n    let mut current_note_oct6\
    \ = 0;\n    let mut current_note_oct7 = 0;\n    let mut current_note_oct8 = 0;\n\
    \    let mut current_note_oct9 = 0;\n    let mut current_note_oct10 = 0;\n   \
    \ let mut current_note_oct11 = 0;\n    let mut current_note_oct12 = 0;\n    let\
    \ mut current_note_oct13 = 0;\n    let mut current_note_oct14 = 0;\n    let mut\
    \ current_note_oct15 = 0;\n    let mut current_note_oct16 = 0;\n    let mut current_note_oct17\
    \ = 0;\n    let mut current_note_oct18 = 0;\n    let mut current_note_oct19 =\
    \ 0;\n    let mut current_note_oct20 = 0;\n    let mut current_note_oct21 = 0;\n\
    \    let mut current_note_oct22 = 0;\n    let mut current_note_oct23 = 0;\n  \
    \  let mut current_note_oct24 = 0;\n    let mut current_note_oct25 = 0;\n    let\
    \ mut current_note_oct26 = 0;\n    let mut current_note_oct27 = 0;\n    let mut\
    \ current_note_oct28 = 0;\n    let mut current_note_oct29 = 0;\n    let mut current_note_oct30\
    \ = 0;\n    let mut current_note_oct31 = 0;\n    let mut current_note_oct32 =\
    \ 0;\n    let mut current_note_oct33 = 0;\n    let mut current_note_oct34 = 0;\n\
    \    let mut current_note_oct35 = 0;\n    let mut current_note_oct36 = 0;\n  \
    \  let mut current_note_oct37 = 0;\n    let mut current_note_oct38 = 0;\n    let\
    \ mut current_note_oct39 = 0;\n    let mut current_note_oct40 = 0;\n    let mut\
    \ current_note_oct41 = 0;\n    let mut current_note_oct42 = 0;\n    let mut current_note_oct43\
    \ = 0;\n    let mut current_note_oct44 = 0;\n    let mut current_note_oct45 =\
    \ 0;\n    let mut current_note_oct46 = 0;\n    let mut current_note_oct47 = 0;\n\
    \    let mut current_note_oct48 = 0;\n    let mut current_note_oct49 = 0;\n  \
    \  let mut current_note_oct50 = 0;\n    let mut current_note_oct51 = 0;\n    let\
    \ mut current_note_oct52 = 0;\n    let mut current_note_oct53 = 0;\n    let mut\
    \ current_note_", "    let mut beats: Vec<isize> = vec![];\n    let mut notes:\
    \ Vec<&str> = vec![];\n    let mut notes_len: usize = 0;\n    let mut last_note\
    \ = String::new();\n    let mut last_note_beat: usize = 0;\n    let mut last_note_beats:\
    \ usize = 0;\n    let mut last_note_beats_len: usize = 0;\n    let mut last_note_beats_len2:\
    \ usize = 0;\n    let mut last_note_beats_len3: usize = 0;\n    let mut last_note_beats_len4:\
    \ usize = 0;\n    let mut last_note_beats_len5: usize = 0;\n    let mut last_note_beats_len6:\
    \ usize = 0;\n    let mut last_note_beats_len7: usize = 0;\n    let mut last_note_beats_len8:\
    \ usize = 0;\n    let mut last_note_beats_len9: usize = 0;\n    let mut last_note_beats_len10:\
    \ usize = 0;\n    let mut last_note_beats_len11: usize = 0;\n    let mut last_note_beats_len12:\
    \ usize = 0;\n    let mut last_note_beats_len13: usize = 0;\n    let mut last_note_beats_len14:\
    \ usize = 0;\n    let mut last_note_beats_len15: usize = 0;\n    let mut last_note_beats_len16:\
    \ usize = 0;\n    let mut last_note_beats_len17: usize = 0;\n    let mut last_note_beats_len18:\
    \ usize = 0;\n    let mut last_note_beats_len19: usize = 0;\n    let mut last_note_beats_len20:\
    \ usize = 0;\n    let mut last_note_beats_len21: usize = 0;\n    let mut last_note_beats_len22:\
    \ usize = 0;\n    let mut last_note_beats_len23: usize = 0;\n    let mut last_note_beats_len24:\
    \ usize = 0;\n    let mut last_note_beats_len25: usize = 0;\n    let mut last_note_beats_len26:\
    \ usize = 0;\n    let mut last_note_beats_len27: usize = 0;\n    let mut last_note_beats_len28:\
    \ usize = 0;\n    let mut last_note_beats_len29: usize = 0;\n    let mut last_note_beats_len30:\
    \ usize = 0;\n    let mut last_note_beats_len31: usize = 0;\n    let mut last_note_beats_len32",
  "    let mut beats = vec![];\n    let mut current_beat = 0;\n    let mut current_note\
    \ = String::new();\n    let mut current_note_length = 0;\n    for c in music_string\
    \ {\n        if c.is_whitespace() {\n            continue;\n        }\n      \
    \  if c.is_ascii(0) {\n            if current_note.is_empty() {\n            \
    \    continue;\n            }\n            beats.push(current_beat);\n       \
    \     current_beat = 0;\n            current_note = String::new();\n         \
    \   current_note_length = 0;\n            continue;\n        }\n        let note_length\
    \ = c.len_utf8();\n        if note_length == 0 {\n            continue;\n    \
    \    }\n        if note_length == 1 {\n            current_note += c;\n      \
    \      current_note_length = 1;\n            continue;\n        }\n        if\
    \ note_length == 2 {\n            current_note += c;\n            current_note_length\
    \ = 2;\n            continue;\n        }\n        if note_length == 3 {\n    \
    \        current_note += c;\n            current_note_length = 3;\n          \
    \  continue;\n        }\n        if note_length == 4 {\n            current_note\
    \ += c;\n            current_note_length = 4;\n            continue;\n       \
    \ }\n        if note_length == 5 {\n            current_note += c;\n         \
    \   current_note_length = 5;\n            continue;\n        }\n        if note_length\
    \ == 6 {\n            current_note += c;\n            current_note_length = 6;\n\
    \            continue;\n        }\n        if note_length == 7 {\n           \
    \ current_note += c;\n            current_note_length = 7;\n            continue;\n\
    \        }\n        if note_length == 8 {\n            current_note += c;\n  \
    \          current_note_length = 8;\n            continue;\n        }\n      \
    \  if note_length == 9 {\n            current_note += c;\n            current_note_length\
    \ = 9;\n            continue;\n        }\n        if note_length == 10 {\n   \
    \         current_note += c;\n            current_note_length = 10;\n        \
    \    continue;\n        }\n        if note_length == 11 {\n            current_note\
    \ += c;\n            current_note_length = 11;\n            continue;\n      \
    \  }\n        if note_length == 12 {\n            current_note += c;\n       \
    \     current_note_length = 12;\n            continue;\n        }\n        if\
    \ note_length == 13 {\n            current_note += c;\n            current_note_length\
    \ = 13;\n            continue;\n        }\n        if note_length == 14 {\n  \
    \          current_note += c;\n            current_note_length = 14;\n       \
    \     continue;\n        }\n        if note_length == 15 {\n            current_note\
    \ += c;\n            current_note_length = 15;\n            continue;\n      \
    \  }\n        if note_length == 16 {\n            current_note += c;\n       \
    \     current_note_length = 16;\n            continue;\n        }\n        if\
    \ note_length == 17 {\n            current_note += c;\n            current_note_length\
    \ = 17;\n            continue;\n        }\n        if note_length == 18 {\n  \
    \          current_note += c;\n            current_note_length = 18;\n       \
    \     continue;\n        }\n        if note_length == 19 {\n", "    let mut beats:\
    \ Vec<isize> = Vec::new();\n    let mut current_beat = 0;\n    let mut current_note\
    \ = 0;\n    let mut current_note_length = 0;\n    let mut current_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note = 0;\n    let mut current_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat = 0;\n\
    \    let mut current_note_length_to_beat_with_note_length_to_beat_with_note =\
    \ 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note\
    \ = 0;\n    let mut current_note_length_to_beat_with_note_length_to_beat_with_note_length_to_beat_with_note_length_to_be",
  "    let mut beats = vec![];\n    let mut notes = music_string.chars().enumerate().filter(|(_,\
    \ note)| note != 'o').collect::<Vec<_>>();\n    let mut last_note = notes.len()\
    \ - 1;\n    let mut last_beat = 0;\n    for note in notes {\n        if note ==\
    \ 'o' {\n            beats.push(4);\n            last_beat = 0;\n        } else\
    \ {\n            beats.push(beats[last_beat] + 1);\n            last_beat = beats.len()\
    \ - 1;\n        }\n    }\n    beats", "    let mut beats = vec![];\n    let mut\
    \ current_beat = 0;\n    let mut current_note = String::new();\n    for c in music_string.chars()\
    \ {\n        if c == 'o' {\n            beats.push(current_beat);\n          \
    \  current_beat = 0;\n            current_note = String::new();\n        } else\
    \ if c == '|' {\n            beats.push(current_beat);\n            current_beat\
    \ = 0;\n            current_note = String::new();\n        } else if c == '.'\
    \ {\n            current_beat++;\n        } else {\n            current_note.push(c);\n\
    \        }\n    }\n    beats.push(current_beat);\n    beats", "    let mut beats\
    \ = vec![];\n    let mut notes = music_string.split_whitespace();\n    for note\
    \ in notes {\n        match note {\n            \"o\" => beats.push(4),\n    \
    \        \"o|\" => beats.push(2),\n            \".|\" => beats.push(1),\n    \
    \        _ => (),\n        }\n    }\n    beats", "    let mut beats = vec![];\n\
    \    let mut current_beat = 0;\n    let mut current_note = String::new();\n  \
    \  let mut current_note_len = 0;\n    for c in music_string {\n        if c ==\
    \ 'o' {\n            if current_note_len > 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_len = String::new();\n            }\n        } else\
    \ if c == '|' {\n            if current_note_len > 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_len = String::new();\n            }\n        } else\
    \ if c == '.' {\n            if current_note_len > 0 {\n                beats.push(current_beat);\n\
    \                current_beat = 0;\n                current_note = String::new();\n\
    \                current_note_len = String::new();\n            }\n        } else\
    \ {\n            current_note.push(c);\n            current_note_len = current_note.len();\n\
    \        }\n    }\n    if current_note_len > 0 {\n        beats.push(current_beat);\n\
    \    }\n    beats"]
stop_tokens:
- "\n}"

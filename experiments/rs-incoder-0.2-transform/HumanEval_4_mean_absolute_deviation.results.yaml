language: rs
name: HumanEval_4_mean_absolute_deviation
results:
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkl0c59zb.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkl0c59zb.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpdxoe5od9.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push((n\
    \ - mean).abs());\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpyjbwdmkj.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpyjbwdmkj.rs:14:36\n   |\n14 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpe7ng8s4a.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpdxoe5od9.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpe7ng8s4a.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0;\n    for n in numbers {\n        mad += f64::abs(n - mean);\n \
    \       mean += n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpblku3anh.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ add-assign `f64` to `{integer}`\n  --> /tmp/tmpblku3anh.rs:12:13\n   |\n12 |\
    \         mad += f64::abs(n - mean);\n   |             ^^ no implementation for\
    \ `{integer} += f64`\n   |\n   = help: the trait `AddAssign<f64>` is not implemented\
    \ for `{integer}`\n   = help: the following other types implement trait `AddAssign<Rhs>`:\n\
    \             <f32 as AddAssign<&f32>>\n             <f32 as AddAssign>\n    \
    \         <f64 as AddAssign<&f64>>\n             <f64 as AddAssign>\n        \
    \     <i128 as AddAssign<&i128>>\n             <i128 as AddAssign>\n         \
    \    <i16 as AddAssign<&i16>>\n             <i16 as AddAssign>\n           and\
    \ 20 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpblku3anh.rs:15:5\n\
    \   |\n8  | fn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n   |     \
    \                                             --- expected `f64` because of return\
    \ type\n...\n15 |     mad\n   |     ^^^ expected `f64`, found integer\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad += std::f64::abs(n - mean);\n\
    \        mean += n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `abs` in module `std::f64`\n  --> /tmp/tmp_grsf4cc.rs:12:26\n\
    \   |\n12 |         mad += std::f64::abs(n - mean);\n   |                    \
    \      ^^^ not found in `std::f64`\n\nerror[E0277]: cannot divide `f64` by `usize`\n\
    \ --> /tmp/tmp_grsf4cc.rs:9:48\n  |\n9 |     let mut mean = numbers.iter().sum::<f64>()\
    \ / numbers.len();\n  |                                                ^ no implementation\
    \ for `f64 / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n  = help: the following other types implement trait `Div<Rhs>`:\n\
    \            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n      \
    \      <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n          \
    \  <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a\
    \ i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpdxoe5od9.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpb0tkg061.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkl0c59zb.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad += f64::abs(n - mean);\n\
    \        mean += n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpf7wxyt5t.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmppxi0059_.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpdxoe5od9.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp4rmzdksg.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ add `f64` to `{integer}`\n  --> /tmp/tmp4rmzdksg.rs:12:19\n   |\n12 |      \
    \   mad = mad + f64::abs(n - mean);\n   |                   ^ no implementation\
    \ for `{integer} + f64`\n   |\n   = help: the trait `Add<f64>` is not implemented\
    \ for `{integer}`\n   = help: the following other types implement trait `Add<Rhs>`:\n\
    \             <&'a f32 as Add<f32>>\n             <&'a f64 as Add<f64>>\n    \
    \         <&'a i128 as Add<i128>>\n             <&'a i16 as Add<i16>>\n      \
    \       <&'a i32 as Add<i32>>\n             <&'a i64 as Add<i64>>\n          \
    \   <&'a i8 as Add<i8>>\n             <&'a isize as Add<isize>>\n           and\
    \ 48 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp4rmzdksg.rs:15:5\n\
    \   |\n8  | fn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n   |     \
    \                                             --- expected `f64` because of return\
    \ type\n...\n15 |     mad\n   |     ^^^ expected `f64`, found integer\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkl0c59zb.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkl0c59zb.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let\
    \ candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]),\
    \ 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmputom9jge.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean += n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpc2zphkif.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpc2zphkif.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpdxoe5od9.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp4rmzdksg.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ add `f64` to `{integer}`\n  --> /tmp/tmp4rmzdksg.rs:12:19\n   |\n12 |      \
    \   mad = mad + f64::abs(n - mean);\n   |                   ^ no implementation\
    \ for `{integer} + f64`\n   |\n   = help: the trait `Add<f64>` is not implemented\
    \ for `{integer}`\n   = help: the following other types implement trait `Add<Rhs>`:\n\
    \             <&'a f32 as Add<f32>>\n             <&'a f64 as Add<f64>>\n    \
    \         <&'a i128 as Add<i128>>\n             <&'a i16 as Add<i16>>\n      \
    \       <&'a i32 as Add<i32>>\n             <&'a i64 as Add<i64>>\n          \
    \   <&'a i8 as Add<i8>>\n             <&'a isize as Add<isize>>\n           and\
    \ 48 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp4rmzdksg.rs:15:5\n\
    \   |\n8  | fn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n   |     \
    \                                             --- expected `f64` because of return\
    \ type\n...\n15 |     mad\n   |     ^^^ expected `f64`, found integer\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpe7ng8s4a.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpe7ng8s4a.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push((n\
    \ - mean).abs());\n        mean = n;\n    }\n    deviations.iter().sum::<f64>()\
    \ / deviations.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpsekez_6n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpsekez_6n.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpe7ng8s4a.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp4rmzdksg.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ add `f64` to `{integer}`\n  --> /tmp/tmp4rmzdksg.rs:12:19\n   |\n12 |      \
    \   mad = mad + f64::abs(n - mean);\n   |                   ^ no implementation\
    \ for `{integer} + f64`\n   |\n   = help: the trait `Add<f64>` is not implemented\
    \ for `{integer}`\n   = help: the following other types implement trait `Add<Rhs>`:\n\
    \             <&'a f32 as Add<f32>>\n             <&'a f64 as Add<f64>>\n    \
    \         <&'a i128 as Add<i128>>\n             <&'a i16 as Add<i16>>\n      \
    \       <&'a i32 as Add<i32>>\n             <&'a i64 as Add<i64>>\n          \
    \   <&'a i8 as Add<i8>>\n             <&'a isize as Add<isize>>\n           and\
    \ 48 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp4rmzdksg.rs:15:5\n\
    \   |\n8  | fn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n   |     \
    \                                             --- expected `f64` because of return\
    \ type\n...\n15 |     mad\n   |     ^^^ expected `f64`, found integer\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkl0c59zb.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp83wmpx83.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmp83wmpx83.rs:15:15\n   |\n15 |     deviation\
    \ / numbers.len()\n   |               ^ no implementation for `f64 / usize`\n\
    \   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help:\
    \ the following other types implement trait `Div<Rhs>`:\n             <&'a f32\
    \ as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as\
    \ Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n\
    \             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n      \
    \       <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp83wmpx83.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmp83wmpx83.rs:15:15\n   |\n15 |     deviation\
    \ / numbers.len()\n   |               ^ no implementation for `f64 / usize`\n\
    \   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help:\
    \ the following other types implement trait `Div<Rhs>`:\n             <&'a f32\
    \ as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as\
    \ Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n\
    \             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n      \
    \       <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean += n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpc2zphkif.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpc2zphkif.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean = n;\n    }\n    deviation / numbers.len()\n}\n\nfn main()\
    \ {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp72xn7ch2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmp72xn7ch2.rs:15:15\n   |\n15 |     deviation\
    \ / numbers.len()\n   |               ^ no implementation for `f64 / usize`\n\
    \   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help:\
    \ the following other types implement trait `Div<Rhs>`:\n             <&'a f32\
    \ as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as\
    \ Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n\
    \             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n      \
    \       <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push((n\
    \ - mean).abs());\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpyjbwdmkj.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpyjbwdmkj.rs:14:36\n   |\n14 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpj046kayg.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean += n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpc2zphkif.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpc2zphkif.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpj046kayg.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let\
    \ candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]),\
    \ 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmputom9jge.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpdxoe5od9.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpdxoe5od9.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp83wmpx83.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmp83wmpx83.rs:15:15\n   |\n15 |     deviation\
    \ / numbers.len()\n   |               ^ no implementation for `f64 / usize`\n\
    \   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help:\
    \ the following other types implement trait `Div<Rhs>`:\n             <&'a f32\
    \ as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as\
    \ Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n\
    \             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n      \
    \       <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean += n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpc2zphkif.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpc2zphkif.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkl0c59zb.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkl0c59zb.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmppxi0059_.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpe7ng8s4a.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkl0c59zb.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 101
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean.into()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3.0`,\n right: `0.5`', /tmp/tmpiuzf2jw8.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010924
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad += std::f64::abs(n -\
    \ mean);\n        mean += n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `abs` in module `std::f64`\n  --> /tmp/tmpp1wanusa.rs:12:26\n\
    \   |\n12 |         mad += std::f64::abs(n - mean);\n   |                    \
    \      ^^^ not found in `std::f64`\n\nerror[E0277]: cannot divide `f64` by `usize`\n\
    \ --> /tmp/tmpp1wanusa.rs:9:48\n  |\n9 |     let mut mean = numbers.iter().sum::<f64>()\
    \ / numbers.len();\n  |                                                ^ no implementation\
    \ for `f64 / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n  = help: the following other types implement trait `Div<Rhs>`:\n\
    \            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n      \
    \      <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n          \
    \  <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a\
    \ i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp83wmpx83.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmp83wmpx83.rs:15:15\n   |\n15 |     deviation\
    \ / numbers.len()\n   |               ^ no implementation for `f64 / usize`\n\
    \   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help:\
    \ the following other types implement trait `Div<Rhs>`:\n             <&'a f32\
    \ as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as\
    \ Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n\
    \             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n      \
    \       <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp4rmzdksg.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ add `f64` to `{integer}`\n  --> /tmp/tmp4rmzdksg.rs:12:19\n   |\n12 |      \
    \   mad = mad + f64::abs(n - mean);\n   |                   ^ no implementation\
    \ for `{integer} + f64`\n   |\n   = help: the trait `Add<f64>` is not implemented\
    \ for `{integer}`\n   = help: the following other types implement trait `Add<Rhs>`:\n\
    \             <&'a f32 as Add<f32>>\n             <&'a f64 as Add<f64>>\n    \
    \         <&'a i128 as Add<i128>>\n             <&'a i16 as Add<i16>>\n      \
    \       <&'a i32 as Add<i32>>\n             <&'a i64 as Add<i64>>\n          \
    \   <&'a i8 as Add<i8>>\n             <&'a isize as Add<isize>>\n           and\
    \ 48 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp4rmzdksg.rs:15:5\n\
    \   |\n8  | fn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n   |     \
    \                                             --- expected `f64` because of return\
    \ type\n...\n15 |     mad\n   |     ^^^ expected `f64`, found integer\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp83wmpx83.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmp83wmpx83.rs:15:15\n   |\n15 |     deviation\
    \ / numbers.len()\n   |               ^ no implementation for `f64 / usize`\n\
    \   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help:\
    \ the following other types implement trait `Div<Rhs>`:\n             <&'a f32\
    \ as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as\
    \ Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n\
    \             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n      \
    \       <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad += std::f64::abs(n - mean);\n\
    \        mean += n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `abs` in module `std::f64`\n  --> /tmp/tmp_grsf4cc.rs:12:26\n\
    \   |\n12 |         mad += std::f64::abs(n - mean);\n   |                    \
    \      ^^^ not found in `std::f64`\n\nerror[E0277]: cannot divide `f64` by `usize`\n\
    \ --> /tmp/tmp_grsf4cc.rs:9:48\n  |\n9 |     let mut mean = numbers.iter().sum::<f64>()\
    \ / numbers.len();\n  |                                                ^ no implementation\
    \ for `f64 / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n  = help: the following other types implement trait `Div<Rhs>`:\n\
    \            <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n      \
    \      <&'a i128 as Div<i128>>\n            <&'a i16 as Div<i16>>\n          \
    \  <&'a i32 as Div<i32>>\n            <&'a i64 as Div<i64>>\n            <&'a\
    \ i8 as Div<i8>>\n            <&'a isize as Div<isize>>\n          and 54 others\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0425.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkl0c59zb.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmppxi0059_.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean += n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpc2zphkif.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpc2zphkif.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad += f64::abs(n - mean);\n\
    \        mean += n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmppt95c_av.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean = n;\n    }\n    deviation / numbers.len()\n}\n\nfn main()\
    \ {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp72xn7ch2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmp72xn7ch2.rs:15:15\n   |\n15 |     deviation\
    \ / numbers.len()\n   |               ^ no implementation for `f64 / usize`\n\
    \   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help:\
    \ the following other types implement trait `Div<Rhs>`:\n             <&'a f32\
    \ as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as\
    \ Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n\
    \             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n      \
    \       <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpj046kayg.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad += f64::abs(n - mean);\n\
    \        mean += n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpf7wxyt5t.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad += f64::abs(n - mean);\n\
    \        mean += n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpf7wxyt5t.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += std::f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `abs` in module `std::f64`\n  --> /tmp/tmp3ykl6dx5.rs:12:32\n\
    \   |\n12 |         deviation += std::f64::abs(n - mean);\n   |              \
    \                  ^^^ not found in `std::f64`\n\nerror[E0277]: cannot divide\
    \ `f64` by `usize`\n --> /tmp/tmp3ykl6dx5.rs:9:48\n  |\n9 |     let mut mean =\
    \ numbers.iter().sum::<f64>() / numbers.len();\n  |                          \
    \                      ^ no implementation for `f64 / usize`\n  |\n  = help: the\
    \ trait `Div<usize>` is not implemented for `f64`\n  = help: the following other\
    \ types implement trait `Div<Rhs>`:\n            <&'a f32 as Div<f32>>\n     \
    \       <&'a f64 as Div<f64>>\n            <&'a i128 as Div<i128>>\n         \
    \   <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n            <&'a\
    \ i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n            <&'a isize as\
    \ Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot divide `{float}`\
    \ by `usize`\n  --> /tmp/tmp3ykl6dx5.rs:15:15\n   |\n15 |     deviation / numbers.len()\n\
    \   |               ^ no implementation for `{float} / usize`\n   |\n   = help:\
    \ the trait `Div<usize>` is not implemented for `{float}`\n   = help: the following\
    \ other types implement trait `Div<Rhs>`:\n             <&'a f32 as Div<f32>>\n\
    \             <&'a f64 as Div<f64>>\n             <&'a i128 as Div<i128>>\n  \
    \           <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n      \
    \       <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n            \
    \ <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting due to\
    \ 3 previous errors\n\nSome errors have detailed explanations: E0277, E0425.\n\
    For more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpj046kayg.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n.abs();\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpdxoe5od9.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp4rmzdksg.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ add `f64` to `{integer}`\n  --> /tmp/tmp4rmzdksg.rs:12:19\n   |\n12 |      \
    \   mad = mad + f64::abs(n - mean);\n   |                   ^ no implementation\
    \ for `{integer} + f64`\n   |\n   = help: the trait `Add<f64>` is not implemented\
    \ for `{integer}`\n   = help: the following other types implement trait `Add<Rhs>`:\n\
    \             <&'a f32 as Add<f32>>\n             <&'a f64 as Add<f64>>\n    \
    \         <&'a i128 as Add<i128>>\n             <&'a i16 as Add<i16>>\n      \
    \       <&'a i32 as Add<i32>>\n             <&'a i64 as Add<i64>>\n          \
    \   <&'a i8 as Add<i8>>\n             <&'a isize as Add<isize>>\n           and\
    \ 48 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp4rmzdksg.rs:15:5\n\
    \   |\n8  | fn mean_absolute_deviation(numbers: Vec<f64>) -> f64 {\n   |     \
    \                                             --- expected `f64` because of return\
    \ type\n...\n15 |     mad\n   |     ^^^ expected `f64`, found integer\n\nerror:\
    \ aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308.\nFor more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp83wmpx83.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmp83wmpx83.rs:15:15\n   |\n15 |     deviation\
    \ / numbers.len()\n   |               ^ no implementation for `f64 / usize`\n\
    \   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help:\
    \ the following other types implement trait `Div<Rhs>`:\n             <&'a f32\
    \ as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as\
    \ Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n\
    \             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n      \
    \       <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpj046kayg.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkl0c59zb.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let\
    \ candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]),\
    \ 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmputom9jge.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkl0c59zb.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp83wmpx83.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmp83wmpx83.rs:15:15\n   |\n15 |     deviation\
    \ / numbers.len()\n   |               ^ no implementation for `f64 / usize`\n\
    \   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help:\
    \ the following other types implement trait `Div<Rhs>`:\n             <&'a f32\
    \ as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as\
    \ Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n\
    \             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n      \
    \       <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push((n\
    \ - mean).abs());\n        mean = n;\n    }\n    deviations.iter().sum::<f64>()\
    \ / deviations.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpsekez_6n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpsekez_6n.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad += f64::abs(n - mean);\n\
    \        mean += n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpf7wxyt5t.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkl0c59zb.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp83wmpx83.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmp83wmpx83.rs:15:15\n   |\n15 |     deviation\
    \ / numbers.len()\n   |               ^ no implementation for `f64 / usize`\n\
    \   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help:\
    \ the following other types implement trait `Div<Rhs>`:\n             <&'a f32\
    \ as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as\
    \ Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n\
    \             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n      \
    \       <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpkl0c59zb.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push((n\
    \ - mean).abs());\n        mean = n;\n    }\n    deviations.iter().sum::<f64>()\
    \ / deviations.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpsekez_6n.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpsekez_6n.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp83wmpx83.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmp83wmpx83.rs:15:15\n   |\n15 |     deviation\
    \ / numbers.len()\n   |               ^ no implementation for `f64 / usize`\n\
    \   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help:\
    \ the following other types implement trait `Div<Rhs>`:\n             <&'a f32\
    \ as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as\
    \ Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n\
    \             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n      \
    \       <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp83wmpx83.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmp83wmpx83.rs:15:15\n   |\n15 |     deviation\
    \ / numbers.len()\n   |               ^ no implementation for `f64 / usize`\n\
    \   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help:\
    \ the following other types implement trait `Div<Rhs>`:\n             <&'a f32\
    \ as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as\
    \ Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n\
    \             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n      \
    \       <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean += n;\n    }\n    deviation / numbers.len()\n}\n\nfn\
    \ main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp83wmpx83.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmp83wmpx83.rs:15:15\n   |\n15 |     deviation\
    \ / numbers.len()\n   |               ^ no implementation for `f64 / usize`\n\
    \   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help:\
    \ the following other types implement trait `Div<Rhs>`:\n             <&'a f32\
    \ as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as\
    \ Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n\
    \             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n      \
    \       <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean += n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpc2zphkif.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpc2zphkif.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean: f64 = 0.0;\n    for n in numbers {\n        mean += n;\n\
    \    }\n    mean / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmpo4dpa3kl.rs:13:10\n\
    \   |\n13 |     mean / numbers.len()\n   |          ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviation = 0.0;\n    for n in numbers {\n        deviation += f64::abs(n\
    \ - mean);\n        mean = n;\n    }\n    deviation / numbers.len()\n}\n\nfn main()\
    \ {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmp72xn7ch2.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmp72xn7ch2.rs:15:15\n   |\n15 |     deviation\
    \ / numbers.len()\n   |               ^ no implementation for `f64 / usize`\n\
    \   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n   = help:\
    \ the following other types implement trait `Div<Rhs>`:\n             <&'a f32\
    \ as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a i128 as\
    \ Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32 as Div<i32>>\n\
    \             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n      \
    \       <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 101
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = 0.0;\n    for n in numbers {\n        mean += n;\n   \
    \ }\n    mean.sqrt()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1.7320508075688772`,\n right: `0.5`', /tmp/tmp3_7z_9bj.rs:18:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660010924
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum = 0.0;\n    for n in numbers {\n        sum += n;\n    }\n\
    \    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmp19sc430g.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + (n - mean).abs();\n\
    \        mean = n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpe7ng8s4a.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad = mad + f64::abs(n -\
    \ mean);\n        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let\
    \ candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]),\
    \ 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmputom9jge.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean = n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpxzgrktsy.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpxzgrktsy.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut sum: f64 = 0.0;\n    for n in numbers {\n        sum += n;\n\
    \    }\n    sum / numbers.len()\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n  --> /tmp/tmph1iy8vb6.rs:13:9\n\
    \   |\n13 |     sum / numbers.len()\n   |         ^ no implementation for `f64\
    \ / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \   = help: the following other types implement trait `Div<Rhs>`:\n          \
    \   <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n             <&'a\
    \ i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n             <&'a i32\
    \ as Div<i32>>\n             <&'a i64 as Div<i64>>\n             <&'a i8 as Div<i8>>\n\
    \             <&'a isize as Div<isize>>\n           and 54 others\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0;\n    for n in numbers {\n        mad = mad + f64::abs(n - mean);\n\
    \        mean = mean + n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate\
    \ = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n\
    \    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpfdff8vaw.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut mad = 0.0f64;\n    for n in numbers {\n        mad += f64::abs(n - mean);\n\
    \        mean += n;\n    }\n    mad\n}\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n\
    \    assert_eq!(candidate(vec![1.0, 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0, 3.0, 4.0]), 1.0);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]),\
    \ 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmppt95c_av.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660010923
- exit_code: 1
  program: "/// For a given list of input numbers, calculate Mean Absolute Deviation\n\
    /// around the mean of this dataset.\n/// Mean Absolute Deviation is the average\
    \ absolute difference between each\n/// element and a centerpoint (mean in this\
    \ case):\n/// MAD = average | x - x_mean |\n/// >>> mean_absolute_deviation(vec![1.0,\
    \ 2.0, 3.0, 4.0])\n/// 1.0\nfn mean_absolute_deviation(numbers: Vec<f64>) -> f64\
    \ {\n    let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n    let\
    \ mut deviations = Vec::new();\n    for n in numbers {\n        deviations.push(n\
    \ - mean);\n        mean += n;\n    }\n    deviations.iter().sum::<f64>() / deviations.len()\n\
    }\n\nfn main() {\n    let candidate = mean_absolute_deviation;\n    assert_eq!(candidate(vec![1.0,\
    \ 2.0]), 0.5);\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0]), 1.0);\n  \
    \  assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0]), 1.2);\n}\n"
  status: SyntaxError
  stderr: "error[E0277]: cannot divide `f64` by `usize`\n --> /tmp/tmpc2zphkif.rs:9:48\n\
    \  |\n9 |     let mut mean = numbers.iter().sum::<f64>() / numbers.len();\n  |\
    \                                                ^ no implementation for `f64\
    \ / usize`\n  |\n  = help: the trait `Div<usize>` is not implemented for `f64`\n\
    \  = help: the following other types implement trait `Div<Rhs>`:\n           \
    \ <&'a f32 as Div<f32>>\n            <&'a f64 as Div<f64>>\n            <&'a i128\
    \ as Div<i128>>\n            <&'a i16 as Div<i16>>\n            <&'a i32 as Div<i32>>\n\
    \            <&'a i64 as Div<i64>>\n            <&'a i8 as Div<i8>>\n        \
    \    <&'a isize as Div<isize>>\n          and 54 others\n\nerror[E0277]: cannot\
    \ divide `f64` by `usize`\n  --> /tmp/tmpc2zphkif.rs:15:36\n   |\n15 |     deviations.iter().sum::<f64>()\
    \ / deviations.len()\n   |                                    ^ no implementation\
    \ for `f64 / usize`\n   |\n   = help: the trait `Div<usize>` is not implemented\
    \ for `f64`\n   = help: the following other types implement trait `Div<Rhs>`:\n\
    \             <&'a f32 as Div<f32>>\n             <&'a f64 as Div<f64>>\n    \
    \         <&'a i128 as Div<i128>>\n             <&'a i16 as Div<i16>>\n      \
    \       <&'a i32 as Div<i32>>\n             <&'a i64 as Div<i64>>\n          \
    \   <&'a i8 as Div<i8>>\n             <&'a isize as Div<isize>>\n           and\
    \ 54 others\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660010923

name: HumanEval_91_is_bored
language: rs
prompt: "/// You'll be given a string of words, and your task is to count the number\n\
  /// of boredoms. A boredom is a sentence that starts with the word \"I\".\n/// Sentences\
  \ are delimited by '.', '?' or '!'.\n/// For example:\n/// >>> is_bored(String::from(\"\
  Hello world\"))\n/// 0\n/// >>> is_bored(String::from(\"The sky is blue. The sun\
  \ is shining. I love this weather\"))\n/// 1\nfn is_bored(S: String) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = is_bored;\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  }\n"
completions: ["    let mut boredoms = vec![];\n    let mut i = 0;\n    while i < S.len()\
    \ {\n        if S[i] == '.' || S[i] == '?' || S[i] == '!' {\n            boredoms.push(S[i]);\n\
    \        }\n        i += 1;\n    }\n    boredoms.iter().filter(|&b| b == 'I').count()",
  "    S.chars().filter(|c| c.is_ascii_letter()).count(|c| c == 'I')", "    S.chars().filter(|c|\
    \ c == '.' || c == '?' || c == '!').count() == 0", "    let mut boredoms: isize\
    \ = 0;\n    let mut s = S.to_string();\n    let mut i = 0;\n    while i < s.len()\
    \ {\n        if s[i] == '.' || s[i] == '?' || s[i] == '!' {\n            i +=\
    \ 1;\n        } else {\n            boredoms += 1;\n        }\n        i += 1;\n\
    \    }\n    boredoms", "    let mut boredoms: isize = 0;\n    let mut i = 0;\n\
    \    while i < S.len() {\n        if S[i] == '.' || S[i] == '?' || S[i] == '!'\
    \ {\n            i += 1;\n        } else {\n            boredoms += 1;\n     \
    \   }\n        i += 1;\n    }\n    boredoms", "    S.chars().filter(|c| c == '.'\
    \ || c == '?' || c == '!').count() == 0", "    let mut boredoms = vec![];\n  \
    \  for word in S.split_whitespace() {\n        if word.starts_with(\"I\") {\n\
    \            boredoms.push(1);\n        } else {\n            boredoms.push(0);\n\
    \        }\n    }\n    boredoms.iter().sum::<isize>()", "    S.chars().filter(|c|\
    \ c == '.' || c == '?' || c == '!').count() == 0", "    let mut boredoms: isize\
    \ = 0;\n    let mut s = S.to_string();\n    while s.len() > 0 {\n        let mut\
    \ i = s.find('i');\n        if i == s.len() {\n            break;\n        }\n\
    \        let mut j = s.find('i', i + 1);\n        if j == s.len() {\n        \
    \    break;\n        }\n        if s[j] == '.' || s[j] == '?' || s[j] == '!' {\n\
    \            boredoms += 1;\n        }\n        s = &s[j..];\n    }\n    boredoms",
  "    let mut boredoms: Vec<&str> = vec![];\n    let mut i = 0;\n    while i < S.len()\
    \ {\n        if S[i] == '.' || S[i] == '?' || S[i] == '!' {\n            boredoms.push(&S[i..i\
    \ + 1]);\n            i += 1;\n        } else {\n            i += 1;\n       \
    \ }\n    }\n    boredoms.iter().filter(|&b| b.starts_with(\"I\")).count()", " \
    \   let mut boredoms: isize = 0;\n    let mut s = S.to_string();\n    let mut\
    \ i = 0;\n    while i < s.len() {\n        if s[i] == '.' || s[i] == '?' || s[i]\
    \ == '!' {\n            i += 1;\n        } else {\n            boredoms += 1;\n\
    \        }\n        i += 1;\n    }\n    boredoms", "    let mut boredoms: isize\
    \ = 0;\n    let mut s = S.to_string();\n    let mut i = 0;\n    while i < s.len()\
    \ {\n        if s[i] == '.' || s[i] == '?' || s[i] == '!' {\n            i +=\
    \ 1;\n        } else {\n            boredoms += 1;\n        }\n        i += 1;\n\
    \    }\n    boredoms", "    let mut boredoms: isize = 0;\n    let mut s = S;\n\
    \    while s.len() > 0 {\n        let mut i = 0;\n        while i < s.len() {\n\
    \            if s[i] == '.' || s[i] == '?' || s[i] == '!' {\n                break;\n\
    \            }\n            i += 1;\n        }\n        if i == s.len() {\n  \
    \          break;\n        }\n        boredoms += 1;\n        s = &s[..i];\n \
    \   }\n    boredoms", "    let mut boredoms: isize = 0;\n    let mut s = S.to_string();\n\
    \    while s.len() > 0 {\n        if s.starts_with(\"I\") {\n            boredoms\
    \ += 1;\n        }\n        s = s.trim_end().to_string();\n    }\n    boredoms",
  "    let mut boredoms: isize = 0;\n    let mut s = S.to_string();\n    while s.len()\
    \ > 0 {\n        if s.starts_with(\"I\") {\n            boredoms += 1;\n     \
    \   }\n        s = s.trim_end().to_string();\n    }\n    boredoms", "    let mut\
    \ boredoms: isize = 0;\n    let mut s = S.to_string();\n    let mut i = 0;\n \
    \   while i < s.len() {\n        if s.starts_with(\"I\") {\n            boredoms\
    \ += 1;\n        }\n        i += 1;\n    }\n    boredoms", "    let mut boredoms:\
    \ isize = 0;\n    let mut sentence = S.split_whitespace();\n    let mut i = 0;\n\
    \    while i < sentence.len() {\n        if sentence[i].is_ascii_lowercase() {\n\
    \            i += 1;\n        } else if sentence[i].is_ascii_uppercase() {\n \
    \           i += 1;\n        } else if sentence[i] == '.' || sentence[i] == '?'\
    \ || sentence[i] == '!' {\n            i += 1;\n        } else {\n           \
    \ boredoms += 1;\n        }\n        i += 1;\n    }\n    boredoms", "    S.chars().filter(|c|\
    \ c == '.' || c == '?' || c == '!').count() == 0", "    let mut boredoms: isize\
    \ = 0;\n    let mut s = S.to_string();\n    let mut i = 0;\n    while i < s.len()\
    \ {\n        if s.starts_with(\"I\") {\n            boredoms += 1;\n        }\n\
    \        i += 1;\n    }\n    boredoms", "    let mut boredoms: isize = 0;\n  \
    \  let mut words = S.split_whitespace();\n    for word in words {\n        if\
    \ word.starts_with(\"I\") {\n            boredoms += 1;\n        }\n    }\n  \
    \  boredoms"]
stop_tokens:
- "\n}"

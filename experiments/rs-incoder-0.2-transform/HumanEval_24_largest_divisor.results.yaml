language: rs
name: HumanEval_24_largest_divisor
results:
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for d in divisors(n) {\n        if d > max_divisor {\n            max_divisor\
    \ = d;\n            max_divisor_size = 1;\n        } else {\n            max_divisor_size\
    \ += 1;\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpb0kq4avq.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in 1..=n {\n        if n\
    \ % divisor == 0 {\n            if divisor > max_divisor {\n                max_divisor\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      } else {\n            if divisor > max_divisor_value {\n              \
    \  max_divisor_value = divisor;\n                max_divisor_index = divisor;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpd2fuh56t.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n    let mut max_divisor16 = 1;\n    let mut max_divisor17 = 1;\n    let\
    \ mut max_divisor18 = 1;\n    let mut max_divisor19 = 1;\n    let mut max_divisor20\
    \ = 1;\n    let mut max_divisor21 = 1;\n    let mut max_divisor22 = 1;\n    let\
    \ mut max_divisor23 = 1;\n    let mut max_divisor24 = 1;\n    let mut max_divisor25\
    \ = 1;\n    let mut max_divisor26 = 1;\n    let mut max_divisor27 = 1;\n    let\
    \ mut max_divisor28 = 1;\n    let mut max_divisor29 = 1;\n    let mut max_divisor30\
    \ = 1;\n    let mut max_divisor31 = 1;\n    let mut max_divisor32 = 1;\n    let\
    \ mut max_divisor33 = 1;\n    let mut max_divisor34 = 1;\n    let mut max_divisor35\
    \ = 1;\n    let mut max_divisor36 = 1;\n    let mut max_divisor37 = 1;\n    let\
    \ mut max_divisor38 = 1;\n    let mut max_divisor39 = 1;\n    let mut max_divisor40\
    \ = 1;\n    let mut max_divisor41 = 1;\n    let mut max_divisor42 = 1;\n    let\
    \ mut max_divisor43 = 1;\n    let mut max_divisor44 = 1;\n    let mut max_divisor45\
    \ = 1;\n    let mut max_divisor46 = 1;\n    let mut max_divisor47 = 1;\n    let\
    \ mut max_divisor48 = 1;\n    let mut max_divisor49 = 1;\n    let mut max_divisor50\
    \ = 1;\n    let mut max_divisor51 = 1;\n    let mut max_divisor52 = 1;\n    let\
    \ mut max_divisor53 = 1;\n    let mut max_divisor54 = 1;\n    let mut max_divisor55\
    \ = 1;\n    let mut max_divisor56 = 1;\n    let mut max_divisor57 = 1;\n    let\
    \ mut max_divisor58 = 1;\n    let mut max_divisor59 = 1;\n    let mut max_divisor60\
    \ = 1;\n    let mut max_divisor61 = 1;\n    let mut max_divisor62 = 1;\n    let\
    \ mut max_divisor63 = 1;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4wykmy0m.rs:68:24\n   |\n\
    68 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4wykmy0m.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_index = i;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2kgmjmta.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for d in divisors(n) {\n        if d > max_divisor {\n            max_divisor\
    \ = d;\n            max_divisor_size = 1;\n        }\n        if d > max_divisor_size\
    \ {\n            max_divisor_size = d;\n        }\n    }\n    max_divisor\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpku0yrmxd.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n    let mut max_divisor16 = 1;\n    let mut max_divisor17 = 1;\n    let\
    \ mut max_divisor18 = 1;\n    let mut max_divisor19 = 1;\n    let mut max_divisor20\
    \ = 1;\n    let mut max_divisor21 = 1;\n    let mut max_divisor22 = 1;\n    let\
    \ mut max_divisor23 = 1;\n    let mut max_divisor24 = 1;\n    let mut max_divisor25\
    \ = 1;\n    let mut max_divisor26 = 1;\n    let mut max_divisor27 = 1;\n    let\
    \ mut max_divisor28 = 1;\n    let mut max_divisor29 = 1;\n    let mut max_divisor30\
    \ = 1;\n    let mut max_divisor31 = 1;\n    let mut max_divisor32 = 1;\n    let\
    \ mut max_divisor33 = 1;\n    let mut max_divisor34 = 1;\n    let mut max_divisor35\
    \ = 1;\n    let mut max_divisor36 = 1;\n    let mut max_divisor37 = 1;\n    let\
    \ mut max_divisor38 = 1;\n    let mut max_divisor39 = 1;\n    let mut max_divisor40\
    \ = 1;\n    let mut max_divisor41 = 1;\n    let mut max_divisor42 = 1;\n    let\
    \ mut max_divisor43 = 1;\n    let mut max_divisor44 = 1;\n    let mut max_divisor45\
    \ = 1;\n    let mut max_divisor46 = 1;\n    let mut max_divisor47 = 1;\n    let\
    \ mut max_divisor48 = 1;\n    let mut max_divisor49 = 1;\n    let mut max_divisor50\
    \ = 1;\n    let mut max_divisor51 = 1;\n    let mut max_divisor52 = 1;\n    let\
    \ mut max_divisor53 = 1;\n    let mut max_divisor54 = 1;\n    let mut max_divisor55\
    \ = 1;\n    let mut max_divisor56 = 1;\n    let mut max_divisor57 = 1;\n    let\
    \ mut max_divisor58 = 1;\n    let mut max_divisor59 = 1;\n    let mut max_divisor60\
    \ = 1;\n    let mut max_divisor61 = 1;\n    let mut max_divisor62 = 1;\n    let\
    \ mut max_divisor63 = 1;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4wykmy0m.rs:68:24\n   |\n\
    68 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4wykmy0m.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    let mut max_divisor_remainder_power = 1;\n    let mut max_divisor_remainder_power2\
    \ = 1;\n    let mut max_divisor_remainder_power3 = 1;\n    let mut max_divisor_remainder_power4\
    \ = 1;\n    let mut max_divisor_remainder_power5 = 1;\n    let mut max_divisor_remainder_power6\
    \ = 1;\n    let mut max_divisor_remainder_power7 = 1;\n    let mut max_divisor_remainder_power8\
    \ = 1;\n    let mut max_divisor_remainder_power9 = 1;\n    let mut max_divisor_remainder_power10\
    \ = 1;\n    let mut max_divisor_remainder_power11 = 1;\n    let mut max_divisor_remainder_power12\
    \ = 1;\n    let mut max_divisor_remainder_power13 = 1;\n    let mut max_divisor_remainder_power14\
    \ = 1;\n    let mut max_divisor_remainder_power15 = 1;\n    let mut max_divisor_remainder_power16\
    \ = 1;\n    let mut max_divisor_remainder_power17 = 1;\n    let mut max_divisor_remainder_power18\
    \ = 1;\n    let mut max_divisor_remainder_power19 = 1;\n    let mut max_divisor_remainder_power20\
    \ = 1;\n    let mut max_divisor_remainder_power21 = 1;\n    let mut max_divisor_remainder_power22\
    \ = 1;\n    let mut max_divisor_remainder_power23 = 1;\n    let mut max_divisor_remainder_power24\
    \ = 1;\n    let mut max_divisor_remainder_power25 = 1;\n    let mut max_divisor_remainder_power26\
    \ = 1;\n    let mut max_divisor_remainder_power27 = 1;\n    let mut max_divisor_remainder_power28\
    \ = 1;\n    let mut max_divisor_remainder_power29 = 1;\n    let mut max_divisor_remainder_power30\
    \ = 1;\n    let mut max_divisor_remainder_power31 = 1;\n    let mut max_divisor_remainder_power32\
    \ = 1;\n    let mut max_divisor_remainder_power33 = 1;\n    let mut max_divisor_remainder_power34\
    \ = 1;\n    let mut max_divisor_remainder_power35 = 1;\n    let mut max_divisor_remainder_power36\
    \ = 1;\n    let mut max_divisor_remainder_power37 = 1;\n    let mut max_divisor_remainder_power38\
    \ = 1;\n    let mut max_divisor_remainder_power39 = 1;\n    let mut max_divisor_remainder_power40\
    \ = 1;\n    let mut max_divisor_remainder_power41 = 1;\n    let mut max_\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpejt5r1k6.rs:48:17\n   |\n\
    48 |     let mut max_\n   |                 ^ help: add `;` here\n49 | }\n   |\
    \ - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpejt5r1k6.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in 1..=n {\n        if n\
    \ % divisor == 0 {\n            if divisor > max_divisor {\n                max_divisor\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      } else {\n            if divisor > max_divisor_value {\n              \
    \  max_divisor_value = divisor;\n                max_divisor_index = divisor;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpd2fuh56t.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_ind = 1;\n\
    \    let mut max_divisor_ind_prev = 0;\n    let mut max_divisor_ind_next = 0;\n\
    \    let mut max_divisor_ind_next2 = 0;\n    let mut max_divisor_ind_next3 = 0;\n\
    \    let mut max_divisor_ind_next4 = 0;\n    let mut max_divisor_ind_next5 = 0;\n\
    \    let mut max_divisor_ind_next6 = 0;\n    let mut max_divisor_ind_next7 = 0;\n\
    \    let mut max_divisor_ind_next8 = 0;\n    let mut max_divisor_ind_next9 = 0;\n\
    \    let mut max_divisor_ind_next10 = 0;\n    let mut max_divisor_ind_next11 =\
    \ 0;\n    let mut max_divisor_ind_next12 = 0;\n    let mut max_divisor_ind_next13\
    \ = 0;\n    let mut max_divisor_ind_next14 = 0;\n    let mut max_divisor_ind_next15\
    \ = 0;\n    let mut max_divisor_ind_next16 = 0;\n    let mut max_divisor_ind_next17\
    \ = 0;\n    let mut max_divisor_ind_next18 = 0;\n    let mut max_divisor_ind_next19\
    \ = 0;\n    let mut max_divisor_ind_next20 = 0;\n    let mut max_divisor_ind_next21\
    \ = 0;\n    let mut max_divisor_ind_next22 = 0;\n    let mut max_divisor_ind_next23\
    \ = 0;\n    let mut max_divisor_ind_next24 = 0;\n    let mut max_divisor_ind_next25\
    \ = 0;\n    let mut max_divisor_ind_next26 = 0;\n    let mut max_divisor_ind_next27\
    \ = 0;\n    let mut max_divisor_ind_next28 = 0;\n    let mut max_divisor_ind_next29\
    \ = 0;\n    let mut max_divisor_ind_next30 = 0;\n    let mut max_divisor_ind_next31\
    \ = 0;\n    let mut max_divisor_ind_next32 = 0;\n    let mut max_divisor_ind_next33\
    \ = 0;\n    let mut max_divisor_ind_next34 = 0;\n    let mut max_divisor_ind_next35\
    \ = 0;\n    let mut max_divisor_ind_next36 = 0;\n    let mut max_divisor_ind_next37\
    \ = 0;\n    let mut max_divisor_ind_next38 = 0;\n    let mut max_divisor_ind_next39\
    \ = 0;\n    let mut max_divisor_ind_next40 = 0;\n    let mut max_divisor_ind_next41\
    \ = 0;\n    let mut max_divisor_ind_next42 = 0;\n    let mut max_divisor_ind_next43\
    \ = 0;\n    let mut max_divisor_ind_next44 = 0;\n    let mut max_divisor_in\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpwju7_hd6.rs:52:27\n   |\n\
    52 |     let mut max_divisor_in\n   |                           ^ help: add `;`\
    \ here\n53 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpwju7_hd6.rs:4:33\n  |\n4 | fn largest_divisor(n: isize) -> isize {\n\
    \  |    ---------------              ^^^^^ expected `isize`, found `()`\n  | \
    \   |\n  |    implicitly returns `()` as its body has no tail or `return` expression\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \    for d in 2..=max_divisor_size.clone() {\n        if n % d == 0 {\n      \
    \      if max_divisor < d {\n                max_divisor = d;\n            }\n\
    \        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpna4b82as.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n    let mut max_divisor16 = 1;\n    let mut max_divisor17 = 1;\n    let\
    \ mut max_divisor18 = 1;\n    let mut max_divisor19 = 1;\n    let mut max_divisor20\
    \ = 1;\n    let mut max_divisor21 = 1;\n    let mut max_divisor22 = 1;\n    let\
    \ mut max_divisor23 = 1;\n    let mut max_divisor24 = 1;\n    let mut max_divisor25\
    \ = 1;\n    let mut max_divisor26 = 1;\n    let mut max_divisor27 = 1;\n    let\
    \ mut max_divisor28 = 1;\n    let mut max_divisor29 = 1;\n    let mut max_divisor30\
    \ = 1;\n    let mut max_divisor31 = 1;\n    let mut max_divisor32 = 1;\n    let\
    \ mut max_divisor33 = 1;\n    let mut max_divisor34 = 1;\n    let mut max_divisor35\
    \ = 1;\n    let mut max_divisor36 = 1;\n    let mut max_divisor37 = 1;\n    let\
    \ mut max_divisor38 = 1;\n    let mut max_divisor39 = 1;\n    let mut max_divisor40\
    \ = 1;\n    let mut max_divisor41 = 1;\n    let mut max_divisor42 = 1;\n    let\
    \ mut max_divisor43 = 1;\n    let mut max_divisor44 = 1;\n    let mut max_divisor45\
    \ = 1;\n    let mut max_divisor46 = 1;\n    let mut max_divisor47 = 1;\n    let\
    \ mut max_divisor48 = 1;\n    let mut max_divisor49 = 1;\n    let mut max_divisor50\
    \ = 1;\n    let mut max_divisor51 = 1;\n    let mut max_divisor52 = 1;\n    let\
    \ mut max_divisor53 = 1;\n    let mut max_divisor54 = 1;\n    let mut max_divisor55\
    \ = 1;\n    let mut max_divisor56 = 1;\n    let mut max_divisor57 = 1;\n    let\
    \ mut max_divisor58 = 1;\n    let mut max_divisor59 = 1;\n    let mut max_divisor60\
    \ = 1;\n    let mut max_divisor61 = 1;\n    let mut max_divisor62 = 1;\n    let\
    \ mut max_divisor63 = 1;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4wykmy0m.rs:68:24\n   |\n\
    68 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4wykmy0m.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_ind = 1;\n\
    \    let mut max_divisor_ind_pow = 1;\n    let mut max_divisor_ind_pow_pow = 1;\n\
    \    let mut max_divisor_ind_pow_pow_pow = 1;\n\n    for i in 1..=n {\n      \
    \  if n % i == 0 {\n            if max_divisor < i {\n                max_divisor\
    \ = i;\n                max_divisor_ind = i;\n                max_divisor_ind_pow\
    \ = i;\n                max_divisor_ind_pow_pow = i;\n                max_divisor_ind_pow_pow_pow\
    \ = i;\n            }\n            if max_divisor == i {\n                max_divisor_ind_pow_pow_pow\
    \ = i;\n            }\n        }\n    }\n    max_divisor_ind_pow_pow_pow\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmptvv6fzjz.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut max_divisor = 1;\n    while\
    \ largest % max_divisor == 0 {\n        max_divisor *= 2;\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp90b1naus.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_size = n;\n\
    \    while max_divisor_size != 0 {\n        max_divisor_size /= 2;\n        max_divisor\
    \ *= 2;\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `1`', /tmp/tmp6bucxadc.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n\n    for divisor in 1..=max_divisor {\n\
    \        if n % divisor == 0 {\n            if max_divisor_value < divisor {\n\
    \                max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor as isize;\n            }\n        }\n    }\n\n    max_divisor_index\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpersh0lw6.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpmjgyrooi.rs:56:24\n   |\n\
    56 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    57 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpmjgyrooi.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for divisor in 1..=n {\n        if n % divisor == 0 {\n          \
    \  if max_divisor_remainder > 0 {\n                max_divisor = divisor;\n  \
    \              max_divisor_remainder = 0;\n            } else {\n            \
    \    max_divisor = divisor;\n                max_divisor_remainder = n % divisor;\n\
    \            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2jbjeewb.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_ind = -1;\n\
    \    let mut max_divisor_ind_ind = -1;\n    let mut max_divisor_ind_ind2 = -1;\n\
    \    let mut max_divisor_ind_ind3 = -1;\n    let mut max_divisor_ind_ind4 = -1;\n\
    \    let mut max_divisor_ind_ind5 = -1;\n    let mut max_divisor_ind_ind6 = -1;\n\
    \    let mut max_divisor_ind_ind7 = -1;\n    let mut max_divisor_ind_ind8 = -1;\n\
    \    let mut max_divisor_ind_ind9 = -1;\n    let mut max_divisor_ind_ind10 = -1;\n\
    \    let mut max_divisor_ind_ind11 = -1;\n    let mut max_divisor_ind_ind12 =\
    \ -1;\n    let mut max_divisor_ind_ind13 = -1;\n    let mut max_divisor_ind_ind14\
    \ = -1;\n    let mut max_divisor_ind_ind15 = -1;\n    let mut max_divisor_ind_ind16\
    \ = -1;\n    let mut max_divisor_ind_ind17 = -1;\n    let mut max_divisor_ind_ind18\
    \ = -1;\n    let mut max_divisor_ind_ind19 = -1;\n    let mut max_divisor_ind_ind20\
    \ = -1;\n    let mut max_divisor_ind_ind21 = -1;\n    let mut max_divisor_ind_ind22\
    \ = -1;\n    let mut max_divisor_ind_ind23 = -1;\n    let mut max_divisor_ind_ind24\
    \ = -1;\n    let mut max_divisor_ind_ind25 = -1;\n    let mut max_divisor_ind_ind26\
    \ = -1;\n    let mut max_divisor_ind_ind27 = -1;\n    let mut max_divisor_ind_ind28\
    \ = -1;\n    let mut max_divisor_ind_ind29 = -1;\n    let mut max_divisor_ind_ind30\
    \ = -1;\n    let mut max_divisor_ind_ind31 = -1;\n    let mut max_divisor_ind_ind32\
    \ = -1;\n    let mut max_divisor_ind_ind33 = -1;\n    let mut max_divisor_ind_ind34\
    \ = -1;\n    let mut max_divisor_ind_ind35 = -1;\n    let mut max_divisor_ind_ind36\
    \ = -1;\n    let mut max_divisor_ind_ind37 = -1;\n    let mut max_divisor_ind_ind38\
    \ = -1;\n    let mut max_divisor_ind_ind39 = -1;\n    let mut max_divisor_ind_ind40\
    \ = -1;\n    let mut max_divisor_ind_ind41 = -1;\n    let mut max_divisor_ind_ind42\
    \ = -1;\n    let mut max_\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpofhdzr55.rs:49:17\n   |\n\
    49 |     let mut max_\n   |                 ^ help: add `;` here\n50 | }\n   |\
    \ - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpofhdzr55.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_index = i;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2kgmjmta.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in &[2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\
    \ {\n        if n % divisor == 0 {\n            if max_divisor < divisor {\n \
    \               max_divisor = divisor;\n                max_divisor_index = divisor\
    \ as usize;\n                max_divisor_value = n / divisor;\n            }\n\
    \        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp6ye17510.rs:10:30\n   |\n\
    10 |             if max_divisor < divisor {\n   |                            \
    \  ^^^^^^^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n10 |             if max_divisor < *divisor {\n   |       \
    \                       +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp6ye17510.rs:11:31\n\
    \   |\n5  |     let mut max_divisor = n;\n   |                           - expected\
    \ due to this value\n...\n11 |                 max_divisor = divisor;\n   |  \
    \                             ^^^^^^^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n11 |                 max_divisor\
    \ = *divisor;\n   |                               +\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp6ye17510.rs:17:5\n   |\n4  | fn largest_divisor(n: isize)\
    \ -> isize {\n   |                                 ----- expected `isize` because\
    \ of return type\n...\n17 |     max_divisor_index\n   |     ^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n17 |     max_divisor_index.try_into().unwrap()\n\
    \   |                      ++++++++++++++++++++\n\nerror[E0606]: casting `&isize`\
    \ as `usize` is invalid\n  --> /tmp/tmp6ye17510.rs:12:37\n   |\n12 |         \
    \        max_divisor_index = divisor as usize;\n   |                         \
    \            -------^^^^^^^^^\n   |                                     |\n  \
    \ |                                     cannot cast `&isize` as `usize`\n   |\
    \                                     help: dereference the expression: `*divisor`\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0606.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 0;\n    let mut max_divisor5\
    \ = 0;\n    let mut max_divisor6 = 0;\n    let mut max_divisor7 = 0;\n    let\
    \ mut max_divisor8 = 0;\n    let mut max_divisor9 = 0;\n    let mut max_divisor10\
    \ = 0;\n    let mut max_divisor11 = 0;\n    let mut max_divisor12 = 0;\n    let\
    \ mut max_divisor13 = 0;\n    let mut max_divisor14 = 0;\n    let mut max_divisor15\
    \ = 0;\n    let mut max_divisor16 = 0;\n    let mut max_divisor17 = 0;\n    let\
    \ mut max_divisor18 = 0;\n    let mut max_divisor19 = 0;\n    let mut max_divisor20\
    \ = 0;\n    let mut max_divisor21 = 0;\n    let mut max_divisor22 = 0;\n    let\
    \ mut max_divisor23 = 0;\n    let mut max_divisor24 = 0;\n    let mut max_divisor25\
    \ = 0;\n    let mut max_divisor26 = 0;\n    let mut max_divisor27 = 0;\n    let\
    \ mut max_divisor28 = 0;\n    let mut max_divisor29 = 0;\n    let mut max_divisor30\
    \ = 0;\n    let mut max_divisor31 = 0;\n    let mut max_divisor32 = 0;\n    let\
    \ mut max_divisor33 = 0;\n    let mut max_divisor34 = 0;\n    let mut max_divisor35\
    \ = 0;\n    let mut max_divisor36 = 0;\n    let mut max_divisor37 = 0;\n    let\
    \ mut max_divisor38 = 0;\n    let mut max_divisor39 = 0;\n    let mut max_divisor40\
    \ = 0;\n    let mut max_divisor41 = 0;\n    let mut max_divisor42 = 0;\n    let\
    \ mut max_divisor43 = 0;\n    let mut max_divisor44 = 0;\n    let mut max_divisor45\
    \ = 0;\n    let mut max_divisor46 = 0;\n    let mut max_divisor47 = 0;\n    let\
    \ mut max_divisor48 = 0;\n    let mut max_divisor49 = 0;\n    let mut max_divisor50\
    \ = 0;\n    let mut max_divisor51 = 0;\n    let mut max_divisor52 = 0;\n    let\
    \ mut max_divisor53 = 0;\n    let mut max_divisor54 = 0;\n    let mut max_divisor55\
    \ = 0;\n    let mut max_divisor56 = 0;\n    let mut max_divisor57 = 0;\n    let\
    \ mut max_divisor58 = 0;\n    let mut max_divisor59 = 0;\n    let mut max_divisor60\
    \ = 0;\n    let mut max_divisor61 = 0;\n    let mut max_divisor62 = 0;\n    let\
    \ mut max_divisor63 = 0;\n    let mut max_divisor64 = 0;\n    let mut max_\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpema4qejn.rs:69:17\n   |\n\
    69 |     let mut max_\n   |                 ^ help: add `;` here\n70 | }\n   |\
    \ - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpema4qejn.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for d in divisors(n) {\n        if d > max_divisor {\n            max_divisor\
    \ = d;\n            max_divisor_size = 1;\n        }\n        if d == max_divisor\
    \ {\n            max_divisor_size += 1;\n        }\n    }\n    max_divisor\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmp8_jcjk47.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n\n    for divisor in &[max_divisor, max_divisor2, max_divisor3, max_divisor4,\
    \ max_divisor5, max_divisor6, max_divisor7, max_divisor8, max_divisor9, max_divisor10,\
    \ max_divisor11, max_divisor12, max_divisor13, max_divisor14, max_divisor15] {\n\
    \        if n % divisor == 0 {\n            if divisor > max_divisor {\n     \
    \           max_divisor = divisor;\n            }\n            if divisor > max_divisor2\
    \ {\n                max_divisor2 = divisor;\n            }\n            if divisor\
    \ > max_divisor3 {\n                max_divisor3 = divisor;\n            }\n \
    \           if divisor > max_divisor4 {\n                max_divisor4 = divisor;\n\
    \            }\n            if divisor > max_divisor5 {\n                max_divisor5\
    \ = divisor;\n            }\n            if divisor > max_divisor6 {\n       \
    \         max_divisor6 = divisor;\n            }\n            if divisor > max_divisor7\
    \ {\n                max_divisor7 = divisor;\n            }\n            if divisor\
    \ > max_divisor8 {\n                max_divisor8 = divisor;\n            }\n \
    \           if divisor > max_divisor9 {\n                max_divisor9 = divisor;\n\
    \            }\n            if divisor > max_divisor10 {\n                max_divisor10\
    \ = divisor;\n            }\n            if divisor > max_divisor11 {\n      \
    \          max_divisor11 = divisor;\n            }\n            if divisor > max_divisor12\
    \ {\n                max_divisor12 = divisor;\n            }\n            if divisor\
    \ > max_divisor13 {\n                max_divisor13 = divisor;\n            }\n\
    \            if divisor > max_divisor14 {\n                max_divisor14 = divisor;\n\
    \            }\n            if divisor > max_divisor15 {\n                max_divisor15\
    \ = divisor;\n            }\n        }\n    }\n\n    max_divisor\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpceua1fdc.rs:23:26\n   |\n\
    23 |             if divisor > max_divisor {\n   |                          ^^^^^^^^^^^\n\
    \   |                          |\n   |                          expected `&isize`,\
    \ found `isize`\n   |                          help: consider borrowing here:\
    \ `&max_divisor`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpceua1fdc.rs:24:31\n\
    \   |\n5  |     let mut max_divisor = 1;\n   |                           - expected\
    \ due to this value\n...\n24 |                 max_divisor = divisor;\n   |  \
    \                             ^^^^^^^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n24 |                 max_divisor\
    \ = *divisor;\n   |                               +\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpceua1fdc.rs:26:26\n   |\n26 |             if divisor >\
    \ max_divisor2 {\n   |                          ^^^^^^^^^^^^\n   |           \
    \               |\n   |                          expected `&isize`, found `isize`\n\
    \   |                          help: consider borrowing here: `&max_divisor2`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpceua1fdc.rs:27:32\n   |\n6  |\
    \     let mut max_divisor2 = 1;\n   |                            - expected due\
    \ to this value\n...\n27 |                 max_divisor2 = divisor;\n   |     \
    \                           ^^^^^^^ expected `isize`, found `&isize`\n   |\nhelp:\
    \ consider dereferencing the borrow\n   |\n27 |                 max_divisor2 =\
    \ *divisor;\n   |                                +\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpceua1fdc.rs:29:26\n   |\n29 |             if divisor >\
    \ max_divisor3 {\n   |                          ^^^^^^^^^^^^\n   |           \
    \               |\n   |                          expected `&isize`, found `isize`\n\
    \   |                          help: consider borrowing here: `&max_divisor3`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpceua1fdc.rs:30:32\n   |\n7  |\
    \     let mut max_divisor3 = 1;\n   |                            - expected due\
    \ to this value\n...\n30 |                 max_divisor3 = divisor;\n   |   "
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = n;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmptv0zzq6t.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_ind = 1;\n\
    \n    for i in 1..=max_divisor {\n        if n % i == 0 {\n            if max_divisor\
    \ > i {\n                max_divisor = i;\n                max_divisor_ind = 1;\n\
    \            } else {\n                max_divisor_ind += 1;\n            }\n\
    \        }\n    }\n\n    max_divisor_ind\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpl1oxoe8q.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut i = 1;\n    while i <= n {\n\
    \        if n % i == 0 {\n            largest = i;\n        }\n        i += 1;\n\
    \    }\n    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmplzrjbip8.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_size_size = 0;\n    let mut max_divisor_size_num = 0;\n\
    \    let mut max_divisor_size_num_size = 0;\n    let mut max_divisor_size_num_num\
    \ = 0;\n    let mut max_divisor_size_num_num_size = 0;\n    let mut max_divisor_size_num_num_num\
    \ = 0;\n    let mut max_divisor_size_num_num_num_size = 0;\n    let mut max_divisor_size_num_num_num_num\
    \ = 0;\n    let mut max_divisor_size_num_num_num_num_size = 0;\n    let mut max_divisor_size_num_num_num_num_num\
    \ = 0;\n    let mut max_divisor_size_num_num_num_num_size = 0;\n    let mut max_divisor_size_num_num_num_num_num\
    \ = 0;\n    let mut max_divisor_size_num_num_num_num_num_size = 0;\n    let mut\
    \ max_divisor_size_num_num_num_num_num_num = 0;\n    let mut max_divisor_size_num_num_num_num_num_size\
    \ = 0;\n    let mut max_divisor_size_num_num_num_num_num_num = 0;\n    let mut\
    \ max_divisor_size_num_num_num_num_num_size = 0;\n    let mut max_divisor_size_num_num_num_num_num_num\
    \ = 0;\n    let mut max_divisor_size_num_num_num_num_num_size = 0;\n    let mut\
    \ max_divisor_size_num_num_num_num_num_num = 0;\n    let mut max_divisor_size_num_num_num_num_num_size\
    \ = 0;\n    let mut max_divisor_size_num_num_num_num_num_num = 0;\n    let mut\
    \ max_divisor_size_num_num_num_num_num_size = 0;\n    let mut max_divisor_size_num_num_num_num_num_num\
    \ = 0;\n    let mut max_divisor_size_num_num_num_num_num_size = 0;\n    let mut\
    \ max_divisor_size_num_num_num_num_num_num = 0;\n    let mut max_divisor_size_num_num_num_num_num_size\
    \ = 0;\n    let mut max_divisor_size_num_num_num_num_num_num = 0;\n    let mut\
    \ max_divisor_size_num_num_num_num_num_size = 0;\n    let mut max_divisor_size_num_num_num_num_num_num\
    \ = 0;\n    let mut max_divisor_size_num_num_num_num_num_size = 0;\n    let mut\
    \ max_divisor_size_num_num_num_num_num_num = 0;\n    let mut max_divisor_size_num_num_num_num_num_size\
    \ = 0;\n    let mut max_divisor_size_num_num_num_num_num_num = 0;\n    let mut\
    \ max_divisor_size_num_num_num_num_num_size = 0;\n    let mut max_divisor_size_num_num_num_num_num_num\
    \ = 0;\n    let mut max_divisor_size_num_num_num_num_num_size = 0;\n    let mut\
    \ max_divisor_size_num_num_num_num_num_\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp31sy3tl0.rs:44:50\n   |\n\
    44 |     let mut max_divisor_size_num_num_num_num_num_\n   |                 \
    \                                 ^ help: add `;` here\n45 | }\n   | - unexpected\
    \ token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp31sy3tl0.rs:4:33\n  |\n\
    4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------          \
    \    ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \    while max_divisor_size != 0 {\n        max_divisor += 1;\n        max_divisor_size\
    \ = max_divisor_size / 2;\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpuawe1grl.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_value = 0;\n\
    \    for d in divisors(n) {\n        if d > max_divisor {\n            max_divisor\
    \ = d;\n            max_divisor_value = n;\n        }\n    }\n    max_divisor_value\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmp3phi6m5g.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_idx = 1;\n\
    \    let mut max_divisor_value = n;\n    let mut max_divisor_value_mod = n;\n\n\
    \    for divisor in &[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n        if n % divisor == 0 {\n \
    \           if max_divisor < divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_idx = 1;\n                max_divisor_value = n;\n\
    \                max_divisor_value_mod = n;\n            }\n            else {\n\
    \                max_divisor_value = n / divisor;\n                max_divisor_value_mod\
    \ = n % divisor;\n                max_divisor_idx++;\n            }\n        }\n\
    \    }\n\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: Rust has no postfix increment operator\n  --> /tmp/tmpokqa24v8.rs:21:32\n\
    \   |\n21 |                 max_divisor_idx++;\n   |                         \
    \       ^^ not a valid postfix operator\n   |\nhelp: use `+= 1` instead\n   |\n\
    21 |                 { let tmp = max_divisor_idx; max_divisor_idx += 1; tmp };\n\
    \   |                 +++++++++++                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    21 -                 max_divisor_idx++;\n21 +                 max_divisor_idx\
    \ += 1;\n   | \n\nerror[E0308]: mismatched types\n  --> /tmp/tmpokqa24v8.rs:13:31\n\
    \   |\n5  |     let mut max_divisor = 0;\n   |                           - expected\
    \ due to this value\n...\n13 |                 max_divisor = divisor;\n   |  \
    \                             ^^^^^^^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n13 |                 max_divisor\
    \ = *divisor;\n   |                               +\n\nerror[E0277]: can't compare\
    \ `isize` with `&isize`\n  --> /tmp/tmpokqa24v8.rs:12:28\n   |\n12 |         \
    \    if max_divisor < divisor {\n   |                            ^ no implementation\
    \ for `isize < &isize` and `isize > &isize`\n   |\n   = help: the trait `PartialOrd<&isize>`\
    \ is not implemented for `isize`\n   = help: the following other types implement\
    \ trait `PartialOrd<Rhs>`:\n             f32\n             f64\n             i128\n\
    \             i16\n             i32\n             i64\n             i8\n     \
    \        isize\n           and 6 others\n\nerror: aborting due to 3 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = n;\n            }\n        } else {\n            break;\n        }\n    }\n\
    \    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n   \
    \ assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmpxiy07fa4.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_ind = -1;\n\
    \    for i in 1..n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_ind = i;\n\
    \            }\n        }\n    }\n    max_divisor_ind\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in 1..=n {\n        if n\
    \ % divisor == 0 {\n            if divisor > max_divisor {\n                max_divisor\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      } else {\n            if divisor > max_divisor_value {\n              \
    \  max_divisor_value = divisor;\n                max_divisor_index = divisor;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpd2fuh56t.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_ind = 1;\n\
    \    let mut max_divisor_ind_2 = 1;\n    let mut max_divisor_ind_3 = 1;\n    let\
    \ mut max_divisor_ind_4 = 1;\n    let mut max_divisor_ind_5 = 1;\n    let mut\
    \ max_divisor_ind_6 = 1;\n    let mut max_divisor_ind_7 = 1;\n    let mut max_divisor_ind_8\
    \ = 1;\n    let mut max_divisor_ind_9 = 1;\n    let mut max_divisor_ind_10 = 1;\n\
    \    let mut max_divisor_ind_11 = 1;\n    let mut max_divisor_ind_12 = 1;\n  \
    \  let mut max_divisor_ind_13 = 1;\n    let mut max_divisor_ind_14 = 1;\n    let\
    \ mut max_divisor_ind_15 = 1;\n    let mut max_divisor_ind_16 = 1;\n    let mut\
    \ max_divisor_ind_17 = 1;\n    let mut max_divisor_ind_18 = 1;\n    let mut max_divisor_ind_19\
    \ = 1;\n    let mut max_divisor_ind_20 = 1;\n    let mut max_divisor_ind_21 =\
    \ 1;\n    let mut max_divisor_ind_22 = 1;\n    let mut max_divisor_ind_23 = 1;\n\
    \    let mut max_divisor_ind_24 = 1;\n    let mut max_divisor_ind_25 = 1;\n  \
    \  let mut max_divisor_ind_26 = 1;\n    let mut max_divisor_ind_27 = 1;\n    let\
    \ mut max_divisor_ind_28 = 1;\n    let mut max_divisor_ind_29 = 1;\n    let mut\
    \ max_divisor_ind_30 = 1;\n    let mut max_divisor_ind_31 = 1;\n    let mut max_divisor_ind_32\
    \ = 1;\n    let mut max_divisor_ind_33 = 1;\n    let mut max_divisor_ind_34 =\
    \ 1;\n    let mut max_divisor_ind_35 = 1;\n    let mut max_divisor_ind_36 = 1;\n\
    \    let mut max_divisor_ind_37 = 1;\n    let mut max_divisor_ind_38 = 1;\n  \
    \  let mut max_divisor_ind_39 = 1;\n    let mut max_divisor_ind_40 = 1;\n    let\
    \ mut max_divisor_ind_41 = 1;\n    let mut max_divisor_ind_42 = 1;\n    let mut\
    \ max_divisor_ind_43 = 1;\n    let mut max_divisor_ind_44 = 1;\n    let mut max_divisor_ind_45\
    \ = 1;\n    let mut max_divisor_ind_46 = 1;\n    let mut max_divisor_ind_47 =\
    \ 1;\n    let mut max_divisor_ind_48 = 1;\n    let mut max_divisor_ind_49 = 1;\n\
    \    let mut max_divisor_ind_50 = 1;\n    let mut max_divisor\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpj9q4ap45.rs:56:24\n   |\n\
    56 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    57 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpj9q4ap45.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_size_size = 0;\n    let mut max_divisor_size_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_size = 0;\n    let\
    \ mut max_divisor_size_divisor_divisor_divisor_divisor = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor =\
    \ 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpeu_fvszh.rs:31:118\n   |\n\
    31 |     let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_\n\
    \   |                                                                        \
    \                                              ^ help: add `;` here\n32 | }\n\
    \   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpeu_fvszh.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_ind = 1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n    let mut max_divisor_ind_inv = -1;\n\
    \    let mut max_divisor_ind_inv = -1;\n\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpb5zfqnm9.rs:4:33\n  |\n4 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |    ---------------            \
    \  ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \    for d in 2..=max_divisor_size.clone() {\n        if n % d == 0 {\n      \
    \      if d > max_divisor {\n                max_divisor = d;\n            }\n\
    \        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpea1ojjh2.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in 1..=max_divisor {\n  \
    \      if n % divisor == 0 {\n            if max_divisor_value < divisor {\n \
    \               max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpdpv9f31f.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = 1;\n            } else {\n                max_divisor_index += 1;\n      \
    \      }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpgo4mi5q0.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for divisor in 1..=n {\n        if n % divisor == 0 {\n          \
    \  if max_divisor_remainder < divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_remainder = n % divisor;\n            }\n       \
    \ }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpnl0_l7oy.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in 1..=n {\n        if n\
    \ % divisor == 0 {\n            if divisor > max_divisor {\n                max_divisor\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      } else {\n            if divisor > max_divisor_value {\n              \
    \  max_divisor_value = divisor;\n                max_divisor_index = divisor;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpd2fuh56t.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    for i in 1..=max_divisor {\n        if n % i == 0 {\n            if max_divisor\
    \ > i {\n                max_divisor = i;\n                max_divisor_index =\
    \ i;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp3g08hed0.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in 1..=n {\n        if n\
    \ % divisor == 0 {\n            if max_divisor < divisor {\n                max_divisor\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      }\n    }\n    max_divisor_value\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpyilo8l5_.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in &[2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\
    \ {\n        if n % divisor == 0 {\n            if max_divisor < divisor {\n \
    \               max_divisor = divisor;\n                max_divisor_index = divisor;\n\
    \                max_divisor_value = n;\n            }\n        }\n    }\n   \
    \ max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpi54b4a83.rs:11:31\n   |\n\
    5  |     let mut max_divisor = 0;\n   |                           - expected due\
    \ to this value\n...\n11 |                 max_divisor = divisor;\n   |      \
    \                         ^^^^^^^ expected `isize`, found `&isize`\n   |\nhelp:\
    \ consider dereferencing the borrow\n   |\n11 |                 max_divisor =\
    \ *divisor;\n   |                               +\n\nerror[E0277]: can't compare\
    \ `isize` with `&isize`\n  --> /tmp/tmpi54b4a83.rs:10:28\n   |\n10 |         \
    \    if max_divisor < divisor {\n   |                            ^ no implementation\
    \ for `isize < &isize` and `isize > &isize`\n   |\n   = help: the trait `PartialOrd<&isize>`\
    \ is not implemented for `isize`\n   = help: the following other types implement\
    \ trait `PartialOrd<Rhs>`:\n             f32\n             f64\n             i128\n\
    \             i16\n             i32\n             i64\n             i8\n     \
    \        isize\n           and 6 others\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpi54b4a83.rs:12:37\n   |\n6  |     let mut max_divisor_index = 0;\n \
    \  |                                 - expected due to this value\n...\n12 | \
    \                max_divisor_index = divisor;\n   |                          \
    \           ^^^^^^^ expected integer, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n12 |                 max_divisor_index = *divisor;\n   | \
    \                                    +\n\nerror: aborting due to 3 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for d in divisors(n) {\n        if d > max_divisor {\n            max_divisor\
    \ = d;\n            max_divisor_size = 1;\n        }\n        if d > max_divisor_size\
    \ {\n            max_divisor_size = d;\n        }\n    }\n    max_divisor\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpku0yrmxd.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    for i in 1..=max_divisor {\n        if n % i == 0 {\n            if max_divisor\
    \ > i {\n                max_divisor = i;\n                max_divisor_index =\
    \ i;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp3g08hed0.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    for divisor in 1..=max_divisor {\n        if n % divisor == 0 {\n       \
    \     max_divisor = divisor;\n            max_divisor_index = divisor;\n     \
    \   }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpo5tja0dq.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_size_size = 0;\n    let mut max_divisor_size_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_size = 0;\n    let\
    \ mut max_divisor_size_divisor_divisor_divisor_divisor = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor =\
    \ 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpfqzeuyf1.rs:32:118\n   |\n\
    32 |     let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_\n\
    \   |                                                                        \
    \                                              ^ help: add `;` here\n33 | }\n\
    \   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpfqzeuyf1.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    for i in 1..n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_index = i;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_size = 1;\n\
    \            }\n            else {\n                max_divisor += 1;\n      \
    \          max_divisor_size += 1;\n            }\n        }\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpeyo_szs5.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for d in divisors(n) {\n        if n % d == 0 {\n            if d > max_divisor\
    \ {\n                max_divisor = d;\n                max_divisor_size = 1;\n\
    \            } else {\n                max_divisor_size = max_divisor_size + 1;\n\
    \            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpgl2egszo.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_size_size = 0;\n    let mut max_divisor_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size = 0;\n    let mut\
    \ max_divisor_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size = 0;\n    let\
    \ mut max_divisor_size_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size = 0;\n    let\
    \ mut max_divisor_size_size_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size =\
    \ 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n \
    \   let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n  \
    \  let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n   \
    \ let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut \n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmp7egr4eb7.rs:40:1\n\
    \   |\n40 | }\n   | ^ expected identifier\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n    let mut max_divisor16 = 1;\n    let mut max_divisor17 = 1;\n    let\
    \ mut max_divisor18 = 1;\n    let mut max_divisor19 = 1;\n    let mut max_divisor20\
    \ = 1;\n    let mut max_divisor21 = 1;\n    let mut max_divisor22 = 1;\n    let\
    \ mut max_divisor23 = 1;\n    let mut max_divisor24 = 1;\n    let mut max_divisor25\
    \ = 1;\n    let mut max_divisor26 = 1;\n    let mut max_divisor27 = 1;\n    let\
    \ mut max_divisor28 = 1;\n    let mut max_divisor29 = 1;\n    let mut max_divisor30\
    \ = 1;\n    let mut max_divisor31 = 1;\n    let mut max_divisor32 = 1;\n    let\
    \ mut max_divisor33 = 1;\n    let mut max_divisor34 = 1;\n    let mut max_divisor35\
    \ = 1;\n    let mut max_divisor36 = 1;\n    let mut max_divisor37 = 1;\n    let\
    \ mut max_divisor38 = 1;\n    let mut max_divisor39 = 1;\n    let mut max_divisor40\
    \ = 1;\n    let mut max_divisor41 = 1;\n    let mut max_divisor42 = 1;\n    let\
    \ mut max_divisor43 = 1;\n    let mut max_divisor44 = 1;\n    let mut max_divisor45\
    \ = 1;\n    let mut max_divisor46 = 1;\n    let mut max_divisor47 = 1;\n    let\
    \ mut max_divisor48 = 1;\n    let mut max_divisor49 = 1;\n    let mut max_divisor50\
    \ = 1;\n    let mut max_divisor51 = 1;\n    let mut max_divisor52 = 1;\n    let\
    \ mut max_divisor53 = 1;\n    let mut max_divisor54 = 1;\n    let mut max_divisor55\
    \ = 1;\n    let mut max_divisor56 = 1;\n    let mut max_divisor57 = 1;\n    let\
    \ mut max_divisor58 = 1;\n    let mut max_divisor59 = 1;\n    let mut max_divisor60\
    \ = 1;\n    let mut max_divisor61 = 1;\n    let mut max_divisor62 = 1;\n    let\
    \ mut max_divisor63 = 1;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4wykmy0m.rs:68:24\n   |\n\
    68 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4wykmy0m.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \    for d in divisors(n) {\n        if n % d == 0 {\n            if d > max_divisor\
    \ {\n                max_divisor = d;\n                max_divisor_size = n;\n\
    \            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmp6u4f3z1h.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let \n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpsq53cqpz.rs:53:1\n  \
    \ |\n53 | }\n   | ^ expected pattern\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_ind = -1;\n\
    \    for i in 1..n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_ind = i;\n\
    \            }\n        }\n    }\n    max_divisor_ind\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008824
- exit_code: -1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \    while max_divisor_size != 0 {\n        if n % max_divisor_size == 0 {\n \
    \           max_divisor_size /= max_divisor_size;\n        } else {\n        \
    \    max_divisor += 1;\n            max_divisor_size = max_divisor_size / max_divisor;\n\
    \        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008830
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in 1..=n {\n        if n\
    \ % divisor == 0 {\n            if divisor > max_divisor {\n                max_divisor\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      } else {\n            if divisor > max_divisor_value {\n              \
    \  max_divisor_value = divisor;\n                max_divisor_index = divisor;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpd2fuh56t.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \    while max_divisor_size != 0 {\n        max_divisor += 1;\n        max_divisor_size\
    \ = max_divisor_size / 2;\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpuawe1grl.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_ind = -1;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_ind = i;\n\
    \            }\n        }\n    }\n    max_divisor_ind\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp_f3vq5up.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  for d in 2..=n {\n        if n % d == 0 {\n            if d > max_divisor {\n\
    \                max_divisor = d;\n            }\n            if d > max_divisor2\
    \ {\n                max_divisor2 = d;\n            }\n        }\n    }\n    if\
    \ max_divisor > max_divisor2 {\n        max_divisor\n    } else {\n        max_divisor2\n\
    \    }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp0e103q77.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in 1..=n {\n        if n\
    \ % divisor == 0 {\n            if divisor > max_divisor {\n                max_divisor\
    \ = divisor;\n                max_divisor_index = divisor;\n                max_divisor_value\
    \ = n;\n            }\n        } else {\n            if divisor > max_divisor_value\
    \ {\n                max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpswjgsk3d.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut divisor = 1;\n    while divisor\
    \ < n {\n        if n % divisor == 0 {\n            largest = divisor;\n     \
    \   }\n        divisor += 1;\n    }\n    largest\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \    while max_divisor_size != 1 {\n        max_divisor += 1;\n        max_divisor_size\
    \ = max_divisor_size / 2;\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpcm1ulvmn.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor_remainder\
    \ == 0 {\n                max_divisor = i;\n                max_divisor_remainder\
    \ = n % i;\n            } else {\n                if max_divisor_remainder > max_divisor\
    \ {\n                    max_divisor = max_divisor_remainder;\n              \
    \      max_divisor_remainder = n % max_divisor;\n                }\n         \
    \   }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpvruri8mz.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_ind = -1;\n\
    \    let mut max_divisor_ind_prime = 0;\n    let mut max_divisor_ind_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime = 0;\n    let\
    \ mut max_divisor_ind_prime_prime_prime_prime_prime_prime = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_ind_prime\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnmh7qfqc.rs:29:34\n   |\n\
    29 |     let mut max_divisor_ind_prime\n   |                                 \
    \ ^ help: add `;` here\n30 | }\n   | - unexpected token\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpnmh7qfqc.rs:4:33\n  |\n4 | fn largest_divisor(n: isize)\
    \ -> isize {\n  |    ---------------              ^^^^^ expected `isize`, found\
    \ `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail or `return`\
    \ expression\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_size = n;\n\
    \    for d in 2..=max_divisor_size {\n        if n % d == 0 {\n            if\
    \ d > max_divisor {\n                max_divisor = d;\n                max_divisor_size\
    \ = n;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp13ke11hx.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for divisor in 1..=n {\n        if n % divisor == 0 {\n          \
    \  if max_divisor_remainder < divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_remainder = n % divisor;\n            }\n       \
    \ }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpnl0_l7oy.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_size = n;\n\
    \    while max_divisor_size % 2 == 0 {\n        max_divisor += 1;\n        max_divisor_size\
    \ = max_divisor_size / 2;\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmps1k1cbl6.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_size_size = 0;\n    let mut max_divisor_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size = 0;\n    let mut\
    \ max_divisor_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size = 0;\n    let\
    \ mut max_divisor_size_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size = 0;\n    let\
    \ mut max_divisor_size_size_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size =\
    \ 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n \
    \   let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n  \
    \  let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n   \
    \ let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut \n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmp7egr4eb7.rs:40:1\n\
    \   |\n40 | }\n   | ^ expected identifier\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_value = n;\n    for d in divisors(n) {\n        if d\
    \ > max_divisor {\n            max_divisor = d;\n            max_divisor_size\
    \ = n;\n        }\n        if d > max_divisor_value {\n            max_divisor_value\
    \ = d;\n        }\n    }\n    max_divisor_value\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmphg7kcwn9.rs:8:14\n\
    \  |\n8 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n    let mut max_divisor16 = 1;\n    let mut max_divisor17 = 1;\n    let\
    \ mut max_divisor18 = 1;\n    let mut max_divisor19 = 1;\n    let mut max_divisor20\
    \ = 1;\n    let mut max_divisor21 = 1;\n    let mut max_divisor22 = 1;\n    let\
    \ mut max_divisor23 = 1;\n    let mut max_divisor24 = 1;\n    let mut max_divisor25\
    \ = 1;\n    let mut max_divisor26 = 1;\n    let mut max_divisor27 = 1;\n    let\
    \ mut max_divisor28 = 1;\n    let mut max_divisor29 = 1;\n    let mut max_divisor30\
    \ = 1;\n    let mut max_divisor31 = 1;\n    let mut max_divisor32 = 1;\n    let\
    \ mut max_divisor33 = 1;\n    let mut max_divisor34 = 1;\n    let mut max_divisor35\
    \ = 1;\n    let mut max_divisor36 = 1;\n    let mut max_divisor37 = 1;\n    let\
    \ mut max_divisor38 = 1;\n    let mut max_divisor39 = 1;\n    let mut max_divisor40\
    \ = 1;\n    let mut max_divisor41 = 1;\n    let mut max_divisor42 = 1;\n    let\
    \ mut max_divisor43 = 1;\n    let mut max_divisor44 = 1;\n    let mut max_divisor45\
    \ = 1;\n    let mut max_divisor46 = 1;\n    let mut max_divisor47 = 1;\n    let\
    \ mut max_divisor48 = 1;\n    let mut max_divisor49 = 1;\n    let mut max_divisor50\
    \ = 1;\n    let mut max_divisor51 = 1;\n    let mut max_divisor52 = 1;\n    let\
    \ mut max_divisor53 = 1;\n    let mut max_divisor54 = 1;\n    let mut max_divisor55\
    \ = 1;\n    let mut max_divisor56 = 1;\n    let mut max_divisor57 = 1;\n    let\
    \ mut max_divisor58 = 1;\n    let mut max_divisor59 = 1;\n    let mut max_divisor60\
    \ = 1;\n    let mut max_divisor61 = 1;\n    let mut max_divisor62 = 1;\n    let\
    \ mut max_divisor63 = 1;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4wykmy0m.rs:68:24\n   |\n\
    68 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4wykmy0m.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n    let mut max_divisor16 = 1;\n    let mut max_divisor17 = 1;\n    let\
    \ mut max_divisor18 = 1;\n    let mut max_divisor19 = 1;\n    let mut max_divisor20\
    \ = 1;\n    let mut max_divisor21 = 1;\n    let mut max_divisor22 = 1;\n    let\
    \ mut max_divisor23 = 1;\n    let mut max_divisor24 = 1;\n    let mut max_divisor25\
    \ = 1;\n    let mut max_divisor26 = 1;\n    let mut max_divisor27 = 1;\n    let\
    \ mut max_divisor28 = 1;\n    let mut max_divisor29 = 1;\n    let mut max_divisor30\
    \ = 1;\n    let mut max_divisor31 = 1;\n    let mut max_divisor32 = 1;\n    let\
    \ mut max_divisor33 = 1;\n    let mut max_divisor34 = 1;\n    let mut max_divisor35\
    \ = 1;\n    let mut max_divisor36 = 1;\n    let mut max_divisor37 = 1;\n    let\
    \ mut max_divisor38 = 1;\n    let mut max_divisor39 = 1;\n    let mut max_divisor40\
    \ = 1;\n    let mut max_divisor41 = 1;\n    let mut max_divisor42 = 1;\n    let\
    \ mut max_divisor43 = 1;\n    let mut max_divisor44 = 1;\n    let mut max_divisor45\
    \ = 1;\n    let mut max_divisor46 = 1;\n    let mut max_divisor47 = 1;\n    let\
    \ mut max_divisor48 = 1;\n    let mut max_divisor49 = 1;\n    let mut max_divisor50\
    \ = 1;\n    let mut max_divisor51 = 1;\n    let mut max_divisor52 = 1;\n    let\
    \ mut max_divisor53 = 1;\n    let mut max_divisor54 = 1;\n    let mut max_divisor55\
    \ = 1;\n    let mut max_divisor56 = 1;\n    let mut max_divisor57 = 1;\n    let\
    \ mut max_divisor58 = 1;\n    let mut max_divisor59 = 1;\n    let mut max_divisor60\
    \ = 1;\n    let mut max_divisor61 = 1;\n    let mut max_divisor62 = 1;\n    let\
    \ mut max_divisor63 = 1;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4wykmy0m.rs:68:24\n   |\n\
    68 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4wykmy0m.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    for i in 1..=max_divisor {\n        if n % i == 0 {\n            if max_divisor\
    \ > i {\n                max_divisor = i;\n                max_divisor_index =\
    \ i;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp3g08hed0.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \n    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = n;\n            }\n        } else {\n            break;\n        }\n    }\n\
    \n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmpv_qel95p.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n\n    for i in 1..=n {\n        if n % i\
    \ == 0 {\n            if max_divisor < i {\n                max_divisor = i;\n\
    \                max_divisor_index = i;\n            }\n        } else {\n   \
    \         if max_divisor == i {\n                max_divisor_value = i;\n    \
    \        }\n        }\n    }\n\n    max_divisor_value\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpr50zmdmo.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_index = 0;\n    for i in 1..=n {\n        if n % i ==\
    \ 0 {\n            if max_divisor_size < i {\n                max_divisor_size\
    \ = i;\n                max_divisor_index = i;\n            }\n        }\n   \
    \ }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp9wxr26jd.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor\
    \ < i {\n                max_divisor = i;\n                max_divisor_remainder\
    \ = n % i;\n            }\n        }\n    }\n    max_divisor_remainder\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmptxh0dfjx.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_size_size = 0;\n    let mut max_divisor_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size = 0;\n    let mut\
    \ max_divisor_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size = 0;\n    let\
    \ mut max_divisor_size_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size = 0;\n    let\
    \ mut max_divisor_size_size_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size =\
    \ 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n \
    \   let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n  \
    \  let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n   \
    \ let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut \n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmp7egr4eb7.rs:40:1\n\
    \   |\n40 | }\n   | ^ expected identifier\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_size = n;\n\
    \    for divisor in 2..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = n;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpkmtxep4r.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for i in 1..n {\n        if n % i == 0 {\n            if max_divisor\
    \ < i {\n                max_divisor = i;\n                max_divisor_remainder\
    \ = n % i;\n            }\n        }\n    }\n    if max_divisor == 0 {\n     \
    \   max_divisor = 1;\n    }\n    max_divisor_remainder\n}\n\nfn main() {\n   \
    \ let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp2wioe9m0.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for i in 1..n {\n        let mut divisor = i;\n        while divisor\
    \ % 2 == 0 {\n            divisor /= 2;\n        }\n        if divisor > max_divisor\
    \ {\n            max_divisor = divisor;\n            max_divisor_remainder = i;\n\
    \        }\n    }\n    max_divisor_remainder\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `1`', /tmp/tmp5nn4dr8w.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    let mut max_divisor_remainder_n = 0;\n    let mut max_divisor_remainder_n2\
    \ = 0;\n    let mut max_divisor_remainder_n3 = 0;\n    let mut max_divisor_remainder_n4\
    \ = 0;\n    let mut max_divisor_remainder_n5 = 0;\n    let mut max_divisor_remainder_n6\
    \ = 0;\n    let mut max_divisor_remainder_n7 = 0;\n    let mut max_divisor_remainder_n8\
    \ = 0;\n    let mut max_divisor_remainder_n9 = 0;\n    let mut max_divisor_remainder_n10\
    \ = 0;\n    let mut max_divisor_remainder_n11 = 0;\n    let mut max_divisor_remainder_n12\
    \ = 0;\n    let mut max_divisor_remainder_n13 = 0;\n    let mut max_divisor_remainder_n14\
    \ = 0;\n    let mut max_divisor_remainder_n15 = 0;\n    let mut max_divisor_remainder_n16\
    \ = 0;\n    let mut max_divisor_remainder_n17 = 0;\n    let mut max_divisor_remainder_n18\
    \ = 0;\n    let mut max_divisor_remainder_n19 = 0;\n    let mut max_divisor_remainder_n20\
    \ = 0;\n    let mut max_divisor_remainder_n21 = 0;\n    let mut max_divisor_remainder_n22\
    \ = 0;\n    let mut max_divisor_remainder_n23 = 0;\n    let mut max_divisor_remainder_n24\
    \ = 0;\n    let mut max_divisor_remainder_n25 = 0;\n    let mut max_divisor_remainder_n26\
    \ = 0;\n    let mut max_divisor_remainder_n27 = 0;\n    let mut max_divisor_remainder_n28\
    \ = 0;\n    let mut max_divisor_remainder_n29 = 0;\n    let mut max_divisor_remainder_n30\
    \ = 0;\n    let mut max_divisor_remainder_n31 = 0;\n    let mut max_divisor_remainder_n32\
    \ = 0;\n    let mut max_divisor_remainder_n33 = 0;\n    let mut max_divisor_remainder_n34\
    \ = 0;\n    let mut max_divisor_remainder_n35 = 0;\n    let mut max_divisor_remainder_n36\
    \ = 0;\n    let mut max_divisor_remainder_n37 = 0;\n    let mut max_divisor_remainder_n38\
    \ = 0;\n    let mut max_divisor_remainder_n39 = 0;\n    let mut max_divisor_remainder_n40\
    \ = 0;\n    let mut max_divisor_remainder_n41 = 0;\n    let mut max_divisor_remainder_\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp_snbi57t.rs:48:35\n   |\n\
    48 |     let mut max_divisor_remainder_\n   |                                \
    \   ^ help: add `;` here\n49 | }\n   | - unexpected token\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmp_snbi57t.rs:4:33\n  |\n4 | fn largest_divisor(n: isize)\
    \ -> isize {\n  |    ---------------              ^^^^^ expected `isize`, found\
    \ `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail or `return`\
    \ expression\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n\n    for i in 1..=n {\n        let mut divisor = 1;\n        let mut\
    \ divisor2 = 1;\n        let mut divisor3 = 1;\n        let mut divisor4 = 1;\n\
    \        let mut divisor5 = 1;\n        let mut divisor6 = 1;\n        let mut\
    \ divisor7 = 1;\n        let mut divisor8 = 1;\n        let mut divisor9 = 1;\n\
    \        let mut divisor10 = 1;\n        let mut divisor11 = 1;\n        let mut\
    \ divisor12 = 1;\n        let mut divisor13 = 1;\n        let mut divisor14 =\
    \ 1;\n        let mut divisor15 = 1;\n\n        for j in 1..=i {\n           \
    \ if i % j == 0 {\n                divisor *= j;\n            }\n            if\
    \ i % j == 1 {\n                divisor2 *= j;\n            }\n            if\
    \ i % j == 2 {\n                divisor3 *= j;\n            }\n            if\
    \ i % j == 3 {\n                divisor4 *= j;\n            }\n            if\
    \ i % j == 4 {\n                divisor5 *= j;\n            }\n            if\
    \ i % j == 5 {\n                divisor6 *= j;\n            }\n            if\
    \ i % j == 6 {\n                divisor7 *= j;\n            }\n            if\
    \ i % j == 7 {\n                divisor8 *= j;\n            }\n            if\
    \ i % j == 8 {\n                divisor9 *= j;\n            }\n            if\
    \ i % j == 9 {\n                divisor10 *= j;\n            }\n            if\
    \ i % j == 10 {\n                divisor11 *= j;\n            }\n            if\
    \ i % j == 11 {\n                divisor12 *= j;\n            }\n            if\
    \ i % j == 12 {\n                divisor13 *= j;\n            }\n            if\
    \ i % j == 13 {\n                divisor14 *= j;\n            }\n            if\
    \ i % j == 14 {\n                divisor15 *= j;\n            }\n        }\n\n\
    \        if divisor > max_divisor {\n            max_divisor = divisor;\n    \
    \    }\n        if divisor2 > max_divisor2 {\n            max_divisor2 = divisor2;\n\
    \        }\n        if divisor3 > max_divisor3 {\n            max_divisor3 = divisor3;\n\
    \        }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmpnfh01jy1.rs:104:3\n\
    \    |\n4   | fn largest_divisor(n: isize) -> isize {\n    |                 \
    \                      - unclosed delimiter\n...\n21  |     for i in 1..=n {\n\
    \    |                    - this delimiter might not be properly closed...\n...\n\
    95  | }\n    | - ...as it matches this but it has different indentation\n...\n\
    104 | }\n    |   ^\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnfh01jy1.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_ind = -1;\n\
    \    for i in 1..n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_ind = i;\n\
    \            }\n        }\n    }\n    max_divisor_ind\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_ind = -1;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_ind = i;\n\
    \            }\n        }\n    }\n    max_divisor_ind\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp_f3vq5up.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_index = i;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2kgmjmta.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_indexes: Vec<isize> = vec![];\n    while max_divisor\
    \ % 2 == 0 {\n        max_divisor /= 2;\n        max_divisor_indexes.push(max_divisor);\n\
    \    }\n    for i in max_divisor_indexes.iter() {\n        if max_divisor % i\
    \ == 0 {\n            max_divisor = i;\n            max_divisor_index = i;\n \
    \       }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpuayx35kv.rs:14:27\n   |\n\
    5  |     let mut max_divisor = n;\n   |                           - expected due\
    \ to this value\n...\n14 |             max_divisor = i;\n   |                \
    \           ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n14 |             max_divisor = *i;\n   |                 \
    \          +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpuayx35kv.rs:15:33\n\
    \   |\n6  |     let mut max_divisor_index = 0;\n   |                         \
    \        - expected due to this value\n...\n15 |             max_divisor_index\
    \ = i;\n   |                                 ^ expected integer, found `&isize`\n\
    \   |\nhelp: consider dereferencing the borrow\n   |\n15 |             max_divisor_index\
    \ = *i;\n   |                                 +\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n    let mut max_divisor16 = 1;\n    let mut max_divisor17 = 1;\n    let\
    \ mut max_divisor18 = 1;\n    let mut max_divisor19 = 1;\n    let mut max_divisor20\
    \ = 1;\n    let mut max_divisor21 = 1;\n    let mut max_divisor22 = 1;\n    let\
    \ mut max_divisor23 = 1;\n    let mut max_divisor24 = 1;\n    let mut max_divisor25\
    \ = 1;\n    let mut max_divisor26 = 1;\n    let mut max_divisor27 = 1;\n    let\
    \ mut max_divisor28 = 1;\n    let mut max_divisor29 = 1;\n    let mut max_divisor30\
    \ = 1;\n    let mut max_divisor31 = 1;\n    let mut max_divisor32 = 1;\n    let\
    \ mut max_divisor33 = 1;\n    let mut max_divisor34 = 1;\n    let mut max_divisor35\
    \ = 1;\n    let mut max_divisor36 = 1;\n    let mut max_divisor37 = 1;\n    let\
    \ mut max_divisor38 = 1;\n    let mut max_divisor39 = 1;\n    let mut max_divisor40\
    \ = 1;\n    let mut max_divisor41 = 1;\n    let mut max_divisor42 = 1;\n    let\
    \ mut max_divisor43 = 1;\n    let mut max_divisor44 = 1;\n    let mut max_divisor45\
    \ = 1;\n    let mut max_divisor46 = 1;\n    let mut max_divisor47 = 1;\n    let\
    \ mut max_divisor48 = 1;\n    let mut max_divisor49 = 1;\n    let mut max_divisor50\
    \ = 1;\n    let mut max_divisor51 = 1;\n    let mut max_divisor52 = 1;\n    let\
    \ mut max_divisor53 = 1;\n    let mut max_divisor54 = 1;\n    let mut max_divisor55\
    \ = 1;\n    let mut max_divisor56 = 1;\n    let mut max_divisor57 = 1;\n    let\
    \ mut max_divisor58 = 1;\n    let mut max_divisor59 = 1;\n    let mut max_divisor60\
    \ = 1;\n    let mut max_divisor61 = 1;\n    let mut max_divisor62 = 1;\n    let\
    \ mut max_divisor63 = 1;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4wykmy0m.rs:68:24\n   |\n\
    68 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4wykmy0m.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_idx = 1;\n\
    \    let mut max_divisor_remainder = 0;\n\n    while max_divisor_remainder !=\
    \ 0 {\n        let mut max_divisor_remainder = max_divisor % max_divisor_remainder;\n\
    \        max_divisor = max_divisor_remainder;\n        max_divisor_idx++;\n  \
    \  }\n\n    max_divisor_idx\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: Rust has no postfix increment operator\n  --> /tmp/tmp8erux8np.rs:12:24\n\
    \   |\n12 |         max_divisor_idx++;\n   |                        ^^ not a valid\
    \ postfix operator\n   |\nhelp: use `+= 1` instead\n   |\n12 |         { let tmp\
    \ = max_divisor_idx; max_divisor_idx += 1; tmp };\n   |         +++++++++++  \
    \              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n12 -         max_divisor_idx++;\n\
    12 +         max_divisor_idx += 1;\n   | \n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_size_size = 0;\n    let mut max_divisor_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size = 0;\n    let mut\
    \ max_divisor_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size = 0;\n    let\
    \ mut max_divisor_size_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size = 0;\n    let\
    \ mut max_divisor_size_size_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size =\
    \ 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n \
    \   let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n  \
    \  let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n   \
    \ let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut \n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmp7egr4eb7.rs:40:1\n\
    \   |\n40 | }\n   | ^ expected identifier\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_index = i;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2kgmjmta.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor_remainder\
    \ == 0 {\n                max_divisor = i;\n                max_divisor_remainder\
    \ = n % i;\n            } else {\n                if max_divisor_remainder > max_divisor\
    \ {\n                    max_divisor = i;\n                    max_divisor_remainder\
    \ = n % i;\n                }\n            }\n        }\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp84t1hcee.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in 1..=n {\n        if n\
    \ % divisor == 0 {\n            if divisor > max_divisor {\n                max_divisor\
    \ = divisor;\n                max_divisor_index = divisor;\n                max_divisor_value\
    \ = n;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpmxt1rsdr.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    for divisor in 1..=n\
    \ {\n        if n % divisor == 0 {\n            if max_divisor_remainder == 0\
    \ {\n                max_divisor = divisor;\n                max_divisor_remainder\
    \ = n;\n                max_divisor_remainder_count = 1;\n            } else {\n\
    \                if max_divisor_remainder > n {\n                    max_divisor\
    \ = divisor;\n                    max_divisor_remainder = n;\n               \
    \     max_divisor_remainder_count = 1;\n                } else {\n           \
    \         if max_divisor_remainder == n {\n                        max_divisor\
    \ = divisor;\n                        max_divisor_remainder = n;\n           \
    \             max_divisor_remainder_count = 1;\n                    } else {\n\
    \                        if max_divisor_remainder > n {\n                    \
    \        max_divisor = divisor;\n                            max_divisor_remainder\
    \ = n;\n                            max_divisor_remainder_count = 1;\n       \
    \                 } else {\n                            max_divisor_remainder_count\
    \ += 1;\n                        }\n                    }\n                }\n\
    \            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpyn4dxxd6.rs:42:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisors = vec![];\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor > i\
    \ {\n                max_divisor = i;\n            }\n        } else {\n     \
    \       if max_divisor > max_divisors.len() {\n                max_divisors =\
    \ vec![i];\n            } else {\n                max_divisors.push(max_divisor);\n\
    \                max_divisor = i;\n            }\n        }\n    }\n    if max_divisor\
    \ > max_divisors.len() {\n        max_divisors.push(max_divisor);\n    }\n   \
    \ max_divisors\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp44f1hqk7.rs:13:30\n   |\n\
    13 |             if max_divisor > max_divisors.len() {\n   |                 \
    \             ^^^^^^^^^^^^^^^^^^ expected `isize`, found `usize`\n   |\nhelp:\
    \ you can convert a `usize` to an `isize` and panic if the converted value doesn't\
    \ fit\n   |\n13 |             if max_divisor > max_divisors.len().try_into().unwrap()\
    \ {\n   |                                                ++++++++++++++++++++\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmp44f1hqk7.rs:21:22\n   |\n21 |\
    \     if max_divisor > max_divisors.len() {\n   |                      ^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n21 |     if max_divisor\
    \ > max_divisors.len().try_into().unwrap() {\n   |                           \
    \             ++++++++++++++++++++\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp44f1hqk7.rs:24:5\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    \
    \             ----- expected `isize` because of return type\n...\n24 |     max_divisors\n\
    \   |     ^^^^^^^^^^^^ expected `isize`, found struct `Vec`\n   |\n   = note:\
    \ expected type `isize`\n            found struct `Vec<isize>`\n\nerror: aborting\
    \ due to 3 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for divisor in 1..=n {\n        if n % divisor == 0 {\n          \
    \  if max_divisor_remainder < divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_remainder = n % divisor;\n            }\n       \
    \ }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpnl0_l7oy.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    let mut max_divisor_remainder_n = 0;\n    let mut max_divisor_remainder_n_n\
    \ = 0;\n    let mut max_divisor_remainder_n_n_n = 0;\n    let mut max_divisor_remainder_n_n_n_n\
    \ = 0;\n    let mut max_divisor_remainder_n_n_n_n_n = 0;\n    let mut max_divisor_remainder_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_remainder_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_remainder_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_remainder_n_n_n_n_n_n_n_n_n = 0;\n    let mut\
    \ max_divisor_remainder_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_remainder_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_remainder_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let\
    \ mut max_divisor_remainder_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_remainder_n_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_remainder_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n \
    \   let mut max_divisor_remainder_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let\
    \ mut max_divisor_remainder_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_remainder_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_remainder_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n =\
    \ 0;\n    let mut max_divisor_remainder_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n =\
    \ 0;\n    let mut max_divisor_remainder_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n =\
    \ 0;\n    let mut max_divisor_remainder_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_remainder_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_remainder_n_n_n_\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpjjd4xn7i.rs:30:41\n   |\n\
    30 |     let mut max_divisor_remainder_n_n_n_\n   |                          \
    \               ^ help: add `;` here\n31 | }\n   | - unexpected token\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpjjd4xn7i.rs:4:33\n  |\n4 | fn largest_divisor(n:\
    \ isize) -> isize {\n  |    ---------------              ^^^^^ expected `isize`,\
    \ found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_ind = 1;\n\
    \    for d in 2..=max_divisor {\n        if n % d == 0 {\n            if d > max_divisor\
    \ {\n                max_divisor = d;\n                max_divisor_ind = 1;\n\
    \            } else {\n                max_divisor_ind += 1;\n            }\n\
    \        }\n    }\n    max_divisor_ind\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp792mpluw.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = 0;\n    let mut max_divisor_value_index = 0;\n\
    \    let mut max_divisor_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_index\
    \ = 0;\n    let \n}\n\nfn main() {\n    let candidate = largest_divisor;\n   \
    \ assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpenjvc5s2.rs:58:1\n  \
    \ |\n58 | }\n   | ^ expected pattern\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor = n;\n   \
    \ while max_divisor % 2 == 0 {\n        max_divisor /= 2;\n    }\n    while max_divisor\
    \ % 3 == 0 {\n        max_divisor /= 3;\n    }\n    while max_divisor % 5 == 0\
    \ {\n        max_divisor /= 5;\n    }\n    while max_divisor % 7 == 0 {\n    \
    \    max_divisor /= 7;\n    }\n    while max_divisor % 11 == 0 {\n        max_divisor\
    \ /= 11;\n    }\n    while max_divisor % 13 == 0 {\n        max_divisor /= 13;\n\
    \    }\n    while max_divisor % 17 == 0 {\n        max_divisor /= 17;\n    }\n\
    \    while max_divisor % 19 == 0 {\n        max_divisor /= 19;\n    }\n    while\
    \ max_divisor % 23 == 0 {\n        max_divisor /= 23;\n    }\n    while max_divisor\
    \ % 29 == 0 {\n        max_divisor /= 29;\n    }\n    while max_divisor % 31 ==\
    \ 0 {\n        max_divisor /= 31;\n    }\n    while max_divisor % 37 == 0 {\n\
    \        max_divisor /= 37;\n    }\n    while max_divisor % 41 == 0 {\n      \
    \  max_divisor /= 41;\n    }\n    while max_divisor % 43 == 0 {\n        max_divisor\
    \ /= 43;\n    }\n    while max_divisor % 47 == 0 {\n        max_divisor /= 47;\n\
    \    }\n    while max_divisor % 53 == 0 {\n        max_divisor /= 53;\n    }\n\
    \    while max_divisor % 59 == 0 {\n        max_divisor /= 59;\n    }\n    while\
    \ max_divisor % 61 == 0 {\n        max_divisor /= 61;\n    }\n    while max_divisor\
    \ % 67 == 0 {\n        max_divisor /= 67;\n    }\n    while max_divisor % 71 ==\
    \ 0 {\n        max_divisor /= 71;\n    }\n    while max_divisor % 73 == 0 {\n\
    \        max_divisor /= 73;\n    }\n    while max_divisor % 79 == 0 {\n      \
    \  max_divisor /= 79;\n    }\n    while max_divisor % 83 == 0 {\n        max_divisor\
    \ /= 83;\n    }\n    while max_divisor % 89 == 0 {\n        max_divisor /= 89;\n\
    \    }\n    while max_divisor % 97 == 0 {\n        max_divisor /= 97;\n    }\n\
    \    while max_divisor % 103 == 0 {\n        max_divisor /= 103;\n    }\n    while\
    \ max_divisor % 109 == 0 {\n        max_divisor /= 109;\n    }\n    while max_divisor\
    \ % 113 == 0 {\n        max_divisor /= 113;\n    }\n    while max_\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n  --> /tmp/tmp9x2hg9b9.rs:92:1\n   |\n\
    91 |     while max_\n   |     ----- ---- this `while` condition successfully parsed\n\
    \   |     |\n   |     while parsing the body of this `while` expression\n92 |\
    \ }\n   | ^ expected `{`\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_indexes: Vec<usize> = vec![];\n    for i in 1..=max_divisor\
    \ {\n        if n % i == 0 {\n            if max_divisor > i {\n             \
    \   max_divisor = i;\n                max_divisor_index = i;\n            }\n\
    \        } else {\n            if max_divisor > i {\n                max_divisor\
    \ = i;\n                max_divisor_indexes = vec![i];\n            }\n      \
    \  }\n    }\n    if max_divisor > n {\n        max_divisor = n;\n        max_divisor_indexes\
    \ = vec![n];\n    }\n    max_divisor_indexes.sort_unstable();\n    max_divisor_index\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp3b83tlq1.rs:17:44\n   |\n\
    17 |                 max_divisor_indexes = vec![i];\n   |                    \
    \                        ^ expected `usize`, found `isize`\n   |\nhelp: you can\
    \ convert an `isize` to a `usize` and panic if the converted value doesn't fit\n\
    \   |\n17 |                 max_divisor_indexes = vec![i.try_into().unwrap()];\n\
    \   |                                             ++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp3b83tlq1.rs:23:36\n   |\n23 |         max_divisor_indexes\
    \ = vec![n];\n   |                                    ^ expected `usize`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `usize` and panic if the\
    \ converted value doesn't fit\n   |\n23 |         max_divisor_indexes = vec![n.try_into().unwrap()];\n\
    \   |                                     ++++++++++++++++++++\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for d in divisors(n) {\n        if d > max_divisor {\n            max_divisor\
    \ = d;\n            max_divisor_size = 1;\n        }\n        if d > max_divisor_size\
    \ {\n            max_divisor_size = d;\n        }\n    }\n    max_divisor\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpku0yrmxd.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = n;\n            }\n        } else {\n            break;\n        }\n    }\n\
    \    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n   \
    \ assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmpxiy07fa4.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n    let mut max_divisor16 = 1;\n    let mut max_divisor17 = 1;\n    let\
    \ mut max_divisor18 = 1;\n    let mut max_divisor19 = 1;\n    let mut max_divisor20\
    \ = 1;\n    let mut max_divisor21 = 1;\n    let mut max_divisor22 = 1;\n    let\
    \ mut max_divisor23 = 1;\n    let mut max_divisor24 = 1;\n    let mut max_divisor25\
    \ = 1;\n    let mut max_divisor26 = 1;\n    let mut max_divisor27 = 1;\n    let\
    \ mut max_divisor28 = 1;\n    let mut max_divisor29 = 1;\n    let mut max_divisor30\
    \ = 1;\n    let mut max_divisor31 = 1;\n    let mut max_divisor32 = 1;\n    let\
    \ mut max_divisor33 = 1;\n    let mut max_divisor34 = 1;\n    let mut max_divisor35\
    \ = 1;\n    let mut max_divisor36 = 1;\n    let mut max_divisor37 = 1;\n    let\
    \ mut max_divisor38 = 1;\n    let mut max_divisor39 = 1;\n    let mut max_divisor40\
    \ = 1;\n    let mut max_divisor41 = 1;\n    let mut max_divisor42 = 1;\n    let\
    \ mut max_divisor43 = 1;\n    let mut max_divisor44 = 1;\n    let mut max_divisor45\
    \ = 1;\n    let mut max_divisor46 = 1;\n    let mut max_divisor47 = 1;\n    let\
    \ mut max_divisor48 = 1;\n    let mut max_divisor49 = 1;\n    let mut max_divisor50\
    \ = 1;\n    let mut max_divisor51 = 1;\n    let mut max_divisor52 = 1;\n    let\
    \ mut max_divisor53 = 1;\n    let mut max_divisor54 = 1;\n    let mut max_divisor55\
    \ = 1;\n    let mut max_divisor56 = 1;\n    let mut max_divisor57 = 1;\n    let\
    \ mut max_divisor58 = 1;\n    let mut max_divisor59 = 1;\n    let mut max_divisor60\
    \ = 1;\n    let mut max_divisor61 = 1;\n    let mut max_divisor62 = 1;\n    let\
    \ mut max_divisor63 = 1;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4wykmy0m.rs:68:24\n   |\n\
    68 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4wykmy0m.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut max_divisor = 1;\n    while\
    \ largest % max_divisor == 0 {\n        max_divisor *= 2;\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp90b1naus.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        } else {\n            if divisor > max_divisor\
    \ {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp5_qnbwzf.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_value = 0;\n    for d in divisors(n) {\n        if d\
    \ > max_divisor {\n            max_divisor = d;\n            max_divisor_size\
    \ = n;\n            max_divisor_value = n;\n        }\n        if n % d == 0 {\n\
    \            n /= d;\n            if n > max_divisor_value {\n               \
    \ max_divisor_value = n;\n                max_divisor_size = d;\n            }\n\
    \        }\n    }\n    max_divisor_value\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmp4inctq_p.rs:8:14\n\
    \  |\n8 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for d in divisors(n) {\n        if n % d == 0 {\n            if d\
    \ > max_divisor {\n                max_divisor = d;\n                max_divisor_remainder\
    \ = n % d;\n            }\n        }\n    }\n    if max_divisor_remainder == 0\
    \ {\n        max_divisor\n    } else {\n        max_divisor\n    }\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmp4z38da1n.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \    while max_divisor_size != 0 {\n        if n % max_divisor_size == 0 {\n \
    \           max_divisor += max_divisor_size;\n        }\n        max_divisor_size\
    \ /= 2;\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `1`', /tmp/tmpubtx3kfz.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_ind = -1;\n\
    \    let mut max_divisor_ind_ind = -1;\n    let mut max_divisor_ind_ind2 = -1;\n\
    \    let mut max_divisor_ind_ind3 = -1;\n    let mut max_divisor_ind_ind4 = -1;\n\
    \    let mut max_divisor_ind_ind5 = -1;\n    let mut max_divisor_ind_ind6 = -1;\n\
    \    let mut max_divisor_ind_ind7 = -1;\n    let mut max_divisor_ind_ind8 = -1;\n\
    \    let mut max_divisor_ind_ind9 = -1;\n    let mut max_divisor_ind_ind10 = -1;\n\
    \    let mut max_divisor_ind_ind11 = -1;\n    let mut max_divisor_ind_ind12 =\
    \ -1;\n    let mut max_divisor_ind_ind13 = -1;\n    let mut max_divisor_ind_ind14\
    \ = -1;\n    let mut max_divisor_ind_ind15 = -1;\n    let mut max_divisor_ind_ind16\
    \ = -1;\n    let mut max_divisor_ind_ind17 = -1;\n    let mut max_divisor_ind_ind18\
    \ = -1;\n    let mut max_divisor_ind_ind19 = -1;\n    let mut max_divisor_ind_ind20\
    \ = -1;\n    let mut max_divisor_ind_ind21 = -1;\n    let mut max_divisor_ind_ind22\
    \ = -1;\n    let mut max_divisor_ind_ind23 = -1;\n    let mut max_divisor_ind_ind24\
    \ = -1;\n    let mut max_divisor_ind_ind25 = -1;\n    let mut max_divisor_ind_ind26\
    \ = -1;\n    let mut max_divisor_ind_ind27 = -1;\n    let mut max_divisor_ind_ind28\
    \ = -1;\n    let mut max_divisor_ind_ind29 = -1;\n    let mut max_divisor_ind_ind30\
    \ = -1;\n    let mut max_divisor_ind_ind31 = -1;\n    let mut max_divisor_ind_ind32\
    \ = -1;\n    let mut max_divisor_ind_ind33 = -1;\n    let mut max_divisor_ind_ind34\
    \ = -1;\n    let mut max_divisor_ind_ind35 = -1;\n    let mut max_divisor_ind_ind36\
    \ = -1;\n    let mut max_divisor_ind_ind37 = -1;\n    let mut max_divisor_ind_ind38\
    \ = -1;\n    let mut max_divisor_ind_ind39 = -1;\n    let mut max_divisor_ind_ind40\
    \ = -1;\n    let mut max_divisor_ind_ind41 = -1;\n    let mut max_divisor_ind_ind42\
    \ = -1;\n    let mut max_\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpofhdzr55.rs:49:17\n   |\n\
    49 |     let mut max_\n   |                 ^ help: add `;` here\n50 | }\n   |\
    \ - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpofhdzr55.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut i = 1;\n    while i <= n {\n\
    \        if n % i == 0 {\n            largest = i;\n        }\n        i += 1;\n\
    \    }\n    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmplzrjbip8.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_index = i;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2kgmjmta.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in 1..=n {\n        if n\
    \ % divisor == 0 {\n            if divisor > max_divisor {\n                max_divisor\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      } else {\n            if divisor > max_divisor_value {\n              \
    \  max_divisor_value = divisor;\n                max_divisor_index = divisor;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpd2fuh56t.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n\n    for i in 1..=n {\n        if n % i == 0 {\n            if i % 2\
    \ == 0 {\n                max_divisor2 = i;\n            }\n            if i %\
    \ 3 == 0 {\n                max_divisor3 = i;\n            }\n            if i\
    \ % 4 == 0 {\n                max_divisor4 = i;\n            }\n            if\
    \ i % 5 == 0 {\n                max_divisor5 = i;\n            }\n           \
    \ if i % 6 == 0 {\n                max_divisor6 = i;\n            }\n        \
    \    if i % 7 == 0 {\n                max_divisor7 = i;\n            }\n     \
    \       if i % 8 == 0 {\n                max_divisor8 = i;\n            }\n  \
    \          if i % 9 == 0 {\n                max_divisor9 = i;\n            }\n\
    \            if i % 10 == 0 {\n                max_divisor10 = i;\n          \
    \  }\n            if i % 11 == 0 {\n                max_divisor11 = i;\n     \
    \       }\n            if i % 12 == 0 {\n                max_divisor12 = i;\n\
    \            }\n            if i % 13 == 0 {\n                max_divisor13 =\
    \ i;\n            }\n            if i % 14 == 0 {\n                max_divisor14\
    \ = i;\n            }\n            if i % 15 == 0 {\n                max_divisor15\
    \ = i;\n            }\n        }\n    }\n\n    if max_divisor2 > max_divisor {\n\
    \        max_divisor = max_divisor2;\n    }\n    if max_divisor3 > max_divisor\
    \ {\n        max_divisor = max_divisor3;\n    }\n    if max_divisor4 > max_divisor\
    \ {\n        max_divisor = max_divisor4;\n    }\n    if max_divisor5 > max_divisor\
    \ {\n        max_divisor = max_divisor5;\n    }\n    if max_divisor6 > max_divisor\
    \ {\n        max_divisor = max_divisor6;\n    }\n    if max_divisor7 > max_divisor\
    \ {\n        max_divisor = max_divisor7;\n    }\n    if max_divisor8 > max_divisor\
    \ {\n        max_divisor = max_divisor8;\n    }\n    if max_divisor9 > max_divisor\
    \ {\n        max_divisor = max_divisor9;\n    }\n    if max_divisor10 > max_divisor\
    \ {\n        max_divisor = max_divisor10;\n    }\n    if max_divisor11 > max_divisor\
    \ {\n        max_divisor = max_divisor11;\n    }\n    if max_divisor12 > \n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmp4qejs0x3.rs:99:1\n\
    \   |\n99 | }\n   | ^ expected expression\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_size = i;\n\
    \            }\n        } else {\n            if max_divisor_size > i {\n    \
    \            max_divisor = i;\n                max_divisor_size = i;\n       \
    \     }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpjkprvzkh.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = 0;\n    for i in 0..n {\n        if n % i ==\
    \ 0 {\n            if max_divisor < i {\n                max_divisor = i;\n  \
    \              max_divisor_index = i;\n                max_divisor_value = i;\n\
    \            }\n            if max_divisor_value < i {\n                max_divisor_value\
    \ = i;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmprqr1gal9.rs:9:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for d in divisors(n) {\n        if d > max_divisor {\n            max_divisor\
    \ = d;\n            max_divisor_size = 1;\n        }\n        if d == max_divisor\
    \ {\n            max_divisor_size += 1;\n        }\n    }\n    max_divisor\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmp8_jcjk47.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = divisor;\n            } else {\n                max_divisor_size = divisor;\n\
    \            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpqtxndv_w.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor\
    \ < i {\n                max_divisor = i;\n                max_divisor_remainder\
    \ = n % i;\n            }\n        }\n    }\n    max_divisor_remainder\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmptxh0dfjx.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \    for divisor in &[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n        if n % divisor == 0 {\n \
    \           if divisor > max_divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_size = n;\n            }\n        }\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpkeeyw53_.rs:9:26\n  |\n9 |\
    \             if divisor > max_divisor {\n  |                          ^^^^^^^^^^^\n\
    \  |                          |\n  |                          expected `&isize`,\
    \ found integer\n  |                          help: consider borrowing here: `&max_divisor`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmpkeeyw53_.rs:10:31\n   |\n5  |\
    \     let mut max_divisor = 0;\n   |                           - expected due\
    \ to this value\n...\n10 |                 max_divisor = divisor;\n   |      \
    \                         ^^^^^^^ expected integer, found `&isize`\n   |\nhelp:\
    \ consider dereferencing the borrow\n   |\n10 |                 max_divisor =\
    \ *divisor;\n   |                               +\n\nerror: aborting due to 2\
    \ previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_index = i;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2kgmjmta.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpmjgyrooi.rs:56:24\n   |\n\
    56 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    57 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpmjgyrooi.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for divisor in 1..=n {\n        if n % divisor == 0 {\n          \
    \  if max_divisor_remainder < divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_remainder = n % divisor;\n            }\n       \
    \ }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpnl0_l7oy.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = 1;\n    for i in 1..=max_divisor {\n        if\
    \ n % i == 0 {\n            if max_divisor_value < i {\n                max_divisor_value\
    \ = i;\n                max_divisor_index = i;\n            }\n        }\n   \
    \ }\n    max_divisor_value\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp9j5kl96v.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_indexes: Vec<isize> = vec![];\n    for i in 1..=max_divisor\
    \ {\n        if n % i == 0 {\n            max_divisor = i;\n            max_divisor_indexes.push(i);\n\
    \        }\n    }\n    for i in max_divisor_indexes.iter() {\n        if max_divisor\
    \ % i == 0 {\n            max_divisor = max_divisor / i;\n            max_divisor_index\
    \ = i;\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp_rxxkm_m.rs:17:33\n   |\n\
    6  |     let mut max_divisor_index = 0;\n   |                                \
    \ - expected due to this value\n...\n17 |             max_divisor_index = i;\n\
    \   |                                 ^ expected integer, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n17 |             max_divisor_index\
    \ = *i;\n   |                                 +\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 0;\n    let mut max_divisor5\
    \ = 0;\n    let mut max_divisor6 = 0;\n    let mut max_divisor7 = 0;\n    let\
    \ mut max_divisor8 = 0;\n    let mut max_divisor9 = 0;\n    let mut max_divisor10\
    \ = 0;\n    let mut max_divisor11 = 0;\n    let mut max_divisor12 = 0;\n    let\
    \ mut max_divisor13 = 0;\n    let mut max_divisor14 = 0;\n    let mut max_divisor15\
    \ = 0;\n\n    for i in 1..n {\n        if n % i == 0 {\n            if i % 2 ==\
    \ 0 {\n                max_divisor2 = i;\n            }\n            if i % 3\
    \ == 0 {\n                max_divisor3 = i;\n            }\n            if i %\
    \ 4 == 0 {\n                max_divisor4 = i;\n            }\n            if i\
    \ % 5 == 0 {\n                max_divisor5 = i;\n            }\n            if\
    \ i % 6 == 0 {\n                max_divisor6 = i;\n            }\n           \
    \ if i % 7 == 0 {\n                max_divisor7 = i;\n            }\n        \
    \    if i % 8 == 0 {\n                max_divisor8 = i;\n            }\n     \
    \       if i % 9 == 0 {\n                max_divisor9 = i;\n            }\n  \
    \          if i % 10 == 0 {\n                max_divisor10 = i;\n            }\n\
    \            if i % 11 == 0 {\n                max_divisor11 = i;\n          \
    \  }\n            if i % 12 == 0 {\n                max_divisor12 = i;\n     \
    \       }\n            if i % 13 == 0 {\n                max_divisor13 = i;\n\
    \            }\n            if i % 14 == 0 {\n                max_divisor14 =\
    \ i;\n            }\n            if i % 15 == 0 {\n                max_divisor15\
    \ = i;\n            }\n        }\n    }\n\n    if max_divisor2 > max_divisor {\n\
    \        max_divisor = max_divisor2;\n    }\n    if max_divisor3 > max_divisor\
    \ {\n        max_divisor = max_divisor3;\n    }\n    if max_divisor4 > max_divisor\
    \ {\n        max_divisor = max_divisor4;\n    }\n    if max_divisor5 > max_divisor\
    \ {\n        max_divisor = max_divisor5;\n    }\n    if max_divisor6 > max_divisor\
    \ {\n        max_divisor = max_divisor6;\n    }\n    if max_divisor7 > max_divisor\
    \ {\n        max_divisor = max_divisor7;\n    }\n    if max_divisor8 > max_divisor\
    \ {\n        max_divisor = max_divisor8;\n    }\n    if max_divisor9 > max_divisor\
    \ {\n        max_divisor = max_divisor9;\n    }\n    if max_divisor10 > max_divisor\
    \ {\n        max_divisor = max_divisor10;\n    }\n    if max_divisor11 > max_divisor\
    \ {\n        max_divisor = max_divisor11;\n    }\n    if max_divisor12 > max_divisor\
    \ \n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n  --> /tmp/tmp504sbd5y.rs:99:1\n   |\n\
    98 |     if max_divisor12 > max_divisor \n   |     -- this `if` expression has\
    \ a condition, but no block\n99 | }\n   | ^ expected `{`\n\nerror: aborting due\
    \ to previous error\n\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    for divisor in 1..=max_divisor {\n        if n % divisor == 0 {\n       \
    \     max_divisor = divisor;\n            max_divisor_index = divisor;\n     \
    \   }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpo5tja0dq.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_size_size = 0;\n    let mut max_divisor_size_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_size = 0;\n    let\
    \ mut max_divisor_size_divisor_divisor_divisor_divisor = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor =\
    \ 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmppip63a8g.rs:33:102\n   |\n\
    33 |     let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_\n\
    \   |                                                                        \
    \                              ^ help: add `;` here\n34 | }\n   | - unexpected\
    \ token\n\nerror[E0308]: mismatched types\n --> /tmp/tmppip63a8g.rs:4:33\n  |\n\
    4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------          \
    \    ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n\n    for i in 1..n {\n        if n % i == 0 {\n            if max_divisor\
    \ < i {\n                max_divisor = i;\n            }\n            if max_divisor2\
    \ < i {\n                max_divisor2 = i;\n            }\n            if max_divisor3\
    \ < i {\n                max_divisor3 = i;\n            }\n            if max_divisor4\
    \ < i {\n                max_divisor4 = i;\n            }\n            if max_divisor5\
    \ < i {\n                max_divisor5 = i;\n            }\n            if max_divisor6\
    \ < i {\n                max_divisor6 = i;\n            }\n            if max_divisor7\
    \ < i {\n                max_divisor7 = i;\n            }\n            if max_divisor8\
    \ < i {\n                max_divisor8 = i;\n            }\n            if max_divisor9\
    \ < i {\n                max_divisor9 = i;\n            }\n            if max_divisor10\
    \ < i {\n                max_divisor10 = i;\n            }\n            if max_divisor11\
    \ < i {\n                max_divisor11 = i;\n            }\n            if max_divisor12\
    \ < i {\n                max_divisor12 = i;\n            }\n            if max_divisor13\
    \ < i {\n                max_divisor13 = i;\n            }\n            if max_divisor14\
    \ < i {\n                max_divisor14 = i;\n            }\n            if max_divisor15\
    \ < i {\n                max_divisor15 = i;\n            }\n        }\n    }\n\
    \n    if max_divisor == 1 {\n        max_divisor\n    } else if max_divisor2 ==\
    \ 1 {\n        max_divisor2\n    } else if max_divisor3 == 1 {\n        max_divisor3\n\
    \    } else if max_divisor4 == 1 {\n        max_divisor4\n    } else if max_divisor5\
    \ == 1 {\n        max_divisor5\n    } else if max_divisor6 == 1 {\n        max_divisor6\n\
    \    } else if max_divisor7 == 1 {\n        max_divisor7\n    } else if max_divisor8\
    \ == 1 {\n        max_divisor8\n    } else if max_divisor9 == 1 {\n        max_divisor9\n\
    \    } else if max_divisor10 == 1 {\n        max_divisor10\n    } else if max_divisor11\
    \ == 1 {\n        max_divisor11\n    } else if max_divisor12 == 1 {\n        max_divisor12\n\
    \    } else \n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n  --> /tmp/tmp46rhgxkf.rs:96:1\n   |\n\
    96 | }\n   | ^ expected `{`\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_remainder\
    \ = 0;\n    for divisor in 1..=n {\n        if n % divisor == 0 {\n          \
    \  if divisor > max_divisor {\n                max_divisor = divisor;\n      \
    \          max_divisor_remainder = n % divisor;\n            }\n        }\n  \
    \  }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp13muzwsa.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_size_size = 0;\n    let mut max_divisor_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size = 0;\n    let mut\
    \ max_divisor_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size = 0;\n    let\
    \ mut max_divisor_size_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size = 0;\n    let\
    \ mut max_divisor_size_size_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size =\
    \ 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n \
    \   let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n  \
    \  let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n   \
    \ let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut \n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmp7egr4eb7.rs:40:1\n\
    \   |\n40 | }\n   | ^ expected identifier\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_value = 0;\n    let mut max_divisor_value_size = 0;\n\
    \    let mut max_divisor_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let mut max_divisor_value_value_value = 0;\n    let mut max_divisor_value_value_size\
    \ = 0;\n    let \n}\n\nfn main() {\n    let candidate = largest_divisor;\n   \
    \ assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp4avqzxft.rs:58:1\n  \
    \ |\n58 | }\n   | ^ expected pattern\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_index = i;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2kgmjmta.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for d in divisors(n) {\n        if d > max_divisor {\n            max_divisor\
    \ = d;\n            max_divisor_size = 1;\n        }\n        if d > max_divisor_size\
    \ {\n            max_divisor_size = d;\n        }\n    }\n    max_divisor\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpku0yrmxd.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor_size\
    \ == i {\n                max_divisor = i;\n            }\n            else {\n\
    \                max_divisor = i;\n                max_divisor_size = i;\n   \
    \         }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp9ut90lnk.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    for divisor in &[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n        if n % divisor == 0 {\n \
    \           if max_divisor % divisor == 0 {\n                max_divisor = divisor;\n\
    \                max_divisor_index = divisor as usize;\n            }\n      \
    \  }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpxv0_vi4q.rs:10:31\n   |\n\
    5  |     let mut max_divisor = n;\n   |                           - expected due\
    \ to this value\n...\n10 |                 max_divisor = divisor;\n   |      \
    \                         ^^^^^^^ expected `isize`, found `&isize`\n   |\nhelp:\
    \ consider dereferencing the borrow\n   |\n10 |                 max_divisor =\
    \ *divisor;\n   |                               +\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpxv0_vi4q.rs:15:5\n   |\n4  | fn largest_divisor(n: isize)\
    \ -> isize {\n   |                                 ----- expected `isize` because\
    \ of return type\n...\n15 |     max_divisor_index\n   |     ^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n15 |     max_divisor_index.try_into().unwrap()\n\
    \   |                      ++++++++++++++++++++\n\nerror[E0606]: casting `&isize`\
    \ as `usize` is invalid\n  --> /tmp/tmpxv0_vi4q.rs:11:37\n   |\n11 |         \
    \        max_divisor_index = divisor as usize;\n   |                         \
    \            -------^^^^^^^^^\n   |                                     |\n  \
    \ |                                     cannot cast `&isize` as `usize`\n   |\
    \                                     help: dereference the expression: `*divisor`\n\
    \nerror: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0606.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in &[2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\
    \ {\n        if n % divisor == 0 {\n            if max_divisor < divisor {\n \
    \               max_divisor = divisor;\n                max_divisor_index = divisor\
    \ as usize;\n                max_divisor_value = n / divisor;\n            }\n\
    \        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpocbew6iv.rs:11:31\n   |\n\
    5  |     let mut max_divisor = 0;\n   |                           - expected due\
    \ to this value\n...\n11 |                 max_divisor = divisor;\n   |      \
    \                         ^^^^^^^ expected `isize`, found `&isize`\n   |\nhelp:\
    \ consider dereferencing the borrow\n   |\n11 |                 max_divisor =\
    \ *divisor;\n   |                               +\n\nerror[E0277]: can't compare\
    \ `isize` with `&isize`\n  --> /tmp/tmpocbew6iv.rs:10:28\n   |\n10 |         \
    \    if max_divisor < divisor {\n   |                            ^ no implementation\
    \ for `isize < &isize` and `isize > &isize`\n   |\n   = help: the trait `PartialOrd<&isize>`\
    \ is not implemented for `isize`\n   = help: the following other types implement\
    \ trait `PartialOrd<Rhs>`:\n             f32\n             f64\n             i128\n\
    \             i16\n             i32\n             i64\n             i8\n     \
    \        isize\n           and 6 others\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpocbew6iv.rs:17:5\n   |\n4  | fn largest_divisor(n: isize) -> isize {\n\
    \   |                                 ----- expected `isize` because of return\
    \ type\n...\n17 |     max_divisor_index\n   |     ^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n17 |     max_divisor_index.try_into().unwrap()\n\
    \   |                      ++++++++++++++++++++\n\nerror[E0606]: casting `&isize`\
    \ as `usize` is invalid\n  --> /tmp/tmpocbew6iv.rs:12:37\n   |\n12 |         \
    \        max_divisor_index = divisor as usize;\n   |                         \
    \            -------^^^^^^^^^\n   |                                     |\n  \
    \ |                                     cannot cast `&isize` as `usize`\n   |\
    \                                     help: dereference the expression: `*divisor`\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0277, E0308, E0606.\nFor more information about an error, try `rustc --explain\
    \ E0277`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_idx = -1;\n\
    \    let mut max_divisor_value = n;\n    for i in 1..=n {\n        if n % i ==\
    \ 0 {\n            if max_divisor < i {\n                max_divisor = i;\n  \
    \              max_divisor_idx = i;\n            }\n            if max_divisor_value\
    \ < i {\n                max_divisor_value = i;\n            }\n        }\n  \
    \  }\n    max_divisor_idx\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpix1x855z.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut divisor = 1;\n    while divisor\
    \ < n {\n        if n % divisor == 0 {\n            largest = divisor;\n     \
    \   }\n        divisor += 1;\n    }\n    largest\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisors = Vec::new();\n\
    \    let mut max_divisors_index = 0;\n    let mut max_divisors_index2 = 0;\n \
    \   let mut max_divisors_index3 = 0;\n    let mut max_divisors_index4 = 0;\n \
    \   let mut max_divisors_index5 = 0;\n    let mut max_divisors_index6 = 0;\n \
    \   let mut max_divisors_index7 = 0;\n    let mut max_divisors_index8 = 0;\n \
    \   let mut max_divisors_index9 = 0;\n    let mut max_divisors_index10 = 0;\n\
    \    let mut max_divisors_index11 = 0;\n    let mut max_divisors_index12 = 0;\n\
    \    let mut max_divisors_index13 = 0;\n    let mut max_divisors_index14 = 0;\n\
    \    let mut max_divisors_index15 = 0;\n    let mut max_divisors_index16 = 0;\n\
    \    let mut max_divisors_index17 = 0;\n    let mut max_divisors_index18 = 0;\n\
    \    let mut max_divisors_index19 = 0;\n    let mut max_divisors_index20 = 0;\n\
    \    let mut max_divisors_index21 = 0;\n    let mut max_divisors_index22 = 0;\n\
    \    let mut max_divisors_index23 = 0;\n    let mut max_divisors_index24 = 0;\n\
    \    let mut max_divisors_index25 = 0;\n    let mut max_divisors_index26 = 0;\n\
    \    let mut max_divisors_index27 = 0;\n    let mut max_divisors_index28 = 0;\n\
    \    let mut max_divisors_index29 = 0;\n    let mut max_divisors_index30 = 0;\n\
    \    let mut max_divisors_index31 = 0;\n    let mut max_divisors_index32 = 0;\n\
    \    let mut max_divisors_index33 = 0;\n    let mut max_divisors_index34 = 0;\n\
    \    let mut max_divisors_index35 = 0;\n    let mut max_divisors_index36 = 0;\n\
    \    let mut max_divisors_index37 = 0;\n    let mut max_divisors_index38 = 0;\n\
    \    let mut max_divisors_index39 = 0;\n    let mut max_divisors_index40 = 0;\n\
    \    let mut max_divisors_index41 = 0;\n    let mut max_divisors_index42 = 0;\n\
    \    let mut max_divisors_index43 = 0;\n    let mut max_divisors_index44 = 0;\n\
    \    let mut max_divisors_index45 = 0;\n    let mut max_divisors_index46 = 0;\n\
    \    let mut max_divisors_index47 = 0;\n    let mut max_divisors_index48 = 0;\n\
    \    let mut max_divisors_index49 = 0;\n    let mut max_divisors_index50 = 0;\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp1qq9oo9y.rs:4:33\n  |\n4 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |    ---------------            \
    \  ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in 1..=max_divisor {\n  \
    \      if n % divisor == 0 {\n            if divisor > max_divisor {\n       \
    \         max_divisor = divisor;\n                max_divisor_index = divisor;\n\
    \                max_divisor_value = n;\n            }\n        } else {\n   \
    \         if divisor > max_divisor_value {\n                max_divisor_value\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp9c5wn1c2.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_square = n;\n\
    \    while max_divisor_square > 1 {\n        max_divisor = max_divisor + 1;\n\
    \        max_divisor_square = max_divisor_square * max_divisor;\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to multiply with overflow'', /tmp/tmp5x9sbxfr.rs:9:30

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n    let mut max_divisor16 = 1;\n    let mut max_divisor17 = 1;\n    let\
    \ mut max_divisor18 = 1;\n    let mut max_divisor19 = 1;\n    let mut max_divisor20\
    \ = 1;\n    let mut max_divisor21 = 1;\n    let mut max_divisor22 = 1;\n    let\
    \ mut max_divisor23 = 1;\n    let mut max_divisor24 = 1;\n    let mut max_divisor25\
    \ = 1;\n    let mut max_divisor26 = 1;\n    let mut max_divisor27 = 1;\n    let\
    \ mut max_divisor28 = 1;\n    let mut max_divisor29 = 1;\n    let mut max_divisor30\
    \ = 1;\n    let mut max_divisor31 = 1;\n    let mut max_divisor32 = 1;\n    let\
    \ mut max_divisor33 = 1;\n    let mut max_divisor34 = 1;\n    let mut max_divisor35\
    \ = 1;\n    let mut max_divisor36 = 1;\n    let mut max_divisor37 = 1;\n    let\
    \ mut max_divisor38 = 1;\n    let mut max_divisor39 = 1;\n    let mut max_divisor40\
    \ = 1;\n    let mut max_divisor41 = 1;\n    let mut max_divisor42 = 1;\n    let\
    \ mut max_divisor43 = 1;\n    let mut max_divisor44 = 1;\n    let mut max_divisor45\
    \ = 1;\n    let mut max_divisor46 = 1;\n    let mut max_divisor47 = 1;\n    let\
    \ mut max_divisor48 = 1;\n    let mut max_divisor49 = 1;\n    let mut max_divisor50\
    \ = 1;\n    let mut max_divisor51 = 1;\n    let mut max_divisor52 = 1;\n    let\
    \ mut max_divisor53 = 1;\n    let mut max_divisor54 = 1;\n    let mut max_divisor55\
    \ = 1;\n    let mut max_divisor56 = 1;\n    let mut max_divisor57 = 1;\n    let\
    \ mut max_divisor58 = 1;\n    let mut max_divisor59 = 1;\n    let mut max_divisor60\
    \ = 1;\n    let mut max_divisor61 = 1;\n    let mut max_divisor62 = 1;\n    let\
    \ mut max_divisor63 = 1;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4wykmy0m.rs:68:24\n   |\n\
    68 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4wykmy0m.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for i in 1..n {\n        if n % i == 0 {\n            if max_divisor_remainder\
    \ == 0 {\n                max_divisor = i;\n                max_divisor_remainder\
    \ = n % i;\n            } else {\n                if max_divisor_remainder > max_divisor\
    \ {\n                    max_divisor = max_divisor_remainder;\n              \
    \      max_divisor_remainder = n % max_divisor;\n                }\n         \
    \   }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in &[2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\
    \ {\n        if n % divisor == 0 {\n            if max_divisor < divisor {\n \
    \               max_divisor = divisor;\n                max_divisor_index = divisor;\n\
    \                max_divisor_value = n;\n            }\n        }\n    }\n   \
    \ max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpi54b4a83.rs:11:31\n   |\n\
    5  |     let mut max_divisor = 0;\n   |                           - expected due\
    \ to this value\n...\n11 |                 max_divisor = divisor;\n   |      \
    \                         ^^^^^^^ expected `isize`, found `&isize`\n   |\nhelp:\
    \ consider dereferencing the borrow\n   |\n11 |                 max_divisor =\
    \ *divisor;\n   |                               +\n\nerror[E0277]: can't compare\
    \ `isize` with `&isize`\n  --> /tmp/tmpi54b4a83.rs:10:28\n   |\n10 |         \
    \    if max_divisor < divisor {\n   |                            ^ no implementation\
    \ for `isize < &isize` and `isize > &isize`\n   |\n   = help: the trait `PartialOrd<&isize>`\
    \ is not implemented for `isize`\n   = help: the following other types implement\
    \ trait `PartialOrd<Rhs>`:\n             f32\n             f64\n             i128\n\
    \             i16\n             i32\n             i64\n             i8\n     \
    \        isize\n           and 6 others\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpi54b4a83.rs:12:37\n   |\n6  |     let mut max_divisor_index = 0;\n \
    \  |                                 - expected due to this value\n...\n12 | \
    \                max_divisor_index = divisor;\n   |                          \
    \           ^^^^^^^ expected integer, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n12 |                 max_divisor_index = *divisor;\n   | \
    \                                    +\n\nerror: aborting due to 3 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_size_size = 0;\n    let mut max_divisor_size_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_size = 0;\n    let\
    \ mut max_divisor_size_divisor_divisor_divisor_divisor = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor =\
    \ 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpadpr11rz.rs:31:102\n   |\n\
    31 |     let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_\n\
    \   |                                                                        \
    \                              ^ help: add `;` here\n32 | }\n   | - unexpected\
    \ token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpadpr11rz.rs:4:33\n  |\n\
    4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------          \
    \    ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in &[2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\
    \ {\n        if n % divisor == 0 {\n            if max_divisor < divisor {\n \
    \               max_divisor = divisor;\n                max_divisor_index = divisor\
    \ as usize;\n                max_divisor_value = n / divisor;\n            }\n\
    \        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp6ye17510.rs:10:30\n   |\n\
    10 |             if max_divisor < divisor {\n   |                            \
    \  ^^^^^^^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n10 |             if max_divisor < *divisor {\n   |       \
    \                       +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp6ye17510.rs:11:31\n\
    \   |\n5  |     let mut max_divisor = n;\n   |                           - expected\
    \ due to this value\n...\n11 |                 max_divisor = divisor;\n   |  \
    \                             ^^^^^^^ expected `isize`, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n11 |                 max_divisor\
    \ = *divisor;\n   |                               +\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp6ye17510.rs:17:5\n   |\n4  | fn largest_divisor(n: isize)\
    \ -> isize {\n   |                                 ----- expected `isize` because\
    \ of return type\n...\n17 |     max_divisor_index\n   |     ^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n17 |     max_divisor_index.try_into().unwrap()\n\
    \   |                      ++++++++++++++++++++\n\nerror[E0606]: casting `&isize`\
    \ as `usize` is invalid\n  --> /tmp/tmp6ye17510.rs:12:37\n   |\n12 |         \
    \        max_divisor_index = divisor as usize;\n   |                         \
    \            -------^^^^^^^^^\n   |                                     |\n  \
    \ |                                     cannot cast `&isize` as `usize`\n   |\
    \                                     help: dereference the expression: `*divisor`\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0606.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_index2 = 0;\n    let mut max_divisor_index3 = 0;\n  \
    \  let mut max_divisor_index4 = 0;\n    let mut max_divisor_index5 = 0;\n    let\
    \ mut max_divisor_index6 = 0;\n    let mut max_divisor_index7 = 0;\n    let mut\
    \ max_divisor_index8 = 0;\n    let mut max_divisor_index9 = 0;\n    let mut max_divisor_index10\
    \ = 0;\n    let mut max_divisor_index11 = 0;\n    let mut max_divisor_index12\
    \ = 0;\n    let mut max_divisor_index13 = 0;\n    let mut max_divisor_index14\
    \ = 0;\n    let mut max_divisor_index15 = 0;\n    let mut max_divisor_index16\
    \ = 0;\n    let mut max_divisor_index17 = 0;\n    let mut max_divisor_index18\
    \ = 0;\n    let mut max_divisor_index19 = 0;\n    let mut max_divisor_index20\
    \ = 0;\n    let mut max_divisor_index21 = 0;\n    let mut max_divisor_index22\
    \ = 0;\n    let mut max_divisor_index23 = 0;\n    let mut max_divisor_index24\
    \ = 0;\n    let mut max_divisor_index25 = 0;\n    let mut max_divisor_index26\
    \ = 0;\n    let mut max_divisor_index27 = 0;\n    let mut max_divisor_index28\
    \ = 0;\n    let mut max_divisor_index29 = 0;\n    let mut max_divisor_index30\
    \ = 0;\n    let mut max_divisor_index31 = 0;\n    let mut max_divisor_index32\
    \ = 0;\n    let mut max_divisor_index33 = 0;\n    let mut max_divisor_index34\
    \ = 0;\n    let mut max_divisor_index35 = 0;\n    let mut max_divisor_index36\
    \ = 0;\n    let mut max_divisor_index37 = 0;\n    let mut max_divisor_index38\
    \ = 0;\n    let mut max_divisor_index39 = 0;\n    let mut max_divisor_index40\
    \ = 0;\n    let mut max_divisor_index41 = 0;\n    let mut max_divisor_index42\
    \ = 0;\n    let mut max_divisor_index43 = 0;\n    let mut max_divisor_index44\
    \ = 0;\n    let mut max_divisor_index45 = 0;\n    let mut max_divisor_index46\
    \ = 0;\n    let mut max_divisor_index47 = 0;\n    let mut max_divisor_index48\
    \ = 0;\n    let mut max_divisor_index49 = 0;\n    let mut max_divisor_index50\
    \ = 0;\n    let mut max_divisor_index51 = 0;\n    let mut max_divisor_index52\
    \ = 0;\n    let mut max_divisor_index53 = 0;\n    let mut max_divisor_index54\
    \ = 0;\n    let mut max_divisor_index55 = 0;\n    let mut max_divisor_index56\
    \ = 0;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp6mzejcl6.rs:62:24\n   |\n\
    62 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    63 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp6mzejcl6.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n\n    for divisor in 1..=n {\n        if\
    \ n % divisor == 0 {\n            if divisor > max_divisor {\n               \
    \ max_divisor = divisor;\n                max_divisor_index = divisor;\n     \
    \       }\n        } else {\n            if divisor > max_divisor_value {\n  \
    \              max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n\n    max_divisor_index\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpdrcqzapo.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for d in divisors(n) {\n        if d > max_divisor {\n            max_divisor\
    \ = d;\n            max_divisor_size = 1;\n        }\n        if d > max_divisor_size\
    \ {\n            max_divisor_size = d;\n        }\n    }\n    max_divisor\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpku0yrmxd.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_size_size = 0;\n    let mut max_divisor_size_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_size = 0;\n    let\
    \ mut max_divisor_size_divisor_divisor_divisor_divisor = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor =\
    \ 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpfqzeuyf1.rs:32:118\n   |\n\
    32 |     let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_\n\
    \   |                                                                        \
    \                                              ^ help: add `;` here\n33 | }\n\
    \   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpfqzeuyf1.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_size = n;\n\
    \    let mut max_divisor_size = max_divisor_size / 2;\n    while max_divisor_size\
    \ != 0 {\n        if n % max_divisor_size == 0 {\n            max_divisor = max_divisor_size\
    \ * max_divisor;\n        }\n        max_divisor_size = max_divisor_size / 2;\n\
    \    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `5`', /tmp/tmpd4ieknsp.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in 1..=n {\n        if n\
    \ % divisor == 0 {\n            if divisor > max_divisor {\n                max_divisor\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      } else {\n            if divisor > max_divisor_value {\n              \
    \  max_divisor_value = divisor;\n                max_divisor_index = divisor;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpd2fuh56t.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpmjgyrooi.rs:56:24\n   |\n\
    56 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    57 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpmjgyrooi.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut divisor = 1;\n    while divisor\
    \ <= n {\n        if n % divisor == 0 {\n            largest = divisor;\n    \
    \    }\n        divisor += 1;\n    }\n    largest\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpea73je1f.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    let mut max_divisor_value_pow = 1;\n\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n                max_divisor_value = max_divisor_value_pow * divisor;\n\
    \            }\n        } else {\n            max_divisor_value_pow *= divisor;\n\
    \        }\n    }\n\n    max_divisor_value_pow\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp4d9catrt.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_remainder\
    \ = 0;\n    let mut max_divisor_remainder_n = 0;\n    let mut max_divisor_remainder_n2\
    \ = 0;\n    let mut max_divisor_remainder_n3 = 0;\n    let mut max_divisor_remainder_n4\
    \ = 0;\n    let mut max_divisor_remainder_n5 = 0;\n    let mut max_divisor_remainder_n6\
    \ = 0;\n    let mut max_divisor_remainder_n7 = 0;\n    let mut max_divisor_remainder_n8\
    \ = 0;\n    let mut max_divisor_remainder_n9 = 0;\n    let mut max_divisor_remainder_n10\
    \ = 0;\n    let mut max_divisor_remainder_n11 = 0;\n    let mut max_divisor_remainder_n12\
    \ = 0;\n    let mut max_divisor_remainder_n13 = 0;\n    let mut max_divisor_remainder_n14\
    \ = 0;\n    let mut max_divisor_remainder_n15 = 0;\n    let mut max_divisor_remainder_n16\
    \ = 0;\n    let mut max_divisor_remainder_n17 = 0;\n    let mut max_divisor_remainder_n18\
    \ = 0;\n    let mut max_divisor_remainder_n19 = 0;\n    let mut max_divisor_remainder_n20\
    \ = 0;\n    let mut max_divisor_remainder_n21 = 0;\n    let mut max_divisor_remainder_n22\
    \ = 0;\n    let mut max_divisor_remainder_n23 = 0;\n    let mut max_divisor_remainder_n24\
    \ = 0;\n    let mut max_divisor_remainder_n25 = 0;\n    let mut max_divisor_remainder_n26\
    \ = 0;\n    let mut max_divisor_remainder_n27 = 0;\n    let mut max_divisor_remainder_n28\
    \ = 0;\n    let mut max_divisor_remainder_n29 = 0;\n    let mut max_divisor_remainder_n30\
    \ = 0;\n    let mut max_divisor_remainder_n31 = 0;\n    let mut max_divisor_remainder_n32\
    \ = 0;\n    let mut max_divisor_remainder_n33 = 0;\n    let mut max_divisor_remainder_n34\
    \ = 0;\n    let mut max_divisor_remainder_n35 = 0;\n    let mut max_divisor_remainder_n36\
    \ = 0;\n    let mut max_divisor_remainder_n37 = 0;\n    let mut max_divisor_remainder_n38\
    \ = 0;\n    let mut max_divisor_remainder_n39 = 0;\n    let mut max_divisor_remainder_n40\
    \ = 0;\n    let mut max_divisor_remainder_n41 = 0;\n    let mut max_divisor_remainder_\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpv1q5m0ue.rs:48:35\n   |\n\
    48 |     let mut max_divisor_remainder_\n   |                                \
    \   ^ help: add `;` here\n49 | }\n   | - unexpected token\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpv1q5m0ue.rs:4:33\n  |\n4 | fn largest_divisor(n: isize)\
    \ -> isize {\n  |    ---------------              ^^^^^ expected `isize`, found\
    \ `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail or `return`\
    \ expression\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n    let mut max_divisor16 = 1;\n    let mut max_divisor17 = 1;\n    let\
    \ mut max_divisor18 = 1;\n    let mut max_divisor19 = 1;\n    let mut max_divisor20\
    \ = 1;\n    let mut max_divisor21 = 1;\n    let mut max_divisor22 = 1;\n    let\
    \ mut max_divisor23 = 1;\n    let mut max_divisor24 = 1;\n    let mut max_divisor25\
    \ = 1;\n    let mut max_divisor26 = 1;\n    let mut max_divisor27 = 1;\n    let\
    \ mut max_divisor28 = 1;\n    let mut max_divisor29 = 1;\n    let mut max_divisor30\
    \ = 1;\n    let mut max_divisor31 = 1;\n    let mut max_divisor32 = 1;\n    let\
    \ mut max_divisor33 = 1;\n    let mut max_divisor34 = 1;\n    let mut max_divisor35\
    \ = 1;\n    let mut max_divisor36 = 1;\n    let mut max_divisor37 = 1;\n    let\
    \ mut max_divisor38 = 1;\n    let mut max_divisor39 = 1;\n    let mut max_divisor40\
    \ = 1;\n    let mut max_divisor41 = 1;\n    let mut max_divisor42 = 1;\n    let\
    \ mut max_divisor43 = 1;\n    let mut max_divisor44 = 1;\n    let mut max_divisor45\
    \ = 1;\n    let mut max_divisor46 = 1;\n    let mut max_divisor47 = 1;\n    let\
    \ mut max_divisor48 = 1;\n    let mut max_divisor49 = 1;\n    let mut max_divisor50\
    \ = 1;\n    let mut max_divisor51 = 1;\n    let mut max_divisor52 = 1;\n    let\
    \ mut max_divisor53 = 1;\n    let mut max_divisor54 = 1;\n    let mut max_divisor55\
    \ = 1;\n    let mut max_divisor56 = 1;\n    let mut max_divisor57 = 1;\n    let\
    \ mut max_divisor58 = 1;\n    let mut max_divisor59 = 1;\n    let mut max_divisor60\
    \ = 1;\n    let mut max_divisor61 = 1;\n    let mut max_divisor62 = 1;\n    let\
    \ mut max_divisor63 = 1;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4wykmy0m.rs:68:24\n   |\n\
    68 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4wykmy0m.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_size_size = 0;\n    for d in divisors(n) {\n        if\
    \ n % d == 0 {\n            let mut divisor_size = d.checked_mul(n as isize).unwrap();\n\
    \            if divisor_size > max_divisor_size {\n                max_divisor\
    \ = d;\n                max_divisor_size = divisor_size;\n                max_divisor_size_size\
    \ = max_divisor_size.checked_mul(n as isize).unwrap();\n            }\n      \
    \  }\n    }\n    max_divisor_size\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmp5rvlzrww.rs:8:14\n\
    \  |\n8 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror[E0689]: can't call method `checked_mul` on ambiguous numeric\
    \ type `{integer}`\n  --> /tmp/tmp5rvlzrww.rs:14:58\n   |\n14 |              \
    \   max_divisor_size_size = max_divisor_size.checked_mul(n as isize).unwrap();\n\
    \   |                                                          ^^^^^^^^^^^\n \
    \  |\nhelp: you must specify a type for this binding, like `i32`\n   |\n6  | \
    \    let mut max_divisor_size: i32 = 0;\n   |         ~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \nerror: aborting due to 2 previous errors\n\nSome errors have detailed explanations:\
    \ E0425, E0689.\nFor more information about an error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n    let mut max_divisor16 = 1;\n    let mut max_divisor17 = 1;\n    let\
    \ mut max_divisor18 = 1;\n    let mut max_divisor19 = 1;\n    let mut max_divisor20\
    \ = 1;\n    let mut max_divisor21 = 1;\n    let mut max_divisor22 = 1;\n    let\
    \ mut max_divisor23 = 1;\n    let mut max_divisor24 = 1;\n    let mut max_divisor25\
    \ = 1;\n    let mut max_divisor26 = 1;\n    let mut max_divisor27 = 1;\n    let\
    \ mut max_divisor28 = 1;\n    let mut max_divisor29 = 1;\n    let mut max_divisor30\
    \ = 1;\n    let mut max_divisor31 = 1;\n    let mut max_divisor32 = 1;\n    let\
    \ mut max_divisor33 = 1;\n    let mut max_divisor34 = 1;\n    let mut max_divisor35\
    \ = 1;\n    let mut max_divisor36 = 1;\n    let mut max_divisor37 = 1;\n    let\
    \ mut max_divisor38 = 1;\n    let mut max_divisor39 = 1;\n    let mut max_divisor40\
    \ = 1;\n    let mut max_divisor41 = 1;\n    let mut max_divisor42 = 1;\n    let\
    \ mut max_divisor43 = 1;\n    let mut max_divisor44 = 1;\n    let mut max_divisor45\
    \ = 1;\n    let mut max_divisor46 = 1;\n    let mut max_divisor47 = 1;\n    let\
    \ mut max_divisor48 = 1;\n    let mut max_divisor49 = 1;\n    let mut max_divisor50\
    \ = 1;\n    let mut max_divisor51 = 1;\n    let mut max_divisor52 = 1;\n    let\
    \ mut max_divisor53 = 1;\n    let mut max_divisor54 = 1;\n    let mut max_divisor55\
    \ = 1;\n    let mut max_divisor56 = 1;\n    let mut max_divisor57 = 1;\n    let\
    \ mut max_divisor58 = 1;\n    let mut max_divisor59 = 1;\n    let mut max_divisor60\
    \ = 1;\n    let mut max_divisor61 = 1;\n    let mut max_divisor62 = 1;\n    let\
    \ mut max_divisor63 = 1;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4wykmy0m.rs:68:24\n   |\n\
    68 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4wykmy0m.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in 1..=n {\n        if n\
    \ % divisor == 0 {\n            if divisor > max_divisor {\n                max_divisor\
    \ = divisor;\n                max_divisor_index = divisor;\n                max_divisor_value\
    \ = n;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpmxt1rsdr.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for i in 1..=n {\n        if n % i ==\
    \ 0 {\n            if max_divisor < i {\n                max_divisor = i;\n  \
    \              max_divisor_index = i;\n            }\n        }\n    }\n    max_divisor_value\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2ifym2qo.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for d in divisors(n) {\n        if n % d == 0 {\n            if d\
    \ > max_divisor {\n                max_divisor = d;\n                max_divisor_remainder\
    \ = n % d;\n            }\n        }\n    }\n    if max_divisor_remainder == 0\
    \ {\n        max_divisor\n    } else {\n        max_divisor + 1\n    }\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpyd5xwb7m.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisors = Vec::new();\n\
    \    let mut max_divisors_idx = 1;\n    let mut max_divisors_idxs = Vec::new();\n\
    \    let mut max_divisors_idxs_idx = 1;\n    let mut max_divisors_idxs_idxs =\
    \ Vec::new();\n    let mut max_divisors_idxs_idxs_idx = 1;\n    let mut max_divisors_idxs_idxs_idxs\
    \ = Vec::new();\n    let mut max_divisors_idxs_idxs_idxs_idx = 1;\n    let mut\
    \ max_divisors_idxs_idxs_idxs_idxs = Vec::new();\n    let mut max_divisors_idxs_idxs_idxs_idxs_idx\
    \ = 1;\n    let mut max_divisors_idxs_idxs_idxs_idxs_idxs = Vec::new();\n    let\
    \ mut max_divisors_idxs_idxs_idxs_idxs_idxs_idx = 1;\n    let mut max_divisors_idxs_idxs_idxs_idxs_idxs_idxs\
    \ = Vec::new();\n    let mut max_divisors_idxs_idxs_idxs_idxs_idxs_idxs_idx =\
    \ 1;\n    let mut max_divisors_idxs_idxs_idxs_idxs_idxs_idxs_idxs = Vec::new();\n\
    \    let mut max_divisors_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idx = 1;\n    let\
    \ mut max_divisors_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs = Vec::new();\n   \
    \ let mut max_divisors_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idx = 1;\n    let\
    \ mut max_divisors_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs = Vec::new();\n\
    \    let mut max_divisors_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idx = 1;\n\
    \    let mut max_divisors_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs =\
    \ Vec::new();\n    let mut max_divisors_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idx\
    \ = 1;\n    let mut max_divisors_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs\
    \ = Vec::new();\n    let mut max_divisors_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idxs_idx\
    \ = 1;\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpq9ham2u6.rs:4:33\n  |\n4 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |    ---------------            \
    \  ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count2\
    \ = 0;\n    let mut max_divisor_remainder_count3 = 0;\n    let mut max_divisor_remainder_count4\
    \ = 0;\n    let mut max_divisor_remainder_count5 = 0;\n    let mut max_divisor_remainder_count6\
    \ = 0;\n    let mut max_divisor_remainder_count7 = 0;\n    let mut max_divisor_remainder_count8\
    \ = 0;\n    let mut max_divisor_remainder_count9 = 0;\n    let mut max_divisor_remainder_count10\
    \ = 0;\n    let mut max_divisor_remainder_count11 = 0;\n    let mut max_divisor_remainder_count12\
    \ = 0;\n    let mut max_divisor_remainder_count13 = 0;\n    let mut max_divisor_remainder_count14\
    \ = 0;\n    let mut max_divisor_remainder_count15 = 0;\n    let mut max_divisor_remainder_count16\
    \ = 0;\n    let mut max_divisor_remainder_count17 = 0;\n    let mut max_divisor_remainder_count18\
    \ = 0;\n    let mut max_divisor_remainder_count19 = 0;\n    let mut max_divisor_remainder_count20\
    \ = 0;\n    let mut max_divisor_remainder_count21 = 0;\n    let mut max_divisor_remainder_count22\
    \ = 0;\n    let mut max_divisor_remainder_count23 = 0;\n    let mut max_divisor_remainder_count24\
    \ = 0;\n    let mut max_divisor_remainder_count25 = 0;\n    let mut max_divisor_remainder_count26\
    \ = 0;\n    let mut max_divisor_remainder_count27 = 0;\n    let mut max_divisor_remainder_count28\
    \ = 0;\n    let mut max_divisor_remainder_count29 = 0;\n    let mut max_divisor_remainder_count30\
    \ = 0;\n    let mut max_divisor_remainder_count31 = 0;\n    let mut max_divisor_remainder_count32\
    \ = 0;\n    let mut max_divisor_remainder_count33 = 0;\n    let mut max_divisor_remainder_count34\
    \ = 0;\n    let mut max_divisor_remainder_count35 = 0;\n    let mut max_divisor_remainder_count36\
    \ = 0;\n    let mut max_divisor_remainder_count37 = 0;\n    let mut max_divisor_remainder_count38\
    \ = 0;\n    let mut max_divisor_remainder_count39 = 0;\n    let mut max_divisor_remainder_count40\
    \ = 0;\n    let mut max_divisor_remainder_count41 = 0;\n    let mut max_divisor_remainder_count\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmptko5uy7g.rs:48:40\n   |\n\
    48 |     let mut max_divisor_remainder_count\n   |                           \
    \             ^ help: add `;` here\n49 | }\n   | - unexpected token\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmptko5uy7g.rs:4:33\n  |\n4 | fn largest_divisor(n:\
    \ isize) -> isize {\n  |    ---------------              ^^^^^ expected `isize`,\
    \ found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for d in divisors(n) {\n        if d > max_divisor {\n            max_divisor\
    \ = d;\n            max_divisor_size = 1;\n        }\n        if d > max_divisor_size\
    \ {\n            max_divisor_size = d;\n        }\n    }\n    max_divisor\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpku0yrmxd.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \    let mut max_divisor_value = n;\n\n    for divisor in 1..=n {\n        if\
    \ n % divisor == 0 {\n            if divisor > max_divisor {\n               \
    \ max_divisor = divisor;\n                max_divisor_size = max_divisor_value\
    \ - divisor;\n            }\n        }\n    }\n\n    max_divisor\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpbh73eqxs.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_ind = 1;\n\
    \    while max_divisor % 2 == 0 {\n        max_divisor /= 2;\n        max_divisor_ind++;\n\
    \    }\n    max_divisor_ind\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: Rust has no postfix increment operator\n --> /tmp/tmpei2av6fw.rs:9:24\n\
    \  |\n9 |         max_divisor_ind++;\n  |                        ^^ not a valid\
    \ postfix operator\n  |\nhelp: use `+= 1` instead\n  |\n9 |         { let tmp\
    \ = max_divisor_ind; max_divisor_ind += 1; tmp };\n  |         +++++++++++   \
    \             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n9 -         max_divisor_ind++;\n\
    9 +         max_divisor_ind += 1;\n  | \n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_size = n;\n\
    \    while max_divisor_size != 0 {\n        max_divisor_size /= 2;\n        max_divisor\
    \ *= 2;\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `4`,\n right: `1`', /tmp/tmp6bucxadc.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_size_size = 0;\n    let mut max_divisor_size_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_size = 0;\n    let\
    \ mut max_divisor_size_divisor_divisor_divisor_divisor = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor =\
    \ 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp8b1wlfry.rs:31:118\n   |\n\
    31 |     let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_\n\
    \   |                                                                        \
    \                                              ^ help: add `;` here\n32 | }\n\
    \   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp8b1wlfry.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_ind = -1;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_ind = i;\n\
    \            }\n        }\n    }\n    max_divisor_ind\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp_f3vq5up.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n    let mut max_divisor16 = 1;\n    let mut max_divisor17 = 1;\n    let\
    \ mut max_divisor18 = 1;\n    let mut max_divisor19 = 1;\n    let mut max_divisor20\
    \ = 1;\n    let mut max_divisor21 = 1;\n    let mut max_divisor22 = 1;\n    let\
    \ mut max_divisor23 = 1;\n    let mut max_divisor24 = 1;\n    let mut max_divisor25\
    \ = 1;\n    let mut max_divisor26 = 1;\n    let mut max_divisor27 = 1;\n    let\
    \ mut max_divisor28 = 1;\n    let mut max_divisor29 = 1;\n    let mut max_divisor30\
    \ = 1;\n    let mut max_divisor31 = 1;\n    let mut max_divisor32 = 1;\n    let\
    \ mut max_divisor33 = 1;\n    let mut max_divisor34 = 1;\n    let mut max_divisor35\
    \ = 1;\n    let mut max_divisor36 = 1;\n    let mut max_divisor37 = 1;\n    let\
    \ mut max_divisor38 = 1;\n    let mut max_divisor39 = 1;\n    let mut max_divisor40\
    \ = 1;\n    let mut max_divisor41 = 1;\n    let mut max_divisor42 = 1;\n    let\
    \ mut max_divisor43 = 1;\n    let mut max_divisor44 = 1;\n    let mut max_divisor45\
    \ = 1;\n    let mut max_divisor46 = 1;\n    let mut max_divisor47 = 1;\n    let\
    \ mut max_divisor48 = 1;\n    let mut max_divisor49 = 1;\n    let mut max_divisor50\
    \ = 1;\n    let mut max_divisor51 = 1;\n    let mut max_divisor52 = 1;\n    let\
    \ mut max_divisor53 = 1;\n    let mut max_divisor54 = 1;\n    let mut max_divisor55\
    \ = 1;\n    let mut max_divisor56 = 1;\n    let mut max_divisor57 = 1;\n    let\
    \ mut max_divisor58 = 1;\n    let mut max_divisor59 = 1;\n    let mut max_divisor60\
    \ = 1;\n    let mut max_divisor61 = 1;\n    let mut max_divisor62 = 1;\n    let\
    \ mut max_divisor63 = 1;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4wykmy0m.rs:68:24\n   |\n\
    68 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4wykmy0m.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_size_size = 0;\n    let mut max_divisor_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size = 0;\n    let mut\
    \ max_divisor_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size = 0;\n    let\
    \ mut max_divisor_size_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size = 0;\n    let\
    \ mut max_divisor_size_size_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size =\
    \ 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n \
    \   let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n  \
    \  let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n   \
    \ let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut \n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmp7egr4eb7.rs:40:1\n\
    \   |\n40 | }\n   | ^ expected identifier\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_ind = 1;\n\
    \    let mut max_divisor_ind_2 = 1;\n    let mut max_divisor_ind_3 = 1;\n    let\
    \ mut max_divisor_ind_4 = 1;\n    let mut max_divisor_ind_5 = 1;\n    let mut\
    \ max_divisor_ind_6 = 1;\n    let mut max_divisor_ind_7 = 1;\n    let mut max_divisor_ind_8\
    \ = 1;\n    let mut max_divisor_ind_9 = 1;\n    let mut max_divisor_ind_10 = 1;\n\
    \    let mut max_divisor_ind_11 = 1;\n    let mut max_divisor_ind_12 = 1;\n  \
    \  let mut max_divisor_ind_13 = 1;\n    let mut max_divisor_ind_14 = 1;\n    let\
    \ mut max_divisor_ind_15 = 1;\n\n    for i in 1..n {\n        if n % i == 0 {\n\
    \            if max_divisor < i {\n                max_divisor = i;\n        \
    \        max_divisor_ind = i;\n            }\n            if max_divisor_ind !=\
    \ i {\n                max_divisor_ind_2 = i;\n            }\n            if max_divisor_ind_2\
    \ != i {\n                max_divisor_ind_3 = i;\n            }\n            if\
    \ max_divisor_ind_3 != i {\n                max_divisor_ind_4 = i;\n         \
    \   }\n            if max_divisor_ind_4 != i {\n                max_divisor_ind_5\
    \ = i;\n            }\n            if max_divisor_ind_5 != i {\n             \
    \   max_divisor_ind_6 = i;\n            }\n            if max_divisor_ind_6 !=\
    \ i {\n                max_divisor_ind_7 = i;\n            }\n            if max_divisor_ind_7\
    \ != i {\n                max_divisor_ind_8 = i;\n            }\n            if\
    \ max_divisor_ind_8 != i {\n                max_divisor_ind_9 = i;\n         \
    \   }\n            if max_divisor_ind_9 != i {\n                max_divisor_ind_10\
    \ = i;\n            }\n            if max_divisor_ind_10 != i {\n            \
    \    max_divisor_ind_11 = i;\n            }\n            if max_divisor_ind_11\
    \ != i {\n                max_divisor_ind_12 = i;\n            }\n           \
    \ if max_divisor_ind_12 != i {\n                max_divisor_ind_13 = i;\n    \
    \        }\n            if max_divisor_ind_13 != i {\n                max_divisor_ind_14\
    \ = i;\n            }\n            if max_divisor_ind_14 != i {\n            \
    \    max_divisor_ind_15 = i;\n            }\n        }\n    }\n\n    max_divisor_ind_15\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in 1..=n {\n        if n\
    \ % divisor == 0 {\n            if divisor > max_divisor {\n                max_divisor\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      }\n    }\n    max_divisor_value\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpq80mk3_4.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_indexes: Vec<usize> = vec![max_divisor_index];\n\n  \
    \  for divisor in 1..=max_divisor {\n        if n % divisor == 0 {\n         \
    \   max_divisor = divisor;\n            max_divisor_index = divisor;\n       \
    \ }\n    }\n\n    max_divisor_indexes.push(max_divisor_index);\n\n    for divisor\
    \ in max_divisor_indexes.iter().rev() {\n        if divisor > max_divisor {\n\
    \            max_divisor = divisor;\n            max_divisor_index = divisor;\n\
    \        }\n    }\n\n    max_divisor_index\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp66aned4r.rs:12:33\n   |\n\
    6  |     let mut max_divisor_index = 0;\n   |                                \
    \ - expected due to this value\n...\n12 |             max_divisor_index = divisor;\n\
    \   |                                 ^^^^^^^ expected `usize`, found `isize`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmp66aned4r.rs:19:22\n   |\n19 |\
    \         if divisor > max_divisor {\n   |                      ^^^^^^^^^^^ expected\
    \ `&usize`, found `isize`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp66aned4r.rs:20:27\n\
    \   |\n5  |     let mut max_divisor = n;\n   |                           - expected\
    \ due to this value\n...\n20 |             max_divisor = divisor;\n   |      \
    \                     ^^^^^^^ expected `isize`, found `&usize`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp66aned4r.rs:21:33\n   |\n6  |     let mut max_divisor_index\
    \ = 0;\n   |                                 - expected due to this value\n...\n\
    21 |             max_divisor_index = divisor;\n   |                          \
    \       ^^^^^^^ expected `usize`, found `&usize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n21 |             max_divisor_index = *divisor;\n   |     \
    \                            +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp66aned4r.rs:25:5\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    \
    \             ----- expected `isize` because of return type\n...\n25 |     max_divisor_index\n\
    \   |     ^^^^^^^^^^^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can\
    \ convert a `usize` to an `isize` and panic if the converted value doesn't fit\n\
    \   |\n25 |     max_divisor_index.try_into().unwrap()\n   |                  \
    \    ++++++++++++++++++++\n\nerror: aborting due to 5 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut divisor = 1;\n    while divisor\
    \ < n {\n        if n % divisor == 0 {\n            largest = divisor;\n     \
    \   }\n        divisor += 1;\n    }\n    largest\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n    let mut max_divisor16 = 1;\n    let mut max_divisor17 = 1;\n    let\
    \ mut max_divisor18 = 1;\n    let mut max_divisor19 = 1;\n    let mut max_divisor20\
    \ = 1;\n    let mut max_divisor21 = 1;\n    let mut max_divisor22 = 1;\n    let\
    \ mut max_divisor23 = 1;\n    let mut max_divisor24 = 1;\n    let mut max_divisor25\
    \ = 1;\n    let mut max_divisor26 = 1;\n    let mut max_divisor27 = 1;\n    let\
    \ mut max_divisor28 = 1;\n    let mut max_divisor29 = 1;\n    let mut max_divisor30\
    \ = 1;\n    let mut max_divisor31 = 1;\n    let mut max_divisor32 = 1;\n    let\
    \ mut max_divisor33 = 1;\n    let mut max_divisor34 = 1;\n    let mut max_divisor35\
    \ = 1;\n    let mut max_divisor36 = 1;\n    let mut max_divisor37 = 1;\n    let\
    \ mut max_divisor38 = 1;\n    let mut max_divisor39 = 1;\n    let mut max_divisor40\
    \ = 1;\n    let mut max_divisor41 = 1;\n    let mut max_divisor42 = 1;\n    let\
    \ mut max_divisor43 = 1;\n    let mut max_divisor44 = 1;\n    let mut max_divisor45\
    \ = 1;\n    let mut max_divisor46 = 1;\n    let mut max_divisor47 = 1;\n    let\
    \ mut max_divisor48 = 1;\n    let mut max_divisor49 = 1;\n    let mut max_divisor50\
    \ = 1;\n    let mut max_divisor51 = 1;\n    let mut max_divisor52 = 1;\n    let\
    \ mut max_divisor53 = 1;\n    let mut max_divisor54 = 1;\n    let mut max_divisor55\
    \ = 1;\n    let mut max_divisor56 = 1;\n    let mut max_divisor57 = 1;\n    let\
    \ mut max_divisor58 = 1;\n    let mut max_divisor59 = 1;\n    let mut max_divisor60\
    \ = 1;\n    let mut max_divisor61 = 1;\n    let mut max_divisor62 = 1;\n    let\
    \ mut max_divisor63 = 1;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4wykmy0m.rs:68:24\n   |\n\
    68 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4wykmy0m.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for divisor in 1..=n {\n        if n % divisor == 0 {\n          \
    \  if max_divisor_remainder > divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_remainder = max_divisor_remainder - divisor;\n  \
    \          }\n        } else {\n            max_divisor_remainder += divisor;\n\
    \        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmphwhc4i9a.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n    let mut max_divisor16 = 1;\n    let mut max_divisor17 = 1;\n    let\
    \ mut max_divisor18 = 1;\n    let mut max_divisor19 = 1;\n    let mut max_divisor20\
    \ = 1;\n    let mut max_divisor21 = 1;\n    let mut max_divisor22 = 1;\n    let\
    \ mut max_divisor23 = 1;\n    let mut max_divisor24 = 1;\n    let mut max_divisor25\
    \ = 1;\n    let mut max_divisor26 = 1;\n    let mut max_divisor27 = 1;\n    let\
    \ mut max_divisor28 = 1;\n    let mut max_divisor29 = 1;\n    let mut max_divisor30\
    \ = 1;\n    let mut max_divisor31 = 1;\n    let mut max_divisor32 = 1;\n    let\
    \ mut max_divisor33 = 1;\n    let mut max_divisor34 = 1;\n    let mut max_divisor35\
    \ = 1;\n    let mut max_divisor36 = 1;\n    let mut max_divisor37 = 1;\n    let\
    \ mut max_divisor38 = 1;\n    let mut max_divisor39 = 1;\n    let mut max_divisor40\
    \ = 1;\n    let mut max_divisor41 = 1;\n    let mut max_divisor42 = 1;\n    let\
    \ mut max_divisor43 = 1;\n    let mut max_divisor44 = 1;\n    let mut max_divisor45\
    \ = 1;\n    let mut max_divisor46 = 1;\n    let mut max_divisor47 = 1;\n    let\
    \ mut max_divisor48 = 1;\n    let mut max_divisor49 = 1;\n    let mut max_divisor50\
    \ = 1;\n    let mut max_divisor51 = 1;\n    let mut max_divisor52 = 1;\n    let\
    \ mut max_divisor53 = 1;\n    let mut max_divisor54 = 1;\n    let mut max_divisor55\
    \ = 1;\n    let mut max_divisor56 = 1;\n    let mut max_divisor57 = 1;\n    let\
    \ mut max_divisor58 = 1;\n    let mut max_divisor59 = 1;\n    let mut max_divisor60\
    \ = 1;\n    let mut max_divisor61 = 1;\n    let mut max_divisor62 = 1;\n    let\
    \ mut max_divisor63 = 1;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4wykmy0m.rs:68:24\n   |\n\
    68 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4wykmy0m.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n\n    for i in 1..n {\n        if n % i == 0 {\n            if i % 2 ==\
    \ 0 {\n                max_divisor2 = i;\n            }\n            if i % 3\
    \ == 0 {\n                max_divisor3 = i;\n            }\n            if i %\
    \ 4 == 0 {\n                max_divisor4 = i;\n            }\n            if i\
    \ % 5 == 0 {\n                max_divisor5 = i;\n            }\n            if\
    \ i % 6 == 0 {\n                max_divisor6 = i;\n            }\n           \
    \ if i % 7 == 0 {\n                max_divisor7 = i;\n            }\n        \
    \    if i % 8 == 0 {\n                max_divisor8 = i;\n            }\n     \
    \       if i % 9 == 0 {\n                max_divisor9 = i;\n            }\n  \
    \          if i % 10 == 0 {\n                max_divisor10 = i;\n            }\n\
    \            if i % 11 == 0 {\n                max_divisor11 = i;\n          \
    \  }\n            if i % 12 == 0 {\n                max_divisor12 = i;\n     \
    \       }\n            if i % 13 == 0 {\n                max_divisor13 = i;\n\
    \            }\n            if i % 14 == 0 {\n                max_divisor14 =\
    \ i;\n            }\n            if i % 15 == 0 {\n                max_divisor15\
    \ = i;\n            }\n        }\n    }\n\n    if max_divisor2 > max_divisor {\n\
    \        max_divisor = max_divisor2;\n    }\n    if max_divisor3 > max_divisor\
    \ {\n        max_divisor = max_divisor3;\n    }\n    if max_divisor4 > max_divisor\
    \ {\n        max_divisor = max_divisor4;\n    }\n    if max_divisor5 > max_divisor\
    \ {\n        max_divisor = max_divisor5;\n    }\n    if max_divisor6 > max_divisor\
    \ {\n        max_divisor = max_divisor6;\n    }\n    if max_divisor7 > max_divisor\
    \ {\n        max_divisor = max_divisor7;\n    }\n    if max_divisor8 > max_divisor\
    \ {\n        max_divisor = max_divisor8;\n    }\n    if max_divisor9 > max_divisor\
    \ {\n        max_divisor = max_divisor9;\n    }\n    if max_divisor10 > max_divisor\
    \ {\n        max_divisor = max_divisor10;\n    }\n    if max_divisor11 > max_divisor\
    \ {\n        max_divisor = max_divisor11;\n    }\n    if max_divisor12 > max_\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `{`, found `}`\n  --> /tmp/tmpp39kb89u.rs:99:1\n   |\n\
    98 |     if max_divisor12 > max_\n   |     -- this `if` expression has a condition,\
    \ but no block\n99 | }\n   | ^ expected `{`\n\nerror: aborting due to previous\
    \ error\n\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_remainder\
    \ = 0;\n    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor_remainder\
    \ == 0 {\n                max_divisor = i;\n                max_divisor_remainder\
    \ = n % i;\n            } else {\n                if max_divisor_remainder > max_divisor\
    \ {\n                    max_divisor = max_divisor_remainder;\n              \
    \      max_divisor_remainder = n % max_divisor;\n                }\n         \
    \   }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpvruri8mz.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = n;\n    let mut max_divisor_ind = 1;\n\
    \n    for divisor in 1..=max_divisor {\n        if n % divisor == 0 {\n      \
    \      max_divisor = divisor;\n            max_divisor_ind = 1;\n        }\n \
    \       else {\n            max_divisor_ind += 1;\n        }\n    }\n\n    max_divisor_ind\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpbjb07gr9.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for d in divisors(n) {\n        if n % d == 0 {\n            if max_divisor_size\
    \ == 0 {\n                max_divisor = d;\n                max_divisor_size =\
    \ 1;\n            } else {\n                if d > max_divisor {\n           \
    \         max_divisor = d;\n                    max_divisor_size = 1;\n      \
    \          } else {\n                    max_divisor_size += 1;\n            \
    \    }\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmponqf91_t.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_index = i;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2kgmjmta.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = 0;\n    let mut max_divisor_value_found = false;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if max_divisor\
    \ < divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n                max_divisor_value = divisor;\n                max_divisor_value_found\
    \ = true;\n            }\n        } else {\n            if max_divisor_value_found\
    \ {\n                if max_divisor < divisor {\n                    max_divisor\
    \ = divisor;\n                    max_divisor_index = divisor;\n             \
    \       max_divisor_value = divisor;\n                }\n            } else {\n\
    \                max_divisor = divisor;\n                max_divisor_index = divisor;\n\
    \                max_divisor_value = divisor;\n                max_divisor_value_found\
    \ = true;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpofwwz0xx.rs:37:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = n;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmptv0zzq6t.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = 1;\n            } else if divisor == max_divisor {\n                max_divisor_index\
    \ += 1;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpo0m0lxnp.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let \n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpsq53cqpz.rs:53:1\n  \
    \ |\n53 | }\n   | ^ expected pattern\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in 1..=n {\n        if n\
    \ % divisor == 0 {\n            if divisor > max_divisor {\n                max_divisor\
    \ = divisor;\n                max_divisor_index = divisor;\n                max_divisor_value\
    \ = n;\n            }\n        } else {\n            if divisor > max_divisor_value\
    \ {\n                max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp_ij7gdq8.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_value = 0;\n    let mut max_divisor_value_divisor = 0;\n\
    \    let mut max_divisor_value_divisor_size = 0;\n    let mut max_divisor_value_divisor_value\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\
    \ = 0;\n    let mut max_divisor_value_divisor_value_size = 0;\n    let mut max_divisor_value_divisor_value_size\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpqws06_7m.rs:52:49\n   |\n\
    52 |     let mut max_divisor_value_divisor_value_size\n   |                  \
    \                               ^ help: add `;` here\n53 | }\n   | - unexpected\
    \ token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpqws06_7m.rs:4:33\n  |\n\
    4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------          \
    \    ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_size = n;\n\
    \    while max_divisor_size != 0 {\n        if n % max_divisor == 0 {\n      \
    \      max_divisor += 1;\n        }\n        max_divisor_size = max_divisor_size\
    \ / 2;\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpnb5oknso.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor2 = 1;\n  \
    \  let mut max_divisor3 = 1;\n    let mut max_divisor4 = 1;\n    let mut max_divisor5\
    \ = 1;\n    let mut max_divisor6 = 1;\n    let mut max_divisor7 = 1;\n    let\
    \ mut max_divisor8 = 1;\n    let mut max_divisor9 = 1;\n    let mut max_divisor10\
    \ = 1;\n    let mut max_divisor11 = 1;\n    let mut max_divisor12 = 1;\n    let\
    \ mut max_divisor13 = 1;\n    let mut max_divisor14 = 1;\n    let mut max_divisor15\
    \ = 1;\n    let mut max_divisor16 = 1;\n    let mut max_divisor17 = 1;\n    let\
    \ mut max_divisor18 = 1;\n    let mut max_divisor19 = 1;\n    let mut max_divisor20\
    \ = 1;\n    let mut max_divisor21 = 1;\n    let mut max_divisor22 = 1;\n    let\
    \ mut max_divisor23 = 1;\n    let mut max_divisor24 = 1;\n    let mut max_divisor25\
    \ = 1;\n    let mut max_divisor26 = 1;\n    let mut max_divisor27 = 1;\n    let\
    \ mut max_divisor28 = 1;\n    let mut max_divisor29 = 1;\n    let mut max_divisor30\
    \ = 1;\n    let mut max_divisor31 = 1;\n    let mut max_divisor32 = 1;\n    let\
    \ mut max_divisor33 = 1;\n    let mut max_divisor34 = 1;\n    let mut max_divisor35\
    \ = 1;\n    let mut max_divisor36 = 1;\n    let mut max_divisor37 = 1;\n    let\
    \ mut max_divisor38 = 1;\n    let mut max_divisor39 = 1;\n    let mut max_divisor40\
    \ = 1;\n    let mut max_divisor41 = 1;\n    let mut max_divisor42 = 1;\n    let\
    \ mut max_divisor43 = 1;\n    let mut max_divisor44 = 1;\n    let mut max_divisor45\
    \ = 1;\n    let mut max_divisor46 = 1;\n    let mut max_divisor47 = 1;\n    let\
    \ mut max_divisor48 = 1;\n    let mut max_divisor49 = 1;\n    let mut max_divisor50\
    \ = 1;\n    let mut max_divisor51 = 1;\n    let mut max_divisor52 = 1;\n    let\
    \ mut max_divisor53 = 1;\n    let mut max_divisor54 = 1;\n    let mut max_divisor55\
    \ = 1;\n    let mut max_divisor56 = 1;\n    let mut max_divisor57 = 1;\n    let\
    \ mut max_divisor58 = 1;\n    let mut max_divisor59 = 1;\n    let mut max_divisor60\
    \ = 1;\n    let mut max_divisor61 = 1;\n    let mut max_divisor62 = 1;\n    let\
    \ mut max_divisor63 = 1;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp4wykmy0m.rs:68:24\n   |\n\
    68 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp4wykmy0m.rs:4:33\n\
    \  |\n4 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = n;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmptv0zzq6t.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut largest = n;\n    let mut i = 1;\n    while i <= n {\n\
    \        if n % i == 0 {\n            largest = i;\n        }\n        i += 1;\n\
    \    }\n    largest\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmplzrjbip8.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008824
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 1;\n    let mut max_divisor_ind = 1;\n\
    \    let mut max_divisor_ind_2 = 1;\n    let mut max_divisor_ind_3 = 1;\n    let\
    \ mut max_divisor_ind_4 = 1;\n    let mut max_divisor_ind_5 = 1;\n    let mut\
    \ max_divisor_ind_6 = 1;\n    let mut max_divisor_ind_7 = 1;\n    let mut max_divisor_ind_8\
    \ = 1;\n    let mut max_divisor_ind_9 = 1;\n    let mut max_divisor_ind_10 = 1;\n\
    \    let mut max_divisor_ind_11 = 1;\n    let mut max_divisor_ind_12 = 1;\n  \
    \  let mut max_divisor_ind_13 = 1;\n    let mut max_divisor_ind_14 = 1;\n    let\
    \ mut max_divisor_ind_15 = 1;\n\n    for i in 1..n {\n        if n % i == 0 {\n\
    \            if max_divisor < i {\n                max_divisor = i;\n        \
    \        max_divisor_ind = i;\n                max_divisor_ind_2 = i;\n      \
    \          max_divisor_ind_3 = i;\n                max_divisor_ind_4 = i;\n  \
    \              max_divisor_ind_5 = i;\n                max_divisor_ind_6 = i;\n\
    \                max_divisor_ind_7 = i;\n                max_divisor_ind_8 = i;\n\
    \                max_divisor_ind_9 = i;\n                max_divisor_ind_10 =\
    \ i;\n                max_divisor_ind_11 = i;\n                max_divisor_ind_12\
    \ = i;\n                max_divisor_ind_13 = i;\n                max_divisor_ind_14\
    \ = i;\n                max_divisor_ind_15 = i;\n            }\n            if\
    \ max_divisor_ind != i {\n                max_divisor_ind = i;\n             \
    \   max_divisor_ind_2 = i;\n                max_divisor_ind_3 = i;\n         \
    \       max_divisor_ind_4 = i;\n                max_divisor_ind_5 = i;\n     \
    \           max_divisor_ind_6 = i;\n                max_divisor_ind_7 = i;\n \
    \               max_divisor_ind_8 = i;\n                max_divisor_ind_9 = i;\n\
    \                max_divisor_ind_10 = i;\n                max_divisor_ind_11 =\
    \ i;\n                max_divisor_ind_12 = i;\n                max_divisor_ind_13\
    \ = i;\n                max_divisor_ind_14 = i;\n                max_divisor_ind_15\
    \ = i;\n            }\n            if max_divisor_ind_2 != i {\n             \
    \   max_divisor_ind_2 = i;\n                max_divisor_ind_3 = i;\n         \
    \       max_divisor_ind_4 = i;\n                max_divisor_ind_5 = i;\n     \
    \           max_divisor_ind_6 = i;\n                max_divisor_ind_7 = i;\n \
    \               max_divisor_ind_8 = i;\n                max_divisor_ind_9 = i;\n\
    \                max_divisor_ind_10 = i;\n                max_divisor_ind_11 =\
    \ i;\n                max_divisor_ind_12 = i;\n                max_divisor_ind_13\
    \ = i;\n                max_divisor_ind_14 = i;\n                max_divisor_in\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpwdsoki72.rs:83:3\n\
    \   |\n4  | fn largest_divisor(n: isize) -> isize {\n   |                    \
    \                   - unclosed delimiter\n...\n22 |     for i in 1..n {\n   |\
    \                   - unclosed delimiter\n23 |         if n % i == 0 {\n   | \
    \                      - unclosed delimiter\n...\n59 |             if max_divisor_ind_2\
    \ != i {\n   |                                       - this delimiter might not\
    \ be properly closed...\n...\n74 | }\n   | - ...as it matches this but it has\
    \ different indentation\n...\n83 | }\n   |   ^\n\nerror[E0425]: cannot find value\
    \ `max_divisor_in` in this scope\n  --> /tmp/tmpwdsoki72.rs:73:17\n   |\n73 |\
    \                 max_divisor_in\n   |                 ^^^^^^^^^^^^^^ help: a\
    \ local variable with a similar name exists: `max_divisor_ind`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpwdsoki72.rs:22:5\n   |\n4  |   fn largest_divisor(n:\
    \ isize) -> isize {\n   |                                   ----- expected `isize`\
    \ because of return type\n...\n22 | /     for i in 1..n {\n23 | |         if n\
    \ % i == 0 {\n24 | |             if max_divisor < i {\n25 | |                \
    \ max_divisor = i;\n...  |\n82 | |     assert_eq!(candidate(49), 7);\n83 | | }\n\
    \   | |__^ expected `isize`, found `()`\n\nerror: aborting due to 3 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    for d in divisors(n) {\n        if n % d == 0 {\n            if d > max_divisor\
    \ {\n                max_divisor = d;\n                max_divisor_size = 1;\n\
    \            } else {\n                max_divisor += d;\n                max_divisor_size\
    \ = 2;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpmdueirl_.rs:7:14\n\
    \  |\n7 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_index = 0;\n\
    \    let mut max_divisor_value = n;\n    for divisor in &[2, 3, 5, 7, 11, 13,\
    \ 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\
    \ {\n        if n % divisor == 0 {\n            if divisor > max_divisor {\n \
    \               max_divisor = divisor;\n                max_divisor_index = divisor;\n\
    \                max_divisor_value = n;\n            }\n        }\n    }\n   \
    \ max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp_qbdau29.rs:10:26\n   |\n\
    10 |             if divisor > max_divisor {\n   |                          ^^^^^^^^^^^\n\
    \   |                          |\n   |                          expected `&isize`,\
    \ found integer\n   |                          help: consider borrowing here:\
    \ `&max_divisor`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp_qbdau29.rs:11:31\n\
    \   |\n5  |     let mut max_divisor = 0;\n   |                           - expected\
    \ due to this value\n...\n11 |                 max_divisor = divisor;\n   |  \
    \                             ^^^^^^^ expected integer, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n11 |                 max_divisor\
    \ = *divisor;\n   |                               +\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp_qbdau29.rs:12:37\n   |\n6  |     let mut max_divisor_index\
    \ = 0;\n   |                                 - expected due to this value\n...\n\
    12 |                 max_divisor_index = divisor;\n   |                      \
    \               ^^^^^^^ expected integer, found `&isize`\n   |\nhelp: consider\
    \ dereferencing the borrow\n   |\n12 |                 max_divisor_index = *divisor;\n\
    \   |                                     +\n\nerror: aborting due to 3 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008825
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(15)\n/// 5\nfn largest_divisor(n: isize)\
    \ -> isize {\n    let mut max_divisor = 0;\n    let mut max_divisor_size = 0;\n\
    \    let mut max_divisor_size_size = 0;\n    let mut max_divisor_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size = 0;\n    let mut\
    \ max_divisor_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size = 0;\n    let\
    \ mut max_divisor_size_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size = 0;\n    let\
    \ mut max_divisor_size_size_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size =\
    \ 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n \
    \   let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n  \
    \  let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n   \
    \ let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut \n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmp7egr4eb7.rs:40:1\n\
    \   |\n40 | }\n   | ^ expected identifier\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008824

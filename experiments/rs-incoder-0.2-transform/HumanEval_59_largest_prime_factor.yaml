name: HumanEval_59_largest_prime_factor
language: rs
prompt: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
  /// >>> largest_prime_factor(13195)\n/// 29\n/// >>> largest_prime_factor(2048)\n\
  /// 2\nfn largest_prime_factor(n: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = largest_prime_factor;\n    assert_eq!(candidate(15),\
  \ 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63), 7);\n  \
  \  assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n}\n"
completions: ["    let mut i = 2;\n    let mut factor = 1;\n    while i <= n {\n \
    \       if n % i == 0 {\n            factor *= i;\n            n /= i;\n     \
    \   } else {\n            i += 1;\n        }\n    }\n    factor", "    let mut\
    \ i = 2;\n    let mut largest = i;\n    while i <= n {\n        if n % i == 0\
    \ {\n            largest = i;\n        }\n        i += 1;\n    }\n    largest",
  "    let mut i = 2;\n    while i * i <= n {\n        if n % i == 0 {\n         \
    \   return i;\n        }\n        i += 1;\n    }\n    n", "    let mut i = 2;\n\
    \    let mut factor = 1;\n    while i * factor <= n {\n        if n % i == 0 {\n\
    \            factor *= i;\n            i += 1;\n        } else {\n           \
    \ i += 1;\n        }\n    }\n    factor", "    let mut i = 2;\n    while i * i\
    \ <= n {\n        if n % i == 0 {\n            i += 1;\n        } else {\n   \
    \         i = 2;\n        }\n    }\n    i", "    let mut i = 2;\n    let mut max_factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            max_factor\
    \ = i;\n        }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n\
    \    let mut factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n  \
    \          factor *= i;\n            n /= i;\n        }\n        i += 1;\n   \
    \ }\n    factor", "    let mut i = 2;\n    while i * i <= n {\n        if n %\
    \ i == 0 {\n            return i;\n        }\n        i += 1;\n    }\n    n",
  "    let mut i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n     \
    \   if n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n\
    \    }\n    max_factor", "    let mut i = 2;\n    let mut factor = 1;\n    while\
    \ i * i <= n {\n        if n % i == 0 {\n            factor *= i;\n          \
    \  n /= i;\n        }\n        i += 1;\n    }\n    if n > 1 {\n        factor\
    \ *= n;\n    }\n    factor", "    let mut i = 2;\n    while i * i <= n {\n   \
    \     if n % i == 0 {\n            return i;\n        }\n        i += 1;\n   \
    \ }\n    n", "    let mut i = 2;\n    let mut j = 2;\n    let mut largest = i;\n\
    \    while i * j <= n {\n        if n % i == 0 {\n            largest = i;\n \
    \           i += 1;\n        } else {\n            largest = j;\n            j\
    \ += 1;\n        }\n    }\n    largest", "    let mut i = 2;\n    let mut max_factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            i += 1;\n\
    \        } else {\n            i += 2;\n        }\n        max_factor = i;\n \
    \   }\n    max_factor", "    let mut i = 2;\n    while i * i <= n {\n        if\
    \ n % i == 0 {\n            return i;\n        }\n        i += 1;\n    }\n   \
    \ n", "    let mut i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n\
    \        if n % i == 0 {\n            i += 1;\n        } else {\n            i\
    \ += 2;\n        }\n        if i > max_factor {\n            max_factor = i;\n\
    \        }\n    }\n    max_factor", "    let mut i = 2;\n    while i * i <= n\
    \ {\n        if n % i == 0 {\n            return i;\n        }\n        i += 1;\n\
    \    }\n    return n;", "    let mut i = 2;\n    let mut largest = i;\n    while\
    \ i * i <= n {\n        if n % i == 0 {\n            largest = i;\n          \
    \  i += 1;\n        }\n        i += 1;\n    }\n    largest", "    let mut i =\
    \ 2;\n    let mut factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n\
    \            factor *= i;\n            n /= i;\n        } else {\n           \
    \ i += 1;\n        }\n    }\n    factor", "    let mut i = 2;\n    let mut max_factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            i += 1;\n\
    \        } else {\n            i += 2;\n        }\n        if i == n {\n     \
    \       break;\n        }\n        max_factor = i;\n    }\n    max_factor", " \
    \   let mut i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n    \
    \    if n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n\
    \    }\n    max_factor", "    let mut i = 2;\n    let mut j = 2;\n    let mut\
    \ largest = i;\n    while i * j <= n {\n        if n % i == 0 {\n            largest\
    \ = i;\n            i += 1;\n        } else {\n            largest = j;\n    \
    \        j += 1;\n        }\n    }\n    largest", "    let mut i = 2;\n    let\
    \ mut factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n         \
    \   factor *= i;\n            n /= i;\n        } else {\n            i += 1;\n\
    \        }\n    }\n    factor", "    let mut i = 2;\n    let mut max_factor =\
    \ 1;\n    while i * i <= n {\n        if n % i == 0 {\n            max_factor\
    \ = i;\n        }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n\
    \    let mut max_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n\
    \            max_factor = i;\n        }\n        i += 1;\n    }\n    max_factor",
  "    let mut i = 2;\n    while i * i <= n {\n        if n % i == 0 {\n         \
    \   return i;\n        }\n        i += 1;\n    }\n    n", "    let mut i = 2;\n\
    \    while i * i <= n {\n        if n % i == 0 {\n            return i;\n    \
    \    }\n        i += 1;\n    }\n    n", "    let mut i = 2;\n    let mut factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            factor =\
    \ i;\n            i += 1;\n        } else {\n            i += 1;\n        }\n\
    \    }\n    factor", "    let mut i = 2;\n    let mut max_factor = 1;\n    while\
    \ i * i <= n {\n        if n % i == 0 {\n            max_factor = i;\n       \
    \ }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n    let mut\
    \ max_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n         \
    \   max_factor = i;\n        }\n        i += 1;\n    }\n    max_factor", "   \
    \ let mut i = 2;\n    let mut factor = 1;\n    while i * i <= n {\n        if\
    \ n % i == 0 {\n            factor *= i;\n            n /= i;\n        } else\
    \ {\n            i += 1;\n        }\n    }\n    factor", "    let mut i = 2;\n\
    \    let mut largest = i;\n    while i * i <= n {\n        if n % i == 0 {\n \
    \           largest = i;\n        }\n        i += 1;\n    }\n    largest", " \
    \   let mut i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n    \
    \    if n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n\
    \    }\n    max_factor", "    let mut i = 2;\n    let mut factor = 1;\n    while\
    \ i * i <= n {\n        if n % i == 0 {\n            factor *= i;\n          \
    \  n /= i;\n        } else {\n            i += 1;\n        }\n    }\n    factor",
  "    let mut i = 2;\n    let mut factor = 1;\n    while i * i <= n {\n        if\
    \ n % i == 0 {\n            factor *= i;\n            n /= i;\n        }\n   \
    \     i += 1;\n    }\n    factor", "    let mut i = 2;\n    let mut prime_factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            prime_factor\
    \ = i;\n            i += 1;\n        } else {\n            i += 1;\n        }\n\
    \    }\n    prime_factor", "    let mut i = 2;\n    while i * i <= n {\n     \
    \   if n % i == 0 {\n            return i;\n        }\n        i += 1;\n    }\n\
    \    n", "    let mut i = 2;\n    let mut j = 2;\n    let mut max_factor = 1;\n\
    \    while i * j <= n {\n        if n % i == 0 {\n            i += 1;\n      \
    \  } else {\n            j += 1;\n        }\n        if j > max_factor {\n   \
    \         max_factor = j;\n        }\n    }\n    max_factor", "    let mut i =\
    \ 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n        if n % i ==\
    \ 0 {\n            max_factor = i;\n        }\n        i += 1;\n    }\n    max_factor",
  "    let mut i = 2;\n    let mut prime = true;\n    while i * i <= n {\n       \
    \ if n % i == 0 {\n            prime = false;\n            break;\n        }\n\
    \        i += 1;\n    }\n    if prime {\n        n\n    } else {\n        largest_prime_factor(n\
    \ / 2)\n    }", "    let mut i = 2;\n    let mut factor = 1;\n    while i * i\
    \ <= n {\n        if n % i == 0 {\n            factor *= i;\n            n /=\
    \ i;\n        } else {\n            i += 1;\n        }\n    }\n    factor", " \
    \   let mut i = 2;\n    let mut factor = 1;\n    while i * i <= n {\n        if\
    \ n % i == 0 {\n            factor *= i;\n            n /= i;\n        }\n   \
    \     i += 1;\n    }\n    factor", "    let mut i = 2;\n    let mut max_factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            i += 1;\n\
    \        } else {\n            i += 2;\n        }\n        max_factor = i;\n \
    \   }\n    max_factor", "    let mut i = 2;\n    let mut factor = 1;\n    while\
    \ i * i <= n {\n        if n % i == 0 {\n            factor *= i;\n          \
    \  n /= i;\n        } else {\n            i += 1;\n        }\n    }\n    factor",
  "    let mut i = 2;\n    let mut factor = 1;\n    while i <= n {\n        if n %\
    \ i == 0 {\n            factor *= i;\n            n /= i;\n        }\n       \
    \ i += 1;\n    }\n    factor", "    let mut i = 2;\n    let mut largest = i;\n\
    \    while i * i <= n {\n        if n % i == 0 {\n            largest = i;\n \
    \           i += 1;\n        } else {\n            i += 1;\n        }\n    }\n\
    \    largest", "    let mut i = 2;\n    while i * i <= n {\n        if n % i ==\
    \ 0 {\n            return i;\n        }\n        i += 1;\n    }\n    n", "   \
    \ let mut factors = vec![1isize; n];\n    let mut i = 2;\n    while i <= n {\n\
    \        if n % i == 0 {\n            factors[i] = i;\n            i += 1;\n \
    \       } else {\n            i += 1;\n        }\n    }\n    factors[n - 1]",
  "    let mut i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n     \
    \   if n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n\
    \    }\n    max_factor", "    let mut i = 2;\n    let mut max_factor = 1;\n  \
    \  while i * i <= n {\n        if n % i == 0 {\n            i += 1;\n        \
    \    max_factor = i;\n        } else {\n            i += 2;\n        }\n    }\n\
    \    max_factor", "    let mut i = 2;\n    let mut largest = i;\n    while i <=\
    \ n {\n        if n % i == 0 {\n            largest = i;\n        }\n        i\
    \ += 1;\n    }\n    largest", "    let mut i = 2;\n    let mut prime_factor =\
    \ 1;\n    while i * i <= n {\n        if n % i == 0 {\n            prime_factor\
    \ = i;\n            i += 1;\n        }\n        i += 1;\n    }\n    prime_factor",
  "    let mut i = 2;\n    while i * i <= n {\n        if n % i == 0 {\n         \
    \   return i;\n        }\n        i += 1;\n    }\n    n", "    let mut i = 2;\n\
    \    let mut max_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n\
    \            i += 1;\n        } else {\n            i += 2;\n        }\n     \
    \   max_factor = i;\n    }\n    max_factor", "    let mut i = 2;\n    let mut\
    \ largest = i;\n    while i * i <= n {\n        if n % i == 0 {\n            largest\
    \ = i;\n        }\n        i += 1;\n    }\n    largest", "    let mut i = 2;\n\
    \    let mut factor = 1;\n    while i <= n {\n        if n % i == 0 {\n      \
    \      factor *= i;\n            n /= i;\n        } else {\n            i += 1;\n\
    \        }\n    }\n    factor", "    let mut i = 2;\n    let mut factor = 1;\n\
    \    while i * i <= n {\n        if n % i == 0 {\n            factor *= i;\n \
    \           n /= i;\n        } else {\n            i += 1;\n        }\n    }\n\
    \    factor", "    let mut factors = vec![1usize; n];\n    let mut i = 2;\n  \
    \  while i <= n {\n        if n % i == 0 {\n            factors[i] = i;\n    \
    \        i += 1;\n        } else {\n            i += 1;\n        }\n    }\n  \
    \  factors.iter().max().unwrap_or(n)", "    let mut i = 2;\n    let mut max_factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            max_factor\
    \ = i;\n        }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n\
    \    let mut max_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n\
    \            max_factor = i;\n        }\n        i += 1;\n    }\n    max_factor",
  "    let mut i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n     \
    \   if n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n\
    \    }\n    max_factor", "    let mut i = 2;\n    let mut max_factor = 1;\n  \
    \  while i * i <= n {\n        if n % i == 0 {\n            max_factor = i;\n\
    \        }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n   \
    \ let mut max_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n \
    \           i += 1;\n        } else {\n            i += 2;\n        }\n      \
    \  if i > max_factor {\n            max_factor = i;\n        }\n    }\n    max_factor",
  "    let mut i = 2;\n    while i * i <= n {\n        if n % i == 0 {\n         \
    \   i += 1;\n        } else {\n            i -= 1;\n        }\n    }\n    i",
  "    let mut i = 2;\n    let mut j = 2;\n    let mut largest = i;\n    while i *\
    \ j <= n {\n        if n % i == 0 {\n            largest = i;\n            i +=\
    \ 1;\n        }\n        if n % j == 0 {\n            largest = j;\n         \
    \   j += 1;\n        }\n        i += 1;\n        j += 1;\n    }\n    largest",
  "    let mut i = 2;\n    let mut j = 2;\n    let mut k = 1;\n    while i * j <=\
    \ n {\n        if n % i == 0 {\n            i += 1;\n        }\n        if n %\
    \ j == 0 {\n            j += 1;\n        }\n        if k * j <= n {\n        \
    \    k += 1;\n        }\n    }\n    k", "    let mut i = 2;\n    let mut largest\
    \ = i;\n    while i * i <= n {\n        if n % i == 0 {\n            largest =\
    \ i;\n            i += 1;\n        }\n        else {\n            i += 1;\n  \
    \      }\n    }\n    largest", "    let mut i = 2;\n    let mut max_factor = 1;\n\
    \    while i * i <= n {\n        if n % i == 0 {\n            max_factor = i;\n\
    \        }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n   \
    \ let mut largest = i;\n    while i * i <= n {\n        if n % i == 0 {\n    \
    \        largest = i;\n            i += 1;\n        } else {\n            i +=\
    \ 1;\n        }\n    }\n    largest", "    let mut i = 2;\n    while i * i <=\
    \ n {\n        if n % i == 0 {\n            return i;\n        }\n        i +=\
    \ 1;\n    }\n    n", "    let mut i = 2;\n    let mut j = 2;\n    let mut max_factor\
    \ = 1;\n    while i * j <= n {\n        if n % i == 0 {\n            i += 1;\n\
    \        }\n        if n % j == 0 {\n            j += 1;\n        }\n        if\
    \ i > j {\n            max_factor = i;\n            i = j;\n            j = 2;\n\
    \        }\n    }\n    max_factor", "    let mut i = 2;\n    while i * i <= n\
    \ {\n        if n % i == 0 {\n            return i;\n        }\n        i += 1;\n\
    \    }\n    n", "    let mut i = 2;\n    while i * i <= n {\n        if n % i\
    \ == 0 {\n            return i;\n        }\n        i += 1;\n    }\n    n", " \
    \   let mut i = 2;\n    let mut factor = 1;\n    while i <= n {\n        if n\
    \ % i == 0 {\n            factor = i;\n            i += 1;\n        }\n      \
    \  i += 1;\n    }\n    factor", "    let mut i = 2;\n    let mut factor = 1;\n\
    \    while i * i <= n {\n        if n % i == 0 {\n            factor *= i;\n \
    \           n /= i;\n        }\n        i += 1;\n    }\n    if n > 1 {\n     \
    \   factor *= n;\n    }\n    factor", "    let mut i = 2;\n    let mut factor\
    \ = 1;\n    while i <= n {\n        if n % i == 0 {\n            factor *= i;\n\
    \            n /= i;\n        }\n        i += 1;\n    }\n    factor", "    let\
    \ mut i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n        if\
    \ n % i == 0 {\n            i += 1;\n        } else {\n            i += 2;\n \
    \       }\n        if i > max_factor {\n            max_factor = i;\n        }\n\
    \    }\n    max_factor", "    let mut i = 2;\n    let mut max_factor = 1;\n  \
    \  while i * i <= n {\n        if n % i == 0 {\n            max_factor = i;\n\
    \        }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n   \
    \ let mut factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n     \
    \       factor *= i;\n            n /= i;\n        } else {\n            i +=\
    \ 1;\n        }\n    }\n    factor", "    let mut i = 2;\n    while i * i <= n\
    \ {\n        if n % i == 0 {\n            return i;\n        }\n        i += 1;\n\
    \    }\n    n", "    let mut i = 2;\n    let mut factor = 1;\n    while i <= n\
    \ {\n        if n % i == 0 {\n            factor *= i;\n            n /= i;\n\
    \        }\n        i += 1;\n    }\n    factor", "    let mut i = 2;\n    while\
    \ i * i <= n {\n        if n % i == 0 {\n            return i;\n        }\n  \
    \      i += 1;\n    }\n    n", "    let mut i = 2;\n    while i * i <= n {\n \
    \       if n % i == 0 {\n            i += 1;\n        } else {\n            i\
    \ += 2;\n        }\n    }\n    i", "    let mut i = 2;\n    while i * i <= n {\n\
    \        if n % i == 0 {\n            return i;\n        }\n        i += 1;\n\
    \    }\n    n", "    let mut i = 2;\n    let mut prime = true;\n    while i *\
    \ i <= n {\n        if n % i == 0 {\n            prime = false;\n            break;\n\
    \        }\n        i += 1;\n    }\n    if prime {\n        n\n    } else {\n\
    \        largest_prime_factor(n / 2)\n    }", "    let mut i = 2;\n    let mut\
    \ factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            factor\
    \ *= i;\n            n /= i;\n        } else {\n            i += 1;\n        }\n\
    \    }\n    factor", "    let mut i = 2;\n    while i * i <= n {\n        if n\
    \ % i == 0 {\n            return i;\n        }\n        i += 1;\n    }\n    n",
  "    let mut i = 2;\n    while i * i <= n {\n        if n % i == 0 {\n         \
    \   return i;\n        }\n        i += 1;\n    }\n    return n;", "    let mut\
    \ i = 2;\n    while i * i <= n {\n        if n % i == 0 {\n            return\
    \ i;\n        }\n        i += 1;\n    }\n    n", "    let mut factors = vec![1isize;\
    \ n];\n    let mut i = 2;\n    while i <= n {\n        if n % i == 0 {\n     \
    \       factors[i] = i;\n            i += 1;\n        } else {\n            i\
    \ += 1;\n        }\n    }\n    factors.iter().max().unwrap_or(1)", "    let mut\
    \ i = 2;\n    let mut factor = 1;\n    while i * i <= n {\n        if n % i ==\
    \ 0 {\n            factor *= i;\n            n /= i;\n        }\n        i +=\
    \ 1;\n    }\n    factor", "    let mut i = 2;\n    let mut max_factor = 1;\n \
    \   while i * i <= n {\n        if n % i == 0 {\n            max_factor = i;\n\
    \        }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n   \
    \ let mut factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n     \
    \       factor *= i;\n            n /= i;\n        }\n        i += 1;\n    }\n\
    \    factor", "    let mut i = 2;\n    let mut factor = 1;\n    while i * i <=\
    \ n {\n        if n % i == 0 {\n            factor *= i;\n            n /= i;\n\
    \        } else {\n            i += 1;\n        }\n    }\n    factor", "    let\
    \ mut i = 2;\n    let mut factor = 1;\n    while i * factor <= n {\n        if\
    \ n % i == 0 {\n            factor *= i;\n            i += 1;\n        } else\
    \ {\n            i += 1;\n        }\n    }\n    factor", "    let mut i = 2;\n\
    \    while i * i <= n {\n        if n % i == 0 {\n            return i;\n    \
    \    }\n        i += 1;\n    }\n    return n;", "    let mut i = 2;\n    let mut\
    \ prime_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n       \
    \     prime_factor = i;\n            i += 1;\n        } else {\n            i\
    \ += 2;\n        }\n    }\n    prime_factor", "    let mut i = 2;\n    let mut\
    \ max_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n         \
    \   i += 1;\n        } else {\n            i += 2;\n        }\n        if i ==\
    \ n {\n            return max_factor;\n        }\n        max_factor *= i;\n \
    \   }\n    return max_factor;", "    let mut i = 2;\n    let mut j = 2;\n    let\
    \ mut max_factor = 0;\n    while i * j <= n {\n        if n % i == 0 {\n     \
    \       if n % j == 0 {\n                max_factor = i;\n            } else {\n\
    \                max_factor = j;\n            }\n        }\n        i += 1;\n\
    \        j += 1;\n    }\n    max_factor", "    let mut i = 2;\n    let mut prime_divisor\
    \ = 1;\n    while i * prime_divisor <= n {\n        if n % i == 0 {\n        \
    \    prime_divisor *= i;\n        } else {\n            i += 1;\n        }\n \
    \   }\n    prime_divisor", "    let mut i = 2;\n    let mut largest = i;\n   \
    \ while i * i <= n {\n        if n % i == 0 {\n            largest = i;\n    \
    \        i += 1;\n        } else {\n            i += 1;\n        }\n    }\n  \
    \  largest", "    let mut i = 2;\n    let mut prime: isize = 1;\n    while i *\
    \ i <= n {\n        if n % i == 0 {\n            prime = i;\n            i +=\
    \ 1;\n        } else {\n            i += 1;\n        }\n    }\n    prime", " \
    \   let mut i = 2;\n    while i * i <= n {\n        if n % i == 0 {\n        \
    \    return i;\n        }\n        i += 1;\n    }\n    return n;", "    let mut\
    \ i = 2;\n    let mut factor = 1;\n    while i * i <= n {\n        if n % i ==\
    \ 0 {\n            factor *= i;\n            n /= i;\n        } else {\n     \
    \       i += 1;\n        }\n    }\n    factor", "    let mut i = 2;\n    let mut\
    \ max_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n         \
    \   max_factor = i;\n        }\n        i += 1;\n    }\n    max_factor", "   \
    \ let mut i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n      \
    \  if n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n\
    \    }\n    max_factor", "    let mut i = 2;\n    let mut factor = 1;\n    while\
    \ i <= n {\n        if n % i == 0 {\n            factor *= i;\n            n /=\
    \ i;\n        }\n        i += 1;\n    }\n    factor", "    let mut i = 2;\n  \
    \  let mut factor = 1;\n    while i <= n {\n        if n % i == 0 {\n        \
    \    factor *= i;\n            n /= i;\n        }\n        i += 1;\n    }\n  \
    \  factor", "    let mut i = 2;\n    let mut prime_factor = 1;\n    while i *\
    \ i <= n {\n        if n % i == 0 {\n            prime_factor = i;\n         \
    \   i += 1;\n        } else {\n            i += 2;\n        }\n    }\n    prime_factor",
  "    let mut i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n     \
    \   if n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n\
    \    }\n    max_factor", "    let mut i = 2;\n    let mut prime = true;\n    while\
    \ i * i <= n {\n        if n % i == 0 {\n            prime = false;\n        \
    \    break;\n        }\n        i += 1;\n    }\n    if prime {\n        n\n  \
    \  } else {\n        largest_prime_factor(n / 2)\n    }", "    let mut i = 2;\n\
    \    let mut max_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n\
    \            max_factor = i;\n        }\n        i += 1;\n    }\n    max_factor",
  "    let mut i = 2;\n    let mut max_factor = 1;\n    while i <= n {\n        if\
    \ n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n    }\n\
    \    max_factor", "    let mut i = 2;\n    let mut max_factor = 1;\n    while\
    \ i * i <= n {\n        if n % i == 0 {\n            max_factor = i;\n       \
    \ }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n    let mut\
    \ max_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n         \
    \   max_factor = i;\n        }\n        i += 1;\n    }\n    max_factor", "   \
    \ let mut i = 2;\n    let mut factor = 1;\n    while i * i <= n {\n        if\
    \ n % i == 0 {\n            factor *= i;\n            n /= i;\n        } else\
    \ {\n            i += 1;\n        }\n    }\n    factor", "    let mut i = 2;\n\
    \    let mut prime_factor = 1;\n    while i * i <= n {\n        if n % i == 0\
    \ {\n            prime_factor = i;\n            i += 1;\n        } else {\n  \
    \          i += 2;\n        }\n    }\n    prime_factor", "    let mut i = 2;\n\
    \    let mut max_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n\
    \            max_factor = i;\n        }\n        i += 1;\n    }\n    max_factor",
  "    let mut i = 2;\n    let mut j = 2;\n    let mut largest = i;\n    while i *\
    \ j <= n {\n        if n % i == 0 {\n            largest = i;\n        }\n   \
    \     if n % j == 0 {\n            largest = j;\n        }\n        i += 1;\n\
    \        j += 1;\n    }\n    largest", "    let mut i = 2;\n    let mut max_factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            i += 1;\n\
    \        } else {\n            i += 2;\n        }\n        if i > max_factor {\n\
    \            max_factor = i;\n        }\n    }\n    max_factor", "    let mut\
    \ i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n        if n %\
    \ i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n    }\n \
    \   max_factor", "    let mut i = 2;\n    let mut max_factor = 1;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            i += 1;\n        } else {\n\
    \            i += 2;\n        }\n        max_factor = i;\n    }\n    max_factor",
  "    let mut i = 2;\n    let mut largest = i;\n    while i * i <= n {\n        if\
    \ n % i == 0 {\n            largest = i;\n            i += 1;\n        } else\
    \ {\n            i += 1;\n        }\n    }\n    largest", "    let mut i = 2;\n\
    \    let mut largest = i;\n    while i * i <= n {\n        if n % i == 0 {\n \
    \           largest = i;\n            i += 1;\n        }\n        else {\n   \
    \         i += 1;\n        }\n    }\n    largest", "    let mut i = 2;\n    let\
    \ mut factor = 1;\n    while i <= n {\n        if n % i == 0 {\n            factor\
    \ *= i;\n            n /= i;\n        } else {\n            i += 1;\n        }\n\
    \    }\n    factor", "    let mut i = 2;\n    let mut max_factor = 1;\n    while\
    \ i * i <= n {\n        if n % i == 0 {\n            max_factor = i;\n       \
    \ }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n    let mut\
    \ factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            factor\
    \ *= i;\n            n /= i;\n        }\n        i += 1;\n    }\n    factor",
  "    let mut i = 2;\n    let mut factor = 1;\n    while i <= n {\n        if n %\
    \ i == 0 {\n            factor = i;\n            break;\n        }\n        i\
    \ += 1;\n    }\n    factor", "    let mut i = 2;\n    let mut largest = i;\n \
    \   while i * i <= n {\n        if n % i == 0 {\n            largest = i;\n  \
    \          i += 1;\n        } else {\n            i += 1;\n        }\n    }\n\
    \    largest", "    let mut i = 2;\n    let mut max_factor = 1;\n    while i *\
    \ i <= n {\n        if n % i == 0 {\n            i += 1;\n        } else {\n \
    \           i += 2;\n        }\n        if i > max_factor {\n            max_factor\
    \ = i;\n        }\n    }\n    max_factor", "    let mut i = 2;\n    let mut max_factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            i += 1;\n\
    \        } else {\n            i += 2;\n        }\n        max_factor = i;\n \
    \   }\n    max_factor", "    let mut i = 2;\n    let mut prime_factor = 1;\n \
    \   while i * i <= n {\n        if n % i == 0 {\n            prime_factor = i;\n\
    \            i += 1;\n        } else {\n            i += 2;\n        }\n    }\n\
    \    prime_factor", "    let mut i = 2;\n    while i * i <= n {\n        if n\
    \ % i == 0 {\n            i += 1;\n        } else {\n            i += 2;\n   \
    \     }\n    }\n    i", "    let mut i = 2;\n    let mut largest = i;\n    while\
    \ i <= n {\n        if n % i == 0 {\n            largest = i;\n        }\n   \
    \     i += 1;\n    }\n    largest", "    let mut i = 2;\n    let mut max_factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            max_factor\
    \ = i;\n        }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n\
    \    while i * i <= n {\n        if n % i == 0 {\n            i += 1;\n      \
    \  } else {\n            i -= 1;\n        }\n    }\n    i", "    let mut i = 2;\n\
    \    let mut factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n  \
    \          factor *= i;\n            n /= i;\n        } else {\n            i\
    \ += 1;\n        }\n    }\n    factor", "    let mut i = 2;\n    let mut factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            factor *=\
    \ i;\n            n /= i;\n        }\n        i += 1;\n    }\n    factor", " \
    \   let mut i = 2;\n    let mut factor = 1;\n    while i * i <= n {\n        if\
    \ n % i == 0 {\n            factor *= i;\n            n /= i;\n        } else\
    \ {\n            i += 1;\n        }\n    }\n    factor", "    let mut i = 2;\n\
    \    let mut max_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n\
    \            max_factor = i;\n        }\n        i += 1;\n    }\n    max_factor",
  "    let mut i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n     \
    \   if n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n\
    \    }\n    max_factor", "    let mut i = 2;\n    let mut factor = 1;\n    while\
    \ i * i <= n {\n        if n % i == 0 {\n            factor *= i;\n          \
    \  n /= i;\n        }\n        i += 1;\n    }\n    factor", "    let mut i = 2;\n\
    \    let mut max_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n\
    \            max_factor = i;\n        }\n        i += 1;\n    }\n    max_factor",
  "    let mut i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n     \
    \   if n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n\
    \    }\n    max_factor", "    let mut i = 2;\n    while i * i <= n {\n       \
    \ if n % i == 0 {\n            return i;\n        }\n        i += 1;\n    }\n\
    \    return n;", "    let mut i = 2;\n    let mut factor = 1;\n    while i * i\
    \ <= n {\n        if n % i == 0 {\n            factor = i;\n            i += 1;\n\
    \        } else {\n            i += 1;\n        }\n    }\n    factor", "    let\
    \ mut i = 2;\n    let mut factor = 1;\n    while i * i <= n {\n        if n %\
    \ i == 0 {\n            factor *= i;\n            n /= i;\n        }\n       \
    \ i += 1;\n    }\n    factor", "    let mut i = 2;\n    let mut max_factor = 1;\n\
    \    while i * i <= n {\n        if n % i == 0 {\n            max_factor = i;\n\
    \        }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n   \
    \ let mut largest = i;\n    while i <= n {\n        if n % i == 0 {\n        \
    \    largest = i;\n        }\n        i += 1;\n    }\n    largest", "    let mut\
    \ i = 2;\n    let mut largest = i;\n    while i * i <= n {\n        if n % i ==\
    \ 0 {\n            largest = i;\n        }\n        i += 1;\n    }\n    largest",
  "    let mut i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n     \
    \   if n % i == 0 {\n            i += 1;\n        } else {\n            i += 2;\n\
    \        }\n        if i > max_factor {\n            max_factor = i;\n       \
    \ }\n    }\n    max_factor", "    let mut i = 2;\n    while i * i <= n {\n   \
    \     if n % i == 0 {\n            return i;\n        }\n        i += 1;\n   \
    \ }\n    return n;", "    let mut i = 2;\n    let mut largest = i;\n    while\
    \ i <= n {\n        if n % i == 0 {\n            largest = i;\n        }\n   \
    \     i += 1;\n    }\n    largest", "    let mut i = 2;\n    let mut max_factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            i += 1;\n\
    \        } else {\n            i += 2;\n        }\n        if i == n {\n     \
    \       break;\n        }\n        max_factor = i;\n    }\n    max_factor", " \
    \   let mut i = 2;\n    let mut prime_factor = 1;\n    while i * i <= n {\n  \
    \      if n % i == 0 {\n            prime_factor = i;\n            i += 1;\n \
    \       } else {\n            i += 1;\n        }\n    }\n    prime_factor", " \
    \   let mut i = 2;\n    let mut max_factor = 1;\n    while i <= n {\n        if\
    \ n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n    }\n\
    \    max_factor", "    let mut i = 2;\n    let mut factor = 1;\n    while i *\
    \ i <= n {\n        if n % i == 0 {\n            factor *= i;\n            n /=\
    \ i;\n        } else {\n            i += 1;\n        }\n    }\n    factor", " \
    \   let mut i = 2;\n    let mut factor = 1;\n    while i * i <= n {\n        if\
    \ n % i == 0 {\n            factor *= i;\n            n /= i;\n        }\n   \
    \     i += 1;\n    }\n    if n != 1 {\n        factor *= n;\n    }\n    factor",
  "    let mut i = 2;\n    let mut largest = i;\n    while i * i <= n {\n        if\
    \ n % i == 0 {\n            largest = i;\n            i += 1;\n        }\n   \
    \     i += 1;\n    }\n    largest", "    let mut i = 2;\n    let mut largest =\
    \ i;\n    while i * i <= n {\n        if n % i == 0 {\n            largest = i;\n\
    \            i += 1;\n        }\n        i += 1;\n    }\n    largest", "    let\
    \ mut i = 2;\n    while i * i <= n {\n        if n % i == 0 {\n            return\
    \ i;\n        }\n        i += 1;\n    }\n    n", "    let mut i = 2;\n    let\
    \ mut factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n         \
    \   factor *= i;\n            n /= i;\n        } else {\n            i += 1;\n\
    \        }\n    }\n    factor", "    let mut i = 2;\n    let mut max_factor =\
    \ 1;\n    while i * i <= n {\n        if n % i == 0 {\n            max_factor\
    \ = i;\n        }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n\
    \    while i * i <= n {\n        if n % i == 0 {\n            return i;\n    \
    \    }\n        i += 1;\n    }\n    n", "    let mut i = 2;\n    let mut prime_factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            prime_factor\
    \ = i;\n            i += 1;\n        } else {\n            i += 1;\n        }\n\
    \    }\n    prime_factor", "    let mut i = 2;\n    let mut factor = 1;\n    while\
    \ i <= n {\n        if n % i == 0 {\n            factor = i;\n            break;\n\
    \        }\n        i += 1;\n    }\n    factor", "    let mut i = 2;\n    let\
    \ mut max_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n     \
    \       max_factor = i;\n        }\n        i += 1;\n    }\n    max_factor", " \
    \   let mut i = 2;\n    let mut max_factor = 1;\n    while i <= n {\n        if\
    \ n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n    }\n\
    \    max_factor", "    let mut i = 2;\n    let mut max_factor = 1;\n    while\
    \ i * i <= n {\n        if n % i == 0 {\n            max_factor = i;\n       \
    \ }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            return i;\n        }\n    \
    \    i += 1;\n    }\n    n", "    let mut i = 2;\n    let mut max_factor = 1;\n\
    \    while i <= n {\n        if n % i == 0 {\n            max_factor = i;\n  \
    \      }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n    let\
    \ mut factor = 1;\n    while i <= n {\n        if n % i == 0 {\n            factor\
    \ = i;\n            break;\n        }\n        i += 1;\n    }\n    factor", " \
    \   let mut i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n    \
    \    if n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n\
    \    }\n    max_factor", "    let mut i = 2;\n    let mut factor = 1;\n    while\
    \ i * i <= n {\n        if n % i == 0 {\n            factor *= i;\n          \
    \  n /= i;\n        } else {\n            i += 1;\n        }\n    }\n    factor",
  "    let mut i = 2;\n    let mut max_factor = 1;\n    while i <= n {\n        if\
    \ n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n    }\n\
    \    max_factor", "    let mut i = 2;\n    while i * i <= n {\n        if n %\
    \ i == 0 {\n            return i;\n        }\n        i += 1;\n    }\n    n",
  "    let mut i = 2;\n    let mut factor = 1;\n    while i * i <= n {\n        if\
    \ n % i == 0 {\n            factor *= i;\n            n /= i;\n        }\n   \
    \     i += 1;\n    }\n    factor", "    let mut i = 2;\n    let mut factor = 1;\n\
    \    while i * i <= n {\n        if n % i == 0 {\n            factor *= i;\n \
    \           n /= i;\n        } else {\n            i += 1;\n        }\n    }\n\
    \    factor", "    let mut i = 2;\n    let mut largest = i;\n    while i * i <=\
    \ n {\n        if n % i == 0 {\n            largest = i;\n            i += 1;\n\
    \        } else {\n            i += 1;\n        }\n    }\n    largest", "    let\
    \ mut i = 2;\n    let mut factor = 1;\n    while i * i <= n {\n        if n %\
    \ i == 0 {\n            factor *= i;\n            n /= i;\n        }\n       \
    \ i += 1;\n    }\n    factor", "    let mut i = 2;\n    let mut factor = 1;\n\
    \    while i * i <= n {\n        if n % i == 0 {\n            factor *= i;\n \
    \           n /= i;\n        } else {\n            i += 1;\n        }\n    }\n\
    \    factor", "    let mut i = 2;\n    let mut factor = 1;\n    while i <= n {\n\
    \        if n % i == 0 {\n            factor = i;\n            break;\n      \
    \  }\n        i += 1;\n    }\n    factor", "    let mut factors = vec![1isize;\
    \ n];\n    let mut i = 2;\n    while i <= n {\n        if n % i == 0 {\n     \
    \       factors[i] = i;\n            i += 1;\n        }\n        else {\n    \
    \        i += 1;\n        }\n    }\n    factors.iter().max().unwrap_or(1)", " \
    \   let mut i = 2;\n    let mut max_factor = 1;\n    while i <= n {\n        if\
    \ n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n    }\n\
    \    max_factor", "    let mut i = 2;\n    let mut j = 2;\n    let mut max_factor\
    \ = 0;\n    while i * j <= n {\n        if n % i == 0 {\n            if n % j\
    \ == 0 {\n                max_factor = i;\n                break;\n          \
    \  }\n            i += 1;\n        }\n        j += 1;\n    }\n    max_factor",
  "    let mut i = 2;\n    let mut max_factor = 1;\n    while i * i <= n {\n     \
    \   if n % i == 0 {\n            max_factor = i;\n        }\n        i += 1;\n\
    \    }\n    max_factor", "    let mut i = 2;\n    let mut prime_factor = 1;\n\
    \    while i * i <= n {\n        if n % i == 0 {\n            prime_factor = i;\n\
    \            i += 1;\n        } else {\n            i += 2;\n        }\n    }\n\
    \    prime_factor", "    let mut i = 2;\n    while i * i <= n {\n        if n\
    \ % i == 0 {\n            i += 1;\n        } else {\n            i += 2;\n   \
    \     }\n    }\n    i", "    let mut factors = vec![1isize; n];\n    let mut i\
    \ = 2;\n    while i < n {\n        if n % i == 0 {\n            factors[i] = i;\n\
    \            i += 2;\n        } else {\n            i += 1;\n        }\n    }\n\
    \    factors[n - 1]", "    let mut i = 2;\n    let mut factor = 1;\n    while\
    \ i * factor <= n {\n        if n % i == 0 {\n            factor *= i;\n     \
    \   } else {\n            i += 1;\n        }\n    }\n    factor", "    let mut\
    \ i = 2;\n    while i * i <= n {\n        if n % i == 0 {\n            return\
    \ i;\n        }\n        i += 1;\n    }\n    return n;", "    let mut i = 2;\n\
    \    let mut factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n  \
    \          factor *= i;\n            n /= i;\n        } else {\n            i\
    \ += 1;\n        }\n    }\n    factor", "    let mut i = 2;\n    let mut max_factor\
    \ = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            max_factor\
    \ = i;\n        }\n        i += 1;\n    }\n    max_factor", "    let mut i = 2;\n\
    \    let mut factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n  \
    \          factor *= i;\n            n /= i;\n        } else {\n            i\
    \ += 1;\n        }\n    }\n    factor", "    let mut i = 2;\n    while i * i <=\
    \ n {\n        if n % i == 0 {\n            return i;\n        }\n        i +=\
    \ 1;\n    }\n    n", "    let mut factors = vec![];\n    let mut i = 2;\n    while\
    \ i * i <= n {\n        if n % i == 0 {\n            factors.push(i);\n      \
    \      n /= i;\n        }\n        i += 1;\n    }\n    if n > 1 {\n        factors.push(n);\n\
    \    }\n    factors.iter().max().unwrap_or(1)", "    let mut i = 2;\n    let mut\
    \ factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n            factor\
    \ *= i;\n            n /= i;\n        } else {\n            i += 1;\n        }\n\
    \    }\n    factor", "    let mut i = 2;\n    let mut max_factor = 1;\n    while\
    \ i * i <= n {\n        if n % i == 0 {\n            i += 1;\n        } else {\n\
    \            i += 2;\n        }\n        if i == n {\n            break;\n   \
    \     }\n        max_factor = i;\n    }\n    max_factor", "    let mut i = 2;\n\
    \    while i * i <= n {\n        if n % i == 0 {\n            return i;\n    \
    \    }\n        i += 1;\n    }\n    return n;", "    let mut i = 2;\n    let mut\
    \ max_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n         \
    \   max_factor = i;\n        }\n        i += 1;\n    }\n    max_factor", "   \
    \ let mut factors = vec![1usize; n];\n    let mut i = 2;\n    while i < n {\n\
    \        if n % i == 0 {\n            factors[i] = i;\n            i += 1;\n \
    \       }\n        else {\n            i += 1;\n        }\n    }\n    factors.iter().max().unwrap()"]
stop_tokens:
- "\n}"

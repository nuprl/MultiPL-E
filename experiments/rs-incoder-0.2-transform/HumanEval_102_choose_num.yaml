name: HumanEval_102_choose_num
language: rs
prompt: "/// This function takes two positive numbers x and y and returns the\n///\
  \ biggest even integer number that is in the range [x, y] inclusive. If \n/// there's\
  \ no such number, then the function should return -1.\n/// For example:\n/// >>>\
  \ choose_num(12, 15)\n/// 14\n/// >>> choose_num(13, 12)\n/// -1\nfn choose_num(x:\
  \ isize, y: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = choose_num;\n    assert_eq!(candidate(12,\
  \ 15), 14);\n    assert_eq!(candidate(13, 12), -1);\n    assert_eq!(candidate(33,\
  \ 12354), 12354);\n    assert_eq!(candidate(5234, 5233), -1);\n    assert_eq!(candidate(6,\
  \ 29), 28);\n    assert_eq!(candidate(27, 10), -1);\n    assert_eq!(candidate(7,\
  \ 7), -1);\n    assert_eq!(candidate(546, 546), 546);\n}\n"
completions: ["    let mut x: isize = x;\n    let mut y: isize = y;\n    while x >\
    \ y {\n        if x % 2 == 0 {\n            x = x / 2;\n        } else {\n   \
    \         y = y / 2;\n        }\n    }\n    if x == y {\n        x\n    } else\
    \ {\n        x\n    }", "    if x < y {\n        choose_num(y, x)\n    } else\
    \ {\n        choose_num(x, y)\n    }", "    if x > y {\n        (x, y) = (y, x)\n\
    \    }\n    \n    let mut num: isize = 0;\n    \n    while num < x {\n       \
    \ num <<= 1;\n        num |= 1;\n    }\n    \n    while num < y {\n        num\
    \ <<= 1;\n        num |= 1;\n    }\n    \n    num", "    if x <= y {\n       \
    \ -1\n    } else {\n        let mut x = x;\n        let mut y = y;\n        let\
    \ mut z = 1;\n        while z < y {\n            if x % z == 0 {\n           \
    \     x /= z;\n            } else {\n                y /= z;\n            }\n\
    \            z <<= 1;\n        }\n        x\n    }", "    if x < y {\n       \
    \ choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ < y {\n        choose_num(y, x)\n    } else {\n        let mut x = x;\n    \
    \    let mut y = y;\n        let mut z = 1;\n        while z < y {\n         \
    \   if x % z == 0 {\n                x /= z;\n            } else {\n         \
    \       y /= z;\n            }\n            z <<= 1;\n        }\n        if x\
    \ == y {\n            x\n        } else {\n            -1\n        }\n    }",
  "    if x <= y {\n        -1\n    } else if y > x {\n        x\n    } else {\n \
    \       y + (x % y)\n    }", "    if x <= y {\n        -1\n    } else {\n    \
    \    let mut max_num = x;\n        let mut min_num = y;\n        while min_num\
    \ < max_num {\n            if max_num % 2 == 0 {\n                max_num += 1;\n\
    \            } else {\n                min_num += 1;\n            }\n        }\n\
    \        max_num\n    }", "    let mut x: isize = x;\n    let mut y: isize = y;\n\
    \    loop {\n        if x % 2 == 0 && y % 2 == 0 {\n            return x;\n  \
    \      }\n        if x % 2 == 0 {\n            x /= 2;\n        } else {\n   \
    \         y /= 2;\n        }\n    }", "    if x < y {\n        choose_num(y, x)\n\
    \    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n        -1\n\
    \    } else {\n        let mut i = x;\n        let mut j = y;\n        let mut\
    \ max_num = -1;\n        while i <= j {\n            if i % 2 == 0 {\n       \
    \         i += 1;\n            } else {\n                j -= 1;\n           \
    \ }\n            if j == i {\n                max_num = i;\n            }\n  \
    \      }\n        max_num\n    }", "    if x < y {\n        choose_num(y, x)\n\
    \    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n     \
    \   -1\n    } else {\n        let mut x: isize = x;\n        let mut y: isize\
    \ = y;\n        let mut z: isize = x;\n        while z < y {\n            if z\
    \ % 2 == 0 {\n                z = z + 2;\n            } else {\n             \
    \   z = z + 1;\n            }\n        }\n        if z == y {\n            x\n\
    \        } else {\n            -1\n        }\n    }", "    if x <= y {\n     \
    \   -1\n    } else {\n        let mut x = x;\n        let mut y = y;\n       \
    \ let mut z = x;\n        while z < y {\n            z = z * 2 + 1;\n        }\n\
    \        z\n    }", "    if x <= y {\n        -1\n    } else {\n        let mut\
    \ x = x;\n        let mut y = y;\n        let mut even: isize = 0;\n        let\
    \ mut odd: isize = 0;\n        while x > y {\n            if x % 2 == 0 {\n  \
    \              even += 1;\n                x /= 2;\n            } else {\n   \
    \             odd += 1;\n                y /= 2;\n            }\n        }\n \
    \       if even > odd {\n            even\n        } else {\n            odd\n\
    \        }\n    }", "    let mut x = x;\n    let mut y = y;\n    while x < y {\n\
    \        if x % 2 == 0 {\n            x = x + 1;\n        } else {\n         \
    \   x = x - 1;\n        }\n    }\n    if x == y {\n        x\n    } else {\n \
    \       -1\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n\
    \        choose_num(x, y)\n    }", "    if x <= y {\n        -1\n    } else {\n\
    \        let mut x = x;\n        let mut y = y;\n        loop {\n            if\
    \ x % 2 == 0 {\n                x /= 2;\n            } else {\n              \
    \  y /= 2;\n            }\n            if x == y {\n                return x;\n\
    \            }\n        }\n    }", "    if x <= y {\n        -1\n    } else if\
    \ x == y {\n        x\n    } else {\n        let mut x = x;\n        let mut y\
    \ = y;\n        while x > y {\n            x = x - y;\n            y = y + x;\n\
    \        }\n        x\n    }", "    if x < y {\n        choose_num(y, x)\n   \
    \ } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n        -1\n \
    \   } else {\n        let mut x: isize = x;\n        let mut y: isize = y;\n \
    \       let mut z: isize = 0;\n        while z < x && z < y {\n            if\
    \ x % z == 0 {\n                z = z + 1;\n            } else {\n           \
    \     z = z + 1;\n            }\n        }\n        if z == x {\n            return\
    \ x;\n        } else if z == y {\n            return y;\n        } else {\n  \
    \          return -1;\n        }\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n     \
    \   -1\n    } else {\n        let mut x = x;\n        let mut y = y;\n       \
    \ while x > y {\n            x = x - y;\n            y = y + x;\n        }\n \
    \       x\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n \
    \       if x % 2 == 0 {\n            x // 2\n        } else {\n            choose_num(y\
    \ - 1, x)\n        }\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        let mut x = x;\n        let mut y =\
    \ y;\n        loop {\n            if x % 2 == 0 {\n                x /= 2;\n \
    \           } else {\n                y /= 2;\n            }\n            if x\
    \ == y {\n                return x;\n            }\n        }\n    }\n    -1",
  "    if x < y {\n        choose_num(y, x)\n    } else {\n        if x % 2 == 0 {\n\
    \            x\n        } else {\n            choose_num(y - 1, x)\n        }\n\
    \    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x > y {\n        (x, y) = (y, x)\n    }\n\
    \    \n    let mut num: isize = 0;\n    \n    while num < x {\n        num <<=\
    \ 1;\n        num |= 1;\n    }\n    \n    while num < y {\n        num <<= 1;\n\
    \        num |= 1;\n    }\n    \n    num", "    if x <= y {\n        if x % 2\
    \ == 0 {\n            x\n        } else {\n            y\n        }\n    } else\
    \ {\n        if y % 2 == 0 {\n            y\n        } else {\n            x\n\
    \        }\n    }", "    if x <= y {\n        -1\n    } else {\n        let mut\
    \ x = x;\n        let mut y = y;\n        let mut z = x;\n        while z < y\
    \ {\n            z = z * 2 + 1;\n        }\n        if z == y {\n            x\n\
    \        } else {\n            -1\n        }\n    }", "    if x <= y {\n     \
    \   -1\n    } else {\n        let mut max_num = x;\n        let mut min_num =\
    \ y;\n        loop {\n            if max_num % 2 == 0 {\n                max_num\
    \ -= 1;\n            } else {\n                max_num += 1;\n            }\n\
    \            if min_num % 2 == 0 {\n                min_num -= 1;\n          \
    \  } else {\n                min_num += 1;\n            }\n            if max_num\
    \ < min_num {\n                return -1;\n            }\n        }\n    }", " \
    \   if x <= y {\n        -1\n    } else {\n        let mut i = x;\n        let\
    \ mut j = y;\n        let mut biggest = -1;\n        while i <= j {\n        \
    \    if i % 2 == 0 {\n                if biggest < i {\n                    biggest\
    \ = i;\n                }\n                i += 1;\n            } else {\n   \
    \             if biggest < j {\n                    biggest = j;\n           \
    \     }\n                j -= 1;\n            }\n        }\n        biggest\n\
    \    }", "    if x <= y {\n        -1\n    } else {\n        let mut x = x;\n\
    \        let mut y = y;\n        let mut z = x;\n        while z < y {\n     \
    \       if z % 2 == 0 {\n                z = z + 2;\n            } else {\n  \
    \              z = z + 1;\n            }\n        }\n        x\n    }", "    if\
    \ x <= y {\n        -1\n    } else {\n        let mut x = x;\n        let mut\
    \ y = y;\n        let mut z = 1;\n        while z < y {\n            let mut z\
    \ = z * x + y;\n            y = z % y;\n        }\n        if z == y {\n     \
    \       x\n        } else {\n            -1\n        }\n    }", "    if x > y\
    \ {\n        (x, y) = (y, x)\n    }\n    let mut x: isize = 0;\n    let mut y:\
    \ isize = 0;\n    let mut z: isize = 0;\n    let mut even: isize = 0;\n    let\
    \ mut odd: isize = 0;\n    let mut x: isize = x;\n    let mut y: isize = y;\n\
    \    while x < y {\n        z = x % y;\n        if z == 0 {\n            even\
    \ = x;\n            x += 1;\n        } else {\n            odd = x;\n        \
    \    x += 1;\n        }\n    }\n    if even > 0 {\n        even\n    } else {\n\
    \        odd\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n\
    \        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n\
    \    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n        -1\n\
    \    } else {\n        let mut x = x;\n        let mut y = y;\n        let mut\
    \ z = 1;\n        while z < y {\n            z = z * x + y;\n            y = z\
    \ % y;\n        }\n        z\n    }", "    if x > y {\n        (x, y) = (y, x)\n\
    \    }\n    if x <= y {\n        return -1\n    }\n    let mut x = x;\n    let\
    \ mut y = y;\n    let mut even: isize = 0;\n    while x <= y {\n        if x %\
    \ 2 == 0 {\n            even += 1;\n        }\n        x += 1;\n    }\n    if\
    \ even > y {\n        even = -1\n    }\n    even", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n     \
    \   -1\n    } else {\n        let mut x: isize = x;\n        let mut y: isize\
    \ = y;\n        loop {\n            if x % 2 == 0 {\n                x /= 2;\n\
    \                y += 1;\n            } else {\n                x /= 2;\n    \
    \        }\n            if y % 2 == 0 {\n                y /= 2;\n           \
    \     x += 1;\n            } else {\n                y /= 2;\n            }\n\
    \            if x == y {\n                return x;\n            }\n        }\n\
    \    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x <= y {\n        (x, y)\n    } else {\n        (y, x)\n\
    \    }\n    .iter()\n    .fold(-1, |a, b| {\n        if a % 2 == 0 {\n       \
    \     a\n        } else {\n            b\n        }\n    })", "    if x < y {\n\
    \        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", " \
    \   if x <= y {\n        -1\n    } else {\n        let mut x = x;\n        let\
    \ mut y = y;\n        while x > y {\n            let mut tmp = x;\n          \
    \  x = y;\n            y = tmp;\n        }\n        x\n    }", "    if x <= y\
    \ {\n        -1\n    } else {\n        let mut x = x;\n        let mut y = y;\n\
    \        let mut z = x;\n        while z < y {\n            z = z * 2 + 1;\n \
    \       }\n        if z == y {\n            x\n        } else {\n            -1\n\
    \        }\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n\
    \        let mut x: isize = x;\n        let mut y: isize = y;\n        loop {\n\
    \            if x % 2 == 0 {\n                x /= 2;\n            } else {\n\
    \                y /= 2;\n            }\n            if x == y {\n           \
    \     return x;\n            }\n        }\n    }\n    -1", "    if x < y {\n \
    \       choose_num(y, x)\n    } else {\n        let mut x = x;\n        let mut\
    \ y = y;\n        let mut z: isize = 0;\n        while z < x {\n            z\
    \ = z + y;\n        }\n        z\n    }", "    if x <= y {\n        -1\n    }\
    \ else {\n        let mut x = x;\n        let mut y = y;\n        let mut z =\
    \ 1;\n        while z < y {\n            if x % z == 0 {\n                x /=\
    \ z;\n            } else {\n                y /= z;\n            }\n         \
    \   z <<= 1;\n        }\n        x\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    let mut x: isize =\
    \ x;\n    let mut y: isize = y;\n    loop {\n        if x % 2 == 0 {\n       \
    \     x = x / 2;\n        } else {\n            x = x * 3 + 1;\n        }\n  \
    \      if y % 2 == 0 {\n            y = y / 2;\n        } else {\n           \
    \ y = y * 3 + 1;\n        }\n        if x == y {\n            return x;\n    \
    \    }\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n    \
    \    let mut x = x;\n        let mut y = y;\n        let mut z = 1;\n        while\
    \ z < y {\n            if x % z == 0 {\n                x /= z;\n            }\
    \ else {\n                y /= z;\n            }\n            z <<= 1;\n     \
    \   }\n        x\n    }", "    if x < y {\n        choose_num(y, x)\n    } else\
    \ {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n     \
    \   -1\n    } else {\n        let mut x = x;\n        let mut y = y;\n       \
    \ while x > y {\n            if x % 2 == 0 {\n                x /= 2;\n      \
    \      } else {\n                y /= 2;\n            }\n        }\n        x\n\
    \    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x <= y {\n        -1\n    } else {\n        let mut x =\
    \ x;\n        let mut y = y;\n        let mut z = x;\n        while z < y {\n\
    \            z = z * 2 + 1;\n        }\n        if z == y {\n            x\n \
    \       } else {\n            -1\n        }\n    }", "    if x <= y {\n      \
    \  -1\n    } else {\n        let mut i = x;\n        let mut j = y;\n        let\
    \ mut even: isize = 0;\n        let mut odd: isize = 0;\n        while i <= j\
    \ {\n            if i % 2 == 0 {\n                even += 1;\n            } else\
    \ {\n                odd += 1;\n            }\n            i += 1;\n         \
    \   j += 1;\n        }\n        if even > odd {\n            even\n        } else\
    \ {\n            odd\n        }\n    }", "    let mut result = x;\n    let mut\
    \ x = x;\n    let mut y = y;\n    while x >= y {\n        if x % 2 == 0 {\n  \
    \          x /= 2;\n        } else {\n            y /= 2;\n        }\n    }\n\
    \    while y > 0 {\n        if y % 2 == 0 {\n            y /= 2;\n        } else\
    \ {\n            result = y;\n            break;\n        }\n    }\n    result",
  "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        let\
    \ mut x: isize = 0;\n        let mut y: isize = 0;\n        let mut z: isize =\
    \ 0;\n        let mut a: isize = 0;\n        let mut b: isize = 0;\n        let\
    \ mut c: isize = 0;\n        let mut d: isize = 0;\n        let mut e: isize =\
    \ 0;\n        let mut f: isize = 0;\n        let mut g: isize = 0;\n        let\
    \ mut h: isize = 0;\n        let mut i: isize = 0;\n        let mut j: isize =\
    \ 0;\n        let mut k: isize = 0;\n        let mut l: isize = 0;\n        let\
    \ mut m: isize = 0;\n        let mut n: isize = 0;\n        let mut o: isize =\
    \ 0;\n        let mut p: isize = 0;\n        let mut q: isize = 0;\n        let\
    \ mut r: isize = 0;\n        let mut s: isize = 0;\n        let mut t: isize =\
    \ 0;\n        let mut u: isize = 0;\n        let mut v: isize = 0;\n        let\
    \ mut w: isize = 0;\n        let mut x: isize = 0;\n        let mut y: isize =\
    \ 0;\n        let mut z: isize = 0;\n        let mut a: isize = 0;\n        let\
    \ mut b: isize = 0;\n        let mut c: isize = 0;\n        let mut d: isize =\
    \ 0;\n        let mut e: isize = 0;\n        let mut f: isize = 0;\n        let\
    \ mut g: isize = 0;\n        let mut h: isize = 0;\n        let mut i: isize =\
    \ 0;\n        let mut j: isize = 0;\n        let mut k: isize = 0;\n        let\
    \ mut l: isize = 0;\n        let mut m: isize = 0;\n        let mut n: isize =\
    \ 0;\n        let mut o: isize = 0;\n        let mut p: isize = 0;\n        let\
    \ mut q: isize = 0;\n        let mut r: isize = 0;\n        let mut s: isize =\
    \ 0;\n        let mut t: isize = 0;\n        let mut u: isize = 0;\n        let\
    \ mut v: isize = 0;\n        let mut w: isize = 0;\n        let mut x: isize =\
    \ 0;\n        let mut y: isize = 0;\n        let mut z: isize = 0;\n        let\
    \ mut a: isize = 0;\n        let mut b: isize = 0;\n        let mut c: isize =\
    \ 0;\n        let mut d: isize = 0;\n        let mut e: isize = 0;\n        let\
    \ mut ", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x <= y {\n        -1\n    } else {\n    \
    \    let mut x = x;\n        let mut y = y;\n        let mut z = x;\n        while\
    \ z < y {\n            z = z * 2;\n        }\n        if z == y {\n          \
    \  x\n        } else {\n            -1\n        }\n    }", "    if x <= y {\n\
    \        -1\n    } else {\n        let mut x = x;\n        let mut y = y;\n  \
    \      let mut z = x;\n        while z < y {\n            z = z * 2 + 1;\n   \
    \     }\n        if z == y {\n            x\n        } else {\n            -1\n\
    \        }\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n\
    \        let mut x = x;\n        let mut y = y;\n        loop {\n            if\
    \ x % 2 == 0 {\n                x /= 2;\n                y += 1;\n           \
    \ } else {\n                x /= 2;\n                x -= 1;\n            }\n\
    \            if y >= x {\n                return x;\n            }\n        }\n\
    \    }\n    -1", "    if x < y {\n        choose_num(y, x)\n    } else {\n   \
    \     if x % 2 == 0 {\n            x\n        } else {\n            choose_num(y\
    \ - 1, x)\n        }\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        if x % 2 == 0 {\n            x\n        } else {\n         \
    \   choose_num(y - 1, x)\n        }\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ <= y {\n        -1\n    } else {\n        let mut x = x;\n        let mut y\
    \ = y;\n        while x > y {\n            x -= y;\n            y *= 2;\n    \
    \    }\n        x\n    }", "    if x <= y {\n        -1\n    } else {\n      \
    \  let mut max_num = x;\n        let mut min_num = y;\n        while max_num <\
    \ min_num {\n            max_num += 2;\n            min_num -= 2;\n        }\n\
    \        max_num\n    }", "    if x <= y {\n        -1\n    } else {\n       \
    \ let mut x = x;\n        let mut y = y;\n        while x > y {\n            x\
    \ -= y;\n            y *= 2;\n        }\n        x\n    }", "    if x < y {\n\
    \        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", " \
    \   if x <= y {\n        if x % 2 == 0 {\n            x\n        } else {\n  \
    \          y\n        }\n    } else {\n        if y % 2 == 0 {\n            y\n\
    \        } else {\n            x\n        }\n    }", "    if x > y {\n       \
    \ (x, y) = (y, x)\n    }\n    if x == y {\n        x\n    } else {\n        let\
    \ mut x = x;\n        let mut y = y;\n        while x > y {\n            x = x\
    \ + y;\n            y = x % y;\n        }\n        x\n    }", "    if x < y {\n\
    \        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", " \
    \   if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x <= y {\n        -1\n    } else {\n    \
    \    let mut x = x;\n        let mut y = y;\n        let mut z = x;\n        while\
    \ z < y {\n            z = z * 2;\n        }\n        if z == y {\n          \
    \  x\n        } else {\n            -1\n        }\n    }", "    if x < y {\n \
    \       choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "  \
    \  if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n  \
    \  }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  if x % 2 == 0 {\n            x // 2\n        } else {\n            choose_num(y\
    \ - 1, x)\n        }\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x > y {\n        (x, y) =\
    \ (y, x)\n    }\n    \n    let mut x = x;\n    let mut y = y;\n    \n    while\
    \ x >= y {\n        if x % 2 == 0 {\n            x = x / 2;\n        } else {\n\
    \            x = x * 3 + 1;\n        }\n    }\n    \n    while y >= x {\n    \
    \    if y % 2 == 0 {\n            y = y / 2;\n        } else {\n            y\
    \ = y * 3 + 1;\n        }\n    }\n    \n    x", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n     \
    \   -1\n    } else {\n        let mut x = x;\n        let mut y = y;\n       \
    \ let mut z: isize = 0;\n        while x <= y {\n            z = z * x + y;\n\
    \            if z % 2 == 0 {\n                return z;\n            }\n     \
    \       x += 1\n        }\n        -1\n    }", "    if x <= y {\n        -1\n\
    \    } else {\n        let mut x = x;\n        let mut y = y;\n        while x\
    \ > y {\n            x = x - y;\n            y = y + x;\n        }\n        x\n\
    \    }", "    if x <= y {\n        -1\n    } else {\n        let mut x: isize\
    \ = x;\n        let mut y: isize = y;\n        let mut z: isize = 0;\n       \
    \ while z < x {\n            if x % z == 0 {\n                z = z + 1;\n   \
    \         } else {\n                z = z + y;\n            }\n        }\n   \
    \     x\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n   \
    \     choose_num(x, y)\n    }", "    if x <= y {\n        -1\n    } else {\n \
    \       let mut x = x;\n        let mut y = y;\n        let mut z = 0;\n     \
    \   while z < y {\n            if x % 2 == 0 {\n                x /= 2;\n    \
    \        } else {\n                y /= 2;\n            }\n            z += 1\n\
    \        }\n        x\n    }", "    if x < y {\n        choose_num(y, x)\n   \
    \ } else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        let mut x = x;\n        let mut y = y;\n        let\
    \ mut z = x;\n        while z < y {\n            z = z * 2 + 1;\n        }\n \
    \       if z == y {\n            x\n        } else {\n            -1\n       \
    \ }\n    }", "    if x > y {\n        (x, y)\n    } else {\n        (y, x)\n \
    \   }\n    .iter()\n    .fold(-1, |a, b| {\n        if a % 2 == 0 {\n        \
    \    a\n        } else {\n            b\n        }\n    })", "    if x <= y {\n\
    \        (x, y)\n    } else {\n        (y, x)\n    }\n    .iter()\n    .fold(-1,\
    \ |a, b| {\n        if a % 2 == 0 {\n            a\n        } else {\n       \
    \     b\n        }\n    })", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    let mut x: isize = x;\n    let\
    \ mut y: isize = y;\n    while x > y {\n        if x % 2 == 0 {\n            x\
    \ = x / 2;\n        } else {\n            y = y / 2;\n        }\n    }\n    if\
    \ x == y {\n        x\n    } else {\n        -1\n    }", "    if x < y {\n   \
    \     choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if\
    \ x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x <= y {\n        -1\n    } else {\n        let mut x = x;\n\
    \        let mut y = y;\n        let mut z = x;\n        while z < y {\n     \
    \       if z % 2 == 0 {\n                z = z + 2;\n            } else {\n  \
    \              z = z + 1;\n            }\n        }\n        x\n    }", "    if\
    \ x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n     \
    \   -1\n    } else {\n        let mut x = x;\n        let mut y = y;\n       \
    \ let mut z: isize = 0;\n        while x <= y {\n            z = z * x + y;\n\
    \            if z % 2 == 0 {\n                return z;\n            }\n     \
    \       x += 1;\n            y += 1;\n        }\n        -1\n    }", "    if x\
    \ < y {\n        choose_num(y, x)\n    } else {\n        if x % 2 == 0 {\n   \
    \         x\n        } else {\n            choose_num(x / 2, y)\n        }\n \
    \   }", "    if x <= y {\n        (x, y)\n    } else {\n        (y, x)\n    }\n\
    \    .iter()\n    .find(|&x| x % 2 == 0)\n    .unwrap_or(-1)", "    if x < y {\n\
    \        choose_num(y, x)\n    } else {\n        let mut x: isize = x;\n     \
    \   let mut y: isize = y;\n        loop {\n            if x % 2 == 0 {\n     \
    \           x /= 2;\n            } else {\n                y /= 2;\n         \
    \   }\n            if x == y {\n                return x;\n            }\n   \
    \     }\n    }\n    -1", "    if x > y {\n        (x, y) = (y, x)\n    }\n   \
    \ let mut x: isize = 1;\n    let mut y: isize = 1;\n    while x <= y {\n     \
    \   if x % 2 == 0 {\n            x = x + 1;\n        } else {\n            y =\
    \ y + 1;\n        }\n    }\n    if x == y {\n        x\n    } else {\n       \
    \ -1\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n     \
    \   -1\n    } else {\n        let mut x: isize = x;\n        let mut y: isize\
    \ = y;\n        let mut z: isize = 0;\n        while z < x {\n            if x\
    \ % z == 0 {\n                z += y;\n            }\n            x /= z;\n  \
    \      }\n        z\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        let mut x: isize = x;\n        let mut y: isize = y;\n     \
    \   while x > y {\n            x -= y;\n            y *= 2;\n        }\n     \
    \   x\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n     \
    \   choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x <= y {\n        -1\n   \
    \ } else {\n        let mut x: isize = x;\n        let mut y: isize = y;\n   \
    \     let mut z: isize = 0;\n        while z < x {\n            x -= y;\n    \
    \        y *= 2;\n            z += y;\n        }\n        if z == x {\n      \
    \      x\n        } else {\n            -1\n        }\n    }", "    if x < y {\n\
    \        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", " \
    \   if x <= y {\n        -1\n    } else {\n        let mut x = x;\n        let\
    \ mut y = y;\n        let mut z = x;\n        while z < y {\n            z = z\
    \ * 2 + 1;\n        }\n        if z == y {\n            x\n        } else {\n\
    \            z\n        }\n    }", "    if x > y {\n        (x, y) = (y, x)\n\
    \    }\n    \n    let mut x: isize = 0;\n    let mut y: isize = 0;\n    \n   \
    \ while x < y {\n        let mut z = x + y;\n        if z % 2 == 0 {\n       \
    \     x = z;\n        } else {\n            y = z;\n        }\n    }\n    \n \
    \   if x == y {\n        x\n    } else {\n        -1\n    }", "    if x <= y {\n\
    \        -1\n    } else {\n        let mut x = x;\n        let mut y = y;\n  \
    \      let mut z: isize = 0;\n        while z < x {\n            z = z * 2 + y;\n\
    \        }\n        z\n    }", "    if x < y {\n        choose_num(y, x)\n   \
    \ } else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ <= y {\n        -1\n    } else {\n        let mut x = x;\n        let mut y\
    \ = y;\n        let mut z = x;\n        while z < y {\n            z = z * 2;\n\
    \        }\n        if z == y {\n            x\n        } else {\n           \
    \ -1\n        }\n    }", "    if x < y {\n        choose_num(y, x)\n    } else\
    \ {\n        let mut x = x;\n        let mut y = y;\n        let mut z = 1;\n\
    \        while z < y {\n            if x % z == 0 {\n                x /= z;\n\
    \            } else {\n                y /= z;\n            }\n            z <<=\
    \ 1;\n        }\n        x\n    }", "    if x < y {\n        choose_num(y, x)\n\
    \    } else {\n        choose_num(x, y)\n    }", "    if x > y {\n        (x,\
    \ y) = (y, x)\n    }\n    let mut x = x;\n    let mut y = y;\n    while x < y\
    \ {\n        let mut z = x;\n        while z < y {\n            if z % 2 == 0\
    \ {\n                return z;\n            }\n            z += 1\n        }\n\
    \        x += 1\n    }\n    -1", "    if x <= y {\n        -1\n    } else {\n\
    \        let mut x: isize = x;\n        let mut y: isize = y;\n        while x\
    \ > y {\n            x = x + 1;\n            y = y + 1;\n        }\n        x\n\
    \    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        if x\
    \ % 2 == 0 {\n            x\n        } else {\n            choose_num(y - 1, x)\n\
    \        }\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n\
    \        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n\
    \    } else {\n        choose_num(x, y)\n    }", "    if x > y {\n        (x,\
    \ y) = (y, x)\n    }\n    let mut x = x;\n    let mut y = y;\n    while x < y\
    \ {\n        if x % 2 == 0 {\n            x = x + 1;\n        } else {\n     \
    \       y = y - 1;\n        }\n    }\n    if x == y {\n        x\n    } else {\n\
    \        -1\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n\
    \        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n\
    \    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n        -1\n\
    \    } else {\n        let mut x = x;\n        let mut y = y;\n        let mut\
    \ z = x;\n        while z < y {\n            z = z * 2 + 1;\n        }\n     \
    \   if z == y {\n            x\n        } else {\n            z\n        }\n \
    \   }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    let mut x = x;\n    let mut y = y;\n    loop {\n        if\
    \ x % 2 == 0 && y % 2 == 0 {\n            return x;\n        }\n        if x %\
    \ 2 == 0 {\n            x /= 2;\n        } else {\n            y /= 2;\n     \
    \   }\n    }", "    if x > y {\n        (x, y) = (y, x)\n    }\n    let mut x:\
    \ isize = 0;\n    let mut y: isize = 0;\n    while x < y {\n        if x % 2 ==\
    \ 0 {\n            x += 1;\n        } else {\n            y += 1;\n        }\n\
    \    }\n    if x == y {\n        x\n    } else {\n        -1\n    }", "    if\
    \ x <= y {\n        -1\n    } else {\n        let mut x: isize = x;\n        let\
    \ mut y: isize = y;\n        while x > y {\n            x -= y;\n            y\
    \ *= 2;\n        }\n        x\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        if x % 2 == 0 {\n            x\n        } else {\n\
    \            choose_num(x / 2, y)\n        }\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n  \
    \  }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n     \
    \   -1\n    } else {\n        let mut x: isize = x;\n        let mut y: isize\
    \ = y;\n        let mut z: isize = 0;\n        while z < x || z < y {\n      \
    \      if z % 2 == 0 {\n                z += 1;\n            } else {\n      \
    \          z += 2;\n            }\n        }\n        z\n    }", "    if x < y\
    \ {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }",
  "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x <= y {\n        -1\n    } else {\n    \
    \    let mut x = x;\n        let mut y = y;\n        while x > y {\n         \
    \   x -= y;\n            y *= 2;\n        }\n        x\n    }", "    if x < y\
    \ {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }",
  "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x <= y {\n        -1\n    } else {\n        let mut i =\
    \ x;\n        let mut j = y;\n        while i <= j {\n            if i % 2 ==\
    \ 0 {\n                i += 1;\n            } else {\n                j -= 1;\n\
    \            }\n        }\n        i\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        let mut x: isize = 0;\n        let mut y: isize =\
    \ 0;\n        let mut z: isize = 0;\n        let mut w: isize = 0;\n        let\
    \ mut v: isize = 0;\n        let mut u: isize = 0;\n        let mut t: isize =\
    \ 0;\n        let mut f: isize = 0;\n        let mut g: isize = 0;\n        let\
    \ mut b: isize = 0;\n        let mut c: isize = 0;\n        let mut d: isize =\
    \ 0;\n        let mut e: isize = 0;\n        let mut f: isize = 0;\n        let\
    \ mut g: isize = 0;\n        let mut h: isize = 0;\n        let mut i: isize =\
    \ 0;\n        let mut j: isize = 0;\n        let mut k: isize = 0;\n        let\
    \ mut l: isize = 0;\n        let mut m: isize = 0;\n        let mut n: isize =\
    \ 0;\n        let mut o: isize = 0;\n        let mut p: isize = 0;\n        let\
    \ mut q: isize = 0;\n        let mut r: isize = 0;\n        let mut s: isize =\
    \ 0;\n        let mut t: isize = 0;\n        let mut u: isize = 0;\n        let\
    \ mut v: isize = 0;\n        let mut w: isize = 0;\n        let mut x: isize =\
    \ 0;\n        let mut y: isize = 0;\n        let mut z: isize = 0;\n        let\
    \ mut a: isize = 0;\n        let mut b: isize = 0;\n        let mut c: isize =\
    \ 0;\n        let mut d: isize = 0;\n        let mut e: isize = 0;\n        let\
    \ mut f: isize = 0;\n        let mut g: isize = 0;\n        let mut h: isize =\
    \ 0;\n        let mut i: isize = 0;\n        let mut j: isize = 0;\n        let\
    \ mut k: isize = 0;\n        let mut l: isize = 0;\n        let mut m: isize =\
    \ 0;\n        let mut n: isize = 0;\n        let mut o: isize = 0;\n        let\
    \ mut p: isize = 0;\n        let mut q: isize = 0;\n        let mut r: isize =\
    \ 0;\n        let mut s: isize = 0;\n        let mut t: isize = 0;\n        let\
    \ mut u: isize = 0;\n        let mut v: isize = 0;\n        let mut w: isize =\
    \ 0;\n        let mut x: isize = 0;\n        let mut y: isize = 0;\n        let\
    \ mut z: isize = 0;\n        let ", "    if x <= y {\n        -1\n    } else {\n\
    \        let mut max_num = x;\n        let mut min_num = y;\n        while max_num\
    \ < min_num {\n            max_num += 2;\n            min_num -= 2;\n        }\n\
    \        max_num\n    }", "    if x <= y {\n        -1\n    } else {\n       \
    \ let mut x: isize = x;\n        let mut y: isize = y;\n        while x > y {\n\
    \            x = x + y;\n            y = x % y;\n        }\n        x\n    }",
  "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x <= y {\n        -1\n    } else {\n        let mut num: isize\
    \ = 0;\n        let mut max_num: isize = 0;\n        let mut max_num_x: isize\
    \ = 0;\n        let mut max_num_y: isize = 0;\n        let mut max_num_x_y: isize\
    \ = 0;\n        let mut max_num_x_y_num: isize = 0;\n        let mut max_num_x_y_num_x:\
    \ isize = 0;\n        let mut max_num_x_y_num_y: isize = 0;\n        let mut max_num_x_y_num_x_y:\
    \ isize = 0;\n        let mut max_num_x_y_num_x_y_num: isize = 0;\n        let\
    \ mut max_num_x_y_num_x_y_num_x: isize = 0;\n        let mut max_num_x_y_num_x_y_num_y:\
    \ isize = 0;\n        let mut max_num_x_y_num_x_y_num_x_y: isize = 0;\n      \
    \  let mut max_num_x_y_num_x_y_num_x_y_num: isize = 0;\n        let mut max_num_x_y_num_x_y_num_x_y_num_x:\
    \ isize = 0;\n        let mut max_num_x_y_num_x_y_num_x_y_num_y: isize = 0;\n\
    \        let mut max_num_x_y_num_x_y_num_x_y_num_x_y: isize = 0;\n        let\
    \ mut max_num_x_y_num_x_y_num_x_y_num_x_y_num: isize = 0;\n        let mut max_num_x_y_num_x_y_num_x_y_num_x_y_num_x:\
    \ isize = 0;\n        let mut max_num_x_y_num_x_y_num_x_y_num_x_y_num_y: isize\
    \ = 0;\n        let mut max_num_x_y_num_x_y_num_x_y_num_x_y_num_x_y: isize = 0;\n\
    \        let mut max_num_x_y_num_x_y_num_x_y_num_x_y_num_x_y_num: isize = 0;\n\
    \        let mut max_num_x_y_num_x_y_num_x_y_num_x_y_num_x_y_num_x: isize = 0;\n\
    \        let mut max_num_x_y_num_x_y_num_x_y_num_x_y_num_x_y_num_y: isize = 0;\n\
    \        let mut max_num_x_y_num_x_y_num_x_y_num_x_y_num_x_y_num_x_y: isize =\
    \ 0;\n        let mut max_num_x_y_num_x_y_num_x_y_num_x_y_num_x_y_num_x_y_num:\
    \ isize = 0;\n        let mut max_num_x_y_num_x_y_num_x_y_num_x_y_num_x_y_num_x_y_num_x:\
    \ isize = 0;\n        let mut max_num_x_y_num_x_y_num_", "    if x <= y {\n  \
    \      -1\n    } else {\n        let mut x = x;\n        let mut y = y;\n    \
    \    let mut z = x;\n        while z < y {\n            z = z * 2 + 1;\n     \
    \   }\n        if z == y {\n            x\n        } else {\n            z\n \
    \       }\n    }", "    let mut even = x;\n    let mut odd = y;\n    loop {\n\
    \        if even % 2 == 0 {\n            even /= 2;\n        } else {\n      \
    \      odd *= 2;\n        }\n        if even >= y {\n            return even;\n\
    \        }\n    }", "    if x <= y {\n        -1\n    } else if x == y {\n   \
    \     x\n    } else {\n        x + 1\n    }", "    if x <= y {\n        -1\n \
    \   } else {\n        let mut x: isize = x;\n        let mut y: isize = y;\n \
    \       while x > y {\n            x -= y;\n            y *= 2;\n        }\n \
    \       x\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n \
    \       choose_num(x, y)\n    }", "    if x <= y {\n        if y % 2 == 0 {\n\
    \            return y\n        } else {\n            return -1\n        }\n  \
    \  } else {\n        if x % 2 == 0 {\n            return x\n        } else {\n\
    \            return -1\n        }\n    }", "    if x <= y {\n        -1\n    }\
    \ else {\n        let mut x: isize = x;\n        let mut y: isize = y;\n     \
    \   while x > y {\n            x -= y;\n            y *= 2;\n        }\n     \
    \   x\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n     \
    \   choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n     \
    \   -1\n    } else {\n        let mut x = x;\n        let mut y = y;\n       \
    \ let mut z = x;\n        while z < y {\n            z = z * 2;\n        }\n \
    \       if z == y {\n            x\n        } else {\n            -1\n       \
    \ }\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n       \
    \ choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else\
    \ {\n        choose_num(x, y)\n    }", "    let mut result = x;\n    let mut remainder\
    \ = y;\n    while remainder > 0 {\n        if remainder % 2 == 0 {\n         \
    \   result = result + 1;\n        }\n        remainder = remainder / 2;\n    }\n\
    \    result", "    let mut result = x;\n    let mut remainder = y;\n    while\
    \ remainder > 0 {\n        if remainder & 1 == 0 {\n            result = result\
    \ + 1;\n        }\n        remainder = remainder >> 1;\n    }\n    result", " \
    \   if x > y {\n        (x, y) = (y, x)\n    }\n    if x <= 0 {\n        return\
    \ -1\n    }\n    let mut even = x;\n    let mut odd = y;\n    while even > 0 &&\
    \ odd > 0 {\n        if even % 2 == 0 {\n            even /= 2;\n        } else\
    \ {\n            odd /= 2;\n        }\n    }\n    if even > 0 {\n        even\n\
    \    } else {\n        odd\n    }", "    if x < y {\n        choose_num(y, x)\n\
    \    } else {\n        let mut x = x;\n        let mut y = y;\n        let mut\
    \ z = x;\n        while z < y {\n            if z % 2 == 0 {\n               \
    \ z = z + 2;\n            } else {\n                z = z + 1;\n            }\n\
    \        }\n        if z == y {\n            x\n        } else {\n           \
    \ -1\n        }\n    }", "    if x < y {\n        choose_num(y, x)\n    } else\
    \ {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n  \
    \  }", "    if x <= y {\n        -1\n    } else {\n        let mut x = x;\n  \
    \      let mut y = y;\n        let mut z = x;\n        while z < y {\n       \
    \     z = z * 2 + 1;\n        }\n        if z == y {\n            x\n        }\
    \ else {\n            z\n        }\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n     \
    \   -1\n    } else {\n        let mut x: isize = x;\n        let mut y: isize\
    \ = y;\n        let mut z: isize = 0;\n        while z < x && z < y {\n      \
    \      if x % z == 0 && y % z == 0 {\n                return z;\n            }\n\
    \            z += 1\n        }\n        -1\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        if x % 2 == 0 {\n            x\n        } else {\n\
    \            choose_num(y - 1, x)\n        }\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }"]
stop_tokens:
- "\n}"

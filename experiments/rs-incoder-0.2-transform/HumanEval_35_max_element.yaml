name: HumanEval_35_max_element
language: rs
prompt: "/// Return maximum element in the list.\n/// >>> max_element(vec![1, 2, 3])\n\
  /// 3\n/// >>> max_element(vec![5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n/// 123\n\
  fn max_element(l: Vec<isize>) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = max_element;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n}\n"
completions: ['    l.iter().max().unwrap_or(0)', '    l.iter().max().unwrap_or(0)',
  "    let mut max_elem = l[0];\n    for i in l.iter().rev() {\n        if i > max_elem\
    \ {\n            max_elem = i;\n        }\n    }\n    max_elem", '    l.iter().max().unwrap_or(0)',
  '    l.iter().max().unwrap_or(l.len())', '    l.iter().max().unwrap_or(0)', '    l.iter().max().unwrap_or(0)',
  '    l.iter().max().unwrap_or(l.len())', '    l.iter().max_by_key(|&x| x).unwrap()',
  '    l.iter().max().unwrap_or(0)', "    let mut max_val = l[0];\n    for &x in l\
    \ {\n        if x > max_val {\n            max_val = x;\n        }\n    }\n  \
    \  max_val", '    l.iter().max().unwrap()', '    l.iter().max().unwrap_or(0)',
  '    l.iter().max().unwrap_or(0)', "    let mut max_elem = l[0];\n    for i in l.iter().rev()\
    \ {\n        if *i > max_elem {\n            max_elem = *i;\n        }\n    }\n\
    \    max_elem", "    let mut max = l[0];\n    for i in l.iter().rev() {\n    \
    \    if *i > max {\n            max = *i;\n        }\n    }\n    max", '    l.iter().max_unwrap_or(0)',
  "    let mut max_value = l[0];\n    let mut max_idx = 1;\n    for &i in l {\n  \
    \      if i > max_value {\n            max_value = i;\n            max_idx = 1;\n\
    \        }\n        if i == max_value {\n            max_idx += 1;\n        }\n\
    \    }\n    max_idx", '    l.iter().max().unwrap_or(0)', '    l.iter().max().unwrap_or(0)',
  '    l.iter().max().unwrap()', '    l.iter().max().unwrap_or(l.len())', '    l.iter().max().unwrap_or(0)',
  '    l.iter().max().unwrap_or(0)', '    l.iter().max().unwrap_or(0)', '    l.iter().max().unwrap_or(0)',
  "    let mut max = l[0];\n    for &x in l {\n        if x > max {\n            max\
    \ = x;\n        }\n    }\n    max", '    l.iter().max().unwrap_or(l.len())', '    l.iter().max().unwrap_or(0)',
  '    l.iter().max().unwrap_or(0)', "    let mut max = l[0];\n    for &x in l {\n\
    \        if x > max {\n            max = x;\n        }\n    }\n    max", '    l.iter().max().unwrap_or(l.len())',
  '    l.iter().max().unwrap_or(0)', "    let mut max = l[0];\n    for i in l.iter().rev()\
    \ {\n        if *i > max {\n            max = *i;\n        }\n    }\n    max",
  "    let mut max_value = l[0];\n    let mut max_idx = 1;\n    for i in l.iter().rev()\
    \ {\n        if *i > max_value {\n            max_value = *i;\n            max_idx\
    \ = i;\n        }\n    }\n    max_idx", '    l.iter().max_by_key(|&x| x).unwrap()',
  '    l.iter().max_by_key(|&x| x).unwrap()', '    l.iter().max().unwrap_or(0)', " \
    \   let mut max_value = l[0];\n    for &i in l {\n        if i > max_value {\n\
    \            max_value = i;\n        }\n    }\n    max_value", '    l.iter().max().unwrap_or(l.len())',
  '    l.iter().max().unwrap_or(0)', '    l.iter().max().unwrap_or(0)', '    l.iter().max_unwrap_or(l.iter().next().unwrap())',
  '    l.iter().max().unwrap()', '    l.iter().max().unwrap()', '    l.iter().max().unwrap_or(0)',
  '    l.iter().max_by_key(|&x| x).unwrap()', '    l.iter().max().unwrap_or(0)']
stop_tokens:
- "\n}"

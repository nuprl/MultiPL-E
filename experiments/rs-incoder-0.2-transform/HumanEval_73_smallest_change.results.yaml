language: rs
name: HumanEval_73_smallest_change
results:
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = -1;\n    for i in arr.iter().rev()\
    \ {\n        if *i == *(i + 1) {\n            min_change = std::i32::MAX;\n  \
    \          min_change_index = -1;\n        } else {\n            if min_change\
    \ > i - 1 {\n                min_change = i - 1;\n                min_change_index\
    \ = i;\n            }\n        }\n    }\n    min_change_index\n}\n\nfn main()\
    \ {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgv710n4p.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgv710n4p.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgv710n4p.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgv710n4p.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgv710n4p.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgv710n4p.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgv710n4p.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgv710n4p.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgv710n4p.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgv710n4p.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgv710n4p.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_idx = -1;\n    let mut min_change_size\
    \ = std::i32::MAX;\n    for i in arr.iter().rev() {\n        let mut change =\
    \ i;\n        let mut change_size = i;\n        while change != 0 {\n        \
    \    change /= 10;\n            change_size *= 10;\n        }\n        if change_size\
    \ < min_change_size {\n            min_change_size = change_size;\n          \
    \  min_change_idx = i;\n        }\n    }\n    min_change\n}\n\nfn main() {\n \
    \   let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6zu04tfd.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6zu04tfd.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6zu04tfd.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6zu04tfd.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6zu04tfd.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6zu04tfd.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6zu04tfd.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6zu04tfd.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6zu04tfd.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6zu04tfd.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6zu04tfd.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_idx = -1;\n    let mut min_change_val =\
    \ isize::MAX;\n\n    for idx in 0..arr.len() {\n        let mut cur_val = arr[idx];\n\
    \        let mut cur_change = isize::MAX;\n\n        for idx in 0..arr.len() {\n\
    \            if idx != idx {\n                cur_val = cur_val - cur_val + arr[idx];\n\
    \            }\n            cur_change = cur_change + cur_val / 2;\n        }\n\
    \n        if cur_change < min_change {\n            min_change = cur_change;\n\
    \            min_change_idx = idx;\n            min_change_val = cur_val;\n  \
    \      }\n    }\n\n    min_change\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpyb5scrpn.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyb5scrpn.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyb5scrpn.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyb5scrpn.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyb5scrpn.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyb5scrpn.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyb5scrpn.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyb5scrpn.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyb5scrpn.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyb5scrpn.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyb5scrpn.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mu\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpudoumotg.rs:63:11\n   |\n\
    63 |     let mu\n   |           ^ help: add `;` here\n64 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpudoumotg.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpudoumotg.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpudoumotg.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpudoumotg.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpudoumotg.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpudoumotg.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpudoumotg.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpudoumotg.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpudoumotg.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpudoumotg.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    for &i in arr {\n        if min_change_val < i {\n            min_change_val\
    \ = i;\n            min_change_index = i;\n        }\n    }\n    for i in 0..arr.len()\
    \ {\n        if min_change_val == arr[i] {\n            min_change_index += 1;\n\
    \        }\n    }\n    min_change\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4tfsz58l.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4tfsz58l.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4tfsz58l.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4tfsz58l.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4tfsz58l.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4tfsz58l.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4tfsz58l.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4tfsz58l.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4tfsz58l.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4tfsz58l.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4tfsz58l.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = -1;\n    for index in 0..arr.len()\
    \ {\n        let mut change = isize::MAX;\n        let mut change_index = -1;\n\
    \        for j in index..arr.len() {\n            if arr[j] != arr[index] {\n\
    \                change += 1;\n                change_index = j;\n           \
    \ }\n        }\n        if change < min_change {\n            min_change = change;\n\
    \            min_change_index = change_index;\n        }\n    }\n    min_change_index\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpe8u1sxe3.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpe8u1sxe3.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpe8u1sxe3.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpe8u1sxe3.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpe8u1sxe3.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpe8u1sxe3.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpe8u1sxe3.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpe8u1sxe3.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpe8u1sxe3.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpe8u1sxe3.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpe8u1sxe3.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_val_pos = 0;\n    let mut min_change_val_neg\
    \ = 0;\n    let mut min_change_val_neg_idx = 0;\n    let mut min_change_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_pos = 0;\n    let mut min_change_val_neg_val_neg\
    \ = 0;\n    let mut min_change_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_pos = 0;\n    let mut min_change_val_neg_val_neg_val_neg\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpp7a3_bza.rs:51:40\n   |\n\
    51 |     let mut min_change_val_neg_val_neg_\n   |                           \
    \             ^ help: add `;` here\n52 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp7a3_bza.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp7a3_bza.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp7a3_bza.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp7a3_bza.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp7a3_bza.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp7a3_bza.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp7a3_bza.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp7a3_bza.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp7a3_bza.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp7a3_bza.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_reverse\
    \ = 0;\n    let mut min_change_forward = 0;\n    let mut min_change_reverse_forward\
    \ = 0;\n    let mut min_change_forward = arr.len();\n    let mut min_change_forward_reverse\
    \ = 0;\n    let mut min_change_reverse_forward_reverse = 0;\n    let mut min_change_forward_reverse\
    \ = arr.len();\n    let mut min_change_reverse_forward_reverse = arr.len();\n\
    \    let mut min_change_forward_reverse = arr.len();\n    let mut min_change_reverse_forward_reverse\
    \ = arr.len();\n    let mut min_change_forward_reverse = arr.len();\n    let mut\
    \ min_change_reverse_forward_reverse = arr.len();\n    let mut min_change_forward_reverse\
    \ = arr.len();\n    let mut min_change_reverse_forward_reverse = arr.len();\n\
    \    let mut min_change_forward_reverse = arr.len();\n    let mut min_change_reverse_forward_reverse\
    \ = arr.len();\n    let mut min_change_forward_reverse = arr.len();\n    let mut\
    \ min_change_reverse_forward_reverse = arr.len();\n    let mut min_change_forward_reverse\
    \ = arr.len();\n    let mut min_change_reverse_forward_reverse = arr.len();\n\
    \    let mut min_change_forward_reverse = arr.len();\n    let mut min_change_reverse_forward_reverse\
    \ = arr.len();\n    let mut min_change_forward_reverse = arr.len();\n    let mut\
    \ min_change_reverse_forward_reverse = arr.len();\n    let mut min_change_forward_reverse\
    \ = arr.len();\n    let mut min_change_reverse_forward_reverse = arr.len();\n\
    \    let mut min_change_forward_reverse = arr.len();\n    let mut min_change_reverse_forward_reverse\
    \ = arr.len();\n    let mut min_change_forward_reverse = arr.len();\n    let mut\
    \ min_change_reverse_forward_reverse = arr.len();\n    let mut min_change_forward_reverse\
    \ = arr.len();\n    let mut min_change_reverse_forward_reverse = arr.len();\n\
    \    let mut min_change_forward_reverse = arr.len();\n    let mut min_change_reverse_forward_reverse\
    \ = arr.len();\n    let mut min_change_forward_reverse = arr.len();\n    let mut\
    \ min_change_reverse_forward_reverse = arr.len();\n    let mut min_change_forward_reverse\
    \ = arr.len();\n    let mut min_change_reverse_forward_reverse = arr.len();\n\
    \    let mut min_change_forward_reverse = arr.len();\n    let mut min_change_reverse_forward_\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp88rgsdyn.rs:53:40\n   |\n\
    53 |     let mut min_change_reverse_forward_\n   |                           \
    \             ^ help: add `;` here\n54 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp88rgsdyn.rs:58:17\n  \
    \ |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp88rgsdyn.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp88rgsdyn.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp88rgsdyn.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp88rgsdyn.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp88rgsdyn.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp88rgsdyn.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp88rgsdyn.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp88rgsdyn.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp88rgsdyn.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let mut \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpjqo_3ie6.rs:70:1\n\
    \   |\n70 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:79:17\n   |\n79 |     "
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len_index2\
    \ = 0;\n    let mut min_change_len_index3 = 0;\n    let mut min_change_len_index4\
    \ = 0;\n    let mut min_change_len_index5 = 0;\n    let mut min_change_len_index6\
    \ = 0;\n    let mut min_change_len_index7 = 0;\n    let mut min_change_len_index8\
    \ = 0;\n    let mut min_change_len_index9 = 0;\n    let mut min_change_len_index10\
    \ = 0;\n    let mut min_change_len_index11 = 0;\n    let mut min_change_len_index12\
    \ = 0;\n    let mut min_change_len_index13 = 0;\n    let mut min_change_len_index14\
    \ = 0;\n    let mut min_change_len_index15 = 0;\n    let mut min_change_len_index16\
    \ = 0;\n    let mut min_change_len_index17 = 0;\n    let mut min_change_len_index18\
    \ = 0;\n    let mut min_change_len_index19 = 0;\n    let mut min_change_len_index20\
    \ = 0;\n    let mut min_change_len_index21 = 0;\n    let mut min_change_len_index22\
    \ = 0;\n    let mut min_change_len_index23 = 0;\n    let mut min_change_len_index24\
    \ = 0;\n    let mut min_change_len_index25 = 0;\n    let mut min_change_len_index26\
    \ = 0;\n    let mut min_change_len_index27 = 0;\n    let mut min_change_len_index28\
    \ = 0;\n    let mut min_change_len_index29 = 0;\n    let mut min_change_len_index30\
    \ = 0;\n    let mut min_change_len_index31 = 0;\n    let mut min_change_len_index32\
    \ = 0;\n    let mut min_change_len_index33 = 0;\n    let mut min_change_len_index34\
    \ = 0;\n    let mut min_change_len_index35 = 0;\n    let mut min_change_len_index36\
    \ = 0;\n    let mut min_change_len_index37 = 0;\n    let mut min_change_len_index38\
    \ = 0;\n    let mut min_change_len_index39 = 0;\n    let mut min_change_len_index40\
    \ = 0;\n    let mut min_change_len_index41 = 0;\n    let mut min_change_len_index42\
    \ = 0;\n    let mut min_change_len_index43 = 0;\n    let mut min_change_len_index44\
    \ = 0;\n    let mut min_change_len_index45 = 0;\n    let mut min_change_len_index46\
    \ = 0;\n    let mut min_change_len_index47 = 0;\n    let mut min_change_len_index48\
    \ = 0;\n    let mut min_change_len_index\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpdzgp7efn.rs:63:33\n   |\n\
    63 |     let mut min_change_len_index\n   |                                 ^\
    \ help: add `;` here\n64 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdzgp7efn.rs:68:17\n   |\n68 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdzgp7efn.rs:68:25\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdzgp7efn.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdzgp7efn.rs:69:25\n   |\n69 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdzgp7efn.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdzgp7efn.rs:70:25\n   |\n70 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdzgp7efn.rs:71:17\n  \
    \ |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdzgp7efn.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdzgp7efn.rs:72:17\n   |\n72 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdzgp7efn.rs:72:25\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    for index in 0..arr.len() {\n        if arr[index] == arr[index].rev()\
    \ {\n            min_change_count = min_change_count + 1;\n            if min_change_count\
    \ > min_change {\n                min_change = min_change_count;\n           \
    \     min_change_index = index;\n            }\n        }\n    }\n    min_change_count\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsj07n_7w.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsj07n_7w.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsj07n_7w.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsj07n_7w.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsj07n_7w.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsj07n_7w.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsj07n_7w.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsj07n_7w.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsj07n_7w.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsj07n_7w.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsj07n_7w.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    for index in 0..arr.len()\
    \ {\n        let mut change = std::i32::MAX;\n        let mut change_index = 0;\n\
    \        while change_index < arr.len() && change > 0 {\n            change =\
    \ arr[index] - arr[change_index];\n            change_index += 1;\n        }\n\
    \        if change < min_change {\n            min_change = change;\n        \
    \    min_change_index = index;\n        }\n    }\n    min_change_index\n}\n\n\
    fn main() {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi0ct1wzw.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi0ct1wzw.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi0ct1wzw.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi0ct1wzw.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi0ct1wzw.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi0ct1wzw.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi0ct1wzw.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi0ct1wzw.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi0ct1wzw.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi0ct1wzw.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi0ct1wzw.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let \n}\n\nfn main() {\n   \
    \ let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpuqnkl0ee.rs:73:1\n  \
    \ |\n73 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:17\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:25\n \
    \  |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:25\n\
    \   |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:82:17\n   |\n82 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    for i in 0..arr.len() {\n        if arr[i] != arr[arr.len()\
    \ - 1 - i] {\n            min_change = std::i32::MAX;\n            min_change_index\
    \ = 0;\n            min_change_len = arr.len();\n        }\n        if min_change\
    \ > i - min_change_index {\n            min_change = i - min_change_index;\n \
    \           min_change_index = i;\n            min_change_len = arr.len();\n \
    \       }\n    }\n    min_change_len\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppf99aowd.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppf99aowd.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppf99aowd.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppf99aowd.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppf99aowd.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppf99aowd.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppf99aowd.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppf99aowd.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppf99aowd.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppf99aowd.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppf99aowd.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_val\
    \ = std::i32::MAX;\n    for index in 0..arr.len() {\n        let mut val = arr[index];\n\
    \        let mut change = std::i32::MAX;\n        let mut change_index = 0;\n\
    \        while val != 0 {\n            let mut temp = val % 10;\n            val\
    \ /= 10;\n            change = std::cmp::min(change, temp);\n            change_index\
    \ += 1;\n        }\n        if change < min_change {\n            min_change =\
    \ change;\n            min_change_index = change_index;\n            min_change_val\
    \ = val;\n        }\n    }\n    min_change_index\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7ea0tqbb.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7ea0tqbb.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7ea0tqbb.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7ea0tqbb.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7ea0tqbb.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7ea0tqbb.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7ea0tqbb.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7ea0tqbb.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7ea0tqbb.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7ea0tqbb.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7ea0tqbb.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = arr.len() as isize;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4\
    \ = 0;\n    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n\
    \    let mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let\
    \ mut min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut\
    \ min_change_index11 = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13\
    \ = 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 =\
    \ 0;\n    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n\
    \    let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n  \
    \  let mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let\
    \ mut min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut\
    \ min_change_index24 = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26\
    \ = 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 =\
    \ 0;\n    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n\
    \    let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n  \
    \  let mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let\
    \ mut min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut\
    \ min_change_index37 = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39\
    \ = 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 =\
    \ 0;\n    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n\
    \    let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n  \
    \  let mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let\
    \ mut min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut\
    \ min_change_index50 = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52\
    \ = 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 =\
    \ 0;\n    let mut min_change_index55 = 0;\n    let mut min_change\n}\n\nfn main()\
    \ {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpt1qe8n_p.rs:68:23\n   |\n\
    68 |     let mut min_change\n   |                       ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpt1qe8n_p.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpt1qe8n_p.rs:73:25\n   |\n73 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpt1qe8n_p.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpt1qe8n_p.rs:74:25\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpt1qe8n_p.rs:75:17\n  \
    \ |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpt1qe8n_p.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpt1qe8n_p.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpt1qe8n_p.rs:76:25\n\
    \   |\n76 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpt1qe8n_p.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpt1qe8n_p.rs:77:25\n   |\n77 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value "
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_palindrome\
    \ = false;\n    for index in 0..arr.len() {\n        let mut change = std::i32::MAX;\n\
    \        let mut change_palindrome = false;\n        for j in index..arr.len()\
    \ {\n            if arr[index] != arr[j] {\n                change += 1;\n   \
    \             change_palindrome = true;\n            }\n        }\n        if\
    \ change < min_change {\n            min_change = change;\n            min_change_index\
    \ = index;\n            min_change_palindrome = change_palindrome;\n        }\n\
    \    }\n    min_change\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpi0evaf7y.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi0evaf7y.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi0evaf7y.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpi0evaf7y.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpi0evaf7y.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpi0evaf7y.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpi0evaf7y.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpi0evaf7y.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpi0evaf7y.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpi0evaf7y.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpi0evaf7y.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n    let mut min_change_value\
    \ = arr[0];\n    let mut min_change_index = arr.len();\n\n}\n\nfn main() {\n \
    \   let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmptq7b4c4z.rs:71:17\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptq7b4c4z.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptq7b4c4z.rs:72:17\n   |\n72 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptq7b4c4z.rs:72:25\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptq7b4c4z.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptq7b4c4z.rs:73:25\n   |\n73 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptq7b4c4z.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptq7b4c4z.rs:74:25\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptq7b4c4z.rs:75:17\n  \
    \ |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptq7b4c4z.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptq7b4c4z.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    let mut min_change_val_pos = 0;\n    let mut min_change_val_neg\
    \ = 0;\n    let mut min_change_val_neg_index = 0;\n    let mut min_change_val_neg_pos\
    \ = 0;\n    let mut min_change_val_neg_neg = 0;\n    let mut min_change_val_neg_neg_index\
    \ = 0;\n    let mut min_change_val_neg_neg_pos = 0;\n    let mut min_change_val_neg_neg_neg\
    \ = 0;\n    let mut min_change_val_neg_neg_neg_index = 0;\n    let mut min_change_val_neg_neg_neg_pos\
    \ = 0;\n    let mut min_change_val_neg_neg_neg_neg = 0;\n    let mut min_change_val_neg_neg_neg_neg_index\
    \ = 0;\n    let mut min_change_val_neg_neg_neg_neg_pos = 0;\n    let mut min_change_val_neg_neg_neg_neg_neg\
    \ = 0;\n    let mut min_change_val_neg_neg_neg_neg_neg_index = 0;\n    let mut\
    \ min_change_val_neg_neg_neg_neg_neg_pos = 0;\n    let mut min_change_val_neg_neg_neg_neg_neg_neg\
    \ = 0;\n    let mut min_change_val_neg_neg_neg_neg_neg_neg_index = 0;\n    let\
    \ mut min_change_val_neg_neg_neg_neg_neg_neg_pos = 0;\n    let mut min_change_val_neg_neg_neg_neg_neg_neg_neg\
    \ = 0;\n    let mut min_change_val_neg_neg_neg_neg_neg_neg_neg_index = 0;\n  \
    \  let mut min_change_val_neg_neg_neg_neg_neg_neg_neg_pos = 0;\n    let mut min_change_val_neg_neg_neg_neg_neg_neg_neg_neg\
    \ = 0;\n    let mut min_change_val_neg_neg_neg_neg_neg_neg_neg_neg_index = 0;\n\
    \    let mut min_change_val_neg_neg_neg_neg_neg_neg_neg_neg_pos = 0;\n    let\
    \ mut min_change_val_neg_neg_neg_neg_neg_neg_neg_neg_neg = 0;\n    let mut min_change_val_neg_neg_neg_neg_neg_neg_neg_neg_neg_index\
    \ = 0;\n    let mut min_change_val_neg_neg_neg_neg_neg_neg_neg_neg_neg_pos = 0;\n\
    \    let mut min_change_val_neg_neg_neg_neg_neg_neg_neg_neg_neg_neg = 0;\n   \
    \ let mut min_change_val_neg_neg_neg_neg_neg_neg_neg_neg_neg_neg_index = 0;\n\
    \    let mut min_change_val_neg_neg_neg_neg_neg_neg_neg_neg_neg_neg_pos = 0;\n\
    \    let mut min_change_val_neg_neg_neg_neg_neg_neg_neg_neg_neg_neg_neg = 0;\n\
    \    let mut min_change_val_neg_neg_neg_neg_neg_neg_neg_neg_neg_neg_neg_index\
    \ = 0;\n    let mut min_change_val_neg_neg_neg_neg_neg_neg_\n}\n\nfn main() {\n\
    \    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmphxq0otf2.rs:48:52\n   |\n\
    48 |     let mut min_change_val_neg_neg_neg_neg_neg_neg_\n   |               \
    \                                     ^ help: add `;` here\n49 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphxq0otf2.rs:53:17\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphxq0otf2.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphxq0otf2.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphxq0otf2.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphxq0otf2.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphxq0otf2.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphxq0otf2.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphxq0otf2.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphxq0otf2.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphxq0otf2.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp44u3o2cs.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp44u3o2cs.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp44u3o2cs.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp44u3o2cs.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp44u3o2cs.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp44u3o2cs.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp44u3o2cs.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp44u3o2cs.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp44u3o2cs.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp44u3o2cs.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp44u3o2cs.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp44u3o2cs.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_idx = -1;\n    let mut min_change_val\
    \ = std::i32::MAX;\n    let mut min_change_val_pos = -1;\n    let mut min_change_val_neg\
    \ = -std::i32::MAX;\n    let mut min_change_val_neg = std::i32::MAX;\n    let\
    \ mut min_change_val_pos = std::i32::MAX;\n    let mut min_change_val_neg = std::i32::MAX;\n\
    \    let mut min_change_val_pos = std::i32::MAX;\n    let mut min_change_val_neg\
    \ = std::i32::MAX;\n    let mut min_change_val_pos = std::i32::MAX;\n    let mut\
    \ min_change_val_neg = std::i32::MAX;\n    let mut min_change_val_pos = std::i32::MAX;\n\
    \    let mut min_change_val_neg = std::i32::MAX;\n    let mut min_change_val_pos\
    \ = std::i32::MAX;\n    let mut min_change_val_neg = std::i32::MAX;\n    let mut\
    \ min_change_val_pos = std::i32::MAX;\n    let mut min_change_val_neg = std::i32::MAX;\n\
    \    let mut min_change_val_pos = std::i32::MAX;\n    let mut min_change_val_neg\
    \ = std::i32::MAX;\n    let mut min_change_val_pos = std::i32::MAX;\n    let mut\
    \ min_change_val_neg = std::i32::MAX;\n    let mut min_change_val_pos = std::i32::MAX;\n\
    \    let mut min_change_val_neg = std::i32::MAX;\n    let mut min_change_val_pos\
    \ = std::i32::MAX;\n    let mut min_change_val_neg = std::i32::MAX;\n    let mut\
    \ min_change_val_pos = std::i32::MAX;\n    let mut min_change_val_neg = std::i32::MAX;\n\
    \    let mut min_change_val_pos = std::i32::MAX;\n    let mut min_change_val_neg\
    \ = std::i32::MAX;\n    let mut min_change_val_pos = std::i32::MAX;\n    let mut\
    \ min_change_val_neg = std::i32::MAX;\n    let mut min_change_val_pos = std::i32::MAX;\n\
    \    let mut min_change_val_neg = std::i32::MAX;\n    let mut min_change_val_pos\
    \ = std::i32::MAX;\n    let mut min_change_val_neg = std::i32::MAX;\n    let mut\
    \ min_change_val_pos = std::i32::MAX;\n    let mut min_change_val_neg = std::i32::MAX;\n\
    \    let mut min_change_val_pos = std::i32::MAX;\n    let mut min_change_val_neg\
    \ = std::i32::MAX;\n    let mu\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp6gfcw5mr.rs:52:11\n   |\n\
    52 |     let mu\n   |           ^ help: add `;` here\n53 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp6gfcw5mr.rs:57:17\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6gfcw5mr.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6gfcw5mr.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6gfcw5mr.rs:58:25\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6gfcw5mr.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6gfcw5mr.rs:59:25\n   |\n59 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6gfcw5mr.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6gfcw5mr.rs:60:25\n   |\n60 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6gfcw5mr.rs:61:17\n  \
    \ |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6gfcw5mr.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_reverse\
    \ = 0;\n    let mut min_change_reverse_count = 0;\n    let mut min_change_reverse_start\
    \ = 0;\n    let mut min_change_reverse_end = 0;\n    let mut min_change_reverse_start2\
    \ = 0;\n    let mut min_change_reverse_end2 = 0;\n    let mut min_change_reverse_start3\
    \ = 0;\n    let mut min_change_reverse_end3 = 0;\n    let mut min_change_reverse_start4\
    \ = 0;\n    let mut min_change_reverse_end4 = 0;\n    let mut min_change_reverse_start5\
    \ = 0;\n    let mut min_change_reverse_end5 = 0;\n    let mut min_change_reverse_start6\
    \ = 0;\n    let mut min_change_reverse_end6 = 0;\n    let mut min_change_reverse_start7\
    \ = 0;\n    let mut min_change_reverse_end7 = 0;\n    let mut min_change_reverse_start8\
    \ = 0;\n    let mut min_change_reverse_end8 = 0;\n    let mut min_change_reverse_start9\
    \ = 0;\n    let mut min_change_reverse_end9 = 0;\n    let mut min_change_reverse_start10\
    \ = 0;\n    let mut min_change_reverse_end10 = 0;\n    let mut min_change_reverse_start11\
    \ = 0;\n    let mut min_change_reverse_end11 = 0;\n    let mut min_change_reverse_start12\
    \ = 0;\n    let mut min_change_reverse_end12 = 0;\n    let mut min_change_reverse_start13\
    \ = 0;\n    let mut min_change_reverse_end13 = 0;\n    let mut min_change_reverse_start14\
    \ = 0;\n    let mut min_change_reverse_end14 = 0;\n    let mut min_change_reverse_start15\
    \ = 0;\n    let mut min_change_reverse_end15 = 0;\n    let mut min_change_reverse_start16\
    \ = 0;\n    let mut min_change_reverse_end16 = 0;\n    let mut min_change_reverse_start17\
    \ = 0;\n    let mut min_change_reverse_end17 = 0;\n    let mut min_change_reverse_start18\
    \ = 0;\n    let mut min_change_reverse_end18 = 0;\n    let mut min_change_reverse_start19\
    \ = 0;\n    let mut min_change_reverse_end19 = 0;\n    let mut min_change_reverse_start20\
    \ = 0;\n    let mut min_change_reverse_end20 = 0;\n    let mut min_change_reverse_start21\
    \ = 0;\n    let mut min_change_reverse_end21 = 0;\n    let mut min_change_reverse_start22\
    \ = 0;\n    let mut min_change_reverse_end22 = 0;\n    let mu\n}\n\nfn main()\
    \ {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp29kvfp9j.rs:60:11\n   |\n\
    60 |     let mu\n   |           ^ help: add `;` here\n61 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp29kvfp9j.rs:65:17\n\
    \   |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp29kvfp9j.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp29kvfp9j.rs:66:17\n   |\n66 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp29kvfp9j.rs:66:25\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp29kvfp9j.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp29kvfp9j.rs:67:25\n   |\n67 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp29kvfp9j.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp29kvfp9j.rs:68:25\n   |\n68 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp29kvfp9j.rs:69:17\n  \
    \ |\n69 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp29kvfp9j.rs:69:25\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    for i in 0..arr.len() {\n        if arr[i] != arr[arr.len()\
    \ - 1 - i] {\n            min_change = std::i32::MAX;\n            min_change_index\
    \ = 0;\n            min_change_len = arr.len();\n        }\n        if min_change\
    \ > i - min_change_index {\n            min_change = i - min_change_index;\n \
    \           min_change_index = i;\n            min_change_len = arr.len();\n \
    \       }\n    }\n    min_change_len\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppf99aowd.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppf99aowd.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppf99aowd.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppf99aowd.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppf99aowd.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppf99aowd.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppf99aowd.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppf99aowd.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppf99aowd.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppf99aowd.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppf99aowd.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n    for i in\
    \ arr.iter().rev() {\n        if *i < min_change {\n            min_change = *i;\n\
    \        }\n    }\n    min_change\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpij3ffv5t.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpij3ffv5t.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpij3ffv5t.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpij3ffv5t.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpij3ffv5t.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpij3ffv5t.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpij3ffv5t.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpij3ffv5t.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpij3ffv5t.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpij3ffv5t.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpij3ffv5t.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    for i in arr.iter() {\n        if min_change > i {\n            min_change\
    \ = i;\n            min_change_index = i;\n            min_change_count = 1;\n\
    \        }\n        if min_change == i {\n            min_change_count += 1;\n\
    \        }\n    }\n    min_change_count\n}\n\nfn main() {\n    let candidate =\
    \ smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmputji07bp.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmputji07bp.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmputji07bp.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmputji07bp.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmputji07bp.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmputji07bp.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmputji07bp.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmputji07bp.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmputji07bp.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmputji07bp.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmputji07bp.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpyb6hay86.rs:65:33\n   |\n\
    65 |     let mut min_change_len_index\n   |                                 ^\
    \ help: add `;` here\n66 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyb6hay86.rs:70:17\n   |\n70 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyb6hay86.rs:70:25\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyb6hay86.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyb6hay86.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyb6hay86.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyb6hay86.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyb6hay86.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyb6hay86.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyb6hay86.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyb6hay86.rs:74:25\n\
    \   |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_palindromic\
    \ = false;\n    let mut min_change_palindromic_index = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut \n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmp3yc78iwt.rs:56:1\n\
    \   |\n56 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp3yc78iwt.rs:60:17\n   |\n60 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp3yc78iwt.rs:60:25\n \
    \  |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3yc78iwt.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3yc78iwt.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3yc78iwt.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3yc78iwt.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3yc78iwt.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3yc78iwt.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3yc78iwt.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3yc78iwt.rs:64:25\n\
    \   |\n64 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3yc78iwt.rs:65:17\n   |\n65 |     "
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_palindromic\
    \ = false;\n    let mut min_change_palindromic_index = 0;\n    for i in arr.iter()\
    \ {\n        if min_change > i {\n            min_change = i;\n            min_change_palindromic\
    \ = true;\n            min_change_palindromic_index = i;\n        }\n        if\
    \ min_change == i {\n            min_change_palindromic = false;\n        }\n\
    \    }\n    if min_change == isize::MAX {\n        return 0;\n    }\n    if min_change_palindromic\
    \ {\n        for i in min_change_palindromic_index..arr.len() {\n            if\
    \ arr[i] != min_change {\n                return i - min_change_palindromic_index\
    \ + 1;\n            }\n        }\n    }\n    for i in min_change_index..arr.len()\
    \ {\n        if arr[i] != min_change {\n            return i - min_change_index\
    \ + 1;\n        }\n    }\n    0\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgxp769rx.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgxp769rx.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgxp769rx.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgxp769rx.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgxp769rx.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgxp769rx.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgxp769rx.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgxp769rx.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgxp769rx.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgxp769rx.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgxp769rx.rs:51:17\n   |\n51 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mu\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp68lh02m8.rs:63:11\n   |\n\
    63 |     let mu\n   |           ^ help: add `;` here\n64 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp68lh02m8.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68lh02m8.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68lh02m8.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68lh02m8.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68lh02m8.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68lh02m8.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68lh02m8.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68lh02m8.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68lh02m8.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68lh02m8.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n    let mut\
    \ min_change_index = 0;\n    let mut min_change_index2 = 0;\n    for &i in arr\
    \ {\n        if i != min_change {\n            min_change = i;\n            min_change_index\
    \ = min_change_index2;\n        }\n        min_change_index2 += 1;\n    }\n  \
    \  min_change_index\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpz9yavy2b.rs:27:17\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpz9yavy2b.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpz9yavy2b.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpz9yavy2b.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpz9yavy2b.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpz9yavy2b.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpz9yavy2b.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpz9yavy2b.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpz9yavy2b.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpz9yavy2b.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpz9yavy2b.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    for index in 0..arr.len() {\n        let mut count = 0;\n        let\
    \ mut index = index;\n        while index >= 0 {\n            count += 1;\n  \
    \          index -= 1;\n        }\n        if count < min_change {\n         \
    \   min_change = count;\n            min_change_index = index;\n        }\n  \
    \  }\n    min_change_count\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppjdpx8yi.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppjdpx8yi.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppjdpx8yi.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppjdpx8yi.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppjdpx8yi.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppjdpx8yi.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppjdpx8yi.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppjdpx8yi.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppjdpx8yi.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppjdpx8yi.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppjdpx8yi.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    for &i in arr {\n        if min_change > i {\n           \
    \ min_change = i;\n            min_change_index = i;\n        }\n        if min_change\
    \ == i {\n            min_change_len = i;\n        }\n    }\n    min_change_len\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmput6pqzxe.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmput6pqzxe.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmput6pqzxe.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmput6pqzxe.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmput6pqzxe.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmput6pqzxe.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmput6pqzxe.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmput6pqzxe.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmput6pqzxe.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmput6pqzxe.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmput6pqzxe.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let \n}\n\nfn main() {\n   \
    \ let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpuqnkl0ee.rs:73:1\n  \
    \ |\n73 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:17\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:25\n \
    \  |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:25\n\
    \   |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:82:17\n   |\n82 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = min_change_len as usize;\n    let\
    \ mut min_change_len = min_change_len as usize;\n    let mut min_change_len =\
    \ min_change_len as usize;\n    let mut min_change_len = min_change_len as usize;\n\
    \    let mut min_change_len = min_change_len as usize;\n    let mut min_change_len\
    \ = min_change_len as usize;\n    let mut min_change_len = min_change_len as usize;\n\
    \    let mut min_change_len = min_change_len as usize;\n    let mut min_change_len\
    \ = min_change_len as usize;\n    let mut min_change_len = min_change_len as usize;\n\
    \    let mut min_change_len = min_change_len as usize;\n    let mut min_change_len\
    \ = min_change_len as usize;\n    let mut min_change_len = min_change_len as usize;\n\
    \    let mut min_change_len = min_change_len as usize;\n    let mut min_change_len\
    \ = min_change_len as usize;\n    let mut min_change_len = min_change_len as usize;\n\
    \    let mut min_change_len = min_change_len as usize;\n    let mut min_change_len\
    \ = min_change_len as usize;\n    let mut min_change_len = min_change_len as usize;\n\
    \    let mut min_change_len = min_change_len as usize;\n    let mut min_change_len\
    \ = min_change_len as usize;\n    let mut min_change_len = min_change_len as usize;\n\
    \    let mut min_change_len = min_change_len as usize;\n    let mut min_change_len\
    \ = min_change_len as usize;\n    let mut min_change_len = min_change_len as usize;\n\
    \    let mut min_change_len = min_change_len as usize;\n    let mut min_change_len\
    \ = min_change_len as usize;\n    let mut min_change_len = min_change_len as usize;\n\
    \    let mut min_change_len = min_change_len as usize;\n    let mut min_change_len\
    \ = min_change_len as usize;\n    let mut min_change_len = min_change_len as usize;\n\
    \    let mut min_change_len = min_change_len as usize;\n    let mut min_change_len\
    \ = min_change_len as usize;\n    let mut min_change_len = min_change_len as usize;\n\
    \    let mut min_change_len = min_change_len as usize;\n    let mut min_change_len\
    \ = min_change_len as usize;\n    let mut min_change_len = min_change_len as usize;\n\
    \    let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpser0kxin.rs:53:1\n  \
    \ |\n53 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpser0kxin.rs:57:17\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpser0kxin.rs:57:25\n \
    \  |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpser0kxin.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpser0kxin.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpser0kxin.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpser0kxin.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpser0kxin.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpser0kxin.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpser0kxin.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpser0kxin.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpser0kxin.rs:62:17\n   |\n62 |     assert"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = -1;\n    let mut min_change_index3 = -1;\n    let mut min_change_index4 =\
    \ -1;\n    let mut min_change_index5 = -1;\n    let mut min_change_index6 = -1;\n\
    \    let mut min_change_index7 = -1;\n    let mut min_change_index8 = -1;\n  \
    \  let mut min_change_index9 = -1;\n    let mut min_change_index10 = -1;\n   \
    \ let mut min_change_index11 = -1;\n    let mut min_change_index12 = -1;\n   \
    \ let mut min_change_index13 = -1;\n    let mut min_change_index14 = -1;\n   \
    \ let mut min_change_index15 = -1;\n    let mut min_change_index16 = -1;\n   \
    \ let mut min_change_index17 = -1;\n    let mut min_change_index18 = -1;\n   \
    \ let mut min_change_index19 = -1;\n    let mut min_change_index20 = -1;\n   \
    \ let mut min_change_index21 = -1;\n    let mut min_change_index22 = -1;\n   \
    \ let mut min_change_index23 = -1;\n    let mut min_change_index24 = -1;\n   \
    \ let mut min_change_index25 = -1;\n    let mut min_change_index26 = -1;\n   \
    \ let mut min_change_index27 = -1;\n    let mut min_change_index28 = -1;\n   \
    \ let mut min_change_index29 = -1;\n    let mut min_change_index30 = -1;\n   \
    \ let mut min_change_index31 = -1;\n    let mut min_change_index32 = -1;\n   \
    \ let mut min_change_index33 = -1;\n    let mut min_change_index34 = -1;\n   \
    \ let mut min_change_index35 = -1;\n    let mut min_change_index36 = -1;\n   \
    \ let mut min_change_index37 = -1;\n    let mut min_change_index38 = -1;\n   \
    \ let mut min_change_index39 = -1;\n    let mut min_change_index40 = -1;\n   \
    \ let mut min_change_index41 = -1;\n    let mut min_change_index42 = -1;\n   \
    \ let mut min_change_index43 = -1;\n    let mut min_change_index44 = -1;\n   \
    \ let mut min_change_index45 = -1;\n    let mut min_change_index46 = -1;\n   \
    \ let mut min_change_index47 = -1;\n    let mut min_change_index48 = -1;\n   \
    \ let mut min_change_index49 = -1;\n    let mut min_change_index50 = -1;\n   \
    \ let mut min_change_index51 = -1;\n    let mut min_change\n}\n\nfn main() {\n\
    \    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpquixs8ur.rs:64:23\n   |\n\
    64 |     let mut min_change\n   |                       ^ help: add `;` here\n\
    65 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpquixs8ur.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpquixs8ur.rs:69:25\n   |\n69 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpquixs8ur.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpquixs8ur.rs:70:25\n   |\n70 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpquixs8ur.rs:71:17\n  \
    \ |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpquixs8ur.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpquixs8ur.rs:72:17\n   |\n72 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpquixs8ur.rs:72:25\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpquixs8ur.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpquixs8ur.rs:73:25\n   |\n73 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value "
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n    let mut\
    \ min_change_index = 0;\n    let mut min_change_index2 = -1;\n    let mut min_change_index3\
    \ = -1;\n    let mut min_change_index4 = -1;\n    let mut min_change_index5 =\
    \ -1;\n    let mut min_change_index6 = -1;\n    let mut min_change_index7 = -1;\n\
    \    let mut min_change_index8 = -1;\n    let mut min_change_index9 = -1;\n  \
    \  let mut min_change_index10 = -1;\n    let mut min_change_index11 = -1;\n  \
    \  let mut min_change_index12 = -1;\n    let mut min_change_index13 = -1;\n  \
    \  let mut min_change_index14 = -1;\n    let mut min_change_index15 = -1;\n  \
    \  let mut min_change_index16 = -1;\n    let mut min_change_index17 = -1;\n  \
    \  let mut min_change_index18 = -1;\n    let mut min_change_index19 = -1;\n  \
    \  let mut min_change_index20 = -1;\n    let mut min_change_index21 = -1;\n  \
    \  let mut min_change_index22 = -1;\n    let mut min_change_index23 = -1;\n  \
    \  let mut min_change_index24 = -1;\n    let mut min_change_index25 = -1;\n  \
    \  let mut min_change_index26 = -1;\n    let mut min_change_index27 = -1;\n  \
    \  let mut min_change_index28 = -1;\n    let mut min_change_index29 = -1;\n  \
    \  let mut min_change_index30 = -1;\n    let mut min_change_index31 = -1;\n  \
    \  let mut min_change_index32 = -1;\n    let mut min_change_index33 = -1;\n  \
    \  let mut min_change_index34 = -1;\n    let mut min_change_index35 = -1;\n  \
    \  let mut min_change_index36 = -1;\n    let mut min_change_index37 = -1;\n  \
    \  let mut min_change_index38 = -1;\n    let mut min_change_index39 = -1;\n  \
    \  let mut min_change_index40 = -1;\n    let mut min_change_index41 = -1;\n  \
    \  let mut min_change_index42 = -1;\n    let mut min_change_index43 = -1;\n  \
    \  let mut min_change_index44 = -1;\n    let mut min_change_index45 = -1;\n  \
    \  let mut min_change_index46 = -1;\n    let mut min_change_index47 = -1;\n  \
    \  let mut min_change_index48 = -1;\n    let mut min_change_index49 = -1;\n  \
    \  let mut min_change_index50 = \n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `}`\n  --> /tmp/tmpinlsqqw1.rs:63:1\n\
    \   |\n63 | }\n   | ^ expected expression\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpinlsqqw1.rs:67:17\n   |\n67 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpinlsqqw1.rs:67:25\n \
    \  |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpinlsqqw1.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpinlsqqw1.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpinlsqqw1.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpinlsqqw1.rs:69:25\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpinlsqqw1.rs:70:17\n  \
    \ |\n70 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpinlsqqw1.rs:70:25\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpinlsqqw1.rs:71:17\n   |\n71 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpinlsqqw1.rs:71:25\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpinlsqqw1.rs:72:17\n   |\n72 |     "
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let \n}\n\nfn main() {\n   \
    \ let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpuqnkl0ee.rs:73:1\n  \
    \ |\n73 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:17\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:25\n \
    \  |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:25\n\
    \   |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:82:17\n   |\n82 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n    let mut\
    \ min_change_index = 0;\n    let mut min_change_count = 0;\n    for index in 0..arr.len()\
    \ {\n        if arr[index] != arr[index].rev() {\n            min_change_count\
    \ += 1;\n            if min_change_count > min_change {\n                min_change\
    \ = min_change_count;\n                min_change_index = index;\n           \
    \ }\n        }\n    }\n    min_change_index\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2imrry6f.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2imrry6f.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2imrry6f.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2imrry6f.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2imrry6f.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2imrry6f.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2imrry6f.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2imrry6f.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2imrry6f.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2imrry6f.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2imrry6f.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    let mut min_change_index2 = 0;\n    let mut min_change_count2 = 0;\n\
    \    let mut min_change_index3 = 0;\n    let mut min_change_count3 = 0;\n    let\
    \ mut min_change_index4 = 0;\n    let mut min_change_count4 = 0;\n    let mut\
    \ min_change_index5 = 0;\n    let mut min_change_count5 = 0;\n    let mut min_change_index6\
    \ = 0;\n    let mut min_change_count6 = 0;\n    let mut min_change_index7 = 0;\n\
    \    let mut min_change_count7 = 0;\n    let mut min_change_index8 = 0;\n    let\
    \ mut min_change_count8 = 0;\n    let mut min_change_index9 = 0;\n    let mut\
    \ min_change_count9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_count10\
    \ = 0;\n    let mut min_change_index11 = 0;\n    let mut min_change_count11 =\
    \ 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_count12 = 0;\n\
    \    let mut min_change_index13 = 0;\n    let mut min_change_count13 = 0;\n  \
    \  let mut min_change_index14 = 0;\n    let mut min_change_count14 = 0;\n    let\
    \ mut min_change_index15 = 0;\n    let mut min_change_count15 = 0;\n    let mut\
    \ min_change_index16 = 0;\n    let mut min_change_count16 = 0;\n    let mut min_change_index17\
    \ = 0;\n    let mut min_change_count17 = 0;\n    let mut min_change_index18 =\
    \ 0;\n    let mut min_change_count18 = 0;\n    let mut min_change_index19 = 0;\n\
    \    let mut min_change_count19 = 0;\n    let mut min_change_index20 = 0;\n  \
    \  let mut min_change_count20 = 0;\n    let mut min_change_index21 = 0;\n    let\
    \ mut min_change_count21 = 0;\n    let mut min_change_index22 = 0;\n    let mut\
    \ min_change_count22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_count23\
    \ = 0;\n    let mut min_change_index24 = 0;\n    let mut min_change_count24 =\
    \ 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_count25 = 0;\n\
    \    let mut min_change_index26 = 0;\n    let mut min_change_count26 = 0;\n  \
    \  let mut min_change_index27 = 0;\n    let mut min_change_count27 = 0;\n    let\
    \ mut min_change_index28 = 0;\n    let mut min_change_count28 = 0;\n    let mut\
    \ min_change_index\n}\n\nfn main() {\n    let candidate = smallest_change;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpsmuw20yn.rs:69:29\n   |\n\
    69 |     let mut min_change_index\n   |                             ^ help: add\
    \ `;` here\n70 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpsmuw20yn.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpsmuw20yn.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsmuw20yn.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsmuw20yn.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsmuw20yn.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsmuw20yn.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsmuw20yn.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsmuw20yn.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsmuw20yn.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsmuw20yn.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_idx = -1;\n    let mut min_change_val\
    \ = std::i32::MAX;\n    let mut min_change_val_i = -1;\n    let mut min_change_val_j\
    \ = -1;\n    let mut min_change_val_k = -1;\n    let mut min_change_val_l = -1;\n\
    \    let mut min_change_val_m = -1;\n    let mut min_change_val_n = -1;\n    let\
    \ mut min_change_val_o = -1;\n    let mut min_change_val_q = -1;\n    let mut\
    \ min_change_val_r = -1;\n    let mut min_change_val_s = -1;\n    let mut min_change_val_t\
    \ = -1;\n    let mut min_change_val_tt = -1;\n    let mut min_change_val_u = -1;\n\
    \    let mut min_change_val_v = -1;\n    let mut min_change_val_w = -1;\n    let\
    \ mut min_change_val_x = -1;\n    let mut min_change_val_y = -1;\n    let mut\
    \ min_change_val_z = -1;\n    let mut min_change_val_aa = -1;\n    let mut min_change_val_ab\
    \ = -1;\n    let mut min_change_val_ac = -1;\n    let mut min_change_val_ad =\
    \ -1;\n    let mut min_change_val_ae = -1;\n    let mut min_change_val_af = -1;\n\
    \    let mut min_change_val_ag = -1;\n    let mut min_change_val_ah = -1;\n  \
    \  let mut min_change_val_ai = -1;\n    let mut min_change_val_aj = -1;\n    let\
    \ mut min_change_val_ak = -1;\n    let mut min_change_val_al = -1;\n    let mut\
    \ min_change_val_am = -1;\n    let mut min_change_val_an = -1;\n    let mut min_change_val_ao\
    \ = -1;\n    let mut min_change_val_ap = -1;\n    let mut min_change_val_aq =\
    \ -1;\n    let mut min_change_val_ar = -1;\n    let mut min_change_val_as = -1;\n\
    \    let mut min_change_val_at = -1;\n    let mut min_change_val_au = -1;\n  \
    \  let mut min_change_val_av = -1;\n    let mut min_change_val_aw = -1;\n    let\
    \ mut min_change_val_ax = -1;\n    let mut min_change_val_ay = -1;\n    let mut\
    \ min_change_val_az = -1;\n    let mut min_change_val_ba = -1;\n    let mut min_change_val_bb\
    \ = -1;\n    let mut min_change_val_bc = -1;\n    let mut min_change_val_bd =\
    \ -1;\n    let mut min_change_val_be = -1;\n    let mut min_change_val_bf = -1;\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4nvx44o0.rs:69:17\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4nvx44o0.rs:69:25\n   |\n69 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4nvx44o0.rs:70:17\n   |\n70 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4nvx44o0.rs:70:25\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4nvx44o0.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4nvx44o0.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4nvx44o0.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4nvx44o0.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4nvx44o0.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4nvx44o0.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4nvx44o0.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    for &i in arr {\n        if i != min_change_val {\n           \
    \ min_change_val = i;\n            min_change_index = i;\n        }\n    }\n \
    \   for &i in arr {\n        if i == min_change_val {\n            min_change_index\
    \ += 1;\n        }\n    }\n    min_change\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp45h1tcko.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45h1tcko.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp45h1tcko.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp45h1tcko.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp45h1tcko.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp45h1tcko.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp45h1tcko.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp45h1tcko.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp45h1tcko.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp45h1tcko.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp45h1tcko.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    for index in 0..arr.len() {\n        let mut min_change_count = std::i32::MAX;\n\
    \        let mut min_change = std::i32::MAX;\n        let mut min_change_index\
    \ = 0;\n        for j in index..arr.len() {\n            if arr[index] != arr[j]\
    \ {\n                if min_change > j - index {\n                    min_change\
    \ = j - index;\n                    min_change_index = j;\n                }\n\
    \                min_change_count = std::i32::MAX;\n            }\n          \
    \  min_change_count += 1;\n        }\n        if min_change_count < min_change\
    \ {\n            min_change = min_change_count;\n            min_change_index\
    \ = index;\n        }\n    }\n    min_change\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpev3o16yv.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpev3o16yv.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpev3o16yv.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpev3o16yv.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpev3o16yv.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpev3o16yv.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpev3o16yv.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpev3o16yv.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpev3o16yv.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpev3o16yv.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpev3o16yv.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let mut \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpjqo_3ie6.rs:70:1\n\
    \   |\n70 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:79:17\n   |\n79 |     "
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n    for &x in\
    \ arr {\n        if x == min_change {\n            min_change = x;\n        }\n\
    \    }\n    min_change\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpndcab3jd.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpndcab3jd.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpndcab3jd.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpndcab3jd.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpndcab3jd.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpndcab3jd.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpndcab3jd.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpndcab3jd.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpndcab3jd.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpndcab3jd.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpndcab3jd.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_idx = arr.len() - 1;\n    let mut\
    \ min_change_idx = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n\
    \    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx = arr.len()\
    \ - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmptzj1du52.rs:58:23\n   |\n\
    58 |     let mut min_change\n   |                       ^ help: add `;` here\n\
    59 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmptzj1du52.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptzj1du52.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptzj1du52.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptzj1du52.rs:64:25\n   |\n64 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptzj1du52.rs:65:17\n  \
    \ |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptzj1du52.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptzj1du52.rs:66:17\n   |\n66 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptzj1du52.rs:66:25\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptzj1du52.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptzj1du52.rs:67:25\n   |\n67 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value "
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_\n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp9r0svm04.rs:75:17\n   |\n\
    75 |     let mut min_\n   |                 ^ help: add `;` here\n76 | }\n   |\
    \ - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9r0svm04.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9r0svm04.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9r0svm04.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9r0svm04.rs:81:25\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9r0svm04.rs:82:17\n  \
    \ |\n82 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9r0svm04.rs:82:25\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9r0svm04.rs:83:17\n   |\n83 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9r0svm04.rs:83:25\n\
    \   |\n83 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9r0svm04.rs:84:17\n   |\n84 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9r0svm04.rs:84:25\n   |\n84 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in th"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_index = 0;\n    let mut min_change_val\
    \ = arr[0];\n    for &i in arr {\n        if i != min_change_val {\n         \
    \   min_change = min_change_index;\n            min_change_val = i;\n        }\n\
    \        min_change_index += 1;\n    }\n    min_change\n}\n\nfn main() {\n   \
    \ let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpsxy2sqqu.rs:27:17\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsxy2sqqu.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsxy2sqqu.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsxy2sqqu.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsxy2sqqu.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsxy2sqqu.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsxy2sqqu.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsxy2sqqu.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsxy2sqqu.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsxy2sqqu.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsxy2sqqu.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpyb6hay86.rs:65:33\n   |\n\
    65 |     let mut min_change_len_index\n   |                                 ^\
    \ help: add `;` here\n66 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyb6hay86.rs:70:17\n   |\n70 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyb6hay86.rs:70:25\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyb6hay86.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyb6hay86.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyb6hay86.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyb6hay86.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyb6hay86.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyb6hay86.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyb6hay86.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyb6hay86.rs:74:25\n\
    \   |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let mut \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpjqo_3ie6.rs:70:1\n\
    \   |\n70 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:79:17\n   |\n79 |     "
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_size\
    \ = std::i32::MAX;\n    let mut min_change_size_index = 0;\n    let mut min_change_size\
    \ = std::i32::MAX;\n    let mut min_change_size_index = 0;\n    for i in arr.iter()\
    \ {\n        if min_change > i {\n            min_change = i;\n            min_change_index\
    \ = i;\n            min_change_size = min_change_index - min_change_index;\n \
    \           min_change_size_index = min_change_index;\n        }\n        if min_change_size\
    \ < i - min_change_index {\n            min_change_size = i - min_change_index;\n\
    \            min_change_size_index = min_change_index;\n        }\n    }\n   \
    \ min_change\n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp0ubmd6_v.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0ubmd6_v.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0ubmd6_v.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp0ubmd6_v.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp0ubmd6_v.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp0ubmd6_v.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp0ubmd6_v.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp0ubmd6_v.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp0ubmd6_v.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp0ubmd6_v.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp0ubmd6_v.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::max(isize::MIN, isize::MAX);\n    let mut min_change_index = 0;\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n  \
    \  for pos in 0..arr.len() {\n        let mut min_change = std::cmp::max(isize::MIN,\
    \ isize::MAX);\n        let mut min_change_index = 0;\n        let mut min_change_pos\
    \ = 0;\n        let mut min_change_len = arr.len();\n        for index in 0..arr.len()\
    \ {\n            let mut min_change = std::cmp::max(isize::MIN, isize::MAX);\n\
    \            let mut min_change_index = 0;\n            let mut min_change_pos\
    \ = 0;\n            let mut min_change_len = arr.len();\n            if index\
    \ == pos {\n                continue;\n            }\n            for index in\
    \ 0..arr.len() {\n                if index == pos {\n                    continue;\n\
    \                }\n                if arr[index] > arr[index + 1] {\n       \
    \             min_change = std::cmp::min(min_change, arr[index + 1] - arr[index]);\n\
    \                    min_change_index = index;\n                    min_change_pos\
    \ = pos + 1;\n                    min_change_len = arr.len() - index;\n      \
    \          }\n            }\n        }\n        if min_change < min_change {\n\
    \            min_change = min_change;\n            min_change_index = min_change_index;\n\
    \            min_change_pos = min_change_pos;\n            min_change_len = min_change_len;\n\
    \        }\n    }\n    min_change\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmplz1udn21.rs:53:17\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplz1udn21.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplz1udn21.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplz1udn21.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplz1udn21.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplz1udn21.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplz1udn21.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplz1udn21.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplz1udn21.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplz1udn21.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplz1udn21.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len_index = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mut min_change_len_val = arr[0];\n\
    \    let mut min_change_len_pos = 0;\n    let mu\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpwohnlx2b.rs:66:11\n   |\n\
    66 |     let mu\n   |           ^ help: add `;` here\n67 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpwohnlx2b.rs:71:17\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwohnlx2b.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpwohnlx2b.rs:72:17\n   |\n72 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpwohnlx2b.rs:72:25\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpwohnlx2b.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpwohnlx2b.rs:73:25\n   |\n73 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpwohnlx2b.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpwohnlx2b.rs:74:25\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpwohnlx2b.rs:75:17\n  \
    \ |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpwohnlx2b.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let \n}\n\nfn main() {\n   \
    \ let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpuqnkl0ee.rs:73:1\n  \
    \ |\n73 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:17\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:25\n \
    \  |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:25\n\
    \   |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:82:17\n   |\n82 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mu\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp68lh02m8.rs:63:11\n   |\n\
    63 |     let mu\n   |           ^ help: add `;` here\n64 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp68lh02m8.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68lh02m8.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68lh02m8.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68lh02m8.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68lh02m8.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68lh02m8.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68lh02m8.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68lh02m8.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68lh02m8.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68lh02m8.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mu\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpfiel_7xp.rs:63:11\n   |\n\
    63 |     let mu\n   |           ^ help: add `;` here\n64 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfiel_7xp.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfiel_7xp.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfiel_7xp.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfiel_7xp.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfiel_7xp.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfiel_7xp.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfiel_7xp.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfiel_7xp.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfiel_7xp.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfiel_7xp.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_idx = -1;\n    let mut min_change_idx =\
    \ -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n  \
    \  let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_\n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpkjuloicn.rs:75:17\n   |\n\
    75 |     let mut min_\n   |                 ^ help: add `;` here\n76 | }\n   |\
    \ - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkjuloicn.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkjuloicn.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkjuloicn.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkjuloicn.rs:81:25\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkjuloicn.rs:82:17\n  \
    \ |\n82 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkjuloicn.rs:82:25\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkjuloicn.rs:83:17\n   |\n83 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkjuloicn.rs:83:25\n\
    \   |\n83 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkjuloicn.rs:84:17\n   |\n84 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkjuloicn.rs:84:25\n   |\n84 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in th"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len_rev\
    \ = 0;\n    let mut min_change_len_rev_index = 0;\n    let mut min_change_len_rev_len\
    \ = 0;\n    let mut min_change_len_rev_len_index = 0;\n    let mut min_change_len_rev_len_rev\
    \ = 0;\n    let mut min_change_len_rev_len_rev_index = 0;\n    let mut min_change_len_rev_len_rev_len\
    \ = 0;\n    let mut min_change_len_rev_len_rev_len_index = 0;\n    let mut min_change_len_rev_len_rev_len_rev\
    \ = 0;\n    let mut min_change_len_rev_len_rev_len_rev_index = 0;\n    let mut\
    \ min_change_len_rev_len_rev_len_rev_len = 0;\n    let mut min_change_len_rev_len_rev_len_rev_len_index\
    \ = 0;\n    let mut min_change_len_rev_len_rev_len_rev_len_rev = 0;\n    let mut\
    \ min_change_len_rev_len_rev_len_rev_len_rev_index = 0;\n    let mut min_change_len_rev_len_rev_len_rev_len_rev_len\
    \ = 0;\n    let mut min_change_len_rev_len_rev_len_rev_len_rev_len_index = 0;\n\
    \    let mut min_change_len_rev_len_rev_len_rev_len_rev_len_rev = 0;\n    let\
    \ mut min_change_len_rev_len_rev_len_rev_len_rev_len_rev_index = 0;\n    let mut\
    \ min_change_len_rev_len_rev_len_rev_len_rev_len_rev_len = 0;\n    let mut min_change_len_rev_len_rev_len_rev_len_rev_len_rev_len_index\
    \ = 0;\n    let mut min_change_len_rev_len_rev_len_rev_len_rev_len_rev_len_rev\
    \ = 0;\n    let mut min_change_len_rev_len_rev_len_rev_len_rev_len_rev_len_rev_index\
    \ = 0;\n    let mut min_change_len_rev_len_rev_len_rev_len_rev_len_rev_len_rev_len\
    \ = 0;\n    let mut min_change_len_rev_len_rev_len_rev_len_rev_len_rev_len_rev_len_index\
    \ = 0;\n    let mut min_change_len_rev_len_rev_len_rev_len_rev_len_rev_len_rev_len_rev\
    \ = 0;\n    let mut \n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpei86ygso.rs:42:1\n\
    \   |\n42 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpei86ygso.rs:46:17\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpei86ygso.rs:46:25\n \
    \  |\n46 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpei86ygso.rs:47:17\n   |\n47 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpei86ygso.rs:47:25\n   |\n47 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpei86ygso.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpei86ygso.rs:48:25\n   |\n48 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpei86ygso.rs:49:17\n  \
    \ |\n49 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpei86ygso.rs:49:25\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpei86ygso.rs:50:17\n   |\n50 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpei86ygso.rs:50:25\n\
    \   |\n50 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpei86ygso.rs:51:17\n   |\n51 |     "
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    for &i in arr {\n      \
    \  if i != min_change_index {\n            min_change = i;\n            min_change_index\
    \ = i;\n        }\n    }\n    min_change\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpgnxhukw2.rs:25:17\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgnxhukw2.rs:25:25\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgnxhukw2.rs:26:17\n   |\n26 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpgnxhukw2.rs:26:25\n\
    \   |\n26 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpgnxhukw2.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpgnxhukw2.rs:27:25\n   |\n27 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpgnxhukw2.rs:28:17\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpgnxhukw2.rs:28:25\n   |\n28 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpgnxhukw2.rs:29:17\n  \
    \ |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpgnxhukw2.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpgnxhukw2.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let mut \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpjqo_3ie6.rs:70:1\n\
    \   |\n70 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:79:17\n   |\n79 |     "
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_rev_index\
    \ = 0;\n    let mut min_change_rev_len = 0;\n    let mut min_change_rev_len_index\
    \ = 0;\n    let mut min_change_rev_len_rev_index = 0;\n    let mut min_change_rev_len_rev_index2\
    \ = 0;\n    let mut min_change_rev_len_rev_index3 = 0;\n    let mut min_change_rev_len_rev_index4\
    \ = 0;\n    let mut min_change_rev_len_rev_index5 = 0;\n    let mut min_change_rev_len_rev_index6\
    \ = 0;\n    let mut min_change_rev_len_rev_index7 = 0;\n    let mut min_change_rev_len_rev_index8\
    \ = 0;\n    let mut min_change_rev_len_rev_index9 = 0;\n    let mut min_change_rev_len_rev_index10\
    \ = 0;\n    let mut min_change_rev_len_rev_index11 = 0;\n    let mut min_change_rev_len_rev_index12\
    \ = 0;\n    let mut min_change_rev_len_rev_index13 = 0;\n    let mut min_change_rev_len_rev_index14\
    \ = 0;\n    let mut min_change_rev_len_rev_index15 = 0;\n    let mut min_change_rev_len_rev_index16\
    \ = 0;\n    let mut min_change_rev_len_rev_index17 = 0;\n    let mut min_change_rev_len_rev_index18\
    \ = 0;\n    let mut min_change_rev_len_rev_index19 = 0;\n    let mut min_change_rev_len_rev_index20\
    \ = 0;\n    let mut min_change_rev_len_rev_index21 = 0;\n    let mut min_change_rev_len_rev_index22\
    \ = 0;\n    let mut min_change_rev_len_rev_index23 = 0;\n    let mut min_change_rev_len_rev_index24\
    \ = 0;\n    let mut min_change_rev_len_rev_index25 = 0;\n    let mut min_change_rev_len_rev_index26\
    \ = 0;\n    let mut min_change_rev_len_rev_index27 = 0;\n    let mut min_change_rev_len_rev_index28\
    \ = 0;\n    let mut min_change_rev_len_rev_index29 = 0;\n    let mut min_change_rev_len_rev_index30\
    \ = 0;\n    let mut min_change_rev_len_rev_index31 = 0;\n    let mut min_change_rev_len_rev_index32\
    \ = 0;\n    let mut min_change_rev_len_rev_index33 = 0;\n    let mut min_change_re\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpcgos9u6j.rs:50:26\n   |\n\
    50 |     let mut min_change_re\n   |                          ^ help: add `;`\
    \ here\n51 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpcgos9u6j.rs:55:17\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpcgos9u6j.rs:55:25\n \
    \  |\n55 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcgos9u6j.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcgos9u6j.rs:56:25\n   |\n56 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcgos9u6j.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcgos9u6j.rs:57:25\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcgos9u6j.rs:58:17\n  \
    \ |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcgos9u6j.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcgos9u6j.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcgos9u6j.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find "
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    for i in 0..arr.len() {\n        let mut min_change = std::i32::MAX;\n\
    \        let mut min_change_index = 0;\n        let mut min_change_len = arr.len();\n\
    \        for j in 0..arr.len() {\n            if arr[j] != arr[(arr.len() - 1)\
    \ - j] {\n                min_change = std::i32::MAX;\n                min_change_index\
    \ = 0;\n                min_change_len = arr.len();\n                break;\n\
    \            }\n            min_change = std::cmp::min(min_change, j - i);\n \
    \           min_change_index = j;\n            min_change_len = arr.len();\n \
    \       }\n        if min_change < min_change_len {\n            min_change =\
    \ min_change_len;\n            min_change_index = i;\n        }\n    }\n    min_change\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7wz_l9ca.rs:40:17\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7wz_l9ca.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7wz_l9ca.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7wz_l9ca.rs:41:25\n\
    \   |\n41 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7wz_l9ca.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7wz_l9ca.rs:42:25\n   |\n42 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7wz_l9ca.rs:43:17\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7wz_l9ca.rs:43:25\n   |\n43 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7wz_l9ca.rs:44:17\n  \
    \ |\n44 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7wz_l9ca.rs:44:25\n   |\n44 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7wz_l9ca.rs:45:17\n   |\n45 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let \n}\n\nfn main() {\n   \
    \ let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpuqnkl0ee.rs:73:1\n  \
    \ |\n73 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:17\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:25\n \
    \  |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:25\n\
    \   |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:82:17\n   |\n82 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    for &i in arr {\n        let mut j = min_change_len;\n   \
    \     while j > 0 && arr[j - 1] == i {\n            j -= 1;\n        }\n     \
    \   if j == min_change_len {\n            min_change_len = j;\n            min_change_index\
    \ = i;\n        }\n    }\n    min_change -= min_change_len;\n    min_change_index\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmphrramgn5.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphrramgn5.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphrramgn5.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmphrramgn5.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmphrramgn5.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmphrramgn5.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmphrramgn5.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmphrramgn5.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmphrramgn5.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmphrramgn5.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmphrramgn5.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    for i in 0..arr.len() {\n        if arr[i] != arr[arr.len()\
    \ - 1 - i] {\n            min_change = std::i32::MAX;\n            min_change_index\
    \ = 0;\n            min_change_len = arr.len();\n        }\n        if min_change\
    \ > i - min_change_index {\n            min_change = i - min_change_index;\n \
    \           min_change_index = i;\n            min_change_len = arr.len();\n \
    \       }\n    }\n    min_change_len\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppf99aowd.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppf99aowd.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppf99aowd.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppf99aowd.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppf99aowd.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppf99aowd.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppf99aowd.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppf99aowd.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppf99aowd.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppf99aowd.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppf99aowd.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>().len(), *arr.iter().cloned().collect::<Vec<_>>().len());\n\
    \    for i in 0..min_change {\n        if arr[i] != arr[*arr.len() - 1 - i] {\n\
    \            min_change = i;\n        }\n    }\n    min_change\n}\n\nfn main()\
    \ {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp4n2eae03.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4n2eae03.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4n2eae03.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp4n2eae03.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp4n2eae03.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp4n2eae03.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp4n2eae03.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp4n2eae03.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp4n2eae03.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp4n2eae03.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp4n2eae03.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_idx = arr.len() - 1;\n    let mut\
    \ min_change_idx = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n\
    \    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx = arr.len()\
    \ - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change_idx = arr.len() - 1;\n    let mut min_change_idx\
    \ = arr.len() - 1;\n    let mut min_change\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmptzj1du52.rs:58:23\n   |\n\
    58 |     let mut min_change\n   |                       ^ help: add `;` here\n\
    59 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmptzj1du52.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptzj1du52.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmptzj1du52.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmptzj1du52.rs:64:25\n   |\n64 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmptzj1du52.rs:65:17\n  \
    \ |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmptzj1du52.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmptzj1du52.rs:66:17\n   |\n66 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmptzj1du52.rs:66:25\n\
    \   |\n66 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmptzj1du52.rs:67:17\n   |\n67 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmptzj1du52.rs:67:25\n   |\n67 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value "
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len_index2\
    \ = 0;\n    let mut min_change_len_index3 = 0;\n    let mut min_change_len_index4\
    \ = 0;\n    let mut min_change_len_index5 = 0;\n    let mut min_change_len_index6\
    \ = 0;\n    let mut min_change_len_index7 = 0;\n    let mut min_change_len_index8\
    \ = 0;\n    let mut min_change_len_index9 = 0;\n    let mut min_change_len_index10\
    \ = 0;\n    let mut min_change_len_index11 = 0;\n    let mut min_change_len_index12\
    \ = 0;\n    let mut min_change_len_index13 = 0;\n    let mut min_change_len_index14\
    \ = 0;\n    let mut min_change_len_index15 = 0;\n    let mut min_change_len_index16\
    \ = 0;\n    let mut min_change_len_index17 = 0;\n    let mut min_change_len_index18\
    \ = 0;\n    let mut min_change_len_index19 = 0;\n    let mut min_change_len_index20\
    \ = 0;\n    let mut min_change_len_index21 = 0;\n    let mut min_change_len_index22\
    \ = 0;\n    let mut min_change_len_index23 = 0;\n    let mut min_change_len_index24\
    \ = 0;\n    let mut min_change_len_index25 = 0;\n    let mut min_change_len_index26\
    \ = 0;\n    let mut min_change_len_index27 = 0;\n    let mut min_change_len_index28\
    \ = 0;\n    let mut min_change_len_index29 = 0;\n    let mut min_change_len_index30\
    \ = 0;\n    let mut min_change_len_index31 = 0;\n    let mut min_change_len_index32\
    \ = 0;\n    let mut min_change_len_index33 = 0;\n    let mut min_change_len_index34\
    \ = 0;\n    let mut min_change_len_index35 = 0;\n    let mut min_change_len_index36\
    \ = 0;\n    let mut min_change_len_index37 = 0;\n    let mut min_change_len_index38\
    \ = 0;\n    let mut min_change_len_index39 = 0;\n    let mut min_change_len_index40\
    \ = 0;\n    let mut min_change_len_index41 = 0;\n    let mut min_change_len_index42\
    \ = 0;\n    let mut min_change_len_index43 = 0;\n    let mut min_change_len_index44\
    \ = 0;\n    let mut min_change_len_index45 = 0;\n    let mut min_change_len_index46\
    \ = 0;\n    let mut min_change_len_index47 = 0;\n    let mut min_change_len_index48\
    \ = 0;\n    let mut min_change_len_index\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpdzgp7efn.rs:63:33\n   |\n\
    63 |     let mut min_change_len_index\n   |                                 ^\
    \ help: add `;` here\n64 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdzgp7efn.rs:68:17\n   |\n68 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdzgp7efn.rs:68:25\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdzgp7efn.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdzgp7efn.rs:69:25\n   |\n69 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdzgp7efn.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdzgp7efn.rs:70:25\n   |\n70 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdzgp7efn.rs:71:17\n  \
    \ |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdzgp7efn.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdzgp7efn.rs:72:17\n   |\n72 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdzgp7efn.rs:72:25\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = -1;\n    let mut min_change_index2\
    \ = -1;\n    let mut min_change_index3 = -1;\n    let mut min_change_index4 =\
    \ -1;\n    let mut min_change_index5 = -1;\n    let mut min_change_index6 = -1;\n\
    \    let mut min_change_index7 = -1;\n    let mut min_change_index8 = -1;\n  \
    \  let mut min_change_index9 = -1;\n    let mut min_change_index10 = -1;\n   \
    \ let mut min_change_index11 = -1;\n    let mut min_change_index12 = -1;\n   \
    \ let mut min_change_index13 = -1;\n    let mut min_change_index14 = -1;\n   \
    \ let mut min_change_index15 = -1;\n    let mut min_change_index16 = -1;\n   \
    \ let mut min_change_index17 = -1;\n    let mut min_change_index18 = -1;\n   \
    \ let mut min_change_index19 = -1;\n    let mut min_change_index20 = -1;\n   \
    \ let mut min_change_index21 = -1;\n    let mut min_change_index22 = -1;\n   \
    \ let mut min_change_index23 = -1;\n    let mut min_change_index24 = -1;\n   \
    \ let mut min_change_index25 = -1;\n    let mut min_change_index26 = -1;\n   \
    \ let mut min_change_index27 = -1;\n    let mut min_change_index28 = -1;\n   \
    \ let mut min_change_index29 = -1;\n    let mut min_change_index30 = -1;\n   \
    \ let mut min_change_index31 = -1;\n    let mut min_change_index32 = -1;\n   \
    \ let mut min_change_index33 = -1;\n    let mut min_change_index34 = -1;\n   \
    \ let mut min_change_index35 = -1;\n    let mut min_change_index36 = -1;\n   \
    \ let mut min_change_index37 = -1;\n    let mut min_change_index38 = -1;\n   \
    \ let mut min_change_index39 = -1;\n    let mut min_change_index40 = -1;\n   \
    \ let mut min_change_index41 = -1;\n    let mut min_change_index42 = -1;\n   \
    \ let mut min_change_index43 = -1;\n    let mut min_change_index44 = -1;\n   \
    \ let mut min_change_index45 = -1;\n    let mut min_change_index46 = -1;\n   \
    \ let mut min_change_index47 = -1;\n    let mut min_change_index48 = -1;\n   \
    \ let mut min_change_index49 = -1;\n    let mut min_change_index50 = -1;\n   \
    \ let mut min_change_index51 = -1;\n    let mut \n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpqax9_ha1.rs:65:1\n\
    \   |\n65 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpqax9_ha1.rs:69:17\n   |\n69 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpqax9_ha1.rs:69:25\n \
    \  |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqax9_ha1.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpqax9_ha1.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpqax9_ha1.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpqax9_ha1.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpqax9_ha1.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpqax9_ha1.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpqax9_ha1.rs:73:17\n   |\n73 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpqax9_ha1.rs:73:25\n\
    \   |\n73 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpqax9_ha1.rs:74:17\n   |\n74 |     "
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::max::<isize>(arr.len(), 1);\n    for &x in arr {\n        min_change\
    \ = std::cmp::min::<isize>(min_change, x - 1);\n        min_change = std::cmp::min::<isize>(min_change,\
    \ x + 1);\n    }\n    min_change\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpvc3xu9hm.rs:22:17\n\
    \   |\n22 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvc3xu9hm.rs:22:25\n   |\n22 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvc3xu9hm.rs:23:17\n   |\n23 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpvc3xu9hm.rs:23:25\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpvc3xu9hm.rs:24:17\n   |\n24 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpvc3xu9hm.rs:24:25\n   |\n24 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpvc3xu9hm.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpvc3xu9hm.rs:25:25\n   |\n25 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpvc3xu9hm.rs:26:17\n  \
    \ |\n26 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpvc3xu9hm.rs:26:25\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpvc3xu9hm.rs:27:17\n   |\n27 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len_minus_one\
    \ = 0;\n    let mut min_change_len_minus_two = 0;\n    let mut min_change_len_minus_three\
    \ = 0;\n    let mut min_change_len_minus_four = 0;\n    let mut min_change_len_minus_five\
    \ = 0;\n    let mut min_change_len_minus_six = 0;\n    let mut min_change_len_minus_seven\
    \ = 0;\n    let mut min_change_len_minus_eight = 0;\n    let mut min_change_len_minus_nine\
    \ = 0;\n    let mut min_change_len_minus_ten = 0;\n    let mut min_change_len_minus_eleven\
    \ = 0;\n    let mut min_change_len_minus_twelve = 0;\n    let mut min_change_len_minus_thirteen\
    \ = 0;\n    let mut min_change_len_minus_fourteen = 0;\n    let mut min_change_len_minus_fifteen\
    \ = 0;\n    let mut min_change_len_minus_sixteen = 0;\n    let mut min_change_len_minus_seventeen\
    \ = 0;\n    let mut min_change_len_minus_eighteen = 0;\n    let mut min_change_len_minus_nineteen\
    \ = 0;\n    let mut min_change_len_minus_twenty = 0;\n    let mut min_change_len_minus_thirty\
    \ = 0;\n    let mut min_change_len_minus_forty = 0;\n    let mut min_change_len_minus_fifty\
    \ = 0;\n    let mut min_change_len_minus_sixty = 0;\n    let mut min_change_len_minus_seventy\
    \ = 0;\n    let mut min_change_len_minus_eighty = 0;\n    let mut min_change_len_minus_ninety\
    \ = 0;\n    let mut min_change_len_minus_hundred = 0;\n    let mut min_change_len_minus_thousand\
    \ = 0;\n    let mut min_change_len_minus_million = 0;\n    let mut min_change_len_minus_billion\
    \ = 0;\n    let mut min_change_len_minus_trillion = 0;\n    let mut min_change_len_minus_quadrillion\
    \ = 0;\n    let mut min_change_len_minus_quintillion = 0;\n    let mut min_change_len_minus_sextillion\
    \ = 0;\n    let mut min_change_len_minus_septillion = 0;\n    let mut min_change_len_minus_octillion\
    \ = 0;\n    let mut min_change_len_minus_nonillion = 0;\n    let mut \n}\n\nfn\
    \ main() {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpy3my_6wd.rs:55:1\n\
    \   |\n55 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpy3my_6wd.rs:59:17\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpy3my_6wd.rs:59:25\n \
    \  |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpy3my_6wd.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpy3my_6wd.rs:60:25\n   |\n60 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpy3my_6wd.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpy3my_6wd.rs:61:25\n   |\n61 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpy3my_6wd.rs:62:17\n  \
    \ |\n62 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpy3my_6wd.rs:62:25\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpy3my_6wd.rs:63:17\n   |\n63 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpy3my_6wd.rs:63:25\n\
    \   |\n63 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpy3my_6wd.rs:64:17\n   |\n64 |     "
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp44u3o2cs.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp44u3o2cs.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp44u3o2cs.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp44u3o2cs.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp44u3o2cs.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp44u3o2cs.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp44u3o2cs.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp44u3o2cs.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp44u3o2cs.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp44u3o2cs.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp44u3o2cs.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp44u3o2cs.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp44u3o2cs.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp44u3o2cs.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp44u3o2cs.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp44u3o2cs.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp44u3o2cs.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp44u3o2cs.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp44u3o2cs.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp44u3o2cs.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp44u3o2cs.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp44u3o2cs.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp44u3o2cs.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp44u3o2cs.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    let mut min_change_arr = arr.clone();\n    let mut min_change_arr_len\
    \ = arr.len();\n\n    while min_change_count < min_change_arr.len() {\n      \
    \  let mut min_change_count = 0;\n        let mut min_change_arr = arr.clone();\n\
    \        let mut min_change_arr_len = arr.len();\n\n        for &i in min_change_arr.iter_mut()\
    \ {\n            if i == min_change_arr[0] {\n                min_change_arr[0]\
    \ = i;\n                min_change_arr_len -= 1;\n                min_change_count\
    \ += 1;\n            } else {\n                if min_change_arr[0] == i {\n \
    \                   min_change_arr[0] = i;\n                    min_change_arr_len\
    \ -= 1;\n                    min_change_count += 1;\n                } else {\n\
    \                    if min_change_arr[0] == min_change_arr[min_change_arr_len]\
    \ {\n                        min_change_arr[0] = i;\n                        min_change_arr_len\
    \ -= 1;\n                        min_change_count += 1;\n                    }\
    \ else {\n                        if min_change_arr[0] == min_change_arr[min_change_arr_len\
    \ - 1] {\n                            min_change_arr[0] = i;\n               \
    \             min_change_arr_len -= 1;\n                            min_change_count\
    \ += 1;\n                        } else {\n                            if min_change_arr[0]\
    \ == min_change_arr[min_change_arr_len / 2] {\n                              \
    \  min_change_arr[0] = i;\n                                min_change_arr_len\
    \ -= 1;\n                                min_change_count += 1;\n            \
    \                } else {\n                                if min_change_arr[0]\
    \ == min_change_arr[min_change_arr_len / 2 + 1] {\n                          \
    \          min_change_arr[0] = i;\n                                    min_change_arr_len\
    \ -= 1;\n                                    min_change_count += 1;\n        \
    \                        } else {\n                                    if min_change_arr[0]\
    \ == min_change_arr[min_change_arr_len / 2 + 2] {\n                          \
    \              min_change_arr[0] = i;\n                                      \
    \  min_change_arr_len -= 1;\n                                        min_change_count\
    \ += 1;\n                                    } else {\n                      \
    \                  if min_change_arr[0] == min_change_arr[min_change_arr_len /\
    \ 2 + 3] {\n                                            min_change_arr[0] = i;\n\
    \                                            min_change_arr_len -= 1;\n      \
    \                                      min_change_count += 1;\n              \
    \                          } else {\n                                        \
    \    if min_change_arr[0] == min_change_arr[min_change_arr_len / 2 + 4] {\n  \
    \                                              min_change_arr[0] = i;\n      \
    \                                          min_change_arr_len -= 1;\n        \
    \                                        min_change_count += 1;\n            \
    \                                } else {\n                                  \
    \              if min_change_arr[0] == min_change_arr[min_change_arr_len / 2 +\
    \ 5] {\n                                                    min_change_arr[0]\
    \ = i;\n                                                    min_change_arr_len\
    \ -= 1;\n                                                    min_change_count\
    \ += 1;\n                                                } else {\n          \
    \                                          if min_change_arr[0] == min_change_arr[min_change_arr_len\
    \ / 2 + 6\n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp0azuzr5e.rs:87:3\n\
    \   |\n11 | fn smallest_change(arr: Vec<isize>) -> isize {\n   |             \
    \                                 - unclosed delimiter\n...\n18 |     while min_change_count\
    \ < min_change_arr.len() {\n   |                                             \
    \      - unclosed delimiter\n...\n23 |         for &i in min_change_arr.iter_mut()\
    \ {\n   |                                             - unclosed delimiter\n...\n\
    28 |             } else {\n   |                    - unclosed delimiter\n...\n\
    33 |                 } else {\n   |                        - unclosed delimiter\n\
    ...\n38 |                     } else {\n   |                            - unclosed\
    \ delimiter\n...\n43 |                         } else {\n   |                \
    \                - unclosed delimiter\n...\n48 |                             }\
    \ else {\n   |                                    - unclosed delimiter\n...\n\
    53 |                                 } else {\n   |                          \
    \              - unclosed delimiter\n...\n58 |                               \
    \      } else {\n   |                                            - unclosed delimiter\n\
    ...\n63 |                                         } else {\n   |             \
    \                                   - unclosed delimiter\n...\n68 |          \
    \                                   } else {\n   |                           \
    \                         - unclosed delimiter\n...\n73 |                    \
    \                             } else {\n   |                                 \
    \                       - this delimiter might not be properly closed...\n74 |\
    \                                                     if min_change_arr[0] ==\
    \ min_change_arr[min_change_arr_len / 2 + 6\n75 | }\n   | - ...as it matches this\
    \ but it has different indentation\n...\n87 | }\n   |   ^\n\nerror: expected `{`,\
    \ found `}`\n  --> /tmp/tmp0azuzr5e.rs:75:1\n   |\n74 |                      \
    \                               if min_change_arr[0] == min_change_arr[min_change_arr_len\
    \ / 2 + 6\n   |                                  "
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_val\
    \ = std::i32::MAX;\n    let mut min_change_val_pos = 0;\n    let mut min_change_val_neg\
    \ = 0;\n    let mut min_change_val_neg_index = 0;\n    let mut min_change_val_pos\
    \ = 0;\n    let mut min_change_val_neg = 0;\n    let mut min_change_val_neg_index\
    \ = 0;\n    let mut min_change_val_pos = 0;\n    let mut min_change_val_neg =\
    \ 0;\n    let mut min_change_val_neg_index = 0;\n    let mut min_change_val_pos\
    \ = 0;\n    let mut min_change_val_neg = 0;\n    let mut min_change_val_neg_index\
    \ = 0;\n    let mut min_change_val_pos = 0;\n    let mut min_change_val_neg =\
    \ 0;\n    let mut min_change_val_neg_index = 0;\n    let mut min_change_val_pos\
    \ = 0;\n    let mut min_change_val_neg = 0;\n    let mut min_change_val_neg_index\
    \ = 0;\n    let mut min_change_val_pos = 0;\n    let mut min_change_val_neg =\
    \ 0;\n    let mut min_change_val_neg_index = 0;\n    let mut min_change_val_pos\
    \ = 0;\n    let mut min_change_val_neg = 0;\n    let mut min_change_val_neg_index\
    \ = 0;\n    let mut min_change_val_pos = 0;\n    let mut min_change_val_neg =\
    \ 0;\n    let mut min_change_val_neg_index = 0;\n    let mut min_change_val_pos\
    \ = 0;\n    let mut min_change_val_neg = 0;\n    let mut min_change_val_neg_index\
    \ = 0;\n    let mut min_change_val_pos = 0;\n    let mut min_change_val_neg =\
    \ 0;\n    let mut min_change_val_neg_index = 0;\n    let mut min_change_val_pos\
    \ = 0;\n    let mut min_change_val_neg = 0;\n    let mut min_change_val_neg_index\
    \ = 0;\n    let mut min_change_val_pos = 0;\n    let mut min_change_val_neg =\
    \ 0;\n    let mut min_change_val_neg_index = 0;\n    let mut min_change_val_pos\
    \ = 0;\n    let mut min_change_val_neg = 0;\n    let mut min_change_val_neg_index\
    \ = 0;\n    let mut min_change_val_pos = 0;\n    let mut min_change_val_neg =\
    \ 0;\n    let mut min_change_val_neg_index = 0;\n    let mut min_change_val_pos\
    \ = 0;\n    let mut min_change_val_neg = 0;\n    let mut min_change_val_neg_index\
    \ = 0;\n    let mut min_change_val_pos = 0;\n    let mut min_change_val_neg =\
    \ 0;\n    let mut min_change_val_neg_index = 0;\n    let mut min_\n}\n\nfn main()\
    \ {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpf422age_.rs:66:17\n   |\n\
    66 |     let mut min_\n   |                 ^ help: add `;` here\n67 | }\n   |\
    \ - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpf422age_.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpf422age_.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpf422age_.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpf422age_.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpf422age_.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpf422age_.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpf422age_.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpf422age_.rs:74:25\n\
    \   |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpf422age_.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpf422age_.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in th"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len_index2\
    \ = 0;\n    let mut min_change_len_index3 = 0;\n    let mut min_change_len_index4\
    \ = 0;\n    let mut min_change_len_index5 = 0;\n    let mut min_change_len_index6\
    \ = 0;\n    let mut min_change_len_index7 = 0;\n    let mut min_change_len_index8\
    \ = 0;\n    let mut min_change_len_index9 = 0;\n    let mut min_change_len_index10\
    \ = 0;\n    let mut min_change_len_index11 = 0;\n    let mut min_change_len_index12\
    \ = 0;\n    let mut min_change_len_index13 = 0;\n    let mut min_change_len_index14\
    \ = 0;\n    let mut min_change_len_index15 = 0;\n    let mut min_change_len_index16\
    \ = 0;\n    let mut min_change_len_index17 = 0;\n    let mut min_change_len_index18\
    \ = 0;\n    let mut min_change_len_index19 = 0;\n    let mut min_change_len_index20\
    \ = 0;\n    let mut min_change_len_index21 = 0;\n    let mut min_change_len_index22\
    \ = 0;\n    let mut min_change_len_index23 = 0;\n    let mut min_change_len_index24\
    \ = 0;\n    let mut min_change_len_index25 = 0;\n    let mut min_change_len_index26\
    \ = 0;\n    let mut min_change_len_index27 = 0;\n    let mut min_change_len_index28\
    \ = 0;\n    let mut min_change_len_index29 = 0;\n    let mut min_change_len_index30\
    \ = 0;\n    let mut min_change_len_index31 = 0;\n    let mut min_change_len_index32\
    \ = 0;\n    let mut min_change_len_index33 = 0;\n    let mut min_change_len_index34\
    \ = 0;\n    let mut min_change_len_index35 = 0;\n    let mut min_change_len_index36\
    \ = 0;\n    let mut min_change_len_index37 = 0;\n    let mut min_change_len_index38\
    \ = 0;\n    let mut min_change_len_index39 = 0;\n    let mut min_change_len_index40\
    \ = 0;\n    let mut min_change_len_index41 = 0;\n    let mut min_change_len_index42\
    \ = 0;\n    let mut min_change_len_index43 = 0;\n    let mut min_change_len_index44\
    \ = 0;\n    let mut min_change_len_index45 = 0;\n    let mut min_change_len_index46\
    \ = 0;\n    let mut min_change_len_index47 = 0;\n    let mut min_change_len_index48\
    \ = 0;\n    let mut min_change_len_index49 = 0;\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprgrfltl1.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprgrfltl1.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprgrfltl1.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprgrfltl1.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprgrfltl1.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprgrfltl1.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprgrfltl1.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:73:17\n   |\n73 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    for index in 0..arr.len() {\n        let mut change_count = 0;\n \
    \       let mut change_index = 0;\n        while change_index < arr.len() && arr[change_index]\
    \ == arr[index] {\n            change_count += 1;\n            change_index +=\
    \ 1;\n        }\n        if change_count < min_change {\n            min_change\
    \ = change_count;\n            min_change_index = index;\n            min_change_count\
    \ = change_count;\n        }\n    }\n    min_change_count\n}\n\nfn main() {\n\
    \    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpe5abkcd_.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpe5abkcd_.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpe5abkcd_.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpe5abkcd_.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpe5abkcd_.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpe5abkcd_.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpe5abkcd_.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpe5abkcd_.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpe5abkcd_.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpe5abkcd_.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpe5abkcd_.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_index = 0;\n    let mut min_change_element\
    \ = arr[0];\n    let mut min_change_element_index = arr.len();\n    let mut min_change_element_value\
    \ = min_change_element;\n    let mut min_change_element_index = 0;\n    let mut\
    \ min_change_element_value = min_change_element;\n    let mut min_change_element_index\
    \ = 0;\n    let mut min_change_element_value = min_change_element;\n    let mut\
    \ min_change_element_index = 0;\n    let mut min_change_element_value = min_change_element;\n\
    \    let mut min_change_element_index = 0;\n    let mut min_change_element_value\
    \ = min_change_element;\n    let mut min_change_element_index = 0;\n    let mut\
    \ min_change_element_value = min_change_element;\n    let mut min_change_element_index\
    \ = 0;\n    let mut min_change_element_value = min_change_element;\n    let mut\
    \ min_change_element_index = 0;\n    let mut min_change_element_value = min_change_element;\n\
    \    let mut min_change_element_index = 0;\n    let mut min_change_element_value\
    \ = min_change_element;\n    let mut min_change_element_index = 0;\n    let mut\
    \ min_change_element_value = min_change_element;\n    let mut min_change_element_index\
    \ = 0;\n    let mut min_change_element_value = min_change_element;\n    let mut\
    \ min_change_element_index = 0;\n    let mut min_change_element_value = min_change_element;\n\
    \    let mut min_change_element_index = 0;\n    let mut min_change_element_value\
    \ = min_change_element;\n    let mut min_change_element_index = 0;\n    let mut\
    \ min_change_element_value = min_change_element;\n    let mut min_change_element_index\
    \ = 0;\n    let mut min_change_element_value = min_change_element;\n    let mut\
    \ min_change_element_index = 0;\n    let mut min_change_element_value = min_change_element;\n\
    \    let mut min_change_element_index = 0;\n    let mut min_change_element_value\
    \ = min_change_element;\n    let mut min_change_element_index = 0;\n    let mut\
    \ min_change_element_value = min_change_element;\n    let mut min_change_element_index\
    \ = 0;\n    let mut min_change_element_value = min_change_element;\n    let mut\
    \ min_change_element_index = 0;\n    let mut min_change_element_value = min_change_element;\n\
    \    let mut min_change_element_index = 0;\n    let mut min_change_element_value\
    \ = min_change_element;\n    let mut min_change_element_index = 0;\n    let mut\
    \ min_change_element_value = min_change_element;\n    let mut min_change_element_index\
    \ = 0;\n    let mut min_change_element_value = min_change_element\n}\n\nfn main()\
    \ {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpa1wvjlc_.rs:60:58\n   |\n\
    60 |     let mut min_change_element_value = min_change_element\n   |         \
    \                                                 ^ help: add `;` here\n61 | }\n\
    \   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa1wvjlc_.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa1wvjlc_.rs:65:25\n   |\n65 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpa1wvjlc_.rs:66:17\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpa1wvjlc_.rs:66:25\n   |\n66 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpa1wvjlc_.rs:67:17\n  \
    \ |\n67 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpa1wvjlc_.rs:67:25\n   |\n67 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpa1wvjlc_.rs:68:17\n   |\n68 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpa1wvjlc_.rs:68:25\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpa1wvjlc_.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpa1wvjlc_.rs:69:25\n   |\n69 |   \
    \  assert_eq!({left}, {right});\n   |                  "
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::Ordering::Equal;\n    let mut min_change_count = 0;\n    let mut min_change_index\
    \ = 0;\n    let mut min_change_index2 = 0;\n    let mut min_change_index3 = 0;\n\
    \    let mut min_change_index4 = 0;\n    let mut min_change_index5 = 0;\n    let\
    \ mut min_change_index6 = 0;\n    let mut min_change_index7 = 0;\n    let mut\
    \ min_change_index8 = 0;\n    let mut min_change_index9 = 0;\n    let mut min_change_index10\
    \ = 0;\n    let mut min_change_index11 = 0;\n    let mut min_change_index12 =\
    \ 0;\n    let mut min_change_index13 = 0;\n    let mut min_change_index14 = 0;\n\
    \    let mut min_change_index15 = 0;\n    let mut min_change_index16 = 0;\n  \
    \  let mut min_change_index17 = 0;\n    let mut min_change_index18 = 0;\n    let\
    \ mut min_change_index19 = 0;\n    let mut min_change_index20 = 0;\n    let mut\
    \ min_change_index21 = 0;\n    let mut min_change_index22 = 0;\n    let mut min_change_index23\
    \ = 0;\n    let mut min_change_index24 = 0;\n    let mut min_change_index25 =\
    \ 0;\n    let mut min_change_index26 = 0;\n    let mut min_change_index27 = 0;\n\
    \    let mut min_change_index28 = 0;\n    let mut min_change_index29 = 0;\n  \
    \  let mut min_change_index30 = 0;\n    let mut min_change_index31 = 0;\n    let\
    \ mut min_change_index32 = 0;\n    let mut min_change_index33 = 0;\n    let mut\
    \ min_change_index34 = 0;\n    let mut min_change_index35 = 0;\n    let mut min_change_index36\
    \ = 0;\n    let mut min_change_index37 = 0;\n    let mut min_change_index38 =\
    \ 0;\n    let mut min_change_index39 = 0;\n    let mut min_change_index40 = 0;\n\
    \    let mut min_change_index41 = 0;\n    let mut min_change_index42 = 0;\n  \
    \  let mut min_change_index43 = 0;\n    let mut min_change_index44 = 0;\n    let\
    \ mut min_change_index45 = 0;\n    let mut min_change_index46 = 0;\n    let mut\
    \ min_change_index47 = 0;\n    let mut min_change_index48 = 0;\n    let mut min_change_index49\
    \ = 0;\n    let mut min_change_index50 = 0;\n    let mut min_change_index51 =\
    \ 0;\n    let mut min_change_index52 = 0;\n    let mut min_change_index53 = 0;\n\
    \    let mut min_change_index54 = 0;\n    let mut min_change_index55 = 0;\n}\n\
    \nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcio5ials.rs:73:17\n\
    \   |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcio5ials.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcio5ials.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcio5ials.rs:74:25\n\
    \   |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcio5ials.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcio5ials.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcio5ials.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcio5ials.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcio5ials.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcio5ials.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcio5ials.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min::Default::default();\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_pal_index = 0;\n    let mut min_change_pal_value = 0;\n    let\
    \ mut min_change_pal_value_index = 0;\n    let mut min_change_pal_value_pal_index\
    \ = 0;\n    let mut min_change_pal_value_pal_value = 0;\n    let mut min_change_pal_value_pal_value_index\
    \ = 0;\n    let mut min_change_pal_value_pal_value_pal_index = 0;\n    let mut\
    \ min_change_pal_value_pal_value_pal_value = 0;\n    let mut min_change_pal_value_pal_value_pal_value_index\
    \ = 0;\n    let mut min_change_pal_value_pal_value_pal_value_pal_index = 0;\n\
    \    let mut min_change_pal_value_pal_value_pal_value_pal_value = 0;\n    let\
    \ mut min_change_pal_value_pal_value_pal_value_pal_value_index = 0;\n    let mut\
    \ min_change_pal_value_pal_value_pal_value_pal_value_pal_index = 0;\n    let mut\
    \ min_change_pal_value_pal_value_pal_value_pal_value_pal_value = 0;\n    let mut\
    \ min_change_pal_value_pal_value_pal_value_pal_value_pal_value_index = 0;\n  \
    \  let mut min_change_pal_value_pal_value_pal_value_pal_value_pal_value_pal_index\
    \ = 0;\n    let mut min_change_pal_value_pal_value_pal_value_pal_value_pal_value_pal_value\
    \ = 0;\n    let mut min_change_pal_value_pal_value_pal_value_pal_value_pal_value_pal_value_index\
    \ = 0;\n    let mut min_change_pal_value_pal_value_pal_value_pal_value_pal_value_pal_value_pal_index\
    \ = 0;\n    let mut min_change_pal_value_pal_value_pal_value_pal_value_pal_value_pal_value_pal_value\
    \ = 0;\n    let mut min_change_pal_value_pal_value_pal_value_pal_value_pal_value_pal_value_pal_value_index\
    \ = 0;\n    let mut min_change_pal_value_pal_value_pal_value_pal_value_pal_value_pal_value_pal_value_pal_index\
    \ = 0;\n    let mut min_change_pal_value_pal_value_pal_value_pal_value_pal_value_pal_value_pal_value_pal_value\
    \ = 0;\n    let mut min_change_pal_value_pal_value_pal_value_pal_value_pal_value\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpu1lw5equ.rs:37:73\n   |\n\
    37 |     let mut min_change_pal_value_pal_value_pal_value_pal_value_pal_value\n\
    \   |                                                                        \
    \ ^ help: add `;` here\n38 | }\n   | - unexpected token\n\nerror[E0433]: failed\
    \ to resolve: expected type, found function `min` in `cmp`\n  --> /tmp/tmpu1lw5equ.rs:12:41\n\
    \   |\n12 |     let mut min_change = std::cmp::min::Default::default();\n   |\
    \                                         ^^^^^^^ not found in `std::cmp::min`\n\
    \   |\nhelp: consider importing this trait\n   |\n1  | use std::default::Default;\n\
    \   |\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpu1lw5equ.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu1lw5equ.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu1lw5equ.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpu1lw5equ.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu1lw5equ.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpu1lw5equ.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpu1lw5equ.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpu1lw5equ.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |          "
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpr9_rkl76.rs:65:33\n   |\n\
    65 |     let mut min_change_len_index\n   |                                 ^\
    \ help: add `;` here\n66 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr9_rkl76.rs:70:17\n   |\n70 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpr9_rkl76.rs:70:25\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpr9_rkl76.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpr9_rkl76.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpr9_rkl76.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpr9_rkl76.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpr9_rkl76.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpr9_rkl76.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpr9_rkl76.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpr9_rkl76.rs:74:25\n\
    \   |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len_index2\
    \ = 0;\n    let mut min_change_len_index3 = 0;\n    let mut min_change_len_index4\
    \ = 0;\n    let mut min_change_len_index5 = 0;\n    let mut min_change_len_index6\
    \ = 0;\n    let mut min_change_len_index7 = 0;\n    let mut min_change_len_index8\
    \ = 0;\n    let mut min_change_len_index9 = 0;\n    let mut min_change_len_index10\
    \ = 0;\n    let mut min_change_len_index11 = 0;\n    let mut min_change_len_index12\
    \ = 0;\n    let mut min_change_len_index13 = 0;\n    let mut min_change_len_index14\
    \ = 0;\n    let mut min_change_len_index15 = 0;\n    let mut min_change_len_index16\
    \ = 0;\n    let mut min_change_len_index17 = 0;\n    let mut min_change_len_index18\
    \ = 0;\n    let mut min_change_len_index19 = 0;\n    let mut min_change_len_index20\
    \ = 0;\n    let mut min_change_len_index21 = 0;\n    let mut min_change_len_index22\
    \ = 0;\n    let mut min_change_len_index23 = 0;\n    let mut min_change_len_index24\
    \ = 0;\n    let mut min_change_len_index25 = 0;\n    let mut min_change_len_index26\
    \ = 0;\n    let mut min_change_len_index27 = 0;\n    let mut min_change_len_index28\
    \ = 0;\n    let mut min_change_len_index29 = 0;\n    let mut min_change_len_index30\
    \ = 0;\n    let mut min_change_len_index31 = 0;\n    let mut min_change_len_index32\
    \ = 0;\n    let mut min_change_len_index33 = 0;\n    let mut min_change_len_index34\
    \ = 0;\n    let mut min_change_len_index35 = 0;\n    let mut min_change_len_index36\
    \ = 0;\n    let mut min_change_len_index37 = 0;\n    let mut min_change_len_index38\
    \ = 0;\n    let mut min_change_len_index39 = 0;\n    let mut min_change_len_index40\
    \ = 0;\n    let mut min_change_len_index41 = 0;\n    let mut min_change_len_index42\
    \ = 0;\n    let mut min_change_len_index43 = 0;\n    let mut min_change_len_index44\
    \ = 0;\n    let mut min_change_len_index45 = 0;\n    let mut min_change_len_index46\
    \ = 0;\n    let mut min_change_len_index47 = 0;\n    let mut min_change_len_index48\
    \ = 0;\n    let mut min_change_len_index\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpdzgp7efn.rs:63:33\n   |\n\
    63 |     let mut min_change_len_index\n   |                                 ^\
    \ help: add `;` here\n64 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdzgp7efn.rs:68:17\n   |\n68 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdzgp7efn.rs:68:25\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdzgp7efn.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdzgp7efn.rs:69:25\n   |\n69 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdzgp7efn.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdzgp7efn.rs:70:25\n   |\n70 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdzgp7efn.rs:71:17\n  \
    \ |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdzgp7efn.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdzgp7efn.rs:72:17\n   |\n72 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdzgp7efn.rs:72:25\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    let mut min_change_index2 = 0;\n    let mut min_change_count2 = 0;\n\
    \    let mut min_change_index3 = 0;\n    let mut min_change_count3 = 0;\n    let\
    \ mut min_change_index4 = 0;\n    let mut min_change_count4 = 0;\n    let mut\
    \ min_change_index5 = 0;\n    let mut min_change_count5 = 0;\n    let mut min_change_index6\
    \ = 0;\n    let mut min_change_count6 = 0;\n    let mut min_change_index7 = 0;\n\
    \    let mut min_change_count7 = 0;\n    let mut min_change_index8 = 0;\n    let\
    \ mut min_change_count8 = 0;\n    let mut min_change_index9 = 0;\n    let mut\
    \ min_change_count9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_count10\
    \ = 0;\n    let mut min_change_index11 = 0;\n    let mut min_change_count11 =\
    \ 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_count12 = 0;\n\
    \    let mut min_change_index13 = 0;\n    let mut min_change_count13 = 0;\n  \
    \  let mut min_change_index14 = 0;\n    let mut min_change_count14 = 0;\n    let\
    \ mut min_change_index15 = 0;\n    let mut min_change_count15 = 0;\n    let mut\
    \ min_change_index16 = 0;\n    let mut min_change_count16 = 0;\n    let mut min_change_index17\
    \ = 0;\n    let mut min_change_count17 = 0;\n    let mut min_change_index18 =\
    \ 0;\n    let mut min_change_count18 = 0;\n    let mut min_change_index19 = 0;\n\
    \    let mut min_change_count19 = 0;\n    let mut min_change_index20 = 0;\n  \
    \  let mut min_change_count20 = 0;\n    let mut min_change_index21 = 0;\n    let\
    \ mut min_change_count21 = 0;\n    let mut min_change_index22 = 0;\n    let mut\
    \ min_change_count22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_count23\
    \ = 0;\n    let mut min_change_index24 = 0;\n    let mut min_change_count24 =\
    \ 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_count25 = 0;\n\
    \    let mut min_change_index26 = 0;\n    let mut min_change_count26 = 0;\n  \
    \  let mut min_change_index27 = 0;\n    let mut min_change_count27 = 0;\n    let\
    \ mut min_change_index28 = 0;\n    let mut min_change_count28 = 0;\n    let mut\
    \ min_change_index\n}\n\nfn main() {\n    let candidate = smallest_change;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmplervrhb5.rs:69:29\n   |\n\
    69 |     let mut min_change_index\n   |                             ^ help: add\
    \ `;` here\n70 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmplervrhb5.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmplervrhb5.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmplervrhb5.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmplervrhb5.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmplervrhb5.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmplervrhb5.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmplervrhb5.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmplervrhb5.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmplervrhb5.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmplervrhb5.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_palindrome\
    \ = true;\n    let mut min_change_palindrome_index = 0;\n    let mut min_change_palindrome_value\
    \ = 0;\n    let mut min_change_palindrome_value_index = 0;\n    let mut min_change_palindrome_start\
    \ = 0;\n    let mut min_change_palindrome_end = 0;\n    let mut min_change_palindrome_start2\
    \ = 0;\n    let mut min_change_palindrome_end2 = 0;\n    let mut min_change_palindrome_start3\
    \ = 0;\n    let mut min_change_palindrome_end3 = 0;\n    let mut min_change_palindrome_start4\
    \ = 0;\n    let mut min_change_palindrome_end4 = 0;\n    let mut min_change_palindrome_start5\
    \ = 0;\n    let mut min_change_palindrome_end5 = 0;\n    let mut min_change_palindrome_start6\
    \ = 0;\n    let mut min_change_palindrome_end6 = 0;\n    let mut min_change_palindrome_start7\
    \ = 0;\n    let mut min_change_palindrome_end7 = 0;\n    let mut min_change_palindrome_start8\
    \ = 0;\n    let mut min_change_palindrome_end8 = 0;\n    let mut min_change_palindrome_start9\
    \ = 0;\n    let mut min_change_palindrome_end9 = 0;\n    let mut min_change_palindrome_start10\
    \ = 0;\n    let mut min_change_palindrome_end10 = 0;\n    let mut min_change_palindrome_start11\
    \ = 0;\n    let mut min_change_palindrome_end11 = 0;\n    let mut min_change_palindrome_start12\
    \ = 0;\n    let mut min_change_palindrome_end12 = 0;\n    let mut min_change_palindrome_start13\
    \ = 0;\n    let mut min_change_palindrome_end13 = 0;\n    let mut min_change_palindrome_start14\
    \ = 0;\n    let mut min_change_palindrome_end14 = 0;\n    let mut min_change_palindrome_start15\
    \ = 0;\n    let mut min_change_palindrome_end15 = 0;\n    let mut min_change_palindrome_start16\
    \ = 0;\n    let mut min_change_palindrome_end16 = 0;\n    let mut min_change_palindrome_start17\
    \ = 0;\n    let mut min_change_palindrome_end17 = 0;\n    let mut min_change_palindrome_start18\
    \ = 0;\n    let \n}\n\nfn main() {\n    let candidate = smallest_change;\n   \
    \ assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_z79rvkw.rs:54:1\n  \
    \ |\n54 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_z79rvkw.rs:58:17\n   |\n58 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_z79rvkw.rs:58:25\n \
    \  |\n58 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_z79rvkw.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_z79rvkw.rs:59:25\n   |\n59 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_z79rvkw.rs:60:17\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_z79rvkw.rs:60:25\n   |\n60 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_z79rvkw.rs:61:17\n  \
    \ |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_z79rvkw.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_z79rvkw.rs:62:17\n   |\n62 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_z79rvkw.rs:62:25\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_z79rvkw.rs:63:17\n   |\n63 |     assert"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    for i in arr.iter().rev() {\n        if *i == *(i + 1) {\n       \
    \     min_change_count++;\n        } else {\n            if min_change_count >\
    \ min_change {\n                min_change = min_change_count;\n             \
    \   min_change_index = i;\n            }\n            min_change_count = 1;\n\
    \        }\n    }\n    min_change_count\n}\n\nfn main() {\n    let candidate =\
    \ smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected expression, found `+`\n  --> /tmp/tmpu_a35noa.rs:17:30\n\
    \   |\n17 |             min_change_count++;\n   |                            \
    \  ^ expected expression\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu_a35noa.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpu_a35noa.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpu_a35noa.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpu_a35noa.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpu_a35noa.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpu_a35noa.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpu_a35noa.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpu_a35noa.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpu_a35noa.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpu_a35noa.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` "
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n    for &x in\
    \ arr {\n        if x == min_change {\n            min_change = x;\n        }\n\
    \    }\n    min_change\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpndcab3jd.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpndcab3jd.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpndcab3jd.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpndcab3jd.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpndcab3jd.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpndcab3jd.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpndcab3jd.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpndcab3jd.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpndcab3jd.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpndcab3jd.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpndcab3jd.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let mut \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpjqo_3ie6.rs:70:1\n\
    \   |\n70 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:79:17\n   |\n79 |     "
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_idx = -1;\n    let mut min_change_val\
    \ = std::i32::MAX;\n    let mut min_change_val_i = -1;\n    let mut min_change_val_j\
    \ = -1;\n    let mut min_change_val_k = -1;\n    let mut min_change_val_l = -1;\n\
    \    let mut min_change_val_m = -1;\n    let mut min_change_val_n = -1;\n    let\
    \ mut min_change_val_o = -1;\n    let mut min_change_val_q = -1;\n    let mut\
    \ min_change_val_r = -1;\n    let mut min_change_val_s = -1;\n    let mut min_change_val_t\
    \ = -1;\n    let mut min_change_val_u = -1;\n    let mut min_change_val_v = -1;\n\
    \    let mut min_change_val_w = -1;\n    let mut min_change_val_x = -1;\n    let\
    \ mut min_change_val_y = -1;\n    let mut min_change_val_z = -1;\n    let mut\
    \ min_change_val_a = -1;\n    let mut min_change_val_b = -1;\n    let mut min_change_val_c\
    \ = -1;\n    let mut min_change_val_d = -1;\n    let mut min_change_val_e = -1;\n\
    \    let mut min_change_val_f = -1;\n    let mut min_change_val_g = -1;\n    let\
    \ mut min_change_val_h = -1;\n    let mut min_change_val_i = -1;\n    let mut\
    \ min_change_val_j = -1;\n    let mut min_change_val_k = -1;\n    let mut min_change_val_l\
    \ = -1;\n    let mut min_change_val_m = -1;\n    let mut min_change_val_n = -1;\n\
    \    let mut min_change_val_o = -1;\n    let mut min_change_val_q = -1;\n    let\
    \ mut min_change_val_r = -1;\n    let mut min_change_val_s = -1;\n    let mut\
    \ min_change_val_t = -1;\n    let mut min_change_val_u = -1;\n    let mut min_change_val_v\
    \ = -1;\n    let mut min_change_val_w = -1;\n    let mut min_change_val_x = -1;\n\
    \    let mut min_change_val_y = -1;\n    let mut min_change_val_z = -1;\n    let\
    \ mut min_change_val_a = -1;\n    let mut min_change_val_b = -1;\n    let mut\
    \ min_change_val_c = -1;\n    let mut min_change_val_d = -1;\n    let mut min_change_val_e\
    \ = -1;\n    let mut min_change_val_f = -1;\n    let mut min_change_val_g = -1;\n\
    \    let mut min_change_val_h = -1;\n    let mut min_change_val_i = -1;\n    let\
    \ mut min_change_val_j = -1;\n    let mut min_change_val_\n}\n\nfn main() {\n\
    \    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp3itd_d5m.rs:67:28\n   |\n\
    67 |     let mut min_change_val_\n   |                            ^ help: add\
    \ `;` here\n68 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmp3itd_d5m.rs:72:17\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp3itd_d5m.rs:72:25\n \
    \  |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3itd_d5m.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3itd_d5m.rs:73:25\n   |\n73 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3itd_d5m.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3itd_d5m.rs:74:25\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3itd_d5m.rs:75:17\n  \
    \ |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3itd_d5m.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3itd_d5m.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3itd_d5m.rs:76:25\n\
    \   |\n76 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot f"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    for &i in &arr {\n        if *i < min_change_val {\n          \
    \  min_change_val = *i;\n            min_change_index = i;\n        }\n    }\n\
    \    for i in &arr {\n        if *i == min_change_val {\n            min_change\
    \ = min_change - 1;\n        }\n    }\n    min_change\n}\n\nfn main() {\n    let\
    \ candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpftus9p2x.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpftus9p2x.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpftus9p2x.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpftus9p2x.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpftus9p2x.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpftus9p2x.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpftus9p2x.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpftus9p2x.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpftus9p2x.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpftus9p2x.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpftus9p2x.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    for &i in arr {\n        if min_change > i {\n            min_change\
    \ = i;\n            min_change_index = i;\n            min_change_count = 1;\n\
    \        } else {\n            min_change_count += 1;\n        }\n    }\n    min_change_count\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpje4lp6qs.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpje4lp6qs.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpje4lp6qs.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpje4lp6qs.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpje4lp6qs.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpje4lp6qs.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpje4lp6qs.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpje4lp6qs.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpje4lp6qs.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpje4lp6qs.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpje4lp6qs.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let mut \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpjqo_3ie6.rs:70:1\n\
    \   |\n70 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:79:17\n   |\n79 |     "
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::max(isize::MIN, isize::MAX);\n    let mut min_change_index = 0;\n\
    \    let mut min_change_len = 0;\n    let mut min_change_len_index = 0;\n    let\
    \ mut min_change_len_index2 = 0;\n    let mut min_change_len_index3 = 0;\n   \
    \ let mut min_change_len_index4 = 0;\n    let mut min_change_len_index5 = 0;\n\
    \    let mut min_change_len_index6 = 0;\n    let mut min_change_len_index7 = 0;\n\
    \    let mut min_change_len_index8 = 0;\n    let mut min_change_len_index9 = 0;\n\
    \    let mut min_change_len_index10 = 0;\n    let mut min_change_len_index11 =\
    \ 0;\n    let mut min_change_len_index12 = 0;\n    let mut min_change_len_index13\
    \ = 0;\n    let mut min_change_len_index14 = 0;\n    let mut min_change_len_index15\
    \ = 0;\n    let mut min_change_len_index16 = 0;\n    let mut min_change_len_index17\
    \ = 0;\n    let mut min_change_len_index18 = 0;\n    let mut min_change_len_index19\
    \ = 0;\n    let mut min_change_len_index20 = 0;\n    let mut min_change_len_index21\
    \ = 0;\n    let mut min_change_len_index22 = 0;\n    let mut min_change_len_index23\
    \ = 0;\n    let mut min_change_len_index24 = 0;\n    let mut min_change_len_index25\
    \ = 0;\n    let mut min_change_len_index26 = 0;\n    let mut min_change_len_index27\
    \ = 0;\n    let mut min_change_len_index28 = 0;\n    let mut min_change_len_index29\
    \ = 0;\n    let mut min_change_len_index30 = 0;\n    let mut min_change_len_index31\
    \ = 0;\n    let mut min_change_len_index32 = 0;\n    let mut min_change_len_index33\
    \ = 0;\n    let mut min_change_len_index34 = 0;\n    let mut min_change_len_index35\
    \ = 0;\n    let mut min_change_len_index36 = 0;\n    let mut min_change_len_index37\
    \ = 0;\n    let mut min_change_len_index38 = 0;\n    let mut min_change_len_index39\
    \ = 0;\n    let mut min_change_len_index40 = 0;\n    let mut min_change_len_index41\
    \ = 0;\n    let mut min_change_len_index42 = 0;\n    let mut min_change_len_index43\
    \ = 0;\n    let mut min_change_len_index44 = 0;\n    let mut min_change_len_index45\
    \ = 0;\n    let mut min_change_len_index46 = 0;\n    let mut min_change_len_index47\
    \ = 0;\n    let mut min_change_len_index48 = 0;\n    let \n}\n\nfn main() {\n\
    \    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpbqrvo8r6.rs:64:1\n  \
    \ |\n64 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpbqrvo8r6.rs:68:17\n   |\n68 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpbqrvo8r6.rs:68:25\n \
    \  |\n68 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbqrvo8r6.rs:69:17\n   |\n69 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbqrvo8r6.rs:69:25\n   |\n69 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbqrvo8r6.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbqrvo8r6.rs:70:25\n   |\n70 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbqrvo8r6.rs:71:17\n  \
    \ |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbqrvo8r6.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbqrvo8r6.rs:72:17\n   |\n72 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbqrvo8r6.rs:72:25\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbqrvo8r6.rs:73:17\n   |\n73 |     assert"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpyb6hay86.rs:65:33\n   |\n\
    65 |     let mut min_change_len_index\n   |                                 ^\
    \ help: add `;` here\n66 | }\n   | - unexpected token\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyb6hay86.rs:70:17\n   |\n70 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyb6hay86.rs:70:25\n\
    \   |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpyb6hay86.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpyb6hay86.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpyb6hay86.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpyb6hay86.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpyb6hay86.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpyb6hay86.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpyb6hay86.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpyb6hay86.rs:74:25\n\
    \   |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = min_change_len.saturating_add((min_change_len /\
    \ 2).saturating_add((min_change_len / 2)));\n    for pos in 0..arr.len() {\n \
    \       let mut count = 0;\n        let mut pos = pos;\n        let mut len =\
    \ min_change_len;\n        while len > 0 {\n            count += 1;\n        \
    \    len -= 1;\n            pos += 1;\n            if arr[pos] != arr[arr.len()\
    \ - pos - 1] {\n                break;\n            }\n        }\n        if count\
    \ < min_change {\n            min_change = count;\n            min_change_index\
    \ = pos;\n            min_change_count = count;\n            min_change_pos =\
    \ pos;\n            min_change_len = len;\n        }\n    }\n    min_change_count\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdedawem4.rs:43:17\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdedawem4.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdedawem4.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdedawem4.rs:44:25\n\
    \   |\n44 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdedawem4.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdedawem4.rs:45:25\n   |\n45 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdedawem4.rs:46:17\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdedawem4.rs:46:25\n   |\n46 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdedawem4.rs:47:17\n  \
    \ |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdedawem4.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdedawem4.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n\n}\n\nfn main() {\n  \
    \  let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfqojnfly.rs:71:17\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfqojnfly.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfqojnfly.rs:72:17\n   |\n72 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfqojnfly.rs:72:25\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfqojnfly.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfqojnfly.rs:73:25\n   |\n73 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfqojnfly.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfqojnfly.rs:74:25\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfqojnfly.rs:75:17\n  \
    \ |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfqojnfly.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfqojnfly.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_\n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp9r0svm04.rs:75:17\n   |\n\
    75 |     let mut min_\n   |                 ^ help: add `;` here\n76 | }\n   |\
    \ - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9r0svm04.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9r0svm04.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9r0svm04.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9r0svm04.rs:81:25\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9r0svm04.rs:82:17\n  \
    \ |\n82 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9r0svm04.rs:82:25\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9r0svm04.rs:83:17\n   |\n83 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9r0svm04.rs:83:25\n\
    \   |\n83 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9r0svm04.rs:84:17\n   |\n84 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9r0svm04.rs:84:25\n   |\n84 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in th"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    let mut min_change_rev = 0;\n    let mut min_change_rev_count = 0;\n\
    \    let mut min_change_rev_rev = 0;\n    let mut min_change_rev_rev_count = 0;\n\
    \    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change_rev_rev_count = 0;\n    let mut min_change_rev_rev_count\
    \ = 0;\n    let mut min_change\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpn6zjikvv.rs:59:23\n   |\n\
    59 |     let mut min_change\n   |                       ^ help: add `;` here\n\
    60 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpn6zjikvv.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn6zjikvv.rs:64:25\n   |\n64 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpn6zjikvv.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpn6zjikvv.rs:65:25\n   |\n65 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpn6zjikvv.rs:66:17\n  \
    \ |\n66 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpn6zjikvv.rs:66:25\n   |\n66 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpn6zjikvv.rs:67:17\n   |\n67 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpn6zjikvv.rs:67:25\n\
    \   |\n67 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpn6zjikvv.rs:68:17\n   |\n68 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpn6zjikvv.rs:68:25\n   |\n68 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value "
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_idx = -1;\n    let mut min_change_idx =\
    \ -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n  \
    \  let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_\n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpkjuloicn.rs:75:17\n   |\n\
    75 |     let mut min_\n   |                 ^ help: add `;` here\n76 | }\n   |\
    \ - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkjuloicn.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkjuloicn.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkjuloicn.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkjuloicn.rs:81:25\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkjuloicn.rs:82:17\n  \
    \ |\n82 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkjuloicn.rs:82:25\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkjuloicn.rs:83:17\n   |\n83 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkjuloicn.rs:83:25\n\
    \   |\n83 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkjuloicn.rs:84:17\n   |\n84 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkjuloicn.rs:84:25\n   |\n84 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in th"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_palindrome\
    \ = false;\n    for index in 0..arr.len() {\n        let mut change = std::i32::MAX;\n\
    \        let mut change_index = 0;\n        let mut change_palindrome = false;\n\
    \        for change in 0..arr.len() {\n            if index == change {\n    \
    \            continue;\n            }\n            if arr[index] < arr[change]\
    \ {\n                change = std::i32::MAX;\n                change_index = index;\n\
    \                change_palindrome = false;\n                break;\n        \
    \    }\n            if arr[index] > arr[change] {\n                change = std::i32::MAX;\n\
    \                change_index = index;\n                change_palindrome = true;\n\
    \                break;\n            }\n            if arr[index] == arr[change]\
    \ {\n                change = std::i32::MAX;\n                change_index = index;\n\
    \                change_palindrome = true;\n                break;\n         \
    \   }\n        }\n        if change < min_change {\n            min_change = change;\n\
    \            min_change_index = change_index;\n            min_change_palindrome\
    \ = change_palindrome;\n        }\n    }\n    min_change\n}\n\nfn main() {\n \
    \   let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprorocqf2.rs:53:17\n\
    \   |\n53 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprorocqf2.rs:53:25\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprorocqf2.rs:54:17\n   |\n54 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprorocqf2.rs:54:25\n\
    \   |\n54 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprorocqf2.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprorocqf2.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprorocqf2.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprorocqf2.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprorocqf2.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprorocqf2.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprorocqf2.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min::Default::default();\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n    let mut\
    \ min_change_len = arr.len();\n    let mut min_change_pos = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_pos = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n  \
    \  let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    let mut\
    \ min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_pos =\
    \ 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n  \
    \  let mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n    let mut\
    \ min_change_len = arr.len();\n    let mut min_change_pos = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_pos = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n  \
    \  let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    let mut\
    \ min_change_pos = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_pos =\
    \ 0;\n    let mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n  \
    \  let mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_len = arr.len();\n    let mut min_change_pos = 0;\n    let mu\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpri4gjqh8.rs:68:11\n   |\n\
    68 |     let mu\n   |           ^ help: add `;` here\n69 | }\n   | - unexpected\
    \ token\n\nerror[E0433]: failed to resolve: expected type, found function `min`\
    \ in `cmp`\n  --> /tmp/tmpri4gjqh8.rs:12:41\n   |\n12 |     let mut min_change\
    \ = std::cmp::min::Default::default();\n   |                                 \
    \        ^^^^^^^ not found in `std::cmp::min`\n   |\nhelp: consider importing\
    \ this trait\n   |\n1  | use std::default::Default;\n   |\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpri4gjqh8.rs:73:17\n   |\n73 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpri4gjqh8.rs:73:25\n\
    \   |\n73 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpri4gjqh8.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpri4gjqh8.rs:74:25\n   |\n74 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpri4gjqh8.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpri4gjqh8.rs:75:25\n   |\n75 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpri4gjqh8.rs:76:17\n  \
    \ |\n76 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpri4gjqh8.rs:76:25\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpri4gjqh8.rs"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let \n}\n\nfn main() {\n   \
    \ let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpuqnkl0ee.rs:73:1\n  \
    \ |\n73 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:17\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:25\n \
    \  |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:25\n\
    \   |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:82:17\n   |\n82 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_element\
    \ = arr[0];\n    for &x in arr.iter().rev() {\n        if x == min_change_element\
    \ {\n            min_change_index += 1;\n        } else {\n            min_change\
    \ = min_change_index;\n            min_change_element = x;\n            min_change_index\
    \ = 0;\n        }\n    }\n    min_change\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2g68crxn.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2g68crxn.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2g68crxn.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2g68crxn.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2g68crxn.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2g68crxn.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2g68crxn.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2g68crxn.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2g68crxn.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2g68crxn.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2g68crxn.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_length\
    \ = std::i32::MAX;\n    for i in arr.iter().rev() {\n        if *i < min_change\
    \ {\n            min_change = *i;\n            min_change_index = i;\n       \
    \     min_change_length = min_change_index - min_change_index;\n        }\n  \
    \  }\n    min_change_length\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdagxssz9.rs:27:17\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdagxssz9.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdagxssz9.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdagxssz9.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdagxssz9.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdagxssz9.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdagxssz9.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdagxssz9.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdagxssz9.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdagxssz9.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdagxssz9.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n    for &x in\
    \ arr {\n        if x == min_change {\n            min_change = x;\n        }\n\
    \    }\n    min_change\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpndcab3jd.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpndcab3jd.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpndcab3jd.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpndcab3jd.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpndcab3jd.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpndcab3jd.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpndcab3jd.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpndcab3jd.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpndcab3jd.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpndcab3jd.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpndcab3jd.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n    let mut\
    \ min_change_index = 0;\n    let mut min_change_arr = arr.clone();\n    while\
    \ min_change != 0 {\n        if min_change_arr[min_change_index] == min_change\
    \ {\n            min_change_index += 1;\n        } else {\n            min_change_arr[min_change_index]\
    \ = min_change;\n            min_change_index += 1;\n            min_change =\
    \ min_change_arr[min_change_index];\n        }\n    }\n    min_change_index\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmppi06i5hg.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppi06i5hg.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppi06i5hg.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmppi06i5hg.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmppi06i5hg.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmppi06i5hg.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmppi06i5hg.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmppi06i5hg.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmppi06i5hg.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmppi06i5hg.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmppi06i5hg.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n    for &x in\
    \ arr.iter() {\n        if x == min_change {\n            min_change = x;\n  \
    \      }\n    }\n    min_change\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp2ht0kqc4.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2ht0kqc4.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2ht0kqc4.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2ht0kqc4.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2ht0kqc4.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2ht0kqc4.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2ht0kqc4.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2ht0kqc4.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2ht0kqc4.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2ht0kqc4.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2ht0kqc4.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_idx = arr.len() - 1;\n    let mut\
    \ min_change_val = arr[0];\n    let mut min_change_val_pos = 0;\n    let mut min_change_val_neg\
    \ = 0;\n    let mut min_change_val_neg_idx = 0;\n    let mut min_change_val_neg_idx_pos\
    \ = 0;\n    let mut min_change_val_neg_idx_neg = 0;\n    let mut min_change_val_neg_idx_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_idx_neg_idx_pos = 0;\n    let mut min_change_val_neg_idx_neg_idx_neg\
    \ = 0;\n    let mut min_change_val_neg_idx_neg_idx_neg_idx = 0;\n    let mut min_change_val_neg_idx_neg_idx_neg_idx_pos\
    \ = 0;\n    let mut min_change_val_neg_idx_neg_idx_neg_idx_neg = 0;\n    let mut\
    \ min_change_val_neg_idx_neg_idx_neg_idx_neg_idx = 0;\n    let mut min_change_val_neg_idx_neg_idx_neg_idx_neg_idx_pos\
    \ = 0;\n    let mut min_change_val_neg_idx_neg_idx_neg_idx_neg_idx_neg = 0;\n\
    \    let mut min_change_val_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx = 0;\n   \
    \ let mut min_change_val_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_pos = 0;\n  \
    \  let mut min_change_val_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg = 0;\n \
    \   let mut min_change_val_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx = 0;\n\
    \    let mut min_change_val_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_pos\
    \ = 0;\n    let mut min_change_val_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg\
    \ = 0;\n    let mut min_change_val_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_pos\
    \ = 0;\n    let mut min_change_val_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg\
    \ = 0;\n    let mut min_change_val_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_pos\
    \ = 0;\n    let mut min_change_val_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg\
    \ = 0;\n    let mut min_change_val_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx_neg_idx\
    \ = 0;\n    let mut min_change_val_neg_idx_neg_idx_neg_idx_\n}\n\nfn main() {\n\
    \    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp7zjs2242.rs:42:52\n   |\n\
    42 |     let mut min_change_val_neg_idx_neg_idx_neg_idx_\n   |               \
    \                                     ^ help: add `;` here\n43 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp7zjs2242.rs:47:17\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7zjs2242.rs:47:25\n   |\n47 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7zjs2242.rs:48:17\n   |\n48 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7zjs2242.rs:48:25\n\
    \   |\n48 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7zjs2242.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7zjs2242.rs:49:25\n   |\n49 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7zjs2242.rs:50:17\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7zjs2242.rs:50:25\n   |\n50 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7zjs2242.rs:51:17\n  \
    \ |\n51 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7zjs2242.rs:51:25\n   |\n51 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_length\
    \ = 0;\n    for index in 0..arr.len() {\n        let mut change = std::i32::MAX;\n\
    \        let mut change_length = 0;\n        for j in index..arr.len() {\n   \
    \         if arr[j] != arr[index] {\n                change += 1;\n          \
    \      change_length += 1;\n            }\n        }\n        if change < min_change\
    \ {\n            min_change = change;\n            min_change_index = index;\n\
    \            min_change_length = change_length;\n        }\n    }\n    min_change\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpc1uu0m4v.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc1uu0m4v.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpc1uu0m4v.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpc1uu0m4v.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpc1uu0m4v.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpc1uu0m4v.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpc1uu0m4v.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpc1uu0m4v.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpc1uu0m4v.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpc1uu0m4v.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpc1uu0m4v.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_element\
    \ = arr[0];\n    let mut min_change_element_index = -1;\n    let mut min_change_element_value\
    \ = arr[0];\n    let mut min_change_element_value = min_change_element_value;\n\
    \    let mut min_change_element_value = min_change_element_value;\n    let mut\
    \ min_change_element_value = min_change_element_value;\n    let mut min_change_element_value\
    \ = min_change_element_value;\n    let mut min_change_element_value = min_change_element_value;\n\
    \    let mut min_change_element_value = min_change_element_value;\n    let mut\
    \ min_change_element_value = min_change_element_value;\n    let mut min_change_element_value\
    \ = min_change_element_value;\n    let mut min_change_element_value = min_change_element_value;\n\
    \    let mut min_change_element_value = min_change_element_value;\n    let mut\
    \ min_change_element_value = min_change_element_value;\n    let mut min_change_element_value\
    \ = min_change_element_value;\n    let mut min_change_element_value = min_change_element_value;\n\
    \    let mut min_change_element_value = min_change_element_value;\n    let mut\
    \ min_change_element_value = min_change_element_value;\n    let mut min_change_element_value\
    \ = min_change_element_value;\n    let mut min_change_element_value = min_change_element_value;\n\
    \    let mut min_change_element_value = min_change_element_value;\n    let mut\
    \ min_change_element_value = min_change_element_value;\n    let mut min_change_element_value\
    \ = min_change_element_value;\n    let mut min_change_element_value = min_change_element_value;\n\
    \    let mut min_change_element_value = min_change_element_value;\n    let mut\
    \ min_change_element_value = min_change_element_value;\n    let mut min_change_element_value\
    \ = min_change_element_value;\n    let mut min_change_element_value = min_change_element_value;\n\
    \    let mut min_change_element_value = min_change_element_value;\n    let mut\
    \ min_change_element_value = min_change_element_value;\n    let mut min_change_element_value\
    \ = min_change_element_value;\n    let mut min_change_element_value = min_change_element_value;\n\
    \    let mut min_change_element_value = min_change_element_value;\n    let mut\
    \ min_change_element_value = min_change_element_value;\n    let mut min_change_element_value\
    \ = min_change_element_value;\n    let mut min_change_element_value = min_change_element_value;\n\
    \    let mut min_change_element_value = min_change_element_value;\n    let mut\
    \ min_change_element_value = min_change_element_value;\n    let mut min_change_element_value\
    \ = min_change_element_value;\n    let mut min_change_element_value = min_change_element_value;\n\
    \    let mut min_change_element_value = min_change_element_value;\n    let mut\
    \ min_change_element_value = min_change_element_\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp42lz8mvb.rs:55:59\n   |\n\
    55 |     let mut min_change_element_value = min_change_element_\n   |        \
    \                                                   ^ help: add `;` here\n56 |\
    \ }\n   | - unexpected token\n\nerror[E0425]: cannot find value `min_change_element_`\
    \ in this scope\n  --> /tmp/tmp42lz8mvb.rs:55:40\n   |\n55 |     let mut min_change_element_value\
    \ = min_change_element_\n   |                                        ^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `min_change_element`\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp42lz8mvb.rs:60:17\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp42lz8mvb.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp42lz8mvb.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp42lz8mvb.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp42lz8mvb.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp42lz8mvb.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp42lz8mvb.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp42lz8mvb.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot f"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_palindrome\
    \ = false;\n\n    for &i in arr {\n        if min_change > i {\n            min_change\
    \ = i;\n            min_change_index = i;\n            min_change_palindrome =\
    \ false;\n        }\n        if min_change == i {\n            min_change_palindrome\
    \ = true;\n        }\n    }\n\n    if min_change_palindrome {\n        min_change_index\n\
    \    } else {\n        min_change\n    }\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbq7zvawr.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbq7zvawr.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbq7zvawr.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbq7zvawr.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbq7zvawr.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbq7zvawr.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbq7zvawr.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbq7zvawr.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbq7zvawr.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbq7zvawr.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbq7zvawr.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = arr.len();\n    let mut min_change_index3 = 0;\n    let mut min_change_index4\
    \ = 0;\n    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n\
    \    let mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let\
    \ mut min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut\
    \ min_change_index11 = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13\
    \ = 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 =\
    \ 0;\n    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n\
    \    let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n  \
    \  let mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let\
    \ mut min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut\
    \ min_change_index24 = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26\
    \ = 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 =\
    \ 0;\n    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n\
    \    let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n  \
    \  let mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let\
    \ mut min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut\
    \ min_change_index37 = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39\
    \ = 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 =\
    \ 0;\n    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n\
    \    let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n  \
    \  let mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let\
    \ mut min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut\
    \ min_change_index50 = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52\
    \ = 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 =\
    \ 0;\n    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n\
    \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpltuki3ue.rs:74:17\n\
    \   |\n74 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpltuki3ue.rs:74:25\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpltuki3ue.rs:75:17\n   |\n75 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpltuki3ue.rs:75:25\n\
    \   |\n75 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpltuki3ue.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpltuki3ue.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpltuki3ue.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpltuki3ue.rs:77:25\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpltuki3ue.rs:78:17\n  \
    \ |\n78 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpltuki3ue.rs:78:25\n   |\n78 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpltuki3ue.rs:79:17\n   |\n79 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    for &i in arr {\n        if min_change > i {\n           \
    \ min_change = i;\n            min_change_index = i;\n        }\n        if min_change\
    \ == i {\n            min_change_len = std::cmp::min(min_change_len, i - min_change_index);\n\
    \        }\n    }\n    min_change_len\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg8wd_8dp.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg8wd_8dp.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg8wd_8dp.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg8wd_8dp.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg8wd_8dp.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg8wd_8dp.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg8wd_8dp.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg8wd_8dp.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg8wd_8dp.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg8wd_8dp.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg8wd_8dp.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len_index2\
    \ = 0;\n    let mut min_change_len_index3 = 0;\n    let mut min_change_len_index4\
    \ = 0;\n    let mut min_change_len_index5 = 0;\n    let mut min_change_len_index6\
    \ = 0;\n    let mut min_change_len_index7 = 0;\n    let mut min_change_len_index8\
    \ = 0;\n    let mut min_change_len_index9 = 0;\n    let mut min_change_len_index10\
    \ = 0;\n    let mut min_change_len_index11 = 0;\n    let mut min_change_len_index12\
    \ = 0;\n    let mut min_change_len_index13 = 0;\n    let mut min_change_len_index14\
    \ = 0;\n    let mut min_change_len_index15 = 0;\n    let mut min_change_len_index16\
    \ = 0;\n    let mut min_change_len_index17 = 0;\n    let mut min_change_len_index18\
    \ = 0;\n    let mut min_change_len_index19 = 0;\n    let mut min_change_len_index20\
    \ = 0;\n    let mut min_change_len_index21 = 0;\n    let mut min_change_len_index22\
    \ = 0;\n    let mut min_change_len_index23 = 0;\n    let mut min_change_len_index24\
    \ = 0;\n    let mut min_change_len_index25 = 0;\n    let mut min_change_len_index26\
    \ = 0;\n    let mut min_change_len_index27 = 0;\n    let mut min_change_len_index28\
    \ = 0;\n    let mut min_change_len_index29 = 0;\n    let mut min_change_len_index30\
    \ = 0;\n    let mut min_change_len_index31 = 0;\n    let mut min_change_len_index32\
    \ = 0;\n    let mut min_change_len_index33 = 0;\n    let mut min_change_len_index34\
    \ = 0;\n    let mut min_change_len_index35 = 0;\n    let mut min_change_len_index36\
    \ = 0;\n    let mut min_change_len_index37 = 0;\n    let mut min_change_len_index38\
    \ = 0;\n    let mut min_change_len_index39 = 0;\n    let mut min_change_len_index40\
    \ = 0;\n    let mut min_change_len_index41 = 0;\n    let mut min_change_len_index42\
    \ = 0;\n    let mut min_change_len_index43 = 0;\n    let mut min_change_len_index44\
    \ = 0;\n    let mut min_change_len_index45 = 0;\n    let mut min_change_len_index46\
    \ = 0;\n    let mut min_change_len_index47 = 0;\n    let mut min_change_len_index48\
    \ = 0;\n    let mut min_change_len_index49 = 0;\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprgrfltl1.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprgrfltl1.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprgrfltl1.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprgrfltl1.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprgrfltl1.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprgrfltl1.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprgrfltl1.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:73:17\n   |\n73 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>().len(), *arr.iter().cloned().collect::<Vec<_>>().len());\n\
    \    for &i in arr {\n        if *i < *(*arr.iter().rev().find(|&x| x == i).unwrap())\
    \ {\n            min_change = std::cmp::min(min_change, i - i);\n        }\n \
    \   }\n    min_change\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcifvycet.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcifvycet.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcifvycet.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcifvycet.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcifvycet.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcifvycet.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcifvycet.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcifvycet.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcifvycet.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcifvycet.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcifvycet.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len_index2\
    \ = 0;\n    let mut min_change_len_index3 = 0;\n    let mut min_change_len_index4\
    \ = 0;\n    let mut min_change_len_index5 = 0;\n    let mut min_change_len_index6\
    \ = 0;\n    let mut min_change_len_index7 = 0;\n    let mut min_change_len_index8\
    \ = 0;\n    let mut min_change_len_index9 = 0;\n    let mut min_change_len_index10\
    \ = 0;\n    let mut min_change_len_index11 = 0;\n    let mut min_change_len_index12\
    \ = 0;\n    let mut min_change_len_index13 = 0;\n    let mut min_change_len_index14\
    \ = 0;\n    let mut min_change_len_index15 = 0;\n    let mut min_change_len_index16\
    \ = 0;\n    let mut min_change_len_index17 = 0;\n    let mut min_change_len_index18\
    \ = 0;\n    let mut min_change_len_index19 = 0;\n    let mut min_change_len_index20\
    \ = 0;\n    let mut min_change_len_index21 = 0;\n    let mut min_change_len_index22\
    \ = 0;\n    let mut min_change_len_index23 = 0;\n    let mut min_change_len_index24\
    \ = 0;\n    let mut min_change_len_index25 = 0;\n    let mut min_change_len_index26\
    \ = 0;\n    let mut min_change_len_index27 = 0;\n    let mut min_change_len_index28\
    \ = 0;\n    let mut min_change_len_index29 = 0;\n    let mut min_change_len_index30\
    \ = 0;\n    let mut min_change_len_index31 = 0;\n    let mut min_change_len_index32\
    \ = 0;\n    let mut min_change_len_index33 = 0;\n    let mut min_change_len_index34\
    \ = 0;\n    let mut min_change_len_index35 = 0;\n    let mut min_change_len_index36\
    \ = 0;\n    let mut min_change_len_index37 = 0;\n    let mut min_change_len_index38\
    \ = 0;\n    let mut min_change_len_index39 = 0;\n    let mut min_change_len_index40\
    \ = 0;\n    let mut min_change_len_index41 = 0;\n    let mut min_change_len_index42\
    \ = 0;\n    let mut min_change_len_index43 = 0;\n    let mut min_change_len_index44\
    \ = 0;\n    let mut min_change_len_index45 = 0;\n    let mut min_change_len_index46\
    \ = 0;\n    let mut min_change_len_index47 = 0;\n    let mut min_change_len_index48\
    \ = 0;\n    let mut min_change_len_index49 = 0;\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprgrfltl1.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprgrfltl1.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprgrfltl1.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprgrfltl1.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprgrfltl1.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprgrfltl1.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprgrfltl1.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:73:17\n   |\n73 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = arr.len();\n    let mut min_change_index2\
    \ = arr.len();\n    let mut min_change_index3 = arr.len();\n    let mut min_change_index4\
    \ = arr.len();\n    let mut min_change_index5 = arr.len();\n    let mut min_change_index6\
    \ = arr.len();\n    let mut min_change_index7 = arr.len();\n    let mut min_change_index8\
    \ = arr.len();\n    let mut min_change_index9 = arr.len();\n    let mut min_change_index10\
    \ = arr.len();\n    let mut min_change_index11 = arr.len();\n    let mut min_change_index12\
    \ = arr.len();\n    let mut min_change_index13 = arr.len();\n    let mut min_change_index14\
    \ = arr.len();\n    let mut min_change_index15 = arr.len();\n    let mut min_change_index16\
    \ = arr.len();\n    let mut min_change_index17 = arr.len();\n    let mut min_change_index18\
    \ = arr.len();\n    let mut min_change_index19 = arr.len();\n    let mut min_change_index20\
    \ = arr.len();\n    let mut min_change_index21 = arr.len();\n    let mut min_change_index22\
    \ = arr.len();\n    let mut min_change_index23 = arr.len();\n    let mut min_change_index24\
    \ = arr.len();\n    let mut min_change_index25 = arr.len();\n    let mut min_change_index26\
    \ = arr.len();\n    let mut min_change_index27 = arr.len();\n    let mut min_change_index28\
    \ = arr.len();\n    let mut min_change_index29 = arr.len();\n    let mut min_change_index30\
    \ = arr.len();\n    let mut min_change_index31 = arr.len();\n    let mut min_change_index32\
    \ = arr.len();\n    let mut min_change_index33 = arr.len();\n    let mut min_change_index34\
    \ = arr.len();\n    let mut min_change_index35 = arr.len();\n    let mut min_change_index36\
    \ = arr.len();\n    let mut min_change_index37 = arr.len();\n    let mut min_change_index38\
    \ = arr.len();\n    let mut min_change_index39 = arr.len();\n    let mut min_change_index40\
    \ = arr.len();\n    let mut min_change_index41 = arr.len();\n    let mut min_change_index42\
    \ = arr.len();\n    let mut min_change_index43 = arr.len();\n}\n\nfn main() {\n\
    \    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_ze3gui8.rs:60:17\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_ze3gui8.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_ze3gui8.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_ze3gui8.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_ze3gui8.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_ze3gui8.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_ze3gui8.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_ze3gui8.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_ze3gui8.rs:64:17\n  \
    \ |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_ze3gui8.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_ze3gui8.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = -1;\n    for index in 0..arr.len()\
    \ {\n        let mut change = std::i32::MAX;\n        let mut change_index = -1;\n\
    \        for j in index..arr.len() {\n            if arr[j] != arr[index] {\n\
    \                change = std::i32::MAX;\n                change_index = -1;\n\
    \                break;\n            }\n            change = std::cmp::min(change,\
    \ j - index);\n            change_index = j;\n        }\n        if change < min_change\
    \ {\n            min_change = change;\n            min_change_index = change_index;\n\
    \        }\n    }\n    min_change_index\n}\n\nfn main() {\n    let candidate =\
    \ smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpuk0pqegv.rs:36:17\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuk0pqegv.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuk0pqegv.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuk0pqegv.rs:37:25\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuk0pqegv.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuk0pqegv.rs:38:25\n   |\n38 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuk0pqegv.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuk0pqegv.rs:39:25\n   |\n39 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuk0pqegv.rs:40:17\n  \
    \ |\n40 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuk0pqegv.rs:40:25\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuk0pqegv.rs:41:17\n   |\n41 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_idx = -1;\n    for idx in 0..arr.len()\
    \ {\n        let mut min_change_idx = idx;\n        let mut min_change = std::i32::MAX;\n\
    \        for j in (idx - 1..idx).rev() {\n            if arr[j] < arr[j + 1] {\n\
    \                min_change = std::i32::MAX;\n                break;\n       \
    \     }\n            min_change = std::cmp::min(min_change, j - idx);\n      \
    \  }\n        if min_change < min_change {\n            min_change = min_change;\n\
    \            min_change_idx = idx;\n        }\n    }\n    min_change_idx\n}\n\n\
    fn main() {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpappj3o4b.rs:34:17\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpappj3o4b.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpappj3o4b.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpappj3o4b.rs:35:25\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpappj3o4b.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpappj3o4b.rs:36:25\n   |\n36 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpappj3o4b.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpappj3o4b.rs:37:25\n   |\n37 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpappj3o4b.rs:38:17\n  \
    \ |\n38 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpappj3o4b.rs:38:25\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpappj3o4b.rs:39:17\n   |\n39 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let \n}\n\nfn main() {\n   \
    \ let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpuqnkl0ee.rs:73:1\n  \
    \ |\n73 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:17\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:25\n \
    \  |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:25\n\
    \   |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:82:17\n   |\n82 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_element\
    \ = arr[0];\n    let mut min_change_element_index = 0;\n    let mut min_change_element_value\
    \ = min_change_element;\n    let mut min_change_element_index2 = 0;\n    let mut\
    \ min_change_element_value2 = min_change_element;\n    let mut min_change_element_index3\
    \ = 0;\n    let mut min_change_element_value3 = min_change_element;\n    let mut\
    \ min_change_element_index4 = 0;\n    let mut min_change_element_value4 = min_change_element;\n\
    \    let mut min_change_element_index5 = 0;\n    let mut min_change_element_value5\
    \ = min_change_element;\n    let mut min_change_element_index6 = 0;\n    let mut\
    \ min_change_element_value6 = min_change_element;\n    let mut min_change_element_index7\
    \ = 0;\n    let mut min_change_element_value7 = min_change_element;\n    let mut\
    \ min_change_element_index8 = 0;\n    let mut min_change_element_value8 = min_change_element;\n\
    \    let mut min_change_element_index9 = 0;\n    let mut min_change_element_value9\
    \ = min_change_element;\n    let mut min_change_element_index10 = 0;\n    let\
    \ mut min_change_element_value10 = min_change_element;\n    let mut min_change_element_index11\
    \ = 0;\n    let mut min_change_element_value11 = min_change_element;\n    let\
    \ mut min_change_element_index12 = 0;\n    let mut min_change_element_value12\
    \ = min_change_element;\n    let mut min_change_element_index13 = 0;\n    let\
    \ mut min_change_element_value13 = min_change_element;\n    let mut min_change_element_index14\
    \ = 0;\n    let mut min_change_element_value14 = min_change_element;\n    let\
    \ mut min_change_element_index15 = 0;\n    let mut min_change_element_value15\
    \ = min_change_element;\n    let mut min_change_element_index16 = 0;\n    let\
    \ mut min_change_element_value16 = min_change_element;\n    let mut min_change_element_index17\
    \ = 0;\n    let mut min_change_element_value17 = min_change_element;\n    let\
    \ mut min_change_element_index18 = 0;\n    let mut min_change_element_value18\
    \ = min_change_element;\n    let mut min_change_element_index19 = 0;\n    let\
    \ mut min_change_element_value19 = min_change_element;\n    let mut min_change_element_index20\
    \ = 0;\n    let mut min_change_element_value20 = min_change_element;\n    let\
    \ mut min_change_element_index21 = 0;\n    let mut min_change_element_value21\
    \ = min_change_element;\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpv6ycnunt.rs:61:17\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv6ycnunt.rs:61:25\n   |\n61 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv6ycnunt.rs:62:17\n   |\n62 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpv6ycnunt.rs:62:25\n\
    \   |\n62 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpv6ycnunt.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpv6ycnunt.rs:63:25\n   |\n63 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpv6ycnunt.rs:64:17\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpv6ycnunt.rs:64:25\n   |\n64 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpv6ycnunt.rs:65:17\n  \
    \ |\n65 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpv6ycnunt.rs:65:25\n   |\n65 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpv6ycnunt.rs:66:17\n   |\n66 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    for &i in arr.iter().rev() {\n        if *i < min_change_val {\n\
    \            min_change_val = *i;\n            min_change_index = i;\n       \
    \ }\n    }\n    for i in 0..arr.len() {\n        if arr[i] != min_change_val {\n\
    \            min_change = i;\n            break;\n        }\n    }\n    min_change\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpk3kmizoc.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpk3kmizoc.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpk3kmizoc.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpk3kmizoc.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpk3kmizoc.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpk3kmizoc.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpk3kmizoc.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpk3kmizoc.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpk3kmizoc.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpk3kmizoc.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpk3kmizoc.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.len();\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = arr.\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: unexpected token: `}`\n  --> /tmp/tmpq949ytkx.rs:64:1\n   |\n64\
    \ | }\n   | ^\n\nerror: expected `;`, found `}`\n  --> /tmp/tmpq949ytkx.rs:63:34\n\
    \   |\n63 |     let mut min_change_len = arr.\n   |                          \
    \        ^ help: add `;` here\n64 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpq949ytkx.rs:68:17\n  \
    \ |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpq949ytkx.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpq949ytkx.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpq949ytkx.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpq949ytkx.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpq949ytkx.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpq949ytkx.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpq949ytkx.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpq949ytkx.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpq949ytkx.rs:72:25\n   |\n72 |     assert_eq!({left}, "
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    for index in 0..arr.len() {\n        let mut change_count = 0;\n \
    \       let mut change_index = index;\n        while change_index >= 0 && arr[change_index]\
    \ != arr[change_index].rev() {\n            change_count += 1;\n            change_index\
    \ -= 1;\n        }\n        if change_count < min_change {\n            min_change\
    \ = change_count;\n            min_change_index = index;\n        }\n    }\n \
    \   min_change_count\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp539a_5c5.rs:32:17\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp539a_5c5.rs:32:25\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp539a_5c5.rs:33:17\n   |\n33 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp539a_5c5.rs:33:25\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp539a_5c5.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp539a_5c5.rs:34:25\n   |\n34 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp539a_5c5.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp539a_5c5.rs:35:25\n   |\n35 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp539a_5c5.rs:36:17\n  \
    \ |\n36 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp539a_5c5.rs:36:25\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp539a_5c5.rs:37:17\n   |\n37 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_palindromic\
    \ = false;\n    let mut min_change_palindromic_index = 0;\n    let mut min_change_palindromic_count\
    \ = 0;\n    let mut min_change_palindromic_count2 = 0;\n    let mut min_change_palindromic_count3\
    \ = 0;\n    let mut min_change_palindromic_count4 = 0;\n    let mut min_change_palindromic_count5\
    \ = 0;\n    let mut min_change_palindromic_count6 = 0;\n    let mut min_change_palindromic_count7\
    \ = 0;\n    let mut min_change_palindromic_count8 = 0;\n    let mut min_change_palindromic_count9\
    \ = 0;\n    let mut min_change_palindromic_count10 = 0;\n    let mut min_change_palindromic_count11\
    \ = 0;\n    let mut min_change_palindromic_count12 = 0;\n    let mut min_change_palindromic_count13\
    \ = 0;\n    let mut min_change_palindromic_count14 = 0;\n    let mut min_change_palindromic_count15\
    \ = 0;\n    let mut min_change_palindromic_count16 = 0;\n    let mut min_change_palindromic_count17\
    \ = 0;\n    let mut min_change_palindromic_count18 = 0;\n    let mut min_change_palindromic_count19\
    \ = 0;\n    let mut min_change_palindromic_count20 = 0;\n    let mut min_change_palindromic_count21\
    \ = 0;\n    let mut min_change_palindromic_count22 = 0;\n    let mut min_change_palindromic_count23\
    \ = 0;\n    let mut min_change_palindromic_count24 = 0;\n    let mut min_change_palindromic_count25\
    \ = 0;\n    let mut min_change_palindromic_count26 = 0;\n    let mut min_change_palindromic_count27\
    \ = 0;\n    let mut min_change_palindromic_count28 = 0;\n    let mut min_change_palindromic_count29\
    \ = 0;\n    let mut min_change_palindromic_count30 = 0;\n    let mut min_change_palindromic_count31\
    \ = 0;\n    let mut min_change_palindromic_count32 = 0;\n    let mut min_change_palindromic_count33\
    \ = 0;\n    let mut min_change_palindromic_count34 = 0;\n    let \n}\n\nfn main()\
    \ {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpcvxs1j9j.rs:51:1\n  \
    \ |\n51 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpcvxs1j9j.rs:55:17\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpcvxs1j9j.rs:55:25\n \
    \  |\n55 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcvxs1j9j.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcvxs1j9j.rs:56:25\n   |\n56 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcvxs1j9j.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcvxs1j9j.rs:57:25\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcvxs1j9j.rs:58:17\n  \
    \ |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcvxs1j9j.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcvxs1j9j.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcvxs1j9j.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcvxs1j9j.rs:60:17\n   |\n60 |     assert"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    for i in 0..min_change_len\
    \ {\n        if arr[i] != arr[min_change_len - 1 - i] {\n            min_change\
    \ = i;\n            min_change_index = i;\n        }\n    }\n    min_change\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpkvclot7i.rs:27:17\n\
    \   |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkvclot7i.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkvclot7i.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpkvclot7i.rs:28:25\n\
    \   |\n28 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpkvclot7i.rs:29:17\n   |\n29 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpkvclot7i.rs:29:25\n   |\n29 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpkvclot7i.rs:30:17\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpkvclot7i.rs:30:25\n   |\n30 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpkvclot7i.rs:31:17\n  \
    \ |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpkvclot7i.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpkvclot7i.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = arr.len();\n    let mut min_change_index2\
    \ = arr.len();\n    let mut min_change_index3 = arr.len();\n    let mut min_change_index4\
    \ = arr.len();\n    let mut min_change_index5 = arr.len();\n    let mut min_change_index6\
    \ = arr.len();\n    let mut min_change_index7 = arr.len();\n    let mut min_change_index8\
    \ = arr.len();\n    let mut min_change_index9 = arr.len();\n    let mut min_change_index10\
    \ = arr.len();\n    let mut min_change_index11 = arr.len();\n    let mut min_change_index12\
    \ = arr.len();\n    let mut min_change_index13 = arr.len();\n    let mut min_change_index14\
    \ = arr.len();\n    let mut min_change_index15 = arr.len();\n    let mut min_change_index16\
    \ = arr.len();\n    let mut min_change_index17 = arr.len();\n    let mut min_change_index18\
    \ = arr.len();\n    let mut min_change_index19 = arr.len();\n    let mut min_change_index20\
    \ = arr.len();\n    let mut min_change_index21 = arr.len();\n    let mut min_change_index22\
    \ = arr.len();\n    let mut min_change_index23 = arr.len();\n    let mut min_change_index24\
    \ = arr.len();\n    let mut min_change_index25 = arr.len();\n    let mut min_change_index26\
    \ = arr.len();\n    let mut min_change_index27 = arr.len();\n    let mut min_change_index28\
    \ = arr.len();\n    let mut min_change_index29 = arr.len();\n    let mut min_change_index30\
    \ = arr.len();\n    let mut min_change_index31 = arr.len();\n    let mut min_change_index32\
    \ = arr.len();\n    let mut min_change_index33 = arr.len();\n    let mut min_change_index34\
    \ = arr.len();\n    let mut min_change_index35 = arr.len();\n    let mut min_change_index36\
    \ = arr.len();\n    let mut min_change_index37 = arr.len();\n    let mut min_change_index38\
    \ = arr.len();\n    let mut min_change_index39 = arr.len();\n    let mut min_change_index40\
    \ = arr.len();\n    let mut min_change_index41 = arr.len();\n    let mut min_change_index42\
    \ = arr.len();\n    let mut min_change_index43 = arr.len();\n}\n\nfn main() {\n\
    \    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_ze3gui8.rs:60:17\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_ze3gui8.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_ze3gui8.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_ze3gui8.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_ze3gui8.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_ze3gui8.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_ze3gui8.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_ze3gui8.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_ze3gui8.rs:64:17\n  \
    \ |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_ze3gui8.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_ze3gui8.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    for &i in arr.iter().rev() {\n        if *i < min_change {\n\
    \            min_change = *i;\n            min_change_index = i;\n        }\n\
    \    }\n    for &i in arr.iter().rev() {\n        if *i == min_change {\n    \
    \        min_change_len = i - min_change_index;\n        }\n    }\n    min_change_len\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbp4la8i0.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbp4la8i0.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbp4la8i0.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbp4la8i0.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbp4la8i0.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbp4la8i0.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbp4la8i0.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbp4la8i0.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbp4la8i0.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbp4la8i0.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbp4la8i0.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_val_pos = 0;\n    let mut min_change_val_neg\
    \ = 0;\n    let mut min_change_val_neg_idx = 0;\n    let mut min_change_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_pos = 0;\n    let mut min_change_val_neg_val_neg\
    \ = 0;\n    let mut min_change_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_pos = 0;\n    let mut min_change_val_neg_val_neg_val_neg\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_val_neg_idx = 0;\n    let mut min_change_val_neg_val_neg_val_neg_val\
    \ = 0;\n    let mut min_change_val_neg_val_neg_\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpp7a3_bza.rs:51:40\n   |\n\
    51 |     let mut min_change_val_neg_val_neg_\n   |                           \
    \             ^ help: add `;` here\n52 | }\n   | - unexpected token\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp7a3_bza.rs:56:17\n  \
    \ |\n56 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp7a3_bza.rs:56:25\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpp7a3_bza.rs:57:17\n   |\n57 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpp7a3_bza.rs:57:25\n\
    \   |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpp7a3_bza.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpp7a3_bza.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpp7a3_bza.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpp7a3_bza.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpp7a3_bza.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpp7a3_bza.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_palindromic\
    \ = false;\n    for &i in arr.iter().rev() {\n        if min_change > i {\n  \
    \          min_change = i;\n            min_change_index = i;\n            min_change_palindromic\
    \ = true;\n        }\n    }\n    if min_change_palindromic {\n        min_change\n\
    \    } else {\n        arr.iter().rev().enumerate().filter(|&(i, _)| {\n     \
    \       min_change == i\n        }).next().unwrap().0\n    }\n}\n\nfn main() {\n\
    \    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpd_oxer3z.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd_oxer3z.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd_oxer3z.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpd_oxer3z.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpd_oxer3z.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpd_oxer3z.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpd_oxer3z.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpd_oxer3z.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpd_oxer3z.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpd_oxer3z.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpd_oxer3z.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n    for i in 0..min_change_len\
    \ {\n        let mut min_change = isize::MAX;\n        let mut min_change_index\
    \ = 0;\n        let mut min_change_len = arr.len();\n        let mut min_change_len\
    \ = min_change_len.saturating_add((min_change_len / 2).saturating_add((min_change_len\
    \ / 2)));\n        let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n        let mut min_change_len\
    \ = min_change_len.saturating_add((min_change_len / 2).saturating_add((min_change_len\
    \ / 2)));\n        let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n        let mut min_change_len\
    \ = min_change_len.saturating_add((min_change_len / 2).saturating_add((min_change_len\
    \ / 2)));\n        let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n        let mut min_change_len\
    \ = min_change_len.saturating_add((min_change_len / 2).saturating_add((min_change_len\
    \ / 2)));\n        let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n        let mut min_change_len\
    \ = min_change_len.saturating_add((min_change_len / 2).saturating_add((min_change_len\
    \ / 2)));\n        let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n        let mut min_change_len\
    \ = min_change_len.saturating_add((min_change_len / 2).saturating_add((min_change_len\
    \ / 2)));\n        let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_change_len / 2)));\n        let mut min_change_len\
    \ = min_change_len.saturating_add((min_change_len / 2).saturating_add((min_change_len\
    \ / 2)));\n        let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpzymw7eye.rs:46:3\n\
    \   |\n11 | fn smallest_change(arr: Vec<isize>) -> isize {\n   |             \
    \                                 - unclosed delimiter\n...\n16 |     for i in\
    \ 0..min_change_len {\n   |                                - this delimiter might\
    \ not be properly closed...\n...\n34 | }\n   | - ...as it matches this but it\
    \ has different indentation\n...\n46 | }\n   |   ^\n\nerror: expected one of `.`,\
    \ `;`, `?`, `else`, or an operator, found `}`\n  --> /tmp/tmpzymw7eye.rs:34:1\n\
    \   |\n34 | }\n   | ^ expected one of `.`, `;`, `?`, `else`, or an operator\n\n\
    error: mismatched closing delimiter: `}`\n  --> /tmp/tmpzymw7eye.rs:33:100\n \
    \  |\n11 | fn smallest_change(arr: Vec<isize>) -> isize {\n   |              \
    \                                - closing delimiter possibly meant for this\n\
    ...\n33 |         let mut min_change_len = min_change_len.saturating_add((min_change_len\
    \ / 2).saturating_add((min_\n   |                                            \
    \                                                        ^ unclosed delimiter\n\
    34 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpzymw7eye.rs:38:17\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpzymw7eye.rs:38:25\n \
    \  |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzymw7eye.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzymw7eye.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzymw7eye.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp8i2spls6.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp8i2spls6.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp8i2spls6.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8i2spls6.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8i2spls6.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8i2spls6.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8i2spls6.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8i2spls6.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8i2spls6.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8i2spls6.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8i2spls6.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8i2spls6.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_\n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp9r0svm04.rs:75:17\n   |\n\
    75 |     let mut min_\n   |                 ^ help: add `;` here\n76 | }\n   |\
    \ - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9r0svm04.rs:80:17\n   |\n80 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9r0svm04.rs:80:25\n   |\n80 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp9r0svm04.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp9r0svm04.rs:81:25\n   |\n81 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp9r0svm04.rs:82:17\n  \
    \ |\n82 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp9r0svm04.rs:82:25\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp9r0svm04.rs:83:17\n   |\n83 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp9r0svm04.rs:83:25\n\
    \   |\n83 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp9r0svm04.rs:84:17\n   |\n84 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp9r0svm04.rs:84:25\n   |\n84 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in th"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = 0;\n    let mut min_change_len_index = 0;\n    let mut min_change_len_value\
    \ = 0;\n    let mut min_change_len_value_index = 0;\n    let mut min_change_len_value_value\
    \ = 0;\n    let mut min_change_len_value_value_index = 0;\n    let mut min_change_len_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_change_len_value_value_value_value\
    \ = 0;\n    let mut min_change_len_value_value_value_index = 0;\n    let mut min_\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpspuu1jki.rs:56:17\n   |\n\
    56 |     let mut min_\n   |                 ^ help: add `;` here\n57 | }\n   |\
    \ - unexpected token\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpspuu1jki.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpspuu1jki.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpspuu1jki.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpspuu1jki.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpspuu1jki.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpspuu1jki.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpspuu1jki.rs:64:17\n   |\n64 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpspuu1jki.rs:64:25\n\
    \   |\n64 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpspuu1jki.rs:65:17\n   |\n65 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpspuu1jki.rs:65:25\n   |\n65 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in th"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = -1;\n    let mut min_change_index2\
    \ = -1;\n    for i in arr.iter().rev() {\n        if min_change > i {\n      \
    \      min_change = i;\n            min_change_index = i;\n        }\n       \
    \ if min_change_index == i {\n            min_change_index2 = i;\n        }\n\
    \    }\n    if min_change == min_change_index {\n        min_change_index2\n \
    \   } else {\n        min_change_index\n    }\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpjlfztzf3.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjlfztzf3.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjlfztzf3.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjlfztzf3.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjlfztzf3.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjlfztzf3.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjlfztzf3.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjlfztzf3.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjlfztzf3.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjlfztzf3.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjlfztzf3.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_size\
    \ = std::i32::MAX;\n    for index in 0..arr.len() {\n        let mut change =\
    \ 0;\n        let mut change_size = 0;\n        for j in index..arr.len() {\n\
    \            if arr[j] != arr[index] {\n                change += 1;\n       \
    \         change_size += 1;\n            }\n        }\n        if change < min_change\
    \ {\n            min_change = change;\n            min_change_index = index;\n\
    \            min_change_size = change_size;\n        }\n    }\n    min_change\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpzobbtj1_.rs:35:17\n\
    \   |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzobbtj1_.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzobbtj1_.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpzobbtj1_.rs:36:25\n\
    \   |\n36 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpzobbtj1_.rs:37:17\n   |\n37 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpzobbtj1_.rs:37:25\n   |\n37 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpzobbtj1_.rs:38:17\n   |\n38 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpzobbtj1_.rs:38:25\n   |\n38 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpzobbtj1_.rs:39:17\n  \
    \ |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpzobbtj1_.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpzobbtj1_.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::max(isize::MIN, isize::MAX);\n    let mut min_change_index = 0;\n\
    \    let mut min_change_length = 0;\n    let mut min_change_length_index = 0;\n\
    \    let mut min_change_length_value = isize::MAX;\n    let mut min_change_length_value_index\
    \ = 0;\n    let mut min_change_length_value_value = isize::MAX;\n    let mut min_change_length_value_value_index\
    \ = 0;\n    let mut min_change_length_value_value_value = isize::MAX;\n    let\
    \ mut min_change_length_value_value_value_index = 0;\n    let mut min_change_length_value_value_value_value\
    \ = isize::MAX;\n    let mut min_change_length_value_value_value_index = 0;\n\
    \    let mut min_change_length_value_value_value_value = isize::MAX;\n    let\
    \ mut min_change_length_value_value_value_index = 0;\n    let mut min_change_length_value_value_value_value\
    \ = isize::MAX;\n    let mut min_change_length_value_value_value_index = 0;\n\
    \    let mut min_change_length_value_value_value_value = isize::MAX;\n    let\
    \ mut min_change_length_value_value_value_index = 0;\n    let mut min_change_length_value_value_value_value\
    \ = isize::MAX;\n    let mut min_change_length_value_value_value_index = 0;\n\
    \    let mut min_change_length_value_value_value_value = isize::MAX;\n    let\
    \ mut min_change_length_value_value_value_index = 0;\n    let mut min_change_length_value_value_value_value\
    \ = isize::MAX;\n    let mut min_change_length_value_value_value_index = 0;\n\
    \    let mut min_change_length_value_value_value_value = isize::MAX;\n    let\
    \ mut min_change_length_value_value_value_index = 0;\n    let mut min_change_length_value_value_value_value\
    \ = isize::MAX;\n    let mut min_change_length_value_value_value_index = 0;\n\
    \    let mut min_change_length_value_value_value_value = isize::MAX;\n    let\
    \ mut min_change_length_value_value_value_index = 0;\n    let mut min_change_length_value_value_value_value\
    \ = isize::MAX;\n    let mut min_change_length_value_value_value_index = 0;\n\
    \    let mut min_change_length_value_value_value_value = isize::MAX;\n    let\
    \ mut min_change_length_value_value_value_index = 0;\n    let mut min_change_length_value_value_value_value\
    \ = isize::MAX;\n    let mut min_change_length_value_value_value_index = 0;\n\
    \    let mut min_change_length_value_value_value_value = isize::MAX;\n    let\
    \ mut min_change_length_value_value_value_index = 0;\n\n}\n\nfn main() {\n   \
    \ let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp67t7v20i.rs:55:17\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp67t7v20i.rs:55:25\n   |\n55 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp67t7v20i.rs:56:17\n   |\n56 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp67t7v20i.rs:56:25\n\
    \   |\n56 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp67t7v20i.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp67t7v20i.rs:57:25\n   |\n57 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp67t7v20i.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp67t7v20i.rs:58:25\n   |\n58 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp67t7v20i.rs:59:17\n  \
    \ |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp67t7v20i.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp67t7v20i.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mu\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp68lh02m8.rs:63:11\n   |\n\
    63 |     let mu\n   |           ^ help: add `;` here\n64 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp68lh02m8.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68lh02m8.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68lh02m8.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68lh02m8.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68lh02m8.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68lh02m8.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68lh02m8.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68lh02m8.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68lh02m8.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68lh02m8.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = arr.len();\n    let mut min_change_len\
    \ = arr.len();\n    let mu\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpudoumotg.rs:63:11\n   |\n\
    63 |     let mu\n   |           ^ help: add `;` here\n64 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpudoumotg.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpudoumotg.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpudoumotg.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpudoumotg.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpudoumotg.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpudoumotg.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpudoumotg.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpudoumotg.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpudoumotg.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpudoumotg.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let mut \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpjqo_3ie6.rs:70:1\n\
    \   |\n70 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:79:17\n   |\n79 |     "
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_idx = -1;\n    let mut min_change_len\
    \ = std::i32::MAX;\n    for idx in 0..arr.len() {\n        let len = arr.len()\
    \ - idx - 1;\n        if len < min_change_len {\n            min_change_len =\
    \ len;\n            min_change_idx = idx;\n        }\n    }\n    if min_change_len\
    \ == arr.len() {\n        return 0;\n    }\n    let mut min_change_idx = min_change_idx\
    \ + 1;\n    for idx in 0..arr.len() {\n        let len = arr.len() - idx - 1;\n\
    \        if len < min_change_len {\n            min_change_len = len;\n      \
    \      min_change_idx = idx;\n        }\n    }\n    min_change = min_change_len;\n\
    \    min_change_idx;\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpbvwogul6.rs:39:17\n\
    \   |\n39 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbvwogul6.rs:39:25\n   |\n39 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbvwogul6.rs:40:17\n   |\n40 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpbvwogul6.rs:40:25\n\
    \   |\n40 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpbvwogul6.rs:41:17\n   |\n41 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpbvwogul6.rs:41:25\n   |\n41 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpbvwogul6.rs:42:17\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpbvwogul6.rs:42:25\n   |\n42 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpbvwogul6.rs:43:17\n  \
    \ |\n43 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpbvwogul6.rs:43:25\n   |\n43 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpbvwogul6.rs:44:17\n   |\n44 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    for index in 0..arr.len()\
    \ {\n        let mut change = std::i32::MAX;\n        let mut change_index = 0;\n\
    \        for index in 0..arr.len() {\n            if index == index {\n      \
    \          continue;\n            }\n            let mut diff = arr[index] - arr[index\
    \ - 1];\n            if diff < change {\n                change = diff;\n    \
    \            change_index = index;\n            }\n        }\n        if change\
    \ < min_change {\n            min_change = change;\n            min_change_index\
    \ = change_index;\n        }\n    }\n    min_change_index\n}\n\nfn main() {\n\
    \    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpcfqufw92.rs:37:17\n\
    \   |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcfqufw92.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcfqufw92.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcfqufw92.rs:38:25\n\
    \   |\n38 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcfqufw92.rs:39:17\n   |\n39 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcfqufw92.rs:39:25\n   |\n39 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcfqufw92.rs:40:17\n   |\n40 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcfqufw92.rs:40:25\n   |\n40 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcfqufw92.rs:41:17\n  \
    \ |\n41 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcfqufw92.rs:41:25\n   |\n41 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcfqufw92.rs:42:17\n   |\n42 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let \n}\n\nfn main() {\n   \
    \ let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpuqnkl0ee.rs:73:1\n  \
    \ |\n73 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:17\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:25\n \
    \  |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:25\n\
    \   |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:82:17\n   |\n82 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n\
    \    let mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let\
    \ mut min_change_pos = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos\
    \ = 0;\n    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n\
    \    let mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let\
    \ mut min_change_val = arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_val\
    \ = arr[0];\n    let mut min_change_pos = 0;\n    let \n}\n\nfn main() {\n   \
    \ let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpuqnkl0ee.rs:73:1\n  \
    \ |\n73 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:17\n   |\n77 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:77:25\n \
    \  |\n77 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:78:17\n   |\n78 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:78:25\n   |\n78 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:79:17\n   |\n79 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:79:25\n   |\n79 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:80:17\n  \
    \ |\n80 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpuqnkl0ee.rs:80:25\n   |\n80 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:17\n   |\n81 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpuqnkl0ee.rs:81:25\n\
    \   |\n81 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpuqnkl0ee.rs:82:17\n   |\n82 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    for i in 0..arr.len() {\n        if arr[i] != arr[arr.len()\
    \ - 1 - i] {\n            min_change = std::i32::MAX;\n            min_change_index\
    \ = 0;\n            min_change_len = arr.len();\n        }\n        if min_change\
    \ > i - min_change_index {\n            min_change = i - min_change_index;\n \
    \           min_change_index = i;\n        }\n    }\n    min_change_len\n}\n\n\
    fn main() {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp8i_vm2s_.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8i_vm2s_.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8i_vm2s_.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8i_vm2s_.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8i_vm2s_.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8i_vm2s_.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8i_vm2s_.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8i_vm2s_.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8i_vm2s_.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8i_vm2s_.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8i_vm2s_.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len_index2\
    \ = 0;\n    let mut min_change_len_index3 = 0;\n    let mut min_change_len_index4\
    \ = 0;\n    let mut min_change_len_index5 = 0;\n    let mut min_change_len_index6\
    \ = 0;\n    let mut min_change_len_index7 = 0;\n    let mut min_change_len_index8\
    \ = 0;\n    let mut min_change_len_index9 = 0;\n    let mut min_change_len_index10\
    \ = 0;\n    let mut min_change_len_index11 = 0;\n    let mut min_change_len_index12\
    \ = 0;\n    let mut min_change_len_index13 = 0;\n    let mut min_change_len_index14\
    \ = 0;\n    let mut min_change_len_index15 = 0;\n    let mut min_change_len_index16\
    \ = 0;\n    let mut min_change_len_index17 = 0;\n    let mut min_change_len_index18\
    \ = 0;\n    let mut min_change_len_index19 = 0;\n    let mut min_change_len_index20\
    \ = 0;\n    let mut min_change_len_index21 = 0;\n    let mut min_change_len_index22\
    \ = 0;\n    let mut min_change_len_index23 = 0;\n    let mut min_change_len_index24\
    \ = 0;\n    let mut min_change_len_index25 = 0;\n    let mut min_change_len_index26\
    \ = 0;\n    let mut min_change_len_index27 = 0;\n    let mut min_change_len_index28\
    \ = 0;\n    let mut min_change_len_index29 = 0;\n    let mut min_change_len_index30\
    \ = 0;\n    let mut min_change_len_index31 = 0;\n    let mut min_change_len_index32\
    \ = 0;\n    let mut min_change_len_index33 = 0;\n    let mut min_change_len_index34\
    \ = 0;\n    let mut min_change_len_index35 = 0;\n    let mut min_change_len_index36\
    \ = 0;\n    let mut min_change_len_index37 = 0;\n    let mut min_change_len_index38\
    \ = 0;\n    let mut min_change_len_index39 = 0;\n    let mut min_change_len_index40\
    \ = 0;\n    let mut min_change_len_index41 = 0;\n    let mut min_change_len_index42\
    \ = 0;\n    let mut min_change_len_index43 = 0;\n    let mut min_change_len_index44\
    \ = 0;\n    let mut min_change_len_index45 = 0;\n    let mut min_change_len_index46\
    \ = 0;\n    let mut min_change_len_index47 = 0;\n    let mut min_change_len_index48\
    \ = 0;\n    let mut min_change_len_index49 = 0;\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprgrfltl1.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmprgrfltl1.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmprgrfltl1.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmprgrfltl1.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmprgrfltl1.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmprgrfltl1.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmprgrfltl1.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmprgrfltl1.rs:73:17\n   |\n73 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min::Default::default();\n    let mut min_change_index = 0;\n    let\
    \ mut min_change_palindromic = false;\n    for index in 0..arr.len() {\n     \
    \   let mut change = arr[index];\n        let mut change_palindromic = false;\n\
    \        for index in 0..arr.len() {\n            if index == index {\n      \
    \          continue;\n            }\n            if change < arr[index] {\n  \
    \              change = arr[index];\n                change_palindromic = true;\n\
    \            }\n        }\n        if change_palindromic {\n            min_change\
    \ = std::cmp::min::min(min_change, change);\n            min_change_palindromic\
    \ = true;\n            min_change_index = index;\n        }\n    }\n    if min_change_palindromic\
    \ {\n        min_change\n    } else {\n        min_change_index\n    }\n}\n\n\
    fn main() {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: expected type, found function `min` in\
    \ `cmp`\n  --> /tmp/tmpm3tw1elf.rs:28:36\n   |\n28 |             min_change =\
    \ std::cmp::min::min(min_change, change);\n   |                              \
    \      ^^^ expected type, found function `min` in `cmp`\n\nerror[E0433]: failed\
    \ to resolve: expected type, found function `min` in `cmp`\n  --> /tmp/tmpm3tw1elf.rs:12:41\n\
    \   |\n12 |     let mut min_change = std::cmp::min::Default::default();\n   |\
    \                                         ^^^^^^^ not found in `std::cmp::min`\n\
    \   |\nhelp: consider importing this trait\n   |\n1  | use std::default::Default;\n\
    \   |\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpm3tw1elf.rs:42:17\n\
    \   |\n42 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpm3tw1elf.rs:42:25\n   |\n42 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpm3tw1elf.rs:43:17\n   |\n43 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpm3tw1elf.rs:43:25\n\
    \   |\n43 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpm3tw1elf.rs:44:17\n   |\n44 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpm3tw1elf.rs:44:25\n   |\n44 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpm3tw1elf.rs:45:17\n   |\n45 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpm3tw1elf.rs:45:25\n   |\n45 |     assert_eq!({left},\
    \ {right});\n   |           "
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    let mut min_change_index2 = 0;\n    let mut min_change_count2 = 0;\n\
    \    let mut min_change_index3 = 0;\n    let mut min_change_count3 = 0;\n    let\
    \ mut min_change_index4 = 0;\n    let mut min_change_count4 = 0;\n    let mut\
    \ min_change_index5 = 0;\n    let mut min_change_count5 = 0;\n    let mut min_change_index6\
    \ = 0;\n    let mut min_change_count6 = 0;\n    let mut min_change_index7 = 0;\n\
    \    let mut min_change_count7 = 0;\n    let mut min_change_index8 = 0;\n    let\
    \ mut min_change_count8 = 0;\n    let mut min_change_index9 = 0;\n    let mut\
    \ min_change_count9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_count10\
    \ = 0;\n    let mut min_change_index11 = 0;\n    let mut min_change_count11 =\
    \ 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_count12 = 0;\n\
    \    let mut min_change_index13 = 0;\n    let mut min_change_count13 = 0;\n  \
    \  let mut min_change_index14 = 0;\n    let mut min_change_count14 = 0;\n    let\
    \ mut min_change_index15 = 0;\n    let mut min_change_count15 = 0;\n    let mut\
    \ min_change_index16 = 0;\n    let mut min_change_count16 = 0;\n    let mut min_change_index17\
    \ = 0;\n    let mut min_change_count17 = 0;\n    let mut min_change_index18 =\
    \ 0;\n    let mut min_change_count18 = 0;\n    let mut min_change_index19 = 0;\n\
    \    let mut min_change_count19 = 0;\n    let mut min_change_index20 = 0;\n  \
    \  let mut min_change_count20 = 0;\n    let mut min_change_index21 = 0;\n    let\
    \ mut min_change_count21 = 0;\n    let mut min_change_index22 = 0;\n    let mut\
    \ min_change_count22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_count23\
    \ = 0;\n    let mut min_change_index24 = 0;\n    let mut min_change_count24 =\
    \ 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_count25 = 0;\n\
    \    let mut min_change_index26 = 0;\n    let mut min_change_count26 = 0;\n  \
    \  let mut min_change_index27 = 0;\n    let mut min_change_count27 = 0;\n    let\
    \ mut min_change_index28 = 0;\n    let mut min_change_count28 = 0;\n    let mut\
    \ min_change_index\n}\n\nfn main() {\n    let candidate = smallest_change;\n \
    \   assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpsmuw20yn.rs:69:29\n   |\n\
    69 |     let mut min_change_index\n   |                             ^ help: add\
    \ `;` here\n70 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmpsmuw20yn.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpsmuw20yn.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsmuw20yn.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsmuw20yn.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsmuw20yn.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsmuw20yn.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsmuw20yn.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsmuw20yn.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsmuw20yn.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsmuw20yn.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    for index in 0..arr.len()\
    \ {\n        let mut change = isize::MAX;\n        let mut change_index = 0;\n\
    \        while change_index < index {\n            change += arr[index - change_index];\n\
    \            change_index += 1;\n        }\n        if change < min_change {\n\
    \            min_change = change;\n            min_change_index = index;\n   \
    \     }\n    }\n    min_change_index\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp_c0oh7n0.rs:31:17\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_c0oh7n0.rs:31:25\n   |\n31 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_c0oh7n0.rs:32:17\n   |\n32 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_c0oh7n0.rs:32:25\n\
    \   |\n32 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_c0oh7n0.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_c0oh7n0.rs:33:25\n   |\n33 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_c0oh7n0.rs:34:17\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_c0oh7n0.rs:34:25\n   |\n34 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_c0oh7n0.rs:35:17\n  \
    \ |\n35 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_c0oh7n0.rs:35:25\n   |\n35 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_c0oh7n0.rs:36:17\n   |\n36 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_idx = -1;\n    let mut min_change_val\
    \ = std::i32::MAX;\n    let mut min_change_val_pos = -1;\n    let mut min_change_val_neg\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_neg_idx = -1;\n    let mut min_change_val_pos\
    \ = -1;\n    let mut min_change_val_\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp_5ny84kk.rs:65:28\n   |\n\
    65 |     let mut min_change_val_\n   |                            ^ help: add\
    \ `;` here\n66 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value\
    \ `left` in this scope\n  --> /tmp/tmp_5ny84kk.rs:70:17\n   |\n70 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_5ny84kk.rs:70:25\n \
    \  |\n70 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_5ny84kk.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_5ny84kk.rs:71:25\n   |\n71 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_5ny84kk.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_5ny84kk.rs:72:25\n   |\n72 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_5ny84kk.rs:73:17\n  \
    \ |\n73 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_5ny84kk.rs:73:25\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_5ny84kk.rs:74:17\n   |\n74 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_5ny84kk.rs:74:25\n\
    \   |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot f"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>());\n    let mut\
    \ min_change_count = 0;\n    for &i in arr {\n        if *i == *min_change {\n\
    \            min_change_count += 1;\n        }\n    }\n    min_change_count\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfb2c9ok0.rs:24:17\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfb2c9ok0.rs:24:25\n   |\n24 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfb2c9ok0.rs:25:17\n   |\n25 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfb2c9ok0.rs:25:25\n\
    \   |\n25 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfb2c9ok0.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfb2c9ok0.rs:26:25\n   |\n26 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfb2c9ok0.rs:27:17\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfb2c9ok0.rs:27:25\n   |\n27 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfb2c9ok0.rs:28:17\n  \
    \ |\n28 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfb2c9ok0.rs:28:25\n   |\n28 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfb2c9ok0.rs:29:17\n   |\n29 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    for &i in arr {\n   \
    \     if i != arr[(arr.len() - 1) - i] {\n            min_change = std::i32::MAX;\n\
    \            min_change_index = 0;\n            break;\n        }\n        if\
    \ min_change > i - min_change_index {\n            min_change = i - min_change_index;\n\
    \            min_change_index = i;\n        }\n    }\n    min_change\n}\n\nfn\
    \ main() {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpid1xjbf9.rs:30:17\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpid1xjbf9.rs:30:25\n   |\n30 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpid1xjbf9.rs:31:17\n   |\n31 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpid1xjbf9.rs:31:25\n\
    \   |\n31 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpid1xjbf9.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpid1xjbf9.rs:32:25\n   |\n32 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpid1xjbf9.rs:33:17\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpid1xjbf9.rs:33:25\n   |\n33 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpid1xjbf9.rs:34:17\n  \
    \ |\n34 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpid1xjbf9.rs:34:25\n   |\n34 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpid1xjbf9.rs:35:17\n   |\n35 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len_min\
    \ = isize::MAX;\n    let mut min_change_len_min_index = 0;\n    let mut min_change_len_max\
    \ = isize::MAX;\n    let mut min_change_len_max_index = 0;\n    let mut min_change_len_max_min\
    \ = 0;\n    let mut min_change_len_max_min_index = 0;\n    let mut min_change_len_max_max\
    \ = 0;\n    let mut min_change_len_max_max_index = 0;\n    let mut min_change_len_max_max_min\
    \ = 0;\n    let mut min_change_len_max_max_min_index = 0;\n    let mut min_change_len_max_max_max\
    \ = 0;\n    let mut min_change_len_max_max_max_index = 0;\n    let mut min_change_len_max_max_max_min\
    \ = 0;\n    let mut min_change_len_max_max_max_min_index = 0;\n    let mut min_change_len_max_max_max_max\
    \ = 0;\n    let mut min_change_len_max_max_max_max_index = 0;\n    let mut min_change_len_max_max_max_max_min\
    \ = 0;\n    let mut min_change_len_max_max_max_max_min_index = 0;\n    let mut\
    \ min_change_len_max_max_max_max_max = 0;\n    let mut min_change_len_max_max_max_max_max_index\
    \ = 0;\n    let mut min_change_len_max_max_max_max_max_min = 0;\n    let mut min_change_len_max_max_max_max_max_min_index\
    \ = 0;\n    let mut min_change_len_max_max_max_max_max_max = 0;\n    let mut min_change_len_max_max_max_max_max_max_index\
    \ = 0;\n    let mut min_change_len_max_max_max_max_max_max_min = 0;\n    let mut\
    \ min_change_len_max_max_max_max_max_max_min_index = 0;\n    let mut min_change_len_max_max_max_max_max_max_max\
    \ = 0;\n    let mut min_change_len_max_max_max_max_max_max_max_index = 0;\n  \
    \  let mut min_change_len_max_max_max_max_max_max_max_min = 0;\n    let mut min_change_len_max_max_max_max_max_max_max_min_index\
    \ = 0;\n    let mut min_change_len_max_max_max_max_max_max_max_max = 0;\n    let\
    \ mut min_change_len_max_max_max_max_max_max_max_max_index = 0;\n    let mut min_change_len_max_max_max_max_max_max_max_max_min\
    \ = 0;\n    let mut min_change_len_max_max_max_max_max_max_max_max_min_index =\
    \ 0;\n    let mut min_change_len_max_max_max_max_max_max_max_max_\n}\n\nfn main()\
    \ {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpsxjan9rg.rs:50:60\n   |\n\
    50 |     let mut min_change_len_max_max_max_max_max_max_max_max_\n   |       \
    \                                                     ^ help: add `;` here\n51\
    \ | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmpsxjan9rg.rs:55:17\n   |\n55 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsxjan9rg.rs:55:25\n   |\n55 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpsxjan9rg.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpsxjan9rg.rs:56:25\n   |\n56 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpsxjan9rg.rs:57:17\n  \
    \ |\n57 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpsxjan9rg.rs:57:25\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpsxjan9rg.rs:58:17\n   |\n58 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpsxjan9rg.rs:58:25\n\
    \   |\n58 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpsxjan9rg.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpsxjan9rg.rs:59:25\n   |\n59 |   \
    \  assert_eq!({left}, {right});\n   |              "
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp8i2spls6.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp8i2spls6.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp8i2spls6.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8i2spls6.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8i2spls6.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8i2spls6.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8i2spls6.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8i2spls6.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8i2spls6.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8i2spls6.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8i2spls6.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8i2spls6.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_idx = -1;\n    for i in arr.iter().rev()\
    \ {\n        if *i == *(i + 1) {\n            min_change = std::i32::MAX;\n  \
    \          min_change_idx = -1;\n            break;\n        }\n        if *i\
    \ < min_change {\n            min_change = *i;\n            min_change_idx = i;\n\
    \        }\n    }\n    if min_change_idx == -1 { // no palindromic array\n   \
    \     min_change = 0;\n    }\n    min_change\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmputhl0vph.rs:33:17\n\
    \   |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmputhl0vph.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmputhl0vph.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmputhl0vph.rs:34:25\n\
    \   |\n34 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmputhl0vph.rs:35:17\n   |\n35 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmputhl0vph.rs:35:25\n   |\n35 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmputhl0vph.rs:36:17\n   |\n36 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmputhl0vph.rs:36:25\n   |\n36 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmputhl0vph.rs:37:17\n  \
    \ |\n37 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmputhl0vph.rs:37:25\n   |\n37 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmputhl0vph.rs:38:17\n   |\n38 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mu\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp68lh02m8.rs:63:11\n   |\n\
    63 |     let mu\n   |           ^ help: add `;` here\n64 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp68lh02m8.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68lh02m8.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68lh02m8.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68lh02m8.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68lh02m8.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68lh02m8.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68lh02m8.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68lh02m8.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68lh02m8.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68lh02m8.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::Ordering::Equal;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut\
    \ min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx\
    \ = -1;\n    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n\
    \    let mut min_change_idx = -1;\n    let mut min_change_idx = -1;\n    let \n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpxd437yls.rs:76:1\n  \
    \ |\n76 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpxd437yls.rs:80:17\n   |\n80 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpxd437yls.rs:80:25\n \
    \  |\n80 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxd437yls.rs:81:17\n   |\n81 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpxd437yls.rs:81:25\n   |\n81 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpxd437yls.rs:82:17\n   |\n82 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpxd437yls.rs:82:25\n   |\n82 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpxd437yls.rs:83:17\n  \
    \ |\n83 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpxd437yls.rs:83:25\n   |\n83 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpxd437yls.rs:84:17\n   |\n84 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpxd437yls.rs:84:25\n\
    \   |\n84 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpxd437yls.rs:85:17\n   |\n85 |     assert"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len_value\
    \ = isize::MAX;\n    let mut min_change_len_value_index = 0;\n    let mut min_change_len_value_value\
    \ = isize::MAX;\n    let mut min_change_len_value_value_index = 0;\n    let mut\
    \ min_change_len_value_value_value = isize::MAX;\n    let mut min_change_len_value_value_value_index\
    \ = 0;\n    let mut min_change_len_value_value_value_value = isize::MAX;\n   \
    \ let mut min_change_len_value_value_value_index = isize::MAX;\n    let mut min_change_len_value_value_value_value\
    \ = isize::MAX;\n    let mut min_change_len_value_value_value_index = isize::MAX;\n\
    \    let mut min_change_len_value_value_value_value = isize::MAX;\n    let mut\
    \ min_change_len_value_value_value_index = isize::MAX;\n    let mut min_change_len_value_value_value_value\
    \ = isize::MAX;\n    let mut min_change_len_value_value_value_index = isize::MAX;\n\
    \    let mut min_change_len_value_value_value_value = isize::MAX;\n    let mut\
    \ min_change_len_value_value_value_index = isize::MAX;\n    let mut min_change_len_value_value_value_value\
    \ = isize::MAX;\n    let mut min_change_len_value_value_value_index = isize::MAX;\n\
    \    let mut min_change_len_value_value_value_value = isize::MAX;\n    let mut\
    \ min_change_len_value_value_value_index = isize::MAX;\n    let mut min_change_len_value_value_value_value\
    \ = isize::MAX;\n    let mut min_change_len_value_value_value_index = isize::MAX;\n\
    \    let mut min_change_len_value_value_value_value = isize::MAX;\n    let mut\
    \ min_change_len_value_value_value_index = isize::MAX;\n    let mut min_change_len_value_value_value_value\
    \ = isize::MAX;\n    let mut min_change_len_value_value_value_index = isize::MAX;\n\
    \    let mut min_change_len_value_value_value_value = isize::MAX;\n    let mut\
    \ min_change_len_value_value_value_index = isize::MAX;\n    let mut min_change_len_value_value_value_value\
    \ = isize::MAX;\n    let mut min_change_len_value_value_value_index = isize::MAX;\n\
    \    let mut min_change_len_value_value_value_value = isize::MAX\n}\n\nfn main()\
    \ {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp6rbu431f.rs:46:64\n   |\n\
    46 |     let mut min_change_len_value_value_value_value = isize::MAX\n   |   \
    \                                                             ^ help: add `;`\
    \ here\n47 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp6rbu431f.rs:51:17\n   |\n51 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp6rbu431f.rs:51:25\n \
    \  |\n51 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp6rbu431f.rs:52:17\n   |\n52 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp6rbu431f.rs:52:25\n   |\n52 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp6rbu431f.rs:53:17\n   |\n53 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp6rbu431f.rs:53:25\n   |\n53 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp6rbu431f.rs:54:17\n  \
    \ |\n54 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp6rbu431f.rs:54:25\n   |\n54 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp6rbu431f.rs:55:17\n   |\n55 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp6rbu431f.rs:55:25\n\
    \   |\n55 |     assert_eq!({left}, {right});\n   |      "
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_rev_index\
    \ = 0;\n    let mut min_change_rev_len = 0;\n    let mut min_change_rev_len_index\
    \ = 0;\n    let mut min_change_rev_len_rev_index = 0;\n    let mut min_change_rev_len_rev_index2\
    \ = 0;\n    let mut min_change_rev_len_rev_index3 = 0;\n    let mut min_change_rev_len_rev_index4\
    \ = 0;\n    let mut min_change_rev_len_rev_index5 = 0;\n    let mut min_change_rev_len_rev_index6\
    \ = 0;\n    let mut min_change_rev_len_rev_index7 = 0;\n    let mut min_change_rev_len_rev_index8\
    \ = 0;\n    let mut min_change_rev_len_rev_index9 = 0;\n    let mut min_change_rev_len_rev_index10\
    \ = 0;\n    let mut min_change_rev_len_rev_index11 = 0;\n    let mut min_change_rev_len_rev_index12\
    \ = 0;\n    let mut min_change_rev_len_rev_index13 = 0;\n    let mut min_change_rev_len_rev_index14\
    \ = 0;\n    let mut min_change_rev_len_rev_index15 = 0;\n    let mut min_change_rev_len_rev_index16\
    \ = 0;\n    let mut min_change_rev_len_rev_index17 = 0;\n    let mut min_change_rev_len_rev_index18\
    \ = 0;\n    let mut min_change_rev_len_rev_index19 = 0;\n    let mut min_change_rev_len_rev_index20\
    \ = 0;\n    let mut min_change_rev_len_rev_index21 = 0;\n    let mut min_change_rev_len_rev_index22\
    \ = 0;\n    let mut min_change_rev_len_rev_index23 = 0;\n    let mut min_change_rev_len_rev_index24\
    \ = 0;\n    let mut min_change_rev_len_rev_index25 = 0;\n    let mut min_change_rev_len_rev_index26\
    \ = 0;\n    let mut min_change_rev_len_rev_index27 = 0;\n    let mut min_change_rev_len_rev_index28\
    \ = 0;\n    let mut min_change_rev_len_rev_index29 = 0;\n    let mut min_change_rev_len_rev_index30\
    \ = 0;\n    let mut min_change_rev_len_rev_index31 = 0;\n    let mut min_change_rev_len_rev_index32\
    \ = 0;\n    let mut min_change_rev_len_rev_index33 = 0;\n    let mut min_change_re\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpcgos9u6j.rs:50:26\n   |\n\
    50 |     let mut min_change_re\n   |                          ^ help: add `;`\
    \ here\n51 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpcgos9u6j.rs:55:17\n   |\n55 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpcgos9u6j.rs:55:25\n \
    \  |\n55 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpcgos9u6j.rs:56:17\n   |\n56 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpcgos9u6j.rs:56:25\n   |\n56 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpcgos9u6j.rs:57:17\n   |\n57 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpcgos9u6j.rs:57:25\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpcgos9u6j.rs:58:17\n  \
    \ |\n58 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpcgos9u6j.rs:58:25\n   |\n58 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpcgos9u6j.rs:59:17\n   |\n59 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpcgos9u6j.rs:59:25\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find "
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ 0;\n    let mut min_change_len_index = 0;\n    let mut min_change_len_prev =\
    \ 0;\n    let mut min_change_len_prev_index = 0;\n    let mut min_change_len_next\
    \ = 0;\n    let mut min_change_len_next_index = 0;\n    let mut min_change_len_next_prev\
    \ = 0;\n    let mut min_change_len_next_prev_index = 0;\n    let mut min_change_len_next_next\
    \ = 0;\n    let mut min_change_len_next_next_index = 0;\n    let mut min_change_len_next_next_prev\
    \ = 0;\n    let mut min_change_len_next_next_prev_index = 0;\n    let mut min_change_len_next_next_next\
    \ = 0;\n    let mut min_change_len_next_next_next_index = 0;\n    let mut min_change_len_next_next_next_prev\
    \ = 0;\n    let mut min_change_len_next_next_next_prev_index = 0;\n    let mut\
    \ min_change_len_next_next_next_next = 0;\n    let mut min_change_len_next_next_next_next_index\
    \ = 0;\n    let mut min_change_len_next_next_next_next_prev = 0;\n    let mut\
    \ min_change_len_next_next_next_next_prev_index = 0;\n    let mut min_change_len_next_next_next_next_next\
    \ = 0;\n    let mut min_change_len_next_next_next_next_prev = 0;\n    let mut\
    \ min_change_len_next_next_next_next_prev_index = 0;\n    let mut min_change_len_next_next_next_next_next\
    \ = 0;\n    let mut min_change_len_next_next_next_next_prev = 0;\n    let mut\
    \ min_change_len_next_next_next_next_prev_index = 0;\n    let mut min_change_len_next_next_next_next_next\
    \ = 0;\n    let mut min_change_len_next_next_next_next_prev = 0;\n    let mut\
    \ min_change_len_next_next_next_next_prev_index = 0;\n    let mut min_change_len_next_next_next_next_next\
    \ = 0;\n    let mut min_change_len_next_next_next_next_prev = 0;\n    let mut\
    \ min_change_len_next_next_next_next_prev = 0;\n    let mut min_change_len_next_next_next_next_prev\
    \ = 0;\n    let mut min_change_len_next_next_next_next_next = 0;\n    let mut\
    \ min_change_len_next_next_next_next_prev = 0;\n    let mut min_change_len_next_next_next_next_prev\
    \ = 0;\n    let mut min_change_len_next_next_next_next_next = 0;\n    let mut\
    \ min_change_len_next_next_next_next_prev = 0;\n    let mut min_change_len_next_next_next_next_prev\
    \ = 0;\n    let mut min_change_len_next_next_next_next_next = 0;\n    let mut\
    \ min_change_len_next_next_next_\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp1bz6eigq.rs:54:43\n   |\n\
    54 |     let mut min_change_len_next_next_next_\n   |                        \
    \                   ^ help: add `;` here\n55 | }\n   | - unexpected token\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp1bz6eigq.rs:59:17\n\
    \   |\n59 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1bz6eigq.rs:59:25\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp1bz6eigq.rs:60:17\n   |\n60 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp1bz6eigq.rs:60:25\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp1bz6eigq.rs:61:17\n   |\n61 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp1bz6eigq.rs:61:25\n   |\n61 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp1bz6eigq.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp1bz6eigq.rs:62:25\n   |\n62 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp1bz6eigq.rs:63:17\n  \
    \ |\n63 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp1bz6eigq.rs:63:25\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp_op3ojtj.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp_op3ojtj.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp_op3ojtj.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp_op3ojtj.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mut min_change_idx = arr.len();\n    let mut min_change_idx\
    \ = arr.len();\n    let mu\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp68lh02m8.rs:63:11\n   |\n\
    63 |     let mu\n   |           ^ help: add `;` here\n64 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp68lh02m8.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68lh02m8.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp68lh02m8.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp68lh02m8.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp68lh02m8.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp68lh02m8.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp68lh02m8.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp68lh02m8.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp68lh02m8.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp68lh02m8.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n\n}\n\nfn main() {\n  \
    \  let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfqojnfly.rs:71:17\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfqojnfly.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfqojnfly.rs:72:17\n   |\n72 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfqojnfly.rs:72:25\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfqojnfly.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfqojnfly.rs:73:25\n   |\n73 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfqojnfly.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfqojnfly.rs:74:25\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfqojnfly.rs:75:17\n  \
    \ |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfqojnfly.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfqojnfly.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = -1;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n    let mut min_change_val = isize::MAX;\n    let mut min_change_val\
    \ = isize::MAX;\n\n}\n\nfn main() {\n    let candidate = smallest_change;\n  \
    \  assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdzfxb_y4.rs:60:17\n\
    \   |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdzfxb_y4.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdzfxb_y4.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdzfxb_y4.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdzfxb_y4.rs:62:17\n   |\n62 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdzfxb_y4.rs:62:25\n   |\n62 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdzfxb_y4.rs:63:17\n   |\n63 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdzfxb_y4.rs:63:25\n   |\n63 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdzfxb_y4.rs:64:17\n  \
    \ |\n64 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdzfxb_y4.rs:64:25\n   |\n64 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdzfxb_y4.rs:65:17\n   |\n65 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    for &i in arr {\n        if min_change > i {\n            min_change\
    \ = i;\n            min_change_index = i;\n        }\n        if min_change ==\
    \ i {\n            min_change_len = i;\n        }\n    }\n    min_change_len\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp457e_on7.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp457e_on7.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp457e_on7.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp457e_on7.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp457e_on7.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp457e_on7.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp457e_on7.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp457e_on7.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp457e_on7.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp457e_on7.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp457e_on7.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_val =\
    \ arr[0];\n    let mut min_change_pos = 0;\n    let mut min_change_len = arr.len();\n\
    \    let mut min_change_len = min_change_len.saturating_sub(isize::MAX);\n   \
    \ let mut min_change_len = min_change_len.saturating_add(isize::MAX);\n    let\
    \ mut min_change_len = min_change_len.saturating_add(isize::MAX);\n    let mut\
    \ min_change_len = min_change_len.saturating_add(isize::MAX);\n    let mut min_change_len\
    \ = min_change_len.saturating_add(isize::MAX);\n    let mut min_change_len = min_change_len.saturating_add(isize::MAX);\n\
    \    let mut min_change_len = min_change_len.saturating_add(isize::MAX);\n   \
    \ let mut min_change_len = min_change_len.saturating_add(isize::MAX);\n    let\
    \ mut min_change_len = min_change_len.saturating_add(isize::MAX);\n    let mut\
    \ min_change_len = min_change_len.saturating_add(isize::MAX);\n    let mut min_change_len\
    \ = min_change_len.saturating_add(isize::MAX);\n    let mut min_change_len = min_change_len.saturating_add(isize::MAX);\n\
    \    let mut min_change_len = min_change_len.saturating_add(isize::MAX);\n   \
    \ let mut min_change_len = min_change_len.saturating_add(isize::MAX);\n    let\
    \ mut min_change_len = min_change_len.saturating_add(isize::MAX);\n    let mut\
    \ min_change_len = min_change_len.saturating_add(isize::MAX);\n    let mut min_change_len\
    \ = min_change_len.saturating_add(isize::MAX);\n    let mut min_change_len = min_change_len.saturating_add(isize::MAX);\n\
    \    let mut min_change_len = min_change_len.saturating_add(isize::MAX);\n   \
    \ let mut min_change_len = min_change_len.saturating_add(isize::MAX);\n    let\
    \ mut min_change_len = min_change_len.saturating_add(isize::MAX);\n    let mut\
    \ min_change_len = min_change_len.saturating_add(isize::MAX);\n    let mut min_change_len\
    \ = min_change_len.saturating_add(isize::MAX);\n    let mut min_change_len = min_change_len.saturating_add(isize::MAX);\n\
    \    let mut min_change_len = min_change_len\n}\n\nfn main() {\n    let candidate\
    \ = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp3fhrtom5.rs:41:44\n   |\n\
    41 |     let mut min_change_len = min_change_len\n   |                       \
    \                     ^ help: add `;` here\n42 | }\n   | - unexpected token\n\n\
    error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmp3fhrtom5.rs:46:17\n\
    \   |\n46 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3fhrtom5.rs:46:25\n   |\n46 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp3fhrtom5.rs:47:17\n   |\n47 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp3fhrtom5.rs:47:25\n\
    \   |\n47 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp3fhrtom5.rs:48:17\n   |\n48 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp3fhrtom5.rs:48:25\n   |\n48 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp3fhrtom5.rs:49:17\n   |\n49 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp3fhrtom5.rs:49:25\n   |\n49 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp3fhrtom5.rs:50:17\n  \
    \ |\n50 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp3fhrtom5.rs:50:25\n   |\n50 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in th"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    for &i in arr {\n        if min_change > i {\n           \
    \ min_change = i;\n            min_change_index = i;\n        }\n        if min_change\
    \ == i {\n            min_change_len = std::cmp::min(min_change_len, i - min_change_index);\n\
    \        }\n    }\n    min_change_len\n}\n\nfn main() {\n    let candidate = smallest_change;\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpg8wd_8dp.rs:29:17\n\
    \   |\n29 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg8wd_8dp.rs:29:25\n   |\n29 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg8wd_8dp.rs:30:17\n   |\n30 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpg8wd_8dp.rs:30:25\n\
    \   |\n30 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpg8wd_8dp.rs:31:17\n   |\n31 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpg8wd_8dp.rs:31:25\n   |\n31 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpg8wd_8dp.rs:32:17\n   |\n32 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpg8wd_8dp.rs:32:25\n   |\n32 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpg8wd_8dp.rs:33:17\n  \
    \ |\n33 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpg8wd_8dp.rs:33:25\n   |\n33 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpg8wd_8dp.rs:34:17\n   |\n34 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::cmp::min(*arr.iter().rev().cloned().collect::<Vec<_>>().len(), *arr.iter().cloned().collect::<Vec<_>>().len());\n\
    \    for i in arr.iter().rev().cloned().collect::<Vec<_>>() {\n        if *i <\
    \ min_change {\n            min_change = *i;\n        }\n    }\n    min_change\n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpchwenjaf.rs:23:17\n\
    \   |\n23 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpchwenjaf.rs:23:25\n   |\n23 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpchwenjaf.rs:24:17\n   |\n24 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpchwenjaf.rs:24:25\n\
    \   |\n24 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpchwenjaf.rs:25:17\n   |\n25 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpchwenjaf.rs:25:25\n   |\n25 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpchwenjaf.rs:26:17\n   |\n26 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpchwenjaf.rs:26:25\n   |\n26 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpchwenjaf.rs:27:17\n  \
    \ |\n27 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpchwenjaf.rs:27:25\n   |\n27 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpchwenjaf.rs:28:17\n   |\n28 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let mut \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpjqo_3ie6.rs:70:1\n\
    \   |\n70 | }\n   | ^ expected identifier\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpjqo_3ie6.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpjqo_3ie6.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpjqo_3ie6.rs:79:17\n   |\n79 |     "
  stdout: ''
  timestamp: 1659749755
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_index = 0;\n    let mut min_change_index2\
    \ = 0;\n    let mut min_change_index3 = 0;\n    let mut min_change_index4 = 0;\n\
    \    let mut min_change_index5 = 0;\n    let mut min_change_index6 = 0;\n    let\
    \ mut min_change_index7 = 0;\n    let mut min_change_index8 = 0;\n    let mut\
    \ min_change_index9 = 0;\n    let mut min_change_index10 = 0;\n    let mut min_change_index11\
    \ = 0;\n    let mut min_change_index12 = 0;\n    let mut min_change_index13 =\
    \ 0;\n    let mut min_change_index14 = 0;\n    let mut min_change_index15 = 0;\n\
    \    let mut min_change_index16 = 0;\n    let mut min_change_index17 = 0;\n  \
    \  let mut min_change_index18 = 0;\n    let mut min_change_index19 = 0;\n    let\
    \ mut min_change_index20 = 0;\n    let mut min_change_index21 = 0;\n    let mut\
    \ min_change_index22 = 0;\n    let mut min_change_index23 = 0;\n    let mut min_change_index24\
    \ = 0;\n    let mut min_change_index25 = 0;\n    let mut min_change_index26 =\
    \ 0;\n    let mut min_change_index27 = 0;\n    let mut min_change_index28 = 0;\n\
    \    let mut min_change_index29 = 0;\n    let mut min_change_index30 = 0;\n  \
    \  let mut min_change_index31 = 0;\n    let mut min_change_index32 = 0;\n    let\
    \ mut min_change_index33 = 0;\n    let mut min_change_index34 = 0;\n    let mut\
    \ min_change_index35 = 0;\n    let mut min_change_index36 = 0;\n    let mut min_change_index37\
    \ = 0;\n    let mut min_change_index38 = 0;\n    let mut min_change_index39 =\
    \ 0;\n    let mut min_change_index40 = 0;\n    let mut min_change_index41 = 0;\n\
    \    let mut min_change_index42 = 0;\n    let mut min_change_index43 = 0;\n  \
    \  let mut min_change_index44 = 0;\n    let mut min_change_index45 = 0;\n    let\
    \ mut min_change_index46 = 0;\n    let mut min_change_index47 = 0;\n    let mut\
    \ min_change_index48 = 0;\n    let mut min_change_index49 = 0;\n    let mut min_change_index50\
    \ = 0;\n    let mut min_change_index51 = 0;\n    let mut min_change_index52 =\
    \ 0;\n    let mut min_change_index53 = 0;\n    let mut min_change_index54 = 0;\n\
    \    let mut min_change_index55 = 0;\n    let mut min_change_index56 = 0;\n  \
    \  let \n}\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp8i2spls6.rs:70:1\n  \
    \ |\n70 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp8i2spls6.rs:74:17\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp8i2spls6.rs:74:25\n \
    \  |\n74 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8i2spls6.rs:75:17\n   |\n75 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp8i2spls6.rs:75:25\n   |\n75 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp8i2spls6.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp8i2spls6.rs:76:25\n   |\n76 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp8i2spls6.rs:77:17\n  \
    \ |\n77 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp8i2spls6.rs:77:25\n   |\n77 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp8i2spls6.rs:78:17\n   |\n78 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp8i2spls6.rs:78:25\n\
    \   |\n78 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp8i2spls6.rs:79:17\n   |\n79 |     assert"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len();\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len_index = 0;\n\n}\n\nfn main() {\n  \
    \  let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpfqojnfly.rs:71:17\n\
    \   |\n71 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfqojnfly.rs:71:25\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfqojnfly.rs:72:17\n   |\n72 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpfqojnfly.rs:72:25\n\
    \   |\n72 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpfqojnfly.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpfqojnfly.rs:73:25\n   |\n73 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpfqojnfly.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpfqojnfly.rs:74:25\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpfqojnfly.rs:75:17\n  \
    \ |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpfqojnfly.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpfqojnfly.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find val"
  stdout: ''
  timestamp: 1659823017
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_len =\
    \ arr.len();\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let mut\
    \ min_change_len = min_change_len as usize;\n    let mut min_change_len = min_change_len\
    \ as usize;\n    let mut min_change_len = min_change_len as usize;\n    let \n\
    }\n\nfn main() {\n    let candidate = smallest_change;\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmp479wubts.rs:53:1\n  \
    \ |\n53 | }\n   | ^ expected pattern\n\nerror[E0425]: cannot find value `left`\
    \ in this scope\n  --> /tmp/tmp479wubts.rs:57:17\n   |\n57 |     assert_eq!({left},\
    \ {right});\n   |                 ^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `right` in this scope\n  --> /tmp/tmp479wubts.rs:57:25\n \
    \  |\n57 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp479wubts.rs:58:17\n   |\n58 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp479wubts.rs:58:25\n   |\n58 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp479wubts.rs:59:17\n   |\n59 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp479wubts.rs:59:25\n   |\n59 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp479wubts.rs:60:17\n  \
    \ |\n60 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp479wubts.rs:60:25\n   |\n60 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp479wubts.rs:61:17\n   |\n61 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp479wubts.rs:61:25\n\
    \   |\n61 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp479wubts.rs:62:17\n   |\n62 |     assert"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ isize::MAX;\n    let mut min_change_index = -1;\n    let mut min_change_count\
    \ = 0;\n    let mut min_change_index2 = -1;\n    let mut min_change_count2 = 0;\n\
    \    let mut min_change_index3 = -1;\n    let mut min_change_count3 = 0;\n   \
    \ let mut min_change_index4 = -1;\n    let mut min_change_count4 = 0;\n    let\
    \ mut min_change_index5 = -1;\n    let mut min_change_count5 = 0;\n    let mut\
    \ min_change_index6 = -1;\n    let mut min_change_count6 = 0;\n    let mut min_change_index7\
    \ = -1;\n    let mut min_change_count7 = 0;\n    let mut min_change_index8 = -1;\n\
    \    let mut min_change_count8 = 0;\n    let mut min_change_index9 = -1;\n   \
    \ let mut min_change_count9 = 0;\n    let mut min_change_index10 = -1;\n    let\
    \ mut min_change_count10 = 0;\n    let mut min_change_index11 = -1;\n    let mut\
    \ min_change_count11 = 0;\n    let mut min_change_index12 = -1;\n    let mut min_change_count12\
    \ = 0;\n    let mut min_change_index13 = -1;\n    let mut min_change_count13 =\
    \ 0;\n    let mut min_change_index14 = -1;\n    let mut min_change_count14 = 0;\n\
    \    let mut min_change_index15 = -1;\n    let mut min_change_count15 = 0;\n \
    \   let mut min_change_index16 = -1;\n    let mut min_change_count16 = 0;\n  \
    \  let mut min_change_index17 = -1;\n    let mut min_change_count17 = 0;\n   \
    \ let mut min_change_index18 = -1;\n    let mut min_change_count18 = 0;\n    let\
    \ mut min_change_index19 = -1;\n    let mut min_change_count19 = 0;\n    let mut\
    \ min_change_index20 = -1;\n    let mut min_change_count20 = 0;\n    let mut min_change_index21\
    \ = -1;\n    let mut min_change_count21 = 0;\n    let mut min_change_index22 =\
    \ -1;\n    let mut min_change_count22 = 0;\n    let mut min_change_index23 = -1;\n\
    \    let mut min_change_count23 = 0;\n    let mut min_change_index24 = -1;\n \
    \   let mut min_change_count24 = 0;\n    let mut min_change_index25 = -1;\n  \
    \  let mut min_change_count25 = 0;\n    let mut min_change_index26 = -1;\n   \
    \ let mut min_change_count26 = 0;\n    let mut min_change_index27 = -1;\n    let\
    \ mut min_change_count27 = 0;\n    let mut min_change\n}\n\nfn main() {\n    let\
    \ candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp7kef3_35.rs:67:23\n   |\n\
    67 |     let mut min_change\n   |                       ^ help: add `;` here\n\
    68 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp7kef3_35.rs:72:17\n   |\n72 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7kef3_35.rs:72:25\n   |\n72 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp7kef3_35.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp7kef3_35.rs:73:25\n   |\n73 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp7kef3_35.rs:74:17\n  \
    \ |\n74 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp7kef3_35.rs:74:25\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp7kef3_35.rs:75:17\n   |\n75 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp7kef3_35.rs:75:25\n\
    \   |\n75 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp7kef3_35.rs:76:17\n   |\n76 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp7kef3_35.rs:76:25\n   |\n76 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value "
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ std::i32::MAX;\n    let mut min_change_index = 0;\n    let mut min_change_count\
    \ = 0;\n    let mut min_change_pal_index = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_pal_count\
    \ = 0;\n    let mut min_change_pal_count = 0;\n    let mut min_change_p\n}\n\n\
    fn main() {\n    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp2ycmg6cq.rs:68:25\n   |\n\
    68 |     let mut min_change_p\n   |                         ^ help: add `;` here\n\
    69 | }\n   | - unexpected token\n\nerror[E0425]: cannot find value `left` in this\
    \ scope\n  --> /tmp/tmp2ycmg6cq.rs:73:17\n   |\n73 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2ycmg6cq.rs:73:25\n   |\n73 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmp2ycmg6cq.rs:74:17\n   |\n74 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmp2ycmg6cq.rs:74:25\n   |\n74 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmp2ycmg6cq.rs:75:17\n  \
    \ |\n75 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmp2ycmg6cq.rs:75:25\n   |\n75 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmp2ycmg6cq.rs:76:17\n   |\n76 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmp2ycmg6cq.rs:76:25\n\
    \   |\n76 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmp2ycmg6cq.rs:77:17\n   |\n77 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmp2ycmg6cq.rs:77:25\n   |\n77 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find va"
  stdout: ''
  timestamp: 1659823018
- exit_code: 1
  program: "/// Given an array arr of integers, find the minimum number of elements\
    \ that\n/// need to be changed to make the array palindromic. A palindromic array\
    \ is an array that\n/// is read the same backwards and forwards. In one change,\
    \ you can change one element to any other element.\n/// For example:\n/// >>>\
    \ smallest_change(vec![1, 2, 3, 5, 4, 7, 9, 6])\n/// 4\n/// >>> smallest_change(vec![1,\
    \ 2, 3, 4, 3, 2, 2])\n/// 1\n/// >>> smallest_change(vec![1, 2, 3, 2, 1])\n///\
    \ 0\nfn smallest_change(arr: Vec<isize>) -> isize {\n    let mut min_change =\
    \ arr.len() as isize;\n    let mut min_change_index = 0;\n    let mut min_change_len\
    \ = arr.len();\n    let mut min_change_len = min_change_len;\n    let mut min_change_len\
    \ = min_change_len;\n    let mut min_change_len = min_change_len;\n    let mut\
    \ min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mut min_change_len = min_change_len;\n\
    \    let mut min_change_len = min_change_len;\n    let mu\n}\n\nfn main() {\n\
    \    let candidate = smallest_change;\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
    \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
    \ {right});\n    assert_eq!({left}, {right});\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpdrf88zyw.rs:63:11\n   |\n\
    63 |     let mu\n   |           ^ help: add `;` here\n64 | }\n   | - unexpected\
    \ token\n\nerror[E0425]: cannot find value `left` in this scope\n  --> /tmp/tmpdrf88zyw.rs:68:17\n\
    \   |\n68 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdrf88zyw.rs:68:25\n   |\n68 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  --> /tmp/tmpdrf88zyw.rs:69:17\n   |\n69 |\
    \     assert_eq!({left}, {right});\n   |                 ^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find value `right` in this scope\n  --> /tmp/tmpdrf88zyw.rs:69:25\n\
    \   |\n69 |     assert_eq!({left}, {right});\n   |                         ^^^^^\
    \ not found in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n\
    \  --> /tmp/tmpdrf88zyw.rs:70:17\n   |\n70 |     assert_eq!({left}, {right});\n\
    \   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find\
    \ value `right` in this scope\n  --> /tmp/tmpdrf88zyw.rs:70:25\n   |\n70 |   \
    \  assert_eq!({left}, {right});\n   |                         ^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `left` in this scope\n  -->\
    \ /tmp/tmpdrf88zyw.rs:71:17\n   |\n71 |     assert_eq!({left}, {right});\n   |\
    \                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find value\
    \ `right` in this scope\n  --> /tmp/tmpdrf88zyw.rs:71:25\n   |\n71 |     assert_eq!({left},\
    \ {right});\n   |                         ^^^^^ not found in this scope\n\nerror[E0425]:\
    \ cannot find value `left` in this scope\n  --> /tmp/tmpdrf88zyw.rs:72:17\n  \
    \ |\n72 |     assert_eq!({left}, {right});\n   |                 ^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find value `right` in this scope\n  -->\
    \ /tmp/tmpdrf88zyw.rs:72:25\n   |\n72 |     assert_eq!({left}, {right});\n   |\
    \                         ^^^^^ not found in this scope\n\nerror[E0425]: cannot\
    \ find value `left` in this scope\n  -"
  stdout: ''
  timestamp: 1659823018

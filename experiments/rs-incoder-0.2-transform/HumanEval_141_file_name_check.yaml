name: HumanEval_141_file_name_check
language: rs
prompt: "/// Create a function which takes a string representing a file's name, and\
  \ returns\n/// 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  /// A file's name is considered to be valid if and only if all the following conditions\
  \ \n/// are met:\n/// - There should not be more than three digits ('0'-'9') in\
  \ the file's name.\n/// - The file's name contains exactly one dot '.'\n/// - The\
  \ substring before the dot should not be empty, and it starts with a letter from\
  \ \n/// the latin alphapet ('a'-'z' and 'A'-'Z').\n/// - The substring after the\
  \ dot should be one of these: ['txt', 'exe', 'dll']\n/// Examples:\n/// >>> file_name_check(String::from(\"\
  example.txt\"))\n/// String::from(\"Yes\")\n/// >>> file_name_check(String::from(\"\
  1example.dll\"))\n/// String::from(\"No\")\nfn file_name_check(file_name: String)\
  \ -> String {\n"
tests: "}\n\nfn main() {\n    let candidate = file_name_check;\n    assert_eq!(candidate(String::from(\"\
  example.txt\")), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"\
  1example.dll\")), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"\
  s1sdf3.asd\")), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"\
  K.dll\")), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"MY16FILE3.exe\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"His12FILE94.exe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"_Y.txt\")),\
  \ String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"?aREYA.exe\")),\
  \ String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"/this_is_valid.dll\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"this_is_valid.wow\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"this_is_valid.txt\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"this_is_valid.txtexe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"#this2_i4s_5valid.ten\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"@this1_is6_valid.exe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"this_is_12valid.6exe4.txt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"all.exe.txt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"I563_No.exe\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"Is3youfault.txt\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"no_one#knows.dll\"\
  )), String::from(\"Yes\"));\n    assert_eq!(candidate(String::from(\"1I563_Yes3.exe\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"I563_Yes3.txtt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"final..txt\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"final132\")),\
  \ String::from(\"No\"));\n    assert_eq!(candidate(String::from(\"_f4indsartal132.\"\
  )), String::from(\"No\"));\n    assert_eq!(candidate(String::from(\".txt\")), String::from(\"\
  No\"));\n    assert_eq!(candidate(String::from(\"s.\")), String::from(\"No\"));\n\
  }\n"
completions: ["    let mut file_name = file_name.to_owned();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { return String::from(\"\
    No\") }\n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ { return String::from(\"No\") }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { return String::from(\"No\") }\n    let mut\
    \ dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos { return String::from(\"\
    No\") }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ { return String::from(\"No\") }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos { return String::from(\"No\") }\n    let mut\
    \ dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos { return String::from(\"\
    No\") }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ { return String::from(\"No\") }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos { return String::from(\"No\") }\n    let mut\
    \ dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos { return\
    \ String::from(\"No\") }\n    let mut dot_pos_11 = file_name.find('.')\n    if\
    \ dot_pos_11 == String::npos { return String::from(\"No\") }\n    let mut dot_pos_12\
    \ = file_name.find('.')\n    if dot_pos_12 == String::npos { return String::from(\"\
    No\") }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ { return String::from(\"No\") }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos { return String::from(\"No\") }\n    let mut\
    \ dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos { return\
    \ String::from(\"No\") }\n    let mut dot_pos_16 = file_name.find('.')\n    if\
    \ dot_pos_16 == String::npos { return String::from(\"No\") }\n    let mut dot_pos_17\
    \ = file_name.find('.')\n    if dot_pos_17 == String::npos { return String::from(\"\
    No\") }\n    let mut dot_pos_18 = ", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos { \n        return ", "    let mut file_name_str\
    \ = file_name.to_string();\n    let mut dot_pos = file_name_str.find('.')\n  \
    \  if dot_pos == String::npos { \n        return String::from(\"No\");\n    }\n\
    \    \n    let mut dot_pos_str = String::from(\"\");\n    let mut dot_pos_str_len\
    \ = String::from(\"\");\n    \n    while dot_pos != String::npos {\n        dot_pos_str\
    \ = dot_pos_str.push_str(&file_name_str[dot_pos..dot_pos+2]);\n        dot_pos_str_len\
    \ = dot_pos_str_len.push_str(&file_name_str[dot_pos+2..dot_pos+3]);\n        dot_pos\
    \ = file_name_str.find('.', dot_pos+1);\n    }\n    \n    if dot_pos_str != String::from(\"\
    txt\") && dot_pos_str != String::from(\"exe\") && dot_pos_str != String::from(\"\
    dll\") {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_str_len\
    \ != String::from(\"0\") && dot_pos_str_len != String::from(\"1\") && dot_pos_str_len\
    \ != String::from(\"2\") && dot_pos_str_len != String::from(\"3\") && dot_pos_str_len\
    \ != String::from(\"4\") && dot_pos_str_len != String::from(\"5\") && dot_pos_str_len\
    \ != String::from(\"6\") && dot_pos_str_len != String::from(\"7\") && dot_pos_str_len\
    \ != String::from(\"8\") && dot_pos_str_len != String::from(\"9\") {\n       \
    \ return String::from(\"No\");\n    }\n    \n    if dot_pos_str != String::from(\"\
    txt\") && dot_pos_str != String::from(\"exe\") && dot_pos_str != String::from(\"\
    dll\") {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_str_len\
    \ != String::from(\"0\") && dot_pos_str_len != String::from(\"1\") && dot_pos_str_len\
    \ != String::from(\"2\") && dot_pos_str_len != String::from(\"3\") && dot_pos_str_len\
    \ != String::from(\"4\") && dot_pos_str_len != String::from(\"5\") && dot_pos_str_len\
    \ != String::from(\"6\") && dot_pos_str_len != String::from(\"7\") && dot_pos_str_len\
    \ != String::from(\"8\") && dot_pos_str_len != String::from(\"9\") {\n       \
    \ return String::from(\"No\");\n    }\n    \n    if dot_pos_str != String", " \
    \   let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos + 1;\n    while dot_pos_start < dot_pos_end {\n        let mut dot_pos_start\
    \ = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n        let mut\
    \ dot_pos_start = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_start;\n        let mut dot_pos_end =\
    \ dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n        let mut\
    \ dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let ", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { \n        return String::from(\"No\");\n    }\n  \
    \  let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos {\
    \ \n        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    if dot_pos_2 > dot_pos_3 {\n        return String::from(\"No\");\n\
    \    }\n    if dot_pos_2 < dot_pos {\n        return String::from(\"No\");\n \
    \   }\n    if file_name[dot_pos - 1] < 'a' || file_name[dot_pos - 1] > 'z' {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos_2 - 1]\
    \ < 'a' || file_name[dot_pos_2 - 1] > 'z' {\n        return String::from(\"No\"\
    );\n    }\n    if file_name[dot_pos_3 - 1] < 'a' || file_name[dot_pos_3 - 1] >\
    \ 'z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_2\
    \ - 1] == dot_pos_3 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] == dot_pos_3 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_2\
    \ - 1] == dot_pos_2 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] == dot_pos_2 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_2\
    \ - 1] == dot_pos {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] == dot_pos {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] == dot_pos_2 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] == dot_pos_3 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] == dot_pos_3 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] == dot_pos_2 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] == dot_pos_2 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] == dot_pos_3 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] == dot_pos_", "    let mut file_name = file_name.clone();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n  \
    \  if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::", "    let mut file_name = file_name.clone();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    let mut dot_len = file_name.len();\n    dot_len -= dot_pos;\n    if dot_len\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    let mut first_letter\
    \ = String::new();\n    let mut first_letter_pos = 0;\n    let mut first_letter_len\
    \ = file_name.len();\n    \n    while dot_pos != String::npos {\n        first_letter_pos\
    \ = dot_pos;\n        first_letter_len = dot_len;\n        dot_pos = file_name.find('.',\
    \ dot_pos + 1);\n        dot_len = file_name.len();\n    }\n    if first_letter_pos\
    \ != 0 {\n        first_letter = file_name.chars().nth(first_letter_pos).unwrap();\n\
    \    }\n    if first_letter.is_lowercase() && first_letter != \"a\" && first_letter\
    \ != \"A\" {\n        return String::from(\"No\");\n    }\n    return String::from(\"\
    Yes\");", "    let mut file_name =\n        file_name.chars().filter(|c| !c.is_ascii_letter()).collect::<String>();\n\
    \    let mut dot_pos = file_name.find('.')\n        .unwrap_or(file_name.len());\n\
    \    if dot_pos == file_name.len() {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_2 = file_name.find('.')\n\
    \        .unwrap_or(file_name.len());\n    if dot_pos_2 == file_name.len() {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \        .unwrap_or(file_name.len());\n    if dot_pos_3 == file_name.len() {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \        .unwrap_or(file_name.len());\n    if dot_pos_4 == file_name.len() {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \        .unwrap_or(file_name.len());\n    if dot_pos_5 == file_name.len() {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \        .unwrap_or(file_name.len());\n    if dot_pos_6 == file_name.len() {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \        .unwrap_or(file_name.len());\n    if dot_pos_7 == file_name.len() {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \        .unwrap_or(file_name.len());\n    if dot_pos_8 == file_name.len() {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \        .unwrap_or(file_name.len());\n    if dot_pos_9 == file_name.len() {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \        .unwrap_or(file_name.len());\n    if dot_pos_10 == file_name.len() {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \        .unwrap_or(file_name.len());\n    if dot_pos_11 == file_name.len() {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \        .unwrap_or(file_name.len());\n    if dot_pos_12 == file_name.", "   \
    \ if file_name.len() > 3 {\n        String::from(\"No\")\n    } else {\n     \
    \   let mut dot_pos = file_name.find('.')\n        let mut dot_pos_2 = file_name.find('.')\n\
    \        let mut dot_pos_3 = file_name.find('.')\n        let mut dot_pos_4 =\
    \ file_name.find('.')\n        let mut dot_pos_5 = file_name.find('.')\n     \
    \   let mut dot_pos_6 = file_name.find('.')\n        let mut dot_pos_7 = file_name.find('.')\n\
    \        let mut dot_pos_8 = file_name.find('.')\n        let mut dot_pos_9 =\
    \ file_name.find('.')\n        let mut dot_pos_10 = file_name.find('.')\n    \
    \    let mut dot_pos_11 = file_name.find('.')\n        let mut dot_pos_12 = file_name.find('.')\n\
    \        let mut dot_pos_13 = file_name.find('.')\n        let mut dot_pos_14\
    \ = file_name.find('.')\n        let mut dot_pos_15 = file_name.find('.')\n  \
    \      let mut dot_pos_16 = file_name.find('.')\n        let mut dot_pos_17 =\
    \ file_name.find('.')\n        let mut dot_pos_18 = file_name.find('.')\n    \
    \    let mut dot_pos_19 = file_name.find('.')\n        let mut dot_pos_20 = file_name.find('.')\n\
    \        let mut dot_pos_21 = file_name.find('.')\n        let mut dot_pos_22\
    \ = file_name.find('.')\n        let mut dot_pos_23 = file_name.find('.')\n  \
    \      let mut dot_pos_24 = file_name.find('.')\n        let mut dot_pos_25 =\
    \ file_name.find('.')\n        let mut dot_pos_26 = file_name.find('.')\n    \
    \    let mut dot_pos_27 = file_name.find('.')\n        let mut dot_pos_28 = file_name.find('.')\n\
    \        let mut dot_pos_29 = file_name.find('.')\n        let mut dot_pos_30\
    \ = file_name.find('.')\n        let mut dot_pos_31 = file_name.find('.')\n  \
    \      let mut dot_pos_32 = file_name.find('.')\n        let mut dot_pos_33 =\
    \ file_name.find('.')\n        let mut dot_pos_34 = file_name.find('.')\n    \
    \    let mut dot_pos_35 = file_name.find('.')\n        let mut dot_pos_36 = file_name.find('.')\n\
    \        let mut dot_pos_37 = file_name.find('.')\n        let mut dot_pos_38\
    \ = file_name.find('.')\n        let mut dot_pos_39 = file_name.find('.')\n  \
    \      let mut dot_pos_40 = file_name.find('.')\n        let mut dot_pos_41 =\
    \ file_name.find('.')\n        let mut dot_pos_42 = file_name.find('.')\n    \
    \    let mut dot_", "    let mut file_name_len = file_name.len();\n    let mut\
    \ dot_pos = file_name.rfind('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name_len < 3 {\n        return String::from(\"\
    No\");\n    }\n    let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.rfind('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_len = file_name[dot_pos\
    \ + 1..].chars().next().unwrap();\n    if dot_len != String::from(\"txt,exe,dll\"\
    ) {\n        return String::from(\"No\");\n    }\n    String::from(\"Yes\")",
  "    let mut file_name = file_name.to_string();\n    \n    if file_name.len() >\
    \ 3 {\n        file_name.truncate(3);\n    }\n    \n    if file_name.contains(\"\
    .\") {\n        file_name.truncate(file_name.rfind('.'));\n    }\n    \n    if\
    \ file_name.starts_with(\"a\") || file_name.starts_with(\"A\") {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.contains(\".\") {\n        let mut dot_index =\
    \ file_name.rfind('.');\n        \n        if dot_index == String::npos {\n  \
    \          return String::from(\"No\");\n        }\n        \n        let dot_string\
    \ = file_name[dot_index..];\n        \n        if dot_string.len() != 1 || dot_string.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n            return String::from(\"No\");\n        }\n\
    \    }\n    \n    if file_name.contains(\".\") {\n        let mut dot_index =\
    \ file_name.rfind('.');\n        \n        if dot_index == String::npos {\n  \
    \          return String::from(\"No\");\n        }\n        \n        let dot_string\
    \ = file_name[dot_index..];\n        \n        if dot_string.len() != 1 || dot_string.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n            return String::from(\"No\");\n        }\n\
    \    }\n    \n    if file_name.contains(\".\") {\n        let mut dot_index =\
    \ file_name.rfind('.');\n        \n        if dot_index == String::npos {\n  \
    \          return String::from(\"No\");\n        }\n        \n        let dot_string\
    \ = file_name[dot_index..];\n        \n        if dot_string.len() != 1 || dot_string.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n            return String::from(\"No\");\n        }\n\
    \    }\n    \n    if file_name.contains(\".\") {\n        let mut dot_index =\
    \ file_name.rfind('.');\n        \n        if dot_index == String::npos {\n  \
    \          return String::from(\"No\");\n        }\n        \n        let dot_string\
    \ = file_name[dot_index..];\n        \n        if dot_string.len() != 1 || dot_string.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n            return String::from(\"No\");\n        }\n\
    \    }\n    \n    if file_name.contains(\".\") {\n        let mut dot_index =\
    \ file_name.rfind('.');\n        \n        if dot_index == String::npos {\n  \
    \          return String::from(\"No\");\n        }\n        \n        let dot_string\
    \ = file_name[dot_index..];\n        \n        if dot_string.len() != 1 || dot_string.chars().any(|c| ",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = dot_pos + 1;\n    let mut dot_len = file_name.len();\n\
    \    while dot_pos < dot_len {\n        let mut dot_char = file_name[dot_pos];\n\
    \        if dot_char == '.' {\n            if dot_pos == dot_len {\n         \
    \       return String::from(\"No\");\n            }\n            dot_pos = dot_pos\
    \ + 1;\n            dot_len = file_name.len();\n        } else {\n           \
    \ if dot_char < 'a' || dot_char > 'z' {\n                return String::from(\"\
    No\");\n            }\n            if dot_char < 'A' || dot_char > 'Z' {\n   \
    \             return String::from(\"No\");\n            }\n            dot_pos\
    \ = dot_pos + 1;\n        }\n    }\n    if dot_pos == dot_len {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_char = file_name[dot_pos];\n \
    \   if dot_char < 'a' || dot_char > 'z' {\n        return String::from(\"No\"\
    );\n    }\n    if dot_char < 'A' || dot_char > 'Z' {\n        return String::from(\"\
    No\");\n    }\n    String::from(\"Yes\")", "    let mut file_name_split = file_name.split('.');\n\
    \    let mut file_name_split_copy = file_name_split.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mut file_name_split_copy = file_name_split_copy.clone();\n    file_name_split_copy.shift();\n\
    \    let mu", "    let mut file_name = file_name.clone();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    \n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    \n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_6\
    \ = file_name.find('.')\n    if dot_pos_6 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    \n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    \n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    \n    let mut\
    \ dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos {\n    \
    \    return String::from(\"No\");\n    }\n    \n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    \n    let mut\
    \ dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos {\n    \
    \    return String::from(\"No\");\n    }\n    \n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos {\n        return String::from(\"No", "   \
    \ let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    \n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start =\
    \ dot_pos + 1;\n    \n    while dot_pos_start < file_name.len() {\n        let\
    \ mut dot_pos_end = dot_pos_start;\n        let mut dot_pos_start = dot_pos_start\
    \ + 1;\n        \n        if dot_pos_start == dot_pos_end {\n            if dot_pos_start\
    \ == 0 {\n                return String::from(\"No\");\n            }\n      \
    \      dot_pos_end = dot_pos_start + 1;\n        }\n        \n        let mut\
    \ dot_pos_end = dot_pos_start;\n        let mut dot_pos_start = dot_pos_start\
    \ + 1;\n        \n        if dot_pos_start == dot_pos_end {\n            if dot_pos_start\
    \ == 0 {\n                return String::from(\"No\");\n            }\n      \
    \      dot_pos_end = dot_pos_start + 1;\n        }\n        \n        let mut\
    \ dot_pos_end = dot_pos_start;\n        let mut dot_pos_start = dot_pos_start\
    \ + 1;\n        \n        if dot_pos_start == dot_pos_end {\n            if dot_pos_start\
    \ == 0 {\n                return String::from(\"No\");\n            }\n      \
    \      dot_pos_end = dot_pos_start + 1;\n        }\n        \n        let mut\
    \ dot_pos_end = dot_pos_start;\n        let mut dot_pos_start = dot_pos_start\
    \ + 1;\n        \n        if dot_pos_start == dot_pos_end {\n            if dot_pos_start\
    \ == 0 {\n                return String::from(\"No\");\n            }\n      \
    \      dot_pos_end = dot_pos_start + 1;\n        }\n        \n        let mut\
    \ dot_pos_end = dot_pos_start;\n        let mut dot_pos_start = dot_pos_start\
    \ + 1;\n        \n        if dot_pos_start == dot_pos_end {\n            if dot_pos_start\
    \ == 0 {\n                return String::from(\"No\");\n            }\n      \
    \      dot_pos_end = dot_pos_start + 1;\n        }\n        \n        let mut\
    \ dot_pos_end = dot_pos_start;\n        let mut dot_pos_start = dot_pos_start\
    \ + 1;\n        \n        if dot_pos_start == dot_pos_end {\n            if dot_pos_start\
    \ == 0 {\n                return String::from(\"No\");\n            }\n      \
    \      dot_pos_end = dot_pos_start + 1;\n        }\n        \n        let mut\
    \ dot_pos_end = dot_pos_start;\n        let mut dot_pos_start = dot_pos_start\
    \ + 1;\n        \n        if dot_pos_start == dot_pos_end {\n            if dot_pos_start\
    \ == 0 {\n                return String::from(\"No\");\n            }\n      \
    \      dot_pos_end = dot_pos_start + 1;\n        }\n", "    let mut counter =\
    \ 0;\n    let mut last_char: char;\n    let mut last_char_valid = false;\n   \
    \ let mut last_char_valid_file_name = false;\n    let mut last_char_valid_file_name_with_extension\
    \ = false;\n    let mut last_char_valid_file_name_with_extension_dot: char;\n\
    \    let mut last_char_valid_file_name_with_extension_dot_valid = false;\n   \
    \ let mut last_char_valid_file_name_with_extension_dot_valid_file_name = false;\n\
    \    let mut last_char_valid_file_name_with_extension_dot_valid_file_name_with_extension\
    \ = false;\n    let mut last_char_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot:\
    \ char;\n    let mut last_char_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid\
    \ = false;\n    let mut last_char_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name\
    \ = false;\n    let mut last_char_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension\
    \ = false;\n    let mut last_char_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot:\
    \ char;\n    let mut last_char_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid\
    \ = false;\n    let mut last_char_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name\
    \ = false;\n    let mut last_char_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension\
    \ = false;\n    let mut last_char_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension\
    \ = false;\n    let mut last_char_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot\
    \ = false;\n    let mut last_char_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid\
    \ = false;\n    let mut last_char_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid\
    \ = false;\n    let mut last_char_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid_file_name_with_extension_dot_valid\
    \ = false;\n    let mut last_char_", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_valid =\
    \ true;\n    let mut dot_pos_valid = dot_pos_valid && dot_pos_start != String::npos;\n\
    \    let mut dot_pos_valid = dot_pos_valid && dot_pos_end != file_name.len();\n\
    \    let mut dot_pos_valid = dot_pos_valid && dot_pos_start < dot_pos_end;\n \
    \   let mut dot_pos_valid = dot_pos_valid && dot_pos_start >= 0;\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end <= file_name.len();\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end >= dot_pos_start;\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end <= file_name.len();\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end >= dot_pos_start;\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end <= file_name.len();\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end >= dot_pos_start;\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end <= file_name.len();\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end >= dot_pos_start;\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end <= file_name.len();\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end >= dot_pos_start;\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end <= file_name.len();\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end >= dot_pos_start;\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end <= file_name.len();\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end >= dot_pos_start;\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end <= file_name.len();\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end >= dot_pos_start;\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end <= file_name.len();\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end >= dot_pos_start;\n    let mut\
    \ dot_pos_valid = dot_pos_valid && dot_pos_end <= file_name.", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { return String::from(\"No\") }\n    else if dot_pos\
    \ == 0 { return String::from(\"No\") }\n    else if file_name[dot_pos - 1] ==\
    \ '.' { return String::from(\"No\") }\n    else if file_name[dot_pos - 1] < 'a'\
    \ || file_name[dot_pos - 1] > 'z' { return String::from(\"No\") }\n    else if\
    \ file_name[dot_pos - 1] == '.' && file_name[dot_pos - 2] != 'd' && file_name[dot_pos\
    \ - 2] != 'l' { return String::from(\"No\") }\n    else if file_name[dot_pos -\
    \ 1] == '.' && file_name[dot_pos - 2] == 'd' && file_name[dot_pos - 3] != 'a'\
    \ && file_name[dot_pos - 3] != 'l' { return String::from(\"No\") }\n    else if\
    \ file_name[dot_pos - 1] == '.' && file_name[dot_pos - 2] == 'l' && file_name[dot_pos\
    \ - 3] != 'a' && file_name[dot_pos - 3] != 'd' { return String::from(\"No\") }\n\
    \    else if file_name[dot_pos - 1] == '.' && file_name[dot_pos - 2] == 'a' &&\
    \ file_name[dot_pos - 3] != 'l' && file_name[dot_pos - 3] != 'd' { return String::from(\"\
    No\") }\n    else if file_name[dot_pos - 1] == '.' && file_name[dot_pos - 2] ==\
    \ 'l' && file_name[dot_pos - 3] == 'a' && file_name[dot_pos - 4] != 'd' { return\
    \ String::from(\"No\") }\n    else if file_name[dot_pos - 1] == '.' && file_name[dot_pos\
    \ - 2] == 'a' && file_name[dot_pos - 3] == 'd' && file_name[dot_pos - 4] != 'l'\
    \ { return String::from(\"No\") }\n    else if file_name[dot_pos - 1] == '.' &&\
    \ file_name[dot_pos - 2] == 'd' && file_name[dot_pos - 3] == 'l' && file_name[dot_pos\
    \ - 4] != 'a' { return String::from(\"No\") }\n    else if file_name[dot_pos -\
    \ 1] == '.' && file_name[dot_pos - 2] == 'd' && file_name[dot_pos - 3] == 'a'\
    \ && file_name[dot_pos - 4] != 'l' { return String::from(\"No\") }\n    else if\
    \ file_name[dot_pos - 1] == '.' && file_name[dot_pos - 2] == 'l' && file_name[dot_pos\
    \ - 3]", "    if file_name.len() > 3 {\n        String::from(\"No\")\n    } else\
    \ {\n        let mut dot_index = file_name.find('.')\n        if dot_index ==\
    \ String::npos {\n            String::from(\"No\")\n        } else {\n       \
    \     let mut first_letter = file_name[..dot_index].chars().next().unwrap();\n\
    \            if first_letter != 'a' && first_letter != 'A' && first_letter !=\
    \ 'z' && first_letter != 'Z' {\n                String::from(\"No\")\n       \
    \     } else {\n                let mut dot_index = file_name.find('.')\n    \
    \            if dot_index == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_index = file_name.find('.')\n\
    \                    if dot_index == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_index\
    \ = file_name.find('.')\n                        if dot_index == String::npos\
    \ {\n                            String::from(\"No\")\n                      \
    \  } else {\n                            let mut dot_index = file_name.find('.')\n\
    \                            if dot_index == String::npos {\n                \
    \                String::from(\"No\")\n                            } else {\n\
    \                                let mut dot_index = file_name.find('.')\n   \
    \                             if dot_index == String::npos {\n               \
    \                     String::from(\"No\")\n                                }\
    \ else {\n                                    let mut dot_index = file_name.find('.')\n\
    \                                    if dot_index == String::npos {\n        \
    \                                String::from(\"No\")\n                      \
    \              } else {\n                                        let mut dot_index\
    \ = file_name.find('.')\n                                        if dot_index\
    \ == String::npos {\n                                            String::from(\"\
    No\")\n                                        } else {\n                    \
    \                        let mut dot_index = file_name.find('.')\n           \
    \                                 if dot_index == String::npos {\n           \
    \                                     String::from(\"No\")\n                 \
    \                           } else {\n                                       \
    \         let mut dot_index = file_name.find('.')\n                          \
    \                      if dot_index == String::npos {\n                      \
    \                              String::from(\"No\")\n                        \
    \                        } else {\n                                          \
    \          let mut dot_index = file_name.find('.')\n                         \
    \                           if dot_index == String::npos {\n                 \
    \                                       String::from(\"No\")\n               \
    \                                     } else {\n                             \
    \                           let mut dot_index = file_name.find('.')\n        \
    \                                                if dot_index == String::npos\
    \ {\n                                                            String::from(\"\
    No\")\n                                                        } else {\n    \
    \                                                        let mut dot_index = file_name.find('.')\n\
    \                                                            if dot_index == String::npos\
    \ {\n                                                                String::from(\"\
    No\")\n                                                            } else {\n\
    \                                                                let mut dot_index\
    \ = file_name.find('.')\n                                                    \
    \            if dot_index == String::npos {\n                                \
    \                                    ", "    let mut file_name_len = file_name.len();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    while dot_pos != String::npos\
    \ {\n        if file_name_len > 3 {\n            return String::from(\"No\");\n\
    \        }\n        \n        if file_name[dot_pos - 1] != String::from('0') &&\
    \ file_name[dot_pos - 1] != String::from('9') {\n            return String::from(\"\
    No\");\n        }\n        \n        if file_name[dot_pos - 1] != String::from('.')\
    \ {\n            return String::from(\"No\");\n        }\n        \n        if\
    \ file_name[dot_pos - 2] != String::from('a'..'z') && file_name[dot_pos - 2] !=\
    \ String::from('A'..'Z') {\n            return String::from(\"No\");\n       \
    \ }\n        \n        dot_pos = file_name.find('.')\n        file_name_len +=\
    \ 1;\n    }\n    \n    if file_name_len != 1 {\n        return String::from(\"\
    No\");\n    }\n    \n    if file_name[0] != 'a' && file_name[0] != 'A' && file_name[0]\
    \ != 'b' && file_name[0] != 'B' && file_name[0] != 'c' && file_name[0] != 'C'\
    \ && file_name[0] != 'd' && file_name[0] != 'D' && file_name[0] != 'e' && file_name[0]\
    \ != 'E' && file_name[0] != 'f' && file_name[0] != 'F' && file_name[0] != 'g'\
    \ && file_name[0] != 'G' && file_name[0] != 'h' && file_name[0] != 'H' && file_name[0]\
    \ != 'i' && file_name[0] != 'I' && file_name[0] != 'j' && file_name[0] != 'J'\
    \ && file_name[0] != 'k' && file_name[0] != 'K' && file_name[0] != 'l' && file_name[0]\
    \ != 'L' && file_name[0] != 'm' && file_name[0] != 'M' && file_name[0] != 'n'\
    \ && file_name[0] != 'N' && file_name[0] != 'o' && file_name[0] != 'O' && file_name[0]\
    \ != 'p' && file_name[0] != 'P' && file_name[0] != 'q' && file_name[0] != 'Q'\
    \ && file_name[0] != 'r' && file_name[0] != 'R' && file_name[0] != 's' && file_name[0]\
    \ != 'S' && file_name[0] != 't' && file_name[0] != 'T' && file_name[0] != 'u'\
    \ && file_name[0] != 'U' && file_name[0] != 'v' && file_name[0] != 'V' && file_name[0]\
    \ != 'w' && file_name[0] != 'W' && file_name[0] != 'x' && file_name[0] != 'X'\
    \ && file_name[0] != 'y' && file_name[0] != 'Y' && file_name[0] != 'z' && file_name[0]\
    \ != 'Z' {\n        return String::from(\"No\");\n    }\n    \n    if file_name[0]\
    \ != 'a' && file_name[0] != 'A' && file_name[0] != 'b' && ", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.contains(\"\
    .\") {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_letter() || c != 'a' && c != 'z') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'A' && c != 'Z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '0'\
    \ && c != '9') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c !=\
    \ '0' && c != '9') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c !=\
    \ '0' && c != '9' || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c != '0'\
    \ && c != '9') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c !=\
    \ '0' && c != '9' || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c != '0'\
    \ && c != '9' || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c != '0' && c\
    \ != '9') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c !=\
    \ '0' && c != '9' || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c != '0'\
    \ && c != '9' || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c != '0' && c\
    \ != '9' || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c != '0' && c != '9')\
    \ {\n        return String::from(\"No\");\n", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    while dot_pos_end < file_name.len() {\n        if file_name[dot_pos_end]\
    \ != '0' && file_name[dot_pos_end] != '9' {\n            return String::from(\"\
    No\");\n        }\n        dot_pos_end += 1;\n    }\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    while dot_pos_start > 0 {\n        if file_name[dot_pos_start]\
    \ != 'a' && file_name[dot_pos_start] != 'z' {\n            return String::from(\"\
    No\");\n        }\n        dot_pos_start -= 1;\n    }\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    while dot_pos_start < file_name.len() {\n        if file_name[dot_pos_start]\
    \ != 'A' && file_name[dot_pos_start] != 'Z' {\n            return String::from(\"\
    No\");\n        }\n        dot_pos_start += 1;\n    }\n    String::from(\"Yes\"\
    )", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n    while dot_pos_end\
    \ < file_name.len() {\n        let mut dot_pos_start = dot_pos;\n        dot_pos_start\
    \ += 1;\n        if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start]\
    \ <= 'z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] == '.' {\n            break;\n\
    \        }\n    }\n    if dot_pos_start == dot_pos {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name[dot_pos_start] != '0' {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start < dot_pos_end {\n        let mut dot_pos_start\
    \ = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            return String::from(\"No\");\n        }\n    }\n    return\
    \ String::from(\"Yes\");", "    if file_name.len() > 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.len() < 3 {\n        return String::from(\"Yes\"\
    );\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"a\") || file_name.starts_with(\"\
    A\") || file_name.starts_with(\"0\") || file_name.starts_with(\"9\") {\n     \
    \   return String::from(\"Yes\");\n    }\n    if file_name.starts_with(\".\")\
    \ {\n        let mut dot_index = file_name.find('.')\n        if dot_index ==\
    \ String::npos {\n            return String::from(\"No\");\n        }\n      \
    \  if dot_index == 0 {\n            return String::from(\"Yes\");\n        }\n\
    \        let mut dot_index = dot_index + 1\n        if dot_index > file_name.len()\
    \ {\n            return String::from(\"No\");\n        }\n        let mut dot_index\
    \ = dot_index + 1\n        if dot_index > file_name.len() {\n            return\
    \ String::from(\"No\");\n        }\n        let mut dot_index = dot_index + 1\n\
    \        if dot_index > file_name.len() {\n            return String::from(\"\
    No\");\n        }\n        let mut dot_index = dot_index + 1\n        if dot_index\
    \ > file_name.len() {\n            return String::from(\"No\");\n        }\n \
    \       let mut dot_index = dot_index + 1\n        if dot_index > file_name.len()\
    \ {\n            return String::from(\"No\");\n        }\n        let mut dot_index\
    \ = dot_index + 1\n        if dot_index > file_name.len() {\n            return\
    \ String::from(\"No\");\n        }\n        let mut dot_index = dot_index + 1\n\
    \        if dot_index > file_name.len() {\n            return String::from(\"\
    No\");\n        }\n        let mut dot_index = dot_index + 1\n        if dot_index\
    \ > file_name.len() {\n            return String::from(\"No\");\n        }\n \
    \       let mut dot_index = dot_index + 1\n        if dot_index > file_name.len()\
    \ {\n            return String::from(\"No\");\n        }\n        let mut dot_index\
    \ = dot_index + 1\n        if dot_index > file_name.len() {\n            return\
    \ String::from(\"No\");\n        }\n        let mut dot_index = dot_index + 1\n\
    \        if dot_index > file_name.len() {\n            return String::from(\"\
    No\");\n        }\n        let mut dot_index = dot_index + 1\n        if dot_index\
    \ > file_name.len() {\n            return String::from(\"No\");\n        }\n \
    \       let mut dot_index = dot_index + 1\n        if dot_index > file_name.len()\
    \ {\n            return String::from", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos +\
    \ 1;\n    let mut dot_pos_2 = file_name.find('.')\n    while dot_pos_2 != String::npos\
    \ && dot_pos_2 < file_name.len() {\n        if file_name[dot_pos_2] != 'a' &&\
    \ file_name[dot_pos_2] != 'A' && file_name[dot_pos_2] != 'b' && file_name[dot_pos_2]\
    \ != 'B' && file_name[dot_pos_2] != 'c' && file_name[dot_pos_2] != 'C' && file_name[dot_pos_2]\
    \ != 'd' && file_name[dot_pos_2] != 'D' && file_name[dot_pos_2] != 'e' && file_name[dot_pos_2]\
    \ != 'E' && file_name[dot_pos_2] != 'f' && file_name[dot_pos_2] != 'F' && file_name[dot_pos_2]\
    \ != 'g' && file_name[dot_pos_2] != 'G' && file_name[dot_pos_2] != 'h' && file_name[dot_pos_2]\
    \ != 'H' && file_name[dot_pos_2] != 'i' && file_name[dot_pos_2] != 'I' && file_name[dot_pos_2]\
    \ != 'j' && file_name[dot_pos_2] != 'J' && file_name[dot_pos_2] != 'k' && file_name[dot_pos_2]\
    \ != 'K' && file_name[dot_pos_2] != 'l' && file_name[dot_pos_2] != 'L' && file_name[dot_pos_2]\
    \ != 'm' && file_name[dot_pos_2] != 'M' && file_name[dot_pos_2] != 'n' && file_name[dot_pos_2]\
    \ != 'N' && file_name[dot_pos_2] != 'o' && file_name[dot_pos_2] != 'O' && file_name[dot_pos_2]\
    \ != 'p' && file_name[dot_pos_2] != 'P' && file_name[dot_pos_2] != 'q' && file_name[dot_pos_2]\
    \ != 'Q' && file_name[dot_pos_2] != 'r' && file_name[dot_pos_2] != 'R' && file_name[dot_pos_2]\
    \ != 's' && file_name[dot_pos_2] != 'S' && file_name[dot_pos_2] != 't' && file_name[dot_pos_2]\
    \ != 'T' && file_name[dot_pos_2] != 'u' && file_name[dot_pos_2] != 'U' && file_name[dot_pos_2]\
    \ != 'v' && file_name[dot_pos_2] != 'V' && file_name[dot_pos_2] != 'w' && file_name[dot_pos_2]\
    \ != 'W' && file_name[dot_pos_2] != 'x' && file_name[dot_pos_2] != 'X' && file_name[dot_pos_2]\
    \ != 'y' && file_name[dot_pos_2] != 'Y' && file_name[dot_pos_2] != 'z' && file_name[dot_pos_2]\
    \ != 'Z' {\n            return String::from(\"No\");\n        }\n        dot_pos_2\
    \ = dot_", "    let mut file_name = file_name.clone();\n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    let mut first_letter = file_name.chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_letter = file_name[dot_pos - 1..dot_pos].chars().next().unwrap();\n\
    \    if dot_letter < 'a' || dot_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    \n    if file_name.len() < 3 {\n        return String::from(\"\
    No\");\n    }\n    \n    if file_name.chars().count(|c| c == '.') != 1 {\n   \
    \     return String::from(\"No\");\n    }\n    \n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    \n    if\
    \ file_name.chars().count(|c| c == '.') != 1 {\n        return String::from(\"\
    No\");\n    }\n    \n    if file_name.chars().count(|c| c == '.') != 1 {\n   \
    \     return String::from(\"No\");\n    }\n    \n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    \n    if\
    \ file_name.chars().count(|c| c == '.') != 1 {\n        return String::from(\"\
    No\");\n    }\n    \n    if file_name.chars().count(|c| c == '.') != 1 {\n   \
    \     return String::from(\"No\");\n    }\n    \n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    \n    if\
    \ file_name.chars().count(|c| c == '.') != 1 {\n        return String::from(\"\
    No\");\n    }\n    \n    if file_name.chars().count(|c| c == '.') != 1 {\n   \
    \     return String::from(\"No\");\n    }\n    \n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    \n    if\
    \ file_name.chars().count(|c| c == '.') != 1 {\n        return String::from(\"\
    No", "    let mut file_name = file_name.to_string();\n    if file_name.chars().count()\
    \ > 3 {\n        file_name.truncate(3);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.chars().count()\
    \ == 0 {", "    if file_name.chars().count() > 3 {\n        String::from(\"No\"\
    )\n    } else {\n        let mut dot_pos = file_name.find('.')\n        if dot_pos\
    \ == String::npos {\n            String::from(\"No\")\n        } else {\n    \
    \        let mut first_letter = file_name[..dot_pos].chars().next()\n        \
    \    if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_pos_2 = file_name.find('.')\n\
    \                    if dot_pos_2 == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_pos_3\
    \ = file_name.find('.')\n                        if dot_pos_3 == String::npos\
    \ {\n                            String::from(\"No\")\n                      \
    \  } else {\n                            let mut dot_pos_4 = file_name.find('.')\n\
    \                            if dot_pos_4 == String::npos {\n                \
    \                String::from(\"No\")\n                            } else {\n\
    \                                let mut dot_pos_5 = file_name.find('.')\n   \
    \                             if dot_pos_5 == String::npos {\n               \
    \                     String::from(\"No\")\n                                }\
    \ else {\n                                    let mut dot_pos_6 = file_name.find('.')\n\
    \                                    if dot_pos_6 == String::npos {\n        \
    \                                String::from(\"No\")\n                      \
    \              } else {\n                                        let mut dot_pos_7\
    \ = file_name.find('.')\n                                        if dot_pos_7\
    \ == String::npos {\n                                            String::from(\"\
    No\")\n                                        } else {\n                    \
    \                        let mut dot_pos_8 = file_name.find('.')\n           \
    \                                 if dot_pos_8 == String::npos {\n           \
    \                                     String::from(\"No\")\n                 \
    \                           } else {\n                                       \
    \         let mut dot_pos_9 = file_name.find('.')\n                          \
    \                      if dot_pos_9 == String::npos {\n                      \
    \                              String::from(\"No\")\n                        \
    \                        } else {\n                                          \
    \          let mut dot_pos_10 = file_name.find('.')\n                        \
    \                            if dot_pos_10 == String::npos {\n               \
    \                                         String::from(\"No\")\n             \
    \                                       } else {\n                           \
    \                             let mut dot_pos_11 = file_name.find('.')\n     \
    \                                                   if dot_pos_11 == String::npos\
    \ {\n                                                            String::from(\"\
    No\")\n                                                        } else {\n    \
    \                                                        let mut dot_pos_12 =\
    \ file_name.find('.')\n                                                      \
    \      if dot_pos_12 == String::npos {\n                                     \
    \                           String::from(\"No\")\n                           \
    \                                 } else {\n                                 \
    \                               let mut dot_pos_13 = file_name.find('.')", " \
    \   let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_name = file_name.clone();\n    dot_name.truncate(dot_pos);\n\
    \    let mut dot_name_pos = dot_name.find('.')\n    if dot_name_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_name_str =\
    \ dot_name.to_string();\n    dot_name_str.truncate(dot_name_pos);\n    let mut\
    \ dot_name_str_pos = dot_name_str.find('.')\n    if dot_name_str_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_name_str_str\
    \ = dot_name_str.to_string();\n    dot_name_str_str.truncate(dot_name_str_pos);\n\
    \    let mut dot_name_str_str_pos = dot_name_str_str.find('.')\n    if dot_name_str_str_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_name_str_str_str = dot_name_str_str.to_string();\n    dot_name_str_str_str.truncate(dot_name_str_str_pos);\n\
    \    let mut dot_name_str_str_str_pos = dot_name_str_str_str.find('.')\n    if\
    \ dot_name_str_str_str_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_name_str_str_str_str = dot_name_str_str_str.to_string();\n\
    \    dot_name_str_str_str_str.truncate(dot_name_str_str_str_pos);\n    let mut\
    \ dot_name_str_str_str_str_pos = dot_name_str_str_str_str.find('.')\n    if dot_name_str_str_str_str_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_name_str_str_str_str_str = dot_name_str_str_str_str.to_string();\n    dot_name_str_str_str_str_str.truncate(dot_name_str_str_str_str_pos);\n\
    \    let mut dot_name_str_str_str_str_str_pos = dot_name_str_str_str_str_str.find('.')\n\
    \    if dot_name_str_str_str_str_str_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_name_str_str_str_str_str_str = dot_name_str_str_str_str_str.to_string();\n\
    \    dot_name_str_str_str_str_str_str.truncate(dot_name_str_str_str_str_str_str_pos);\n\
    \    let mut dot_name_str_str_str_str_str_str_pos = dot_name_str_str_str_str_str_str.find('.')\n\
    \    if ", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    while dot_pos_end <\
    \ file_name.len() {\n        let mut dot_pos_start = dot_pos;\n        let mut\
    \ dot_pos_end = dot_pos_start;\n        while dot_pos_end < file_name.len() {\n\
    \            let mut char = file_name[dot_pos_end];\n            if char == '.'\
    \ {\n                dot_pos_end = dot_pos_end + 1;\n                continue;\n\
    \            }\n            if char < 'a' || char > 'z' {\n                dot_pos_end\
    \ = dot_pos_end + 1;\n                continue;\n            }\n            if\
    \ char < 'A' || char > 'Z' {\n                dot_pos_end = dot_pos_end + 1;\n\
    \                continue;\n            }\n            dot_pos_end = dot_pos_end\
    \ + 1;\n        }\n        if dot_pos_start != dot_pos_end {\n            dot_pos\
    \ = dot_pos_end;\n        } else {\n            break;\n        }\n    }\n   \
    \ if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    while dot_pos_end < file_name.len()\
    \ {\n        let mut dot_pos_start = dot_pos;\n        let mut dot_pos_end = dot_pos_start;\n\
    \        while dot_pos_end < file_name.len() {\n            let mut char = file_name[dot_pos_end];\n\
    \            if char == '.' {\n                dot_pos_end = dot_pos_end + 1;\n\
    \                continue;\n            }\n            if char < 'a' || char >\
    \ 'z' {\n                dot_pos_end = dot_pos_end + 1;\n                continue;\n\
    \            }\n            if char < 'A' || char > 'Z' {\n                dot_pos_end\
    \ = dot_pos_end + 1;\n                continue;\n            }\n            dot_pos_end\
    \ = dot_pos_end + 1;\n        }\n        if dot_pos_start != dot_pos_end {\n \
    \           dot_pos = dot_pos_end;\n        } else {\n            break;\n   \
    \     }\n    }\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    while dot_pos_end <\
    \ file_name.len() {\n        let mut dot_pos_start = dot_pos;\n        let mut\
    \ dot_pos_end = dot_pos_start;\n        while dot_pos_end < file_name.len() {\n\
    \            let mut char = file_name[dot_pos_end];\n            if char == '.'\
    \ {\n                dot_pos_end = dot_pos_end + 1;\n                continue;",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n    while dot_pos_end\
    \ < file_name.len() {\n        let mut dot_pos_start = dot_pos;\n        dot_pos_start\
    \ += 1;\n        if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start]\
    \ <= 'z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' {\n            dot_pos_start += 1;\n\
    \        }\n        if dot_pos_start == dot_pos_end {\n            break;\n  \
    \      }\n        if file_name[dot_pos_start] != '.' {\n            break;\n \
    \       }\n        dot_pos_end += 1;\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos == 0 {\n    \
    \    return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1] >= '0'\
    \ && file_name[dot_pos - 1] <= '9' {\n        return String::from(\"No\");\n \
    \   }\n    if dot_pos == file_name.len() - 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos] != '-' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 1] != '-' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 2] != '-' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 3] != '-' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 4] != '-' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 5] != '-' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 6] != '-' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 7] != '-' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 8] != '-' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 9] != '-' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 10] != '-' {\n        return String::from(\"\
    No\");\n    }\n", "    let mut file_name = file_name.clone();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\")\n    }\n    \n    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n\
    \    \n    while dot_pos_end < file_name.len() {\n        let mut dot_pos_start\
    \ = dot_pos;\n        dot_pos_start += 1;\n        \n        if dot_pos_start\
    \ < file_name.len() && \n            file_name[dot_pos_start] >= 'a' && \n   \
    \         file_name[dot_pos_start] <= 'z' &&\n            file_name[dot_pos_start]\
    \ != 'A' && \n            file_name[dot_pos_start] != 'Z' {\n            dot_pos_start\
    \ += 1;\n        }\n        \n        if dot_pos_end < file_name.len() && \n \
    \           file_name[dot_pos_end] >= 'a' && \n            file_name[dot_pos_end]\
    \ <= 'z' &&\n            file_name[dot_pos_end] != 'A' && \n            file_name[dot_pos_end]\
    \ != 'Z' {\n            dot_pos_end += 1;\n        }\n        \n        if dot_pos_start\
    \ < dot_pos_end && \n            file_name[dot_pos_start] >= '0' && \n       \
    \     file_name[dot_pos_start] <= '9' {\n            dot_pos_start += 1;\n   \
    \     }\n        \n        if dot_pos_end < file_name.len() && \n            file_name[dot_pos_end]\
    \ >= '0' && \n            file_name[dot_pos_end] <= '9' {\n            dot_pos_end\
    \ += 1;\n        }\n        \n        if dot_pos_start < dot_pos_end && \n   \
    \         file_name[dot_pos_start] == '.' {\n            dot_pos_start += 1;\n\
    \        }\n        \n        if dot_pos_end < file_name.len() && \n         \
    \   file_name[dot_pos_end] == '.' {\n            dot_pos_end += 1;\n        }\n\
    \        \n        if dot_pos_start < dot_pos_end && \n            file_name[dot_pos_start]\
    \ == file_name[dot_pos_end] {\n            dot_pos_end += 1;\n        }\n    \
    \    \n        if dot_pos_start < dot_pos_end && \n            file_name[dot_pos_start]\
    \ == '.' &&\n            file_name[dot_pos_end] == '.' {\n            dot_pos_end\
    \ += 1;\n        }\n        \n        if dot_pos_start < dot_pos_end && \n   \
    \         file_name[dot_pos_start] == '.' &&\n            file_name[dot_pos_end]\
    \ == '.' &&\n            file_name[dot_pos_start+1] == file_name[dot_pos_end+1]\
    \ {\n            dot_pos_", "    let mut file_name_chars = file_name.chars();\n\
    \    let mut dot_pos = file_name_chars.find_first_of('.');\n    let mut dot_pos_end\
    \ = file_name_chars.len();\n    if dot_pos == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_start = dot_pos;\n    while dot_pos_start !=\
    \ dot_pos_end {\n        let mut dot_pos_start = dot_pos_start;\n        let mut\
    \ dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n   \
    \     let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut ", "    let mut file_name = file_name.clone();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end =\
    \ file_name.find('.')\n    if dot_pos_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end\
    \ = file_name.find('.')\n    if dot_pos_end == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n \
    \   let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String", "    let mut file_name = file_name.to_owned();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos +\
    \ 1;\n    let mut dot_pos_2 = file_name.find('.')\n    while dot_pos_2 != String::npos\
    \ && dot_pos_2 < file_name.len() {\n        if file_name[dot_pos_2] != 'a' &&\
    \ file_name[dot_pos_2] != 'A' && file_name[dot_pos_2] != 'b' && file_name[dot_pos_2]\
    \ != 'B' && file_name[dot_pos_2] != 'c' && file_name[dot_pos_2] != 'C' && file_name[dot_pos_2]\
    \ != 'd' && file_name[dot_pos_2] != 'D' && file_name[dot_pos_2] != 'e' && file_name[dot_pos_2]\
    \ != 'E' && file_name[dot_pos_2] != 'f' && file_name[dot_pos_2] != 'F' && file_name[dot_pos_2]\
    \ != 'g' && file_name[dot_pos_2] != 'G' && file_name[dot_pos_2] != 'h' && file_name[dot_pos_2]\
    \ != 'H' && file_name[dot_pos_2] != 'i' && file_name[dot_pos_2] != 'I' && file_name[dot_pos_2]\
    \ != 'j' && file_name[dot_pos_2] != 'J' && file_name[dot_pos_2] != 'k' && file_name[dot_pos_2]\
    \ != 'K' && file_name[dot_pos_2] != 'l' && file_name[dot_pos_2] != 'L' && file_name[dot_pos_2]\
    \ != 'm' && file_name[dot_pos_2] != 'M' && file_name[dot_pos_2] != 'n' && file_name[dot_pos_2]\
    \ != 'N' && file_name[dot_pos_2] != 'o' && file_name[dot_pos_2] != 'O' && file_name[dot_pos_2]\
    \ != 'p' && file_name[dot_pos_2] != 'P' && file_name[dot_pos_2] != 'q' && file_name[dot_pos_2]\
    \ != 'Q' && file_name[dot_pos_2] != 'r' && file_name[dot_pos_2] != 'R' && file_name[dot_pos_2]\
    \ != 's' && file_name[dot_pos_2] != 'S' && file_name[dot_pos_2] != 't' && file_name[dot_pos_2]\
    \ != 'T' && file_name[dot_pos_2] != 'u' && file_name[dot_pos_2] != 'U' && file_name[dot_pos_2]\
    \ != 'v' && file_name[dot_pos_2] != 'V' && file_name[dot_pos_2] != 'w' && file_name[dot_pos_2]\
    \ != 'W' && file_name[dot_pos_2] != 'x' && file_name[dot_pos_2] != 'X' && file_name[dot_pos_2]\
    \ != 'y' && file_name[dot_pos_2] != 'Y' && file_name[dot_pos_2] != 'z' && file_name[dot_pos_2]\
    \ != 'Z' {\n            return String::from(\"No\");\n        }\n        dot_pos_2 ",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n    let mut dot_pos_start\
    \ = dot_pos;\n    dot_pos_start += 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    dot_pos_start_letter += 1;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    dot_pos_end_letter += 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    dot_pos_start_letter += 1;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    dot_pos_end_letter += 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    dot_pos_start_letter += 1;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    dot_pos_end_letter += 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    dot_pos_start_letter += 1;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    dot_pos_end_letter += 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    dot_pos_start_letter += 1;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    dot_pos_end_letter += 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    dot_pos_start_letter += 1;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    dot_pos_end_letter += 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    dot_pos_start_letter += 1;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    dot_pos_end_letter += 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    dot_pos_start_letter += 1;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    dot_pos_end_letter += 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    dot_pos_start_letter += 1;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    dot_pos_end_letter += 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    dot_pos_start_letter += 1;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    dot_pos_end_letter += 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    dot_pos_start_letter += 1;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    dot_pos_end_letter += 1;", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_name = file_name.clone();\n\
    \    dot_name.truncate(dot_pos);\n    let mut dot_name_pos = dot_name.find('.')\n\
    \    if dot_name_pos == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_name_str = dot_name.to_string();\n    dot_name_str.truncate(dot_name_pos);\n\
    \    let mut dot_name_str_pos = dot_name_str.find('.')\n    if dot_name_str_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_name_str_str = dot_name_str.to_string();\n    dot_name_str_str.truncate(dot_name_str_pos);\n\
    \    let mut dot_name_str_str_pos = dot_name_str_str.find('.')\n    if dot_name_str_str_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_name_str_str_str = dot_name_str_str.to_string();\n    dot_name_str_str_str.truncate(dot_name_str_str_pos);\n\
    \    let mut dot_name_str_str_str_pos = dot_name_str_str_str.find('.')\n    if\
    \ dot_name_str_str_str_pos == String::npos {\n        return String::from(\"No\"\
    );\n    }\n    let mut dot_name_str_str_str_str = dot_name_str_str_str.to_string();\n\
    \    dot_name_str_str_str_str.truncate(dot_name_str_str_str_pos);\n    let mut\
    \ dot_name_str_str_str_str_pos = dot_name_str_str_str_str.find('.')\n    if dot_name_str_str_str_str_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_name_str_str_str_str_str = dot_name_str_str_str_str.to_string();\n    dot_name_str_str_str_str_str.truncate(dot_name_str_str_str_str_pos);\n\
    \    let mut dot_name_str_str_str_str_str_pos = dot_name_str_str_str_str_str.find('.')\n\
    \    if dot_name_str_str_str_str_str_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_name_str_str_str_str_str_str = dot_name_str_str_str_str_str.to_string();\n\
    \    dot_name_str_str_str_str_str_str.truncate(dot_name_str_str_str_str_str_str_pos);\n\
    \    let mut dot_name_str_str_str_str_str_str_pos = dot_name_str_str_str_str_str_str.find('.')\n\
    \    if ", "    if file_name.len() > 3 {\n        String::from(\"No\")\n    }\
    \ else {\n        let mut dot_index = file_name.find('.')\n        if dot_index\
    \ == String::npos {\n            String::from(\"No\")\n        } else {\n    \
    \        let mut first_letter = file_name[..dot_index].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_index = file_name.find('.')\n\
    \                if dot_index == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_index];\n\
    \                    if dot_name.chars().any(|c| c != 'txt' && c != 'exe' && c\
    \ != 'dll') {\n                        String::from(\"No\")\n                \
    \    } else {\n                        String::from(\"Yes\")\n               \
    \     }\n                }\n            }\n        }\n    }", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_start = dot_pos;\n    let mut dot_pos_end = dot_pos;\n    \n   \
    \ // Find the first letter of the substring before the dot\n    while dot_pos_start\
    \ > 0 && file_name[dot_pos_start - 1] < 'a' || \n           dot_pos_start > 0\
    \ && file_name[dot_pos_start - 1] > 'z' {\n        dot_pos_start -= 1;\n    }\n\
    \    \n    // Find the last letter of the substring after the dot\n    while dot_pos_end\
    \ < file_name.len() && file_name[dot_pos_end] >= 'a' && \n           file_name[dot_pos_end]\
    \ <= 'z' {\n        dot_pos_end += 1;\n    }\n    \n    // Check that there are\
    \ no more than three digits in the file's name\n    if dot_pos_end - dot_pos_start\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    \n    // Check that\
    \ there are no more than two dots in the file's name\n    if dot_pos_end - dot_pos_start\
    \ > 2 {\n        return String::from(\"No\");\n    }\n    \n    // Check that\
    \ there are no more than two letters in the substring before the dot\n    if dot_pos_end\
    \ - dot_pos_start > 2 && dot_pos_start > 0 {\n        return String::from(\"No\"\
    );\n    }\n    \n    // Check that there are no more than two letters in the substring\
    \ after the dot\n    if dot_pos_end - dot_pos_start > 2 && dot_pos_end < file_name.len()\
    \ {\n        return String::from(\"No\");\n    }\n    \n    // Check that there\
    \ are no more than two letters in the file's name\n    if dot_pos_end - dot_pos_start\
    \ > 2 && dot_pos_start > 0 && dot_pos_end < file_name.len() {\n        return\
    \ String::from(\"No\");\n    }\n    \n    // Check that there are no more than\
    \ two letters in the file's name\n    if dot_pos_end - dot_pos_start > 2 && dot_pos_start\
    \ > 0 && dot_pos_end < file_name.len() {\n        return String::from(\"No\");\n\
    \    }\n    \n    // Check that there are no more than two letters in the file's\
    \ name\n    if dot_pos_end - dot_pos_start > 2 && dot_pos_start > 0 && dot_pos_end\
    \ < file_name.len() {\n        return String::from(\"No\");\n    }\n    \n   \
    \ // Check that there are no more than two letters in the file's name\n    if\
    \ dot_pos_end - dot_pos_start > 2 && dot_pos_start > 0 && dot_pos_end < file_name.len()\
    \ {\n        return String::from(\"No\");\n    }\n    \n    // Check that there\
    \ are no more than two letter", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    let mut dot_pos_start = dot_pos;\n    while dot_pos_start\
    \ != dot_pos_end {\n        let mut dot_pos_start = dot_pos_end;\n        dot_pos_end\
    \ += 1;\n        if file_name[dot_pos_start..dot_pos_end].len() != 1 {\n     \
    \       return String::from(\"No\");\n        }\n        let mut dot_pos_start\
    \ = dot_pos_end;\n        dot_pos_end += 1;\n        if file_name[dot_pos_start..dot_pos_end].len()\
    \ != 1 {\n            return String::from(\"No\");\n        }\n        let mut\
    \ dot_pos_start = dot_pos_end;\n        dot_pos_end += 1;\n        if file_name[dot_pos_start..dot_pos_end].len()\
    \ != 1 {\n            return String::from(\"No\");\n        }\n        let mut\
    \ dot_pos_start = dot_pos_end;\n        dot_pos_end += 1;\n        if file_name[dot_pos_start..dot_pos_end].len()\
    \ != 1 {\n            return String::from(\"No\");\n        }\n        let mut\
    \ dot_pos_start = dot_pos_end;\n        dot_pos_end += 1;\n        if file_name[dot_pos_start..dot_pos_end].len()\
    \ != 1 {\n            return String::from(\"No\");\n        }\n        let mut\
    \ dot_pos_start = dot_pos_end;\n        dot_pos_end += 1;\n        if file_name[dot_pos_start..dot_pos_end].len()\
    \ != 1 {\n            return String::from(\"No\");\n        }\n        let mut\
    \ dot_pos_start = dot_pos_end;\n        dot_pos_end += 1;\n        if file_name[dot_pos_start..dot_pos_end].len()\
    \ != 1 {\n            return String::from(\"No\");\n        }\n        let mut\
    \ dot_pos_start = dot_pos_end;\n        dot_pos_end += 1;\n        if file_name[dot_pos_start..dot_pos_end].len()\
    \ != 1 {\n            return String::from(\"No\");\n        }\n        let mut\
    \ dot_pos_start = dot_pos_end;\n        dot_pos_end += 1;\n        if file_name[dot_pos_start..dot_pos_end].len()\
    \ != 1 {\n            return String::from(\"No\");\n        }\n        let mut\
    \ dot_pos_start = dot_pos_end;\n        dot_pos_end += 1;\n        if file_name[dot_pos_start..dot_pos_end].len()\
    \ != 1 {\n            return String::from(\"No\");\n        }\n        let mut\
    \ dot_pos_start = dot_pos_end;\n        dot_pos_end += 1;", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    let mut dot_index =\
    \ file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut first_letter = file_name.chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() > dot_index {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[..dot_index].count() != 1 ||\
    \ file_name[dot_index..].count() != 3 {\n        return String::from(\"No\");\n\
    \    }\n    String::from(\"Yes\")", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end\
    \ = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut\
    \ dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end -\
    \ 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end\
    \ = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut\
    \ dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end -\
    \ 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end\
    \ = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut\
    \ dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end -\
    \ 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end\
    \ = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_", " \
    \   let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n    while dot_pos_end\
    \ < file_name.len() {\n        let mut dot_pos_start = dot_pos;\n        dot_pos_start\
    \ += 1;\n        if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start]\
    \ <= 'z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] != '0' && file_name[dot_pos_start]\
    \ != '9' {\n            return String::from(\"No\");\n        }\n        dot_pos_end\
    \ += 1;\n        if dot_pos_end == file_name.len() {\n            return String::from(\"\
    No\");\n        }\n    }\n    return String::from(\"Yes\");", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { return String::from(\"No\") }\n    else if dot_pos == 0 {\
    \ return String::from(\"No\") }\n    else if file_name[dot_pos - 1] == '.' { return\
    \ String::from(\"No\") }\n    else if file_name[dot_pos - 1] < 'a' || file_name[dot_pos\
    \ - 1] > 'z' { return String::from(\"No\") }\n    else if file_name[dot_pos -\
    \ 1] < 'A' || file_name[dot_pos - 1] > 'Z' { return String::from(\"No\") }\n \
    \   else if file_name[dot_pos - 1] == '.' {\n        let mut dot_pos = file_name.find('.')\n\
    \        if dot_pos == String::npos { return String::from(\"No\") }\n        else\
    \ if dot_pos == 0 { return String::from(\"No\") }\n        else if file_name[dot_pos\
    \ - 1] < 'a' || file_name[dot_pos - 1] > 'z' { return String::from(\"No\") }\n\
    \        else if file_name[dot_pos - 1] < 'A' || file_name[dot_pos - 1] > 'Z'\
    \ { return String::from(\"No\") }\n        else if file_name[dot_pos - 1] == '.'\
    \ {\n            let mut dot_pos = file_name.find('.')\n            if dot_pos\
    \ == String::npos { return String::from(\"No\") }\n            else if dot_pos\
    \ == 0 { return String::from(\"No\") }\n            else if file_name[dot_pos\
    \ - 1] < 'a' || file_name[dot_pos - 1] > 'z' { return String::from(\"No\") }\n\
    \            else if file_name[dot_pos - 1] < 'A' || file_name[dot_pos - 1] >\
    \ 'Z' { return String::from(\"No\") }\n            else if file_name[dot_pos -\
    \ 1] == '.' {\n                let mut dot_pos = file_name.find('.')\n       \
    \         if dot_pos == String::npos { return String::from(\"No\") }\n       \
    \         else if dot_pos == 0 { return String::from(\"No\") }\n             \
    \   else if file_name[dot_pos - 1] < 'a' || file_name[dot_pos - 1] > 'z' { return\
    \ String::from(\"No\") }\n                else if file_name[dot_pos - 1] < 'A'\
    \ || file_name[dot_pos - 1] > 'Z' { return String::from(\"No\") }\n          \
    \      else if file_name[dot_pos - 1] == '.' {\n                    let mut dot_pos\
    \ = file_name.find('", "    if file_name.len() > 3 {\n        String::from(\"\
    No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n        if\
    \ dot_pos == String::npos {\n            String::from(\"No\")\n        } else\
    \ {\n            let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[dot_pos\
    \ + 1..].chars().next().unwrap();\n                    if dot_name.len() > 3 {\n\
    \                        String::from(\"No\")\n                    } else {\n\
    \                        String::from(\"Yes\")\n                    }\n      \
    \          }\n            }\n        }\n    }", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter2 = dot_pos_start;\n    let mut dot_pos_end_letter2 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter3 = dot_pos_start;\n    let mut dot_pos_end_letter3\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter4 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter4 = dot_pos_end;\n    let mut dot_pos_start_letter5 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter5 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter6 = dot_pos_start;\n    let mut dot_pos_end_letter6 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter7 = dot_pos_start;\n    let mut dot_pos_end_letter7\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter8 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter8 = dot_pos_end;\n    let mut dot_pos_start_letter9 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter9 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter10 = dot_pos_start;\n    let mut dot_pos_end_letter10 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter11 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter11 = dot_pos_end;\n    let mut dot_pos_start_letter12 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter12 = dot_pos_end;\n    let mut dot_pos_start_letter13\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter13 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter14 = dot_pos_start;\n    let mut dot_pos_end_letter14 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter15 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter15 = dot_pos_end;\n    let mut dot_pos_start_letter16 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter16 = dot_pos_end;\n    let mut dot_pos_start_letter17\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter17 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter18 = dot_pos_start;\n    let mut dot_pos_end_letter18 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter19 = ", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = dot_pos + 1;\n    let mut dot_len = file_name.len();\n    while dot_pos\
    \ < dot_len {\n        if file_name[dot_pos] != '0' && file_name[dot_pos] != '1'\
    \ &&\n            file_name[dot_pos] != '2' && file_name[dot_pos] != '3' &&\n\
    \            file_name[dot_pos] != '4' && file_name[dot_pos] != '5' &&\n     \
    \       file_name[dot_pos] != '6' && file_name[dot_pos] != '7' &&\n          \
    \  file_name[dot_pos] != '8' && file_name[dot_pos] != '9' &&\n            file_name[dot_pos]\
    \ != 'A' && file_name[dot_pos] != 'B' &&\n            file_name[dot_pos] != 'C'\
    \ && file_name[dot_pos] != 'D' &&\n            file_name[dot_pos] != 'E' && file_name[dot_pos]\
    \ != 'F' &&\n            file_name[dot_pos] != 'G' && file_name[dot_pos] != 'H'\
    \ &&\n            file_name[dot_pos] != 'I' && file_name[dot_pos] != 'J' &&\n\
    \            file_name[dot_pos] != 'K' && file_name[dot_pos] != 'L' &&\n     \
    \       file_name[dot_pos] != 'M' && file_name[dot_pos] != 'N' &&\n          \
    \  file_name[dot_pos] != 'O' && file_name[dot_pos] != 'P' &&\n            file_name[dot_pos]\
    \ != 'Q' && file_name[dot_pos] != 'R' &&\n            file_name[dot_pos] != 'S'\
    \ && file_name[dot_pos] != 'T' &&\n            file_name[dot_pos] != 'U' && file_name[dot_pos]\
    \ != 'V' &&\n            file_name[dot_pos] != 'W' && file_name[dot_pos] != 'X'\
    \ &&\n            file_name[dot_pos] != 'Y' && file_name[dot_pos] != 'Z' {\n \
    \           return String::from(\"No\");\n        }\n        dot_pos += 1;\n \
    \   }\n    if dot_pos == dot_len {\n        return String::from(\"No\");\n   \
    \ }\n    if file_name[dot_pos] != 'a' && file_name[dot_pos] != 'b' &&\n      \
    \  file_name[dot_pos] != 'c' && file_name[dot_pos] != 'd' &&\n        file_name[dot_pos]\
    \ != 'e' && file_name[dot_pos] != 'f' &&\n        file_name[dot_pos] != 'g' &&\
    \ file_name[dot_", "    let mut file_name_len = file_name.len();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    \n    if file_name_len < 3 {\n        return\
    \ String::from(\"No\");\n    }\n    \n    let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_len = file_name[dot_pos + 1..].chars().next().unwrap();\n    if dot_len\
    \ != String::from(\"txt\") && dot_len != String::from(\"exe\") && dot_len != String::from(\"\
    dll\") {\n        return String::from(\"No\");\n    }\n    \n    String::from(\"\
    Yes\")", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    if file_name.len() > 3 {\n        return String::from(\"No\"\
    );\n    }\n    if file_name.starts_with(\"0\") || file_name.starts_with(\"1\"\
    ) || file_name.starts_with(\"2\") || file_name.starts_with(\"3\") || file_name.starts_with(\"\
    4\") || file_name.starts_with(\"5\") || file_name.starts_with(\"6\") || file_name.starts_with(\"\
    7\") || file_name.starts_with(\"8\") || file_name.starts_with(\"9\") {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name.len() < 2 {\n      \
    \  return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_letter())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"No\"\
    );\n    }\n    if file_name.chars().any(|c| !c.is_ascii_digit()) {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_upper())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lower()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_letter() || c.is_ascii_digit() || c.is_ascii_upper()\
    \ || c.is_ascii_lower() || c == '.') {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c.is_ascii_digit()\
    \ || c.is_ascii_upper() || c.is_ascii_lower() || c == '_') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c.is_ascii_digit()\
    \ || c.is_ascii_upper() || c.is_ascii_lower() || c == '-') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c.is_ascii_digit()\
    \ || c.is_ascii_upper() || c.is_ascii_lower() || c == '/') {\n        return ",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String", "    let mut file_name\
    \ = file_name.to_string();\n    file_name.chars().for_each(|c| {\n        if c\
    \ < '0' || c > '9' {\n            file_name.clear();\n        }\n        if c\
    \ != '.' {\n            file_name.clear();\n        }\n        if !file_name.chars().any(|c|\
    \ c < 'a' || c > 'z' || c < 'A' || c > 'Z') {\n            file_name.clear();\n\
    \        }\n    });\n    if file_name.len() > 3 {\n        file_name.clear();\n\
    \    }\n    if file_name.contains('.') {\n        file_name.clear();\n    }\n\
    \    if file_name.chars().any(|c| c != 'a' && c != 'b' && c != 'c' && c != 'd'\
    \ && c != 'e' && c != 'f' && c != 'g' && c != 'h' && c != 'i' && c != 'j' && c\
    \ != 'k' && c != 'l' && c != 'm' && c != 'n' && c != 'o' && c != 'p' && c != 'q'\
    \ && c != 'r' && c != 's' && c != 't' && c != 'u' && c != 'v' && c != 'w' && c\
    \ != 'x' && c != 'y' && c != 'z') {\n        file_name.clear();\n    }\n    file_name",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n  \
    \  if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    let mut dot_pos_start = dot_pos;\n    dot_pos_end = dot_pos_end.saturating_sub(1);\n\
    \    while dot_pos_start > 0 && file_name[dot_pos_start - 1] < 'a' || \n     \
    \      dot_pos_start > 0 && file_name[dot_pos_start - 1] > 'z' ||\n          \
    \ dot_pos_start > 0 && file_name[dot_pos_start - 1] < 'A' ||\n           dot_pos_start\
    \ > 0 && file_name[dot_pos_start - 1] > 'Z' {\n        dot_pos_start -= 1;\n \
    \   }\n    if dot_pos_end == String::npos {\n        return String::from(\"No\"\
    );\n    }\n    let mut dot_pos_start = dot_pos_end.saturating_sub(1);\n    let\
    \ mut dot_pos_end = dot_pos_end.saturating_sub(1);\n    while dot_pos_end > 0\
    \ && file_name[dot_pos_end - 1] < 'a' || \n           dot_pos_end > 0 && file_name[dot_pos_end\
    \ - 1] > 'z' ||\n           dot_pos_end > 0 && file_name[dot_pos_end - 1] < 'A'\
    \ ||\n           dot_pos_end > 0 && file_name[dot_pos_end - 1] > 'Z' {\n     \
    \   dot_pos_end -= 1;\n    }\n    if dot_pos_end == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end {\n      \
    \  return String::from(\"No\");\n    }\n    if dot_pos_start < dot_pos_end {\n\
    \        return String::from(\"Yes\");\n    }\n    return String::from(\"No\"\
    );", "    if file_name.len() > 3 {\n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut first_letter = file_name.chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() > 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 1 {\n        if file_name.chars().next()\
    \ != 'a' || file_name.chars().next() != 'z' {\n            return String::from(\"\
    No\");\n        }\n    }\n    if file_name.chars().count() == 0 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().next() != 'a' || file_name.chars().next()\
    \ != 'z' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != 'A' || file_name.chars().next() != 'Z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().next() != '0' || file_name.chars().next()\
    \ != '9' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != '.' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != 'txt' || file_name.chars().next() != 'exe' || file_name.chars().next() !=\
    \ 'dll' {\n        return String::from(\"No\");\n    }\n    return String::from(\"\
    Yes\");", "    if file_name.len() > 3 {\n        String::from(\"No\")\n    } else\
    \ {\n        let mut dot_pos = file_name.find('.')\n        if dot_pos == String::npos\
    \ {\n            String::from(\"No\")\n        } else {\n            let mut first_letter\
    \ = file_name.chars().next().unwrap();\n            if first_letter < 'a' || first_letter\
    \ > 'z' {\n                String::from(\"No\")\n            } else {\n      \
    \          let mut dot_pos = file_name.find('.')\n                if dot_pos ==\
    \ String::npos {\n                    String::from(\"No\")\n                }\
    \ else {\n                    let mut dot_pos = file_name.find('.')\n        \
    \            if dot_pos == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_pos =\
    \ file_name.find('.')\n                        if dot_pos == String::npos {\n\
    \                            String::from(\"No\")\n                        } else\
    \ {\n                            if dot_pos == 0 {\n                         \
    \       String::from(\"No\")\n                            } else {\n         \
    \                       let mut dot_pos = file_name.find('.')\n              \
    \                  if dot_pos == String::npos {\n                            \
    \        String::from(\"No\")\n                                } else {\n    \
    \                                if dot_pos == 0 {\n                         \
    \               String::from(\"No\")\n                                    } else\
    \ {\n                                        let mut dot_pos = file_name.find('.')\n\
    \                                        if dot_pos == String::npos {\n      \
    \                                      String::from(\"No\")\n                \
    \                        } else {\n                                          \
    \  if dot_pos == 0 {\n                                                String::from(\"\
    No\")\n                                            } else {\n                \
    \                                if dot_pos == 0 {\n                         \
    \                           String::from(\"No\")\n                           \
    \                     } else {\n                                             \
    \       let mut dot_pos = file_name.find('.')\n                              \
    \                      if dot_pos == String::npos {\n                        \
    \                                String::from(\"No\")\n                      \
    \                              } else {\n                                    \
    \                    if dot_pos == 0 {\n                                     \
    \                       String::from(\"No\")\n                               \
    \                         } else {\n                                         \
    \                   let mut dot_pos = file_name.find('.')\n                  \
    \                                          if dot_pos == String::npos {\n    \
    \                                                            String::from(\"No\"\
    )\n                                                            } else {\n    \
    \                                                            if dot_pos == 0 {\n\
    \                                                                    String::from(\"\
    No\")\n                                                                } else\
    \ {\n                                                                    if dot_pos\
    \ == 0 {\n                                                                   \
    \     String::from(\"No\")\n                                                 \
    \                   } else {\n                                               \
    \                         let mut dot_pos = file_name.find('.')\n            \
    \                                                            if dot_pos == String::npos\
    \ {\n                                                                        \
    \    String::from(\"No\")\n                                                  \
    \                      } else {\n                                            \
    \                                if dot_pos == 0 {\n                         \
    \                                                       String::from(\"No\")\n\
    \                                                                            }\
    \ else {\n                                                                   \
    \             if dot_pos == 0 {\n                                            \
    \                                        String::from(\"No\")", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n    while dot_pos_end\
    \ < file_name.len() {\n        let mut dot_pos_start = dot_pos;\n        dot_pos_start\
    \ += 1;\n        if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start]\
    \ <= 'z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] == '_' {\n            dot_pos_start\
    \ += 1;\n        }\n        if file_name[dot_pos_start] == '.' {\n           \
    \ dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start] == '-' {\n\
    \            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '-' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n    let mut dot_pos_start\
    \ = dot_pos;\n    dot_pos_start += 1;\n    while dot_pos_start < file_name.len()\
    \ {\n        let mut dot_pos_end = dot_pos;\n        dot_pos_end += 1;\n     \
    \   if dot_pos_end == file_name.len() {\n            break;\n        }\n     \
    \   let mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        if\
    \ dot_pos_start < file_name.len() {\n            if file_name[dot_pos_start] >=\
    \ 'a' && file_name[dot_pos_start] <= 'z' {\n                continue;\n      \
    \      }\n            if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n                continue;\n            }\n            if file_name[dot_pos_start]\
    \ >= '0' && file_name[dot_pos_start] <= '9' {\n                continue;\n   \
    \         }\n        }\n        return String::from(\"No\");\n    }\n    return\
    \ String::from(\"Yes\");", "    if file_name.chars().count() > 3 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 0 {\n    \
    \    return String::from(\"No\");\n    }\n    if file_name.chars().count() ==\
    \ 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 {\n        if file_name.chars().first().unwrap().is_ascii_letter() {\n\
    \            return String::from(\"Yes\");\n        }\n    }\n    if file_name.chars().count()\
    \ == 3 {\n        if file_name.chars().first().unwrap().is_ascii_letter() {\n\
    \            if file_name.chars().last().unwrap().is_ascii_letter() {\n      \
    \          if file_name.chars().last().unwrap().is_ascii_letter() {\n        \
    \            return String::from(\"Yes\");\n                }\n            }\n\
    \        }\n    }\n    return String::from(\"No\");", "    let mut file_name =\
    \ file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    if file_name.len()\
    \ < 3 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_punctuation()) {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.chars().any(|c| !c.is_ascii_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '.')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase() || c != '.') {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase() || c != '.')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_punctuation() || c != '.') {\n        return String::from(\"No\"\
    );\n    }\n    if file_name.chars().any(|c| !c.is_ascii_digit() || c != '.') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '.' || c != 'a' || c != 'z' || c != 'A' || c !=\
    \ 'Z') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase() || c != '.' || c != 'a' || c != 'z' || c != 'A' || c\
    \ != 'Z') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase() || c != '.' || c != 'a' || c != 'z' || c != 'A' || c\
    \ != 'Z') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_punctuation() || c != '.' || c != 'a", "    if file_name.len() >\
    \ 3 {\n        return String::from(\"No\");\n    }\n    if file_name.contains(\"\
    .\") {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z') {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count(|c| c == '.') !=\
    \ 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::", "    if file_name.len() > 3 {\n\
    \        String::from(\"No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n\
    \        if dot_pos == String::npos {\n            String::from(\"No\")\n    \
    \    } else {\n            let mut first_char = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_char.ascii_lowercase().is_none() {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_char = file_name[dot_pos\
    \ + 1..].chars().next().unwrap();\n                    if dot_char.ascii_lowercase().is_none()\
    \ {\n                        String::from(\"No\")\n                    } else\
    \ {\n                        let mut dot_char_pos = dot_char.find('_');\n    \
    \                    if dot_char_pos == String::npos {\n                     \
    \       String::from(\"No\")\n                        } else {\n             \
    \               let mut dot_char_char = dot_char[dot_char_pos + 1..].chars().next().unwrap();\n\
    \                            if dot_char_char.ascii_lowercase().is_none() {\n\
    \                                String::from(\"No\")\n                      \
    \      } else {\n                                String::from(\"Yes\")\n     \
    \                       }\n                        }\n                    }\n\
    \                }\n            }\n        }\n    }", "    let mut file_name =\
    \ file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let\
    \ mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut ", "    let mut file_name : String = file_name;\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter2 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter2 = dot_pos_end;\n    let mut dot_pos_start_letter3\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter3 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter4 = dot_pos_start;\n    let mut dot_pos_end_letter4 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter5 = dot_pos_start;\n    let mut dot_pos_end_letter5\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter6 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter6 = dot_pos_end;\n    let mut dot_pos_start_letter7 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter7 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter8 = dot_pos_start;\n    let mut dot_pos_end_letter8 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter9 = dot_pos_start;\n    let mut dot_pos_end_letter9\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter10 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter10 = dot_pos_end;\n    let mut dot_pos_start_letter11\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter11 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter12 = dot_pos_start;\n    let mut dot_pos_end_letter12 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter13 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter13 = dot_pos_end;\n    let mut dot_pos_start_letter14 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter14 = dot_pos_end;\n    let mut dot_pos_start_letter15\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter15 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter16 = dot_pos_start;\n    let mut dot_pos_end_letter16 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter17 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter17 = dot_pos_end;\n    let mut dot_pos_start_letter18 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter18 = dot_pos_end;\n    let mut dot_pos_start_letter19",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    while dot_pos < dot_pos_end {\n        if file_name[dot_pos] >= 'a' && file_name[dot_pos]\
    \ <= 'z' {\n            dot_pos_end = dot_pos;\n        } else {\n           \
    \ dot_pos = dot_pos + 1;\n        }\n    }\n    if dot_pos == dot_pos_end {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos] >= '0'\
    \ && file_name[dot_pos] <= '9' {\n        return String::from(\"Yes\");\n    }\n\
    \    return String::from(\"No\");", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.len() < 3 {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_letter() || c != 'a' && c != 'z') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'A' && c != 'Z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '0'\
    \ && c != '9') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c !=\
    \ '0' && c != '9') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c !=\
    \ '0' && c != '9' || c != '.') {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.chars().any(|c| !c.is_ascii_letter() || c != 'a' && c != 'z'\
    \ || c != 'A' && c != 'Z' || c != '0' && c != '9' || c != '.' || c != 'txt' ||\
    \ c != 'exe' || c != 'dll') {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.chars().any(|c| !c.is_ascii_letter() || c != 'a' && c != 'z'\
    \ || c != 'A' && c != 'Z' || c != '0' && c != '9' || c != '.' || c != 'txt' ||\
    \ c != 'exe' || c != 'dll') {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.chars().any(|c| !c.is_ascii_letter() || c != 'a' && c != 'z'\
    \ || c != 'A' && c != 'Z' || c != '0' && c != '9' || c != '.' || c != 'txt' ||\
    \ c != 'exe' || c != 'dll') {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.chars().any(|c| !c.is_ascii_letter() || c ", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    loop {\n        let mut dot_pos_start = dot_pos_end;\n\
    \        loop {\n            let mut dot_pos_start = dot_pos_start;\n        \
    \    loop {\n                let mut dot_pos_start = dot_pos_start;\n        \
    \        loop {\n                    let mut dot_pos_start = dot_pos_start;\n\
    \                    loop {\n                        let mut dot_pos_start = dot_pos_start;\n\
    \                        loop {\n                            let mut dot_pos_start\
    \ = dot_pos_start;\n                            loop {\n                     \
    \           let mut dot_pos_start = dot_pos_start;\n                         \
    \       loop {\n                                    let mut dot_pos_start = dot_pos_start;\n\
    \                                    loop {\n                                \
    \        let mut dot_pos_start = dot_pos_start;\n                            \
    \            loop {\n                                            let mut dot_pos_start\
    \ = dot_pos_start;\n                                            loop {\n     \
    \                                           let mut dot_pos_start = dot_pos_start;\n\
    \                                                loop {\n                    \
    \                                let mut dot_pos_start = dot_pos_start;\n    \
    \                                                loop {\n                    \
    \                                    let mut dot_pos_start = dot_pos_start;\n\
    \                                                        loop {\n            \
    \                                                let mut dot_pos_start = dot_pos_start;\n\
    \                                                            loop {\n        \
    \                                                        let mut dot_pos_start\
    \ = dot_pos_start;\n                                                         \
    \       loop {\n                                                             \
    \       let mut dot_pos_start = dot_pos_start;\n                             \
    \                                       loop {\n                             \
    \                                           let mut dot_pos_start = dot_pos_start;\n\
    \                                                                        loop\
    \ {\n                                                                        \
    \    let mut dot_pos_start = dot_pos_start;\n                                \
    \                                            loop {\n                        \
    \                                                        let mut dot_pos_start\
    \ = dot_pos_start;\n                                                         \
    \                       loop {\n                                             \
    \                                       let mut dot_pos_start = dot_pos_start;\n\
    \                                                                            \
    \        loop {\n                                                            \
    \                            let mut dot_pos_start = dot_pos_start;\n        \
    \                                                                            \
    \    loop {\n                                                                \
    \                            let mut dot_pos_start = dot_pos_start;\n        \
    \                                                                            \
    \        loop {\n                                                            \
    \                                    let mut dot_pos_start = dot_pos_start;\n\
    \                                                                            \
    \                    loop {\n                                                \
    \                                                    let mut dot_pos_start = dot_pos_start;\n\
    \                                                                            \
    \                        loop {\n                                            \
    \                                                            let mut dot_pos_start\
    \ = dot_pos_start;\n                                                         \
    \                                               loop {\n                     \
    \                                                                            \
    \           let mut dot_pos_start = dot_pos_start;\n                         \
    \                                                                            \
    \       loop {\n                                                             \
    \                                                   let mut dot_pos_start = dot_pos_start;\n\
    \                                                                            \
    \                                    loop {\n                                \
    \                                                                            \
    \        let mut dot_pos_start = dot_pos_start;\n                            \
    \                                                                            \
    \            loop {\n                                                        \
    \                                                                let mut dot_pos_start\
    \ = dot_pos_start;\n                                                         \
    \                                                               loop {", "   \
    \ if file_name.len() > 3 {\n        String::from(\"No\")\n    } else {\n     \
    \   let mut dot_pos = file_name.find('.')\n        let mut dot_pos_end = file_name.len();\n\
    \        if dot_pos == String::npos {\n            dot_pos_end = 0;\n        }\
    \ else {\n            dot_pos_end = dot_pos;\n        }\n        let mut first_char:\
    \ char;\n        let mut first_char_pos = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_end = 0;\n        let mut first_char_pos_end\
    \ = 0;\n        let mut first_char_pos_", "    if file_name.len() < 3 {\n    \
    \    return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_digit()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '.') {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_digit() || c != '.') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase() || c != '.') {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase() || c != '.')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '.' || c != '0' || c != '9') {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_digit()\
    \ || c != '.' || c != '0' || c != '9') {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase() || c != '.' ||\
    \ c != 'a' || c != 'z') {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_uppercase() || c != '.' || c != 'A' ||\
    \ c != 'Z') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '.' || c != 'a' || c != 'z' || c != 'A' || c !=\
    \ 'Z') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_digit() || c != '.' || c != 'a' || c != 'z' || c != 'A' || c !=\
    \ 'Z') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase() || c ", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::", "    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\")\n    }\n    let\
    \ mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n \
    \   let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter2 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter2 = dot_pos_end;\n    let mut dot_pos_start_letter3 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter3 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter4 = dot_pos_start;\n    let mut dot_pos_end_letter4 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter5 = dot_pos_start;\n    let mut dot_pos_end_letter5\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter6 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter6 = dot_pos_end;\n    let mut dot_pos_start_letter7 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter7 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter8 = dot_pos_start;\n    let mut dot_pos_end_letter8 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter9 = dot_pos_start;\n    let mut dot_pos_end_letter9\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter10 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter10 = dot_pos_end;\n    let mut dot_pos_start_letter11\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter11 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter12 = dot_pos_start;\n    let mut dot_pos_end_letter12 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter13 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter13 = dot_pos_end;\n    let mut dot_pos_start_letter14 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter14 = dot_pos_end;\n    let mut dot_pos_start_letter15\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter15 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter16 = dot_pos_start;\n    let mut dot_pos_end_letter16 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter17 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter17 = dot_pos_end;\n    let mut dot_pos_start_letter18 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter18 = dot_pos_end;\n    let mut dot_pos_start_letter19\
    \ = dot_pos_start;\n    let mut dot_pos_", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::", "    if file_name.len() > 3 {\n        String::from(\"\
    No\")\n    } else {\n        let mut dot_index = file_name.find('.')\n       \
    \ if dot_index == String::npos {\n            String::from(\"No\")\n        }\
    \ else {\n            let mut first_letter = file_name[..dot_index].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_index = file_name.find('.')\n\
    \                if dot_index == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_index = file_name.find('.')\n\
    \                    if dot_index == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_index\
    \ = file_name.find('.')\n                        if dot_index == String::npos\
    \ {\n                            String::from(\"No\")\n                      \
    \  } else {\n                            if dot_index > dot_index {\n        \
    \                        String::from(\"No\")\n                            } else\
    \ {\n                                let mut dot_index = file_name.find('.')\n\
    \                                if dot_index == String::npos {\n            \
    \                        String::from(\"No\")\n                              \
    \  } else {\n                                    if dot_index > dot_index {\n\
    \                                        String::from(\"No\")\n              \
    \                      } else {\n                                        let mut\
    \ dot_index = file_name.find('.')\n                                        if\
    \ dot_index == String::npos {\n                                            String::from(\"\
    No\")\n                                        } else {\n                    \
    \                        if dot_index > dot_index {\n                        \
    \                        String::from(\"No\")\n                              \
    \              } else {\n                                                let mut\
    \ dot_index = file_name.find('.')\n                                          \
    \      if dot_index == String::npos {\n                                      \
    \              String::from(\"No\")\n                                        \
    \        } else {\n                                                    if dot_index\
    \ > dot_index {\n                                                        String::from(\"\
    No\")\n                                                    } else {\n        \
    \                                                String::from(\"Yes\")\n     \
    \                                               }\n                          \
    \                      }\n                                            }\n    \
    \                                    }\n                                    }\n\
    \                                }\n                            }\n          \
    \              }\n                    }\n                }\n            }\n  \
    \      }\n    }", "    let mut file_name = file_name.to_owned();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n      \
    \  return ", "    let mut file_name = file_name.clone();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end =\
    \ file_name.find('.')\n    if dot_pos_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end\
    \ = file_name.find('.')\n    if dot_pos_end == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n \
    \   let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String", "    if file_name.chars().count() > 3 {\n       \
    \ return String::from(\"No\");\n    }\n    if file_name.chars().count() == 0 {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_ascii_letter() {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_ascii_upper()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_ascii_lower() {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_digit()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_alnum() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_punct()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_space() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_xdigit()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_alphanum() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_alnum()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_punct() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_space()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_xdigit() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_alphanum()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_alnum() {\n        return String::from(\"",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    \n    let mut first_letter = String::new();\n    let mut last_letter\
    \ = String::new();\n    \n    for c in file_name.chars() {\n        if c.is_digit()\
    \ {\n            return String::from(\"No\");\n        }\n        \n        if\
    \ c.is_ascii() {\n            if c.to_ascii_lowercase().is_ascii() {\n       \
    \         first_letter += c.to_ascii_lowercase();\n            } else {\n    \
    \            return String::from(\"No\");\n            }\n        }\n        \n\
    \        if c.is_lowercase() {\n            last_letter += c.to_lowercase();\n\
    \        }\n    }\n    \n    if first_letter.len() != 1 || first_letter != \"\
    a\" || first_letter != \"b\" || first_letter != \"c\" || first_letter != \"d\"\
    \ || first_letter != \"e\" || first_letter != \"f\" || first_letter != \"g\" ||\
    \ first_letter != \"h\" || first_letter != \"i\" || first_letter != \"j\" || first_letter\
    \ != \"k\" || first_letter != \"l\" || first_letter != \"m\" || first_letter !=\
    \ \"n\" || first_letter != \"o\" || first_letter != \"p\" || first_letter != \"\
    q\" || first_letter != \"r\" || first_letter != \"s\" || first_letter != \"t\"\
    \ || first_letter != \"u\" || first_letter != \"v\" || first_letter != \"w\" ||\
    \ first_letter != \"x\" || first_letter != \"y\" || first_letter != \"z\" {\n\
    \        return String::from(\"No\");\n    }\n    \n    if last_letter.len() !=\
    \ 1 || last_letter != \"a\" || last_letter != \"b\" || last_letter != \"c\" ||\
    \ last_letter != \"d\" || last_letter != \"e\" || last_letter != \"f\" || last_letter\
    \ != \"g\" || last_letter != \"h\" || last_letter != \"i\" || last_letter != \"\
    j\" || last_letter != \"k\" || last_letter != \"l\" || last_letter != \"m\" ||\
    \ last_letter != \"n\" || last_letter != \"o\" || last_letter != \"p\" || last_letter\
    \ != \"q\" || last_letter != \"r\" || last_letter != \"s\" || last_letter != \"\
    t\" || last_letter != \"u\" || last_letter != \"v\" || last_letter != \"w\" ||\
    \ last_letter != \"x\" || last_letter != \"y\" || last_letter != \"z\" {\n   \
    \     return String::from(\"No\");\n    }\n    \n    if file_name.len() != 3 ||\
    \ file_name.chars().count(|c| !c.is_ascii()) != 1 || file_name.chars().count(|c|\
    \ !c.is_lowercase()) != 1 || file_name.chars().count(|c| !c.is_digit()) != 1 {\n\
    \        return String::from(\"", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String", "    let mut file_name_len = file_name.len();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    while dot_pos_start < file_name_len\
    \ {\n        let mut dot_pos_end = dot_pos_start;\n        while dot_pos_end <\
    \ file_name_len {\n            if file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end]\
    \ <= 'z' {\n                dot_pos_end += 1;\n            } else if file_name[dot_pos_end]\
    \ >= 'A' && file_name[dot_pos_end] <= 'Z' {\n                dot_pos_end += 1;\n\
    \            } else {\n                break;\n            }\n        }\n    \
    \    if dot_pos_end == dot_pos_start {\n            break;\n        }\n      \
    \  let mut dot_pos_start = dot_pos_end;\n    }\n    if dot_pos_start == dot_pos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"Yes\");\n    }\n    if dot_pos < dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_end == file_name_len\
    \ {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos_end]\
    \ != '0' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] == '9' {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] == '.' {\n        if file_name[dot_pos_end - 2] != '0' {\n            return\
    \ String::from(\"No\");\n        }\n        if file_name[dot_pos_end - 3] != '9'\
    \ {\n            return String::from(\"No\");\n        }\n    }\n    if file_name[dot_pos_end\
    \ - 1] != 'a' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] != 'b' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] != 'c' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] != 'd' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] != 'e' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] != 'f' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] != 'g' {\n        return String::from(\"No", "    let mut file_name_chars\
    \ = file_name.chars();\n    let mut dot_pos = file_name_chars.find_first_of('.');\n\
    \    let mut dot_pos_end = file_name_chars.find_first_not_of('.', dot_pos);\n\
    \    let mut dot_pos_start = dot_pos;\n    let mut dot_pos_start_end = dot_pos_end;\n\
    \    let mut dot_pos_start_end_end = dot_pos_start_end;\n    let mut dot_pos_start_end_end_end\
    \ = dot_pos_start_end_end;\n    let mut dot_pos_start_end_end_end_end = dot_pos_start_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end = dot_pos_start_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end;\n    let\
    \ mut dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = ", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    let mut dot_pos_end\
    \ = file_name.rfind('.')\n    if dot_pos_end == String::npos { return String::from(\"\
    No\") }\n    let mut dot_pos_start = dot_pos + 1;\n    while dot_pos_start < dot_pos_end\
    \ {\n        let mut dot_pos_end = dot_pos_start;\n        let mut dot_pos_end\
    \ = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n        let mut\
    \ dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n   \
    \     let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = ",
  "    if file_name.chars().count() > 3 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().count() == 0 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_ascii_letter()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_ascii_upper() {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_ascii_lower()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_digit() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_alnum()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_punct() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_space()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_xdigit() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_alphanum()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_alnum() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_punct()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_space() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_xdigit()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_alphanum() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_alnum()\
    \ {\n        return String::from(\"", "    let mut file_name_str = file_name.to_string();\n\
    \    file_name_str.truncate(3);\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    1\");\n    file_name_str.push_str(\"2\");\n    file_name_str.push_str(\"3\");\n\
    \    file_name_str.push_str(\"4\");\n    file_name_str.push_str(\"5\");\n    file_name_str.push_str(\"\
    6\");\n    file_name_str.push_str(\"7\");\n    file_name_str.push_str(\"8\");\n\
    \    file_name_str.push_str(\"9\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    1\");\n    file_name_str.push_str(\"2\");\n    file_name_str.push_str(\"3\");\n\
    \    file_name_str.push_str(\"4\");\n    file_name_str.push_str(\"5\");\n    file_name_str.push_str(\"\
    6\");\n    file_name_str.push_str(\"7\");\n    file_name_str.push_str(\"8\");\n\
    \    file_name_str.push_str(\"9\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    1\");\n    file_name_str.push_str(\"2\");\n    file_name_str.push_str(\"3\");\n\
    \    file_name_str.push_str(\"4\");\n    file_name_str.push_str(\"5\");\n    file_name_str.push_str(\"\
    6\");\n    file_name_str.push_str(\"7\");\n    file_name_str.push_str(\"8\");\n\
    \    file_name_str.push_str(\"9\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    1\");\n    file_name_str.push_str(\"2\");\n    file_name_str.push_str(\"3\");\n\
    \    file_name_str.push_str(\"4\");\n    file_name_str.push_str(\"5\");\n    file_name_str.push_str(\"\
    6\");\n    file_name_str.push_str(\"7\");\n    file_name_str.push_str(\"8\");\n\
    \    file_name_str.push_str(\"9\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    1\");\n    file_name_str.push_str(\"2\");\n    file_name_str.push_str(\"3\");\n\
    \    file_name_str.push_str(\"4\");\n    file_name_str.push_str(\"5\");\n    file_name_str.push_str(\"\
    6\");\n    file_name_str.push_str(\"7\");\n    file_name_str.push_str(\"8\");\n\
    \    file_name_str.push_str(\"9\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    1\");\n    file_name_str.push_str(\"2\");\n    file_name_str.push_str(\"3\");\n\
    \    file_name_str.push_str(\"4", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    while dot_pos_start < dot_pos_end {\n        let mut letter\
    \ = file_name[dot_pos_start];\n        if letter < 'a' || letter > 'z' {\n   \
    \         dot_pos_start_letter = dot_pos_start;\n            break;\n        }\n\
    \        dot_pos_start += 1;\n    }\n    if dot_pos_start_letter != dot_pos_start\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    while dot_pos_end_letter > dot_pos_start {\n        let\
    \ mut letter = file_name[dot_pos_end_letter - 1];\n        if letter < 'a' ||\
    \ letter > 'z' {\n            dot_pos_end_letter = dot_pos_end;\n            break;\n\
    \        }\n        dot_pos_end_letter -= 1;\n    }\n    if dot_pos_end_letter\
    \ != dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end_letter {\n        return String::from(\"No\");\n    }\n    if\
    \ dot_pos_start == dot_pos_end_letter + 1 {\n        return String::from(\"No\"\
    );\n    }\n    if dot_pos_end == dot_pos_end_letter + 1 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos_end_letter + 2 {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos_end == dot_pos_end_letter + 3 {\n\
    \        return String::from(\"No\");\n    }\n    if dot_pos_end == dot_pos_end_letter\
    \ + 4 {\n        return String::from(\"No\");\n    }\n    if dot_pos_end == dot_pos_end_letter\
    \ + 5 {\n        return String::from(\"No\");\n    }\n    if dot_pos_end == dot_pos_end_letter\
    \ + 6 {\n        return String::from(\"No\");\n    }\n    if dot_pos_end == dot_pos_end_letter\
    \ + 7 {\n        return String::from(\"No\");\n    }\n    if dot_pos_end == dot_pos_end_letter\
    \ + 8 {\n        return String::from(\"No\");\n    }\n    if dot_pos_", "    let\
    \ mut file_name = file_name.to_string();\n    \n    // Remove all non-alphanumeric\
    \ characters from the file's name\n    file_name = file_name.chars().filter(|c|\
    \ !c.is_alphanumeric()).collect::<String>();\n    \n    // Remove all empty strings\
    \ from the file's name\n    file_name = file_name.chars().filter(|c| !c.is_empty()).collect::<String>();\n\
    \    \n    // Remove all non-letters from the file's name\n    file_name = file_name.chars().filter(|c|\
    \ !c.is_letter()).collect::<String>();\n    \n    // Remove all non-digits (except\
    \ the dot '.') from the file's name\n    file_name = file_name.chars().filter(|c|\
    \ !c.is_digit(10)).collect::<String>();\n    \n    // Remove all non-letters from\
    \ the file's name\n    file_name = file_name.chars().filter(|c| !c.is_letter()).collect::<String>();\n\
    \    \n    // Remove all non-digits (except the dot '.') from the file's name\n\
    \    file_name = file_name.chars().filter(|c| !c.is_digit(10)).collect::<String>();\n\
    \    \n    // Remove all non-letters from the file's name\n    file_name = file_name.chars().filter(|c|\
    \ !c.is_letter()).collect::<String>();\n    \n    // Remove all non-digits (except\
    \ the dot '.') from the file's name\n    file_name = file_name.chars().filter(|c|\
    \ !c.is_digit(10)).collect::<String>();\n    \n    // Remove all non-letters from\
    \ the file's name\n    file_name = file_name.chars().filter(|c| !c.is_letter()).collect::<String>();\n\
    \    \n    // Remove all non-digits (except the dot '.') from the file's name\n\
    \    file_name = file_name.chars().filter(|c| !c.is_digit(10)).collect::<String>();\n\
    \    \n    // Remove all non-letters from the file's name\n    file_name = file_name.chars().filter(|c|\
    \ !c.is_letter()).collect::<String>();\n    \n    // Remove all non-digits (except\
    \ the dot '.') from the file's name\n    file_name = file_name.chars().filter(|c|\
    \ !c.is_digit(10)).collect::<String>();\n    \n    // Remove all non-letters from\
    \ the file's name\n    file_name = file_name.chars().filter(|c| !c.is_letter()).collect::<String>();\n\
    \    \n    // Remove all non-digits (except the dot '.') from the file's name\n\
    \    file_name = file_name.chars().filter(|c| ", "    let mut file_name = file_name.to_owned();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    while dot_pos_end < file_name.len() {\n        let mut dot_pos_start\
    \ = dot_pos;\n        while dot_pos_start < dot_pos_end {\n            if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n                dot_pos_start++;\n\
    \            } else if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n                dot_pos_start++;\n            } else {\n         \
    \       break;\n            }\n        }\n        if dot_pos_start == dot_pos_end\
    \ {\n            break;\n        }\n        if file_name[dot_pos_start] == '.'\
    \ {\n            break;\n        }\n        if file_name[dot_pos_start] >= '0'\
    \ && file_name[dot_pos_start] <= '9' {\n            break;\n        }\n      \
    \  dot_pos_end = dot_pos_start + 1;\n    }\n    if dot_pos_start == dot_pos {\n\
    \        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos_start]\
    \ != 'a' && file_name[dot_pos_start] != 'A' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_start] == 'a' && file_name[dot_pos_start+1]\
    \ == 'z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start]\
    \ == 'A' && file_name[dot_pos_start+1] == 'Z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_start] == '0' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_start] == '9' {\n        return String::from(\"\
    No\");\n    }\n    return String::from(\"Yes\");", "    if file_name.len() > 3\
    \ {\n        String::from(\"No\")\n    } else {\n        let mut dot_index = file_name.find('.')\n\
    \        if dot_index == String::npos {\n            String::from(\"No\")\n  \
    \      } else {\n            let mut first_letter = file_name[..dot_index].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_index = file_name.find('.')\n\
    \                if dot_index == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_index = file_name.find('.')\n\
    \                    if dot_index == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_index\
    \ = file_name.find('.')\n                        if dot_index == String::npos\
    \ {\n                            String::from(\"No\")\n                      \
    \  } else {\n                            let mut dot_index = file_name.find('.')\n\
    \                            if dot_index == String::npos {\n                \
    \                String::from(\"No\")\n                            } else {\n\
    \                                let mut dot_index = file_name.find('.')\n   \
    \                             if dot_index == String::npos {\n               \
    \                     String::from(\"No\")\n                                }\
    \ else {\n                                    let mut dot_index = file_name.find('.')\n\
    \                                    if dot_index == String::npos {\n        \
    \                                String::from(\"No\")\n                      \
    \              } else {\n                                        let mut dot_index\
    \ = file_name.find('.')\n                                        if dot_index\
    \ == String::npos {\n                                            String::from(\"\
    No\")\n                                        } else {\n                    \
    \                        let mut dot_index = file_name.find('.')\n           \
    \                                 if dot_index == String::npos {\n           \
    \                                     String::from(\"No\")\n                 \
    \                           } else {\n                                       \
    \         let mut dot_index = file_name.find('.')\n                          \
    \                      if dot_index == String::npos {\n                      \
    \                              String::from(\"No\")\n                        \
    \                        } else {\n                                          \
    \          let mut dot_index = file_name.find('.')\n                         \
    \                           if dot_index == String::npos {\n                 \
    \                                       String::from(\"No\")\n               \
    \                                     } else {\n                             \
    \                           let mut dot_index = file_name.find('.')\n        \
    \                                                if dot_index == String::npos\
    \ {\n                                                            String::from(\"\
    No\")\n                                                        } else {\n    \
    \                                                        let mut dot_index = file_name.find('.')\n\
    \                                                            if dot_index == String::npos\
    \ {\n                                                                String::from(\"\
    No\")\n                                                            } else {\n\
    \                                                                let mut dot_index\
    \ = file_name.find('.')\n                                                    \
    \            if dot_index == String::npos {\n                                \
    \                                    String::from(\"No\")\n                  \
    \                                              ", "    let mut file_name_str =\
    \ file_name.to_string();\n    let mut dot_pos = file_name_str.find('.')\n    if\
    \ dot_pos == String::npos { \n        return String::from(\"No\");\n    }\n  \
    \  \n    let mut dot_pos_str = file_name_str.chars().nth(dot_pos).unwrap();\n\
    \    let mut dot_pos_str_len = dot_pos_str.len();\n    \n    while dot_pos_str_len\
    \ > 3 {\n        dot_pos_str_len -= 1;\n        dot_pos_str = dot_pos_str.chars().nth(dot_pos_str_len).unwrap();\n\
    \    }\n    \n    if dot_pos_str != String::from(\".\") || \n        dot_pos_str.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n        return String::from(\"No\");\n    }\n    \n\
    \    let mut first_char_pos = 0;\n    let mut first_char_pos_str = file_name_str.chars().nth(first_char_pos).unwrap();\n\
    \    \n    while first_char_pos_str != String::from(\"a..zA..Z\") {\n        first_char_pos_str\
    \ = first_char_pos_str.chars().nth(1).unwrap();\n        first_char_pos += 1;\n\
    \    }\n    \n    if file_name_str[first_char_pos] != String::from(\"0\") || \n\
    \        file_name_str[first_char_pos+1] != String::from(\"9\") || \n        file_name_str[first_char_pos+2]\
    \ != String::from(\"0\") || \n        file_name_str[first_char_pos+3] != String::from(\"\
    9\") {\n        return String::from(\"No\");\n    }\n    \n    String::from(\"\
    Yes\")", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_name = file_name.clone();\n    dot_name.truncate(dot_pos);\n\
    \    let mut dot_name_pos = dot_name.find('.')\n    if dot_name_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_name_str = dot_name.to_string();\n\
    \    dot_name_str.truncate(dot_name_pos);\n    let mut dot_name_str_pos = dot_name_str.find('.')\n\
    \    if dot_name_str_pos == String::npos {\n        return String::from(\"No\"\
    );\n    }\n    let mut dot_name_str_str = dot_name_str.to_string();\n    dot_name_str_str.truncate(dot_name_str_pos);\n\
    \    let mut dot_name_str_str_pos = dot_name_str_str.find('.')\n    if dot_name_str_str_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_name_str_str_str = dot_name_str_str.to_string();\n    dot_name_str_str_str.truncate(dot_name_str_str_pos);\n\
    \    let mut dot_name_str_str_str_pos = dot_name_str_str_str.find('.')\n    if\
    \ dot_name_str_str_str_pos == String::npos {\n        return String::from(\"No\"\
    );\n    }\n    let mut dot_name_str_str_str_str = dot_name_str_str_str.to_string();\n\
    \    dot_name_str_str_str_str.truncate(dot_name_str_str_str_pos);\n    let mut\
    \ dot_name_str_str_str_str_pos = dot_name_str_str_str_str.find('.')\n    if dot_name_str_str_str_str_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_name_str_str_str_str_str = dot_name_str_str_str_str.to_string();\n    dot_name_str_str_str_str_str.truncate(dot_name_str_str_str_str_pos);\n\
    \    let mut dot_name_str_str_str_str_str_pos = dot_name_str_str_str_str_str.find('.')\n\
    \    if dot_name_str_str_str_str_str_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_name_str_str_str_str_str_str = dot_name_str_str_str_str_str.to_string();\n\
    \    dot_name_str_str_str_str_str_str.truncate(dot_name_str_str_str_str_str_str_pos);\n\
    \    let mut dot_name_str_str_str_str_str_str_pos = dot_name_str_str_str_str_str_str.find('.')\n\
    \    if ", "    let mut counter = 0;\n    let mut last_char: char;\n    for c\
    \ in file_name.chars() {\n        if counter > 3 {\n            return String::from(\"\
    No\");\n        }\n        if c < 'a' || c > 'z' {\n            return String::from(\"\
    No\");\n        }\n        if c < 'A' || c > 'Z' {\n            return String::from(\"\
    No\");\n        }\n        if c != '.' {\n            return String::from(\"No\"\
    );\n        }\n        last_char = c;\n        counter += 1;\n    }\n    if counter\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if last_char != '.'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'a' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'b' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'c' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'd' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'e' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'f' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'g' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'h' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'i' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'j' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'k' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'l' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'm' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'n' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'o' {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next().unwrap()\
    \ != 'p' {\n        return String::from(\"No\");\n    }\n", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n    while dot_pos_end < file_name.len()\
    \ {\n        let mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n \
    \       if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start] <= 'z'\
    \ {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= '0' && file_name[dot_pos_start]\
    \ <= '9' {\n            break;\n        }\n    }\n    if dot_pos_start == dot_pos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos;\n    dot_pos_start += 1;\n    while dot_pos_start < file_name.len()\
    \ {\n        let mut dot_pos_end = dot_pos;\n        dot_pos_end += 1;\n     \
    \   if file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z' {\n    \
    \        dot_pos_end += 1;\n        }\n        if file_name[dot_pos_end] >= 'A'\
    \ && file_name[dot_pos_end] <= 'Z' {\n            dot_pos_end += 1;\n        }\n\
    \        if file_name[dot_pos_end] >= '0' && file_name[dot_pos_end] <= '9' {\n\
    \            break;\n        }\n    }\n    if dot_pos_end == dot_pos {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1] == '.'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1]\
    \ >= 'a' && file_name[dot_pos - 1] <= 'z' {\n        return String::from(\"No\"\
    );\n    }\n    if file_name[dot_pos - 1] >= 'A' && file_name[dot_pos - 1] <= 'Z'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1]\
    \ >= '0' && file_name[dot_pos - 1] <= '9' {\n        return String::from(\"No\"\
    );\n    }\n    if dot_pos == dot_pos_end {\n        return String::from(\"No\"\
    );\n    }\n    if dot_pos == dot_pos_end - 1 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_", "    let mut file_name_len = file_name.len();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    let mut first_letter =\
    \ file_name[..dot_pos].chars().next().unwrap();\n    if first_letter < 'a' ||\
    \ first_letter > 'z' {\n        return String::from(\"No\");\n    }\n    \n  \
    \  let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n \
    \       return String::from(\"No\");\n    }\n    \n    let mut dot_len = file_name[dot_pos+1..].chars().next().unwrap();\n\
    \    if dot_len != String::from(\"txt\") && dot_len != String::from(\"exe\") &&\
    \ dot_len != String::from(\"dll\") {\n        return String::from(\"No\");\n \
    \   }\n    \n    if file_name_len > 3 {\n        return String::from(\"No\");\n\
    \    }\n    \n    String::from(\"Yes\")", "    let mut file_name_split = file_name.split('.');\n\
    \    let mut file_name_split_len = file_name_split.len();\n    let mut file_name_split_index\
    \ = 0;\n    let mut file_name_split_index2 = 0;\n    let mut file_name_split_index3\
    \ = 0;\n    let mut file_name_split_index4 = 0;\n    let mut file_name_split_index5\
    \ = 0;\n    let mut file_name_split_index6 = 0;\n    let mut file_name_split_index7\
    \ = 0;\n    let mut file_name_split_index8 = 0;\n    let mut file_name_split_index9\
    \ = 0;\n    let mut file_name_split_index10 = 0;\n    let mut file_name_split_index11\
    \ = 0;\n    let mut file_name_split_index12 = 0;\n    let mut file_name_split_index13\
    \ = 0;\n    let mut file_name_split_index14 = 0;\n    let mut file_name_split_index15\
    \ = 0;\n    let mut file_name_split_index16 = 0;\n    let mut file_name_split_index17\
    \ = 0;\n    let mut file_name_split_index18 = 0;\n    let mut file_name_split_index19\
    \ = 0;\n    let mut file_name_split_index20 = 0;\n    let mut file_name_split_index21\
    \ = 0;\n    let mut file_name_split_index22 = 0;\n    let mut file_name_split_index23\
    \ = 0;\n    let mut file_name_split_index24 = 0;\n    let mut file_name_split_index25\
    \ = 0;\n    let mut file_name_split_index26 = 0;\n    let mut file_name_split_index27\
    \ = 0;\n    let mut file_name_split_index28 = 0;\n    let mut file_name_split_index29\
    \ = 0;\n    let mut file_name_split_index30 = 0;\n    let mut file_name_split_index31\
    \ = 0;\n    let mut file_name_split_index32 = 0;\n    let mut file_name_split_index33\
    \ = 0;\n    let mut file_name_split_index34 = 0;\n    let mut file_name_split_index35\
    \ = 0;\n    let mut file_name_split_index36 = 0;\n    let mut file_name_split_index37\
    \ = 0;\n    let mut file_name_split_index38 = 0;\n    let mut file_name_split_index39\
    \ = 0;\n    let mut file_name_split_index40 = 0;\n    let mut file_name_split_index41\
    \ = 0;\n    let mut file_name_split_index42 = 0;\n    let mut file_name_split_index43\
    \ = 0;\n    let mut file_name_split_index44 = 0;\n    let mut file_name_split_index45\
    \ = 0;\n    let mut file_name_split_index46 = 0;\n    let mut file_name_split_index47\
    \ = 0;\n    let mut file_name_split_index48 = 0;\n    let mut file_name_split_index49\
    \ = 0;\n    let mut ", "    if file_name.chars().count() > 3 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 0 {\n    \
    \    return String::from(\"No\");\n    }\n    if file_name.chars().count() ==\
    \ 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_ascii_letter() {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_ascii_upper()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_ascii_lower() {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_digit()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_alnum() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_punct()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_space() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_xdigit()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_alnum() || file_name.chars().first().unwrap().is_digit()\
    \ || file_name.chars().first().unwrap().is_xdigit() || file_name.chars().first().unwrap().is_space()\
    \ || file_name.chars().first().unwrap().is_punct() {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_ascii_letter()\
    \ || file_name.chars().first().unwrap().is_ascii_upper() || file_name.chars().first().unwrap().is_ascii_lower()\
    \ {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_digit() || file_name.chars().first().unwrap().is_alnum()\
    \ || file_name.chars().first().unwrap().is_xdigit() || file_name.chars().first().unwrap().is_space()\
    \ || file_name.chars().first().unwrap().is_punct() {\n", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.len() <\
    \ 3 {\n        return String::from(\"No\");\n    }\n    if file_name.contains(\"\
    .\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    a\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    A\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    0\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    9\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    .\") {\n        return String::from(\"No\");\n    }\n    if file_name.ends_with(\"\
    txt\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.ends_with(\"\
    exe\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.ends_with(\"\
    dll\") {\n        return String::from(\"Yes\");\n    }\n    return String::from(\"\
    No\");", "    if file_name.len() < 3 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()) {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_digit())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_punctuation()) {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_whitespace()) {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.chars().any(|c| !c.is_ascii_symbol()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_graph()) {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_printable())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_byte_order()) {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.chars().any(|c| !c.is_ascii_hex_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_hex_lower()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_hex_upper()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_hex_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_hex_lower()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_hex_upper()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_hex_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_hex_lower()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_hex_", "    let mut file_name = file_name.clone();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n    dot_pos_end\
    \ += 1;\n    let mut dot_pos_start = dot_pos;\n    dot_pos_start -= 1;\n    let\
    \ mut dot_pos_start_letter = dot_pos_start;\n    dot_pos_start_letter -= 1;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    dot_pos_end_letter -= 1;\n\
    \    let mut dot_pos_start_letter2 = dot_pos_start;\n    dot_pos_start_letter2\
    \ -= 1;\n    let mut dot_pos_end_letter2 = dot_pos_end;\n    dot_pos_end_letter2\
    \ -= 1;\n    let mut dot_pos_start_letter3 = dot_pos_start;\n    dot_pos_start_letter3\
    \ -= 1;\n    let mut dot_pos_end_letter3 = dot_pos_end;\n    dot_pos_end_letter3\
    \ -= 1;\n    let mut dot_pos_start_letter4 = dot_pos_start;\n    dot_pos_start_letter4\
    \ -= 1;\n    let mut dot_pos_end_letter4 = dot_pos_end;\n    dot_pos_end_letter4\
    \ -= 1;\n    let mut dot_pos_start_letter5 = dot_pos_start;\n    dot_pos_start_letter5\
    \ -= 1;\n    let mut dot_pos_end_letter5 = dot_pos_end;\n    dot_pos_end_letter5\
    \ -= 1;\n    let mut dot_pos_start_letter6 = dot_pos_start;\n    dot_pos_start_letter6\
    \ -= 1;\n    let mut dot_pos_end_letter6 = dot_pos_end;\n    dot_pos_end_letter6\
    \ -= 1;\n    let mut dot_pos_start_letter7 = dot_pos_start;\n    dot_pos_start_letter7\
    \ -= 1;\n    let mut dot_pos_end_letter7 = dot_pos_end;\n    dot_pos_end_letter7\
    \ -= 1;\n    let mut dot_pos_start_letter8 = dot_pos_start;\n    dot_pos_start_letter8\
    \ -= 1;\n    let mut dot_pos_end_letter8 = dot_pos_end;\n    dot_pos_end_letter8\
    \ -= 1;\n    let mut dot_pos_start_letter9 = dot_pos_start;\n    dot_pos_start_letter9\
    \ -= 1;\n    let mut dot_pos_end_letter9 = dot_pos_end;\n    dot_pos_end_letter9\
    \ -= 1;\n    let mut dot_pos_start_letter10 = dot_pos_start;\n    dot_pos_start_letter10\
    \ -= 1;\n    let mut dot_pos_end_letter10 = dot_pos_end;\n    dot_pos_end_letter10\
    \ -= 1;\n    let mut dot_pos_start_letter11 = dot_pos_start;\n    dot_pos_start_letter11\
    \ -= 1;\n", "    if file_name.len() > 3 {\n        String::from(\"No\")\n    }\
    \ else {\n        let mut dot_pos = file_name.find('.')\n        if dot_pos ==\
    \ String::npos {\n            String::from(\"No\")\n        } else {\n       \
    \     let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n \
    \           if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_pos];\n\
    \                    if dot_name.chars().any(|c| c != 'txt' && c != 'exe' && c\
    \ != 'dll') {\n                        String::from(\"No\")\n                \
    \    } else {\n                        String::from(\"Yes\")\n               \
    \     }\n                }\n            }\n        }\n    }", "    if file_name.len()\
    \ > 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_pos =\
    \ file_name.find('.')\n        if dot_pos == String::npos {\n            String::from(\"\
    No\")\n        } else {\n            let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_pos].chars().next().unwrap();\n\
    \                    if dot_name != 'txt' && dot_name != 'exe' && dot_name !=\
    \ 'dll' {\n                        String::from(\"No\")\n                    }\
    \ else {\n                        String::from(\"Yes\")\n                    }\n\
    \                }\n            }\n        }\n    }", "    let mut file_name =\
    \ file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = dot_pos + 1;\n    while dot_pos < file_name.len() {\n        let mut\
    \ dot_pos = file_name.find('.', dot_pos);\n        if dot_pos == String::npos\
    \ {\n            return String::from(\"No\");\n        }\n        let mut dot_pos\
    \ = dot_pos + 1;\n        let mut dot_pos_2 = file_name.find('.', dot_pos);\n\
    \        if dot_pos_2 == String::npos {\n            return String::from(\"No\"\
    );\n        }\n        let mut dot_pos_2 = dot_pos_2 + 1;\n        let mut dot_pos_3\
    \ = file_name.find('.', dot_pos_2);\n        if dot_pos_3 == String::npos {\n\
    \            return String::from(\"No\");\n        }\n        let mut dot_pos_3\
    \ = dot_pos_3 + 1;\n        let mut dot_pos_4 = file_name.find('.', dot_pos_3);\n\
    \        if dot_pos_4 == String::npos {\n            return String::from(\"No\"\
    );\n        }\n        let mut dot_pos_4 = dot_pos_4 + 1;\n        let mut dot_pos_5\
    \ = file_name.find('.', dot_pos_4);\n        if dot_pos_5 == String::npos {\n\
    \            return String::from(\"No\");\n        }\n        let mut dot_pos_5\
    \ = dot_pos_5 + 1;\n        let mut dot_pos_6 = file_name.find('.', dot_pos_5);\n\
    \        if dot_pos_6 == String::npos {\n            return String::from(\"No\"\
    );\n        }\n        let mut dot_pos_6 = dot_pos_6 + 1;\n        let mut dot_pos_7\
    \ = file_name.find('.', dot_pos_6);\n        if dot_pos_7 == String::npos {\n\
    \            return String::from(\"No\");\n        }\n        let mut dot_pos_7\
    \ = dot_pos_7 + 1;\n        let mut dot_pos_8 = file_name.find('.', dot_pos_7);\n\
    \        if dot_pos_8 == String::npos {\n            return String::from(\"No\"\
    );\n        }\n        let mut dot_pos_8 = dot_pos_8 + 1;\n        let mut dot_pos_9\
    \ = file_name.find('.', dot_pos_8);\n        if dot_pos_9 == String::npos {\n\
    \            return String::from(\"No\");\n        }\n        let mut dot_pos_9\
    \ = dot_pos_9 + 1;\n        let mut dot_pos_10 = file_name.find('.', dot_pos_9);\n\
    \        if dot_pos_10 == String::npos {\n            return String::from(\"No\"\
    );\n        }\n        let ", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = false;\n    let mut dot_pos_end_letter = false;\n    while dot_pos_start <\
    \ dot_pos_end {\n        let mut letter = file_name[dot_pos_start];\n        if\
    \ letter == '.' {\n            dot_pos_end_letter = true;\n        }\n       \
    \ if dot_pos_start_letter {\n            if letter != 'a' && letter != 'A' {\n\
    \                return String::from(\"No\");\n            }\n        }\n    \
    \    if dot_pos_end_letter {\n            if letter != 'z' && letter != 'Z' {\n\
    \                return String::from(\"No\");\n            }\n        }\n    \
    \    if dot_pos_start == dot_pos_end {\n            dot_pos_start_letter = true;\n\
    \        }\n        dot_pos_start += 1;\n    }\n    String::from(\"Yes\")", " \
    \   let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos;\n    while dot_pos_start != dot_pos_end {\n        let mut dot_pos_start\
    \ = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n        let mut\
    \ dot_pos_start = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_start;\n        let mut dot_pos_end =\
    \ dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n        let mut\
    \ dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let ", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end =\
    \ file_name.find('.')\n    if dot_pos_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end\
    \ = file_name.find('.')\n    if dot_pos_end == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n \
    \   let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return ", "    let mut file_name = file_name.clone();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return String::from(\"\
    No\") }\n    \n    let mut first_letter = file_name.chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' { return String::from(\"No\"\
    ) }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    \n    let mut dot_letter = file_name[dot_pos].unwrap();\n\
    \    if dot_letter != 'a' && dot_letter != 'z' { return String::from(\"No\") }\n\
    \    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    \n    let mut dot_letter = file_name[dot_pos].unwrap();\n\
    \    if dot_letter != 'a' && dot_letter != 'z' { return String::from(\"No\") }\n\
    \    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    \n    let mut dot_letter = file_name[dot_pos].unwrap();\n\
    \    if dot_letter != 'a' && dot_letter != 'z' { return String::from(\"No\") }\n\
    \    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    \n    let mut dot_letter = file_name[dot_pos].unwrap();\n\
    \    if dot_letter != 'a' && dot_letter != 'z' { return String::from(\"No\") }\n\
    \    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    \n    let mut dot_letter = file_name[dot_pos].unwrap();\n\
    \    if dot_letter != 'a' && dot_letter != 'z' { return String::from(\"No\") }\n\
    \    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    \n    let mut dot_letter = file_name[dot_pos].unwrap();\n\
    \    if dot_letter != 'a' && dot_letter != 'z' { return String::from(\"No\") }\n\
    \    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { return String::from(\"No\") }\n    \n    let mut dot_letter = file_name[dot_pos].unwrap();\n\
    \    if dot_letter ", "    if file_name.len() < 3 {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut first_letter = file_name[0..dot_pos].chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_letter = file_name[dot_pos+1..].chars().next().unwrap();\n\
    \    if dot_letter != 'txt' && dot_letter != 'exe' && dot_letter != 'dll' {\n\
    \        return String::from(\"No\");\n    }\n    String::from(\"Yes\")", "  \
    \  let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    while dot_pos_end != String::npos {\n        if dot_pos_end == 0 {\n    \
    \        return String::from(\"No\");\n        }\n        if file_name[dot_pos_end\
    \ - 1] == '.' {\n            return String::from(\"No\");\n        }\n       \
    \ if file_name[dot_pos_end - 1] < 'a' || file_name[dot_pos_end - 1] > 'z' {\n\
    \            return String::from(\"No\");\n        }\n        if file_name[dot_pos_end\
    \ - 1] < 'A' || file_name[dot_pos_end - 1] > 'Z' {\n            return String::from(\"\
    No\");\n        }\n        dot_pos_end = dot_pos_end - 1;\n    }\n    if dot_pos\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] < 'a' || file_name[dot_pos - 1] > 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 1] < 'A' || file_name[dot_pos - 1] >\
    \ 'Z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 2] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 2] != 'txt' && file_name[dot_pos - 2] != 'exe' && file_name[dot_pos - 2] !=\
    \ 'dll' {\n        return String::from(\"No\");\n    }\n    return String::from(\"\
    Yes\");", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\")\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_name = file_name.clone();\n    dot_name.truncate(dot_pos);\n   \
    \ let mut dot_name_pos = dot_name.find('.')\n    if dot_name_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_name_len = dot_name_pos\
    \ - dot_pos;\n    let mut dot_name_char = String::from('0');\n    while dot_name_len\
    \ > 0 {\n        dot_name_char = dot_name_char.chars().next().unwrap();\n    \
    \    dot_name_len--;\n    }\n    if dot_name_char != String::from('0') && dot_name_char\
    \ != String::from('a') && dot_name_char != String::from('A') && dot_name_char\
    \ != String::from('z') && dot_name_char != String::from('Z') {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_name_char = String::from('0');\n\
    \    let mut dot_name_len = dot_name_pos - dot_pos;\n    let mut dot_name_char\
    \ = String::from('0');\n    while dot_name_len > 0 {\n        dot_name_char =\
    \ dot_name_char.chars().next().unwrap();\n        dot_name_len--;\n    }\n   \
    \ if dot_name_char != String::from('0') && dot_name_char != String::from('a')\
    \ && dot_name_char != String::from('A') && dot_name_char != String::from('z')\
    \ && dot_name_char != String::from('Z') {\n        return String::from(\"No\"\
    );\n    }\n    let mut dot_name_char = String::from('0');\n    let mut dot_name_len\
    \ = dot_name_pos - dot_pos;\n    let mut dot_name_char = String::from('0');\n\
    \    while dot_name_len > 0 {\n        dot_name_char = dot_name_char.chars().next().unwrap();\n\
    \        dot_name_len--;\n    }\n    if dot_name_char != String::from('0') &&\
    \ dot_name_char != String::from('a') && dot_name_char != String::from('A') &&\
    \ dot_name_char != String::from('z') && dot_name_char != String::from('Z') {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_name_char = String::from('0');\n\
    \    let mut dot_name_len = dot_name_pos - dot_pos;\n    let mut dot_name_char\
    \ = String::from", "    let mut file_name = file_name.clone();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_3\
    \ = file_name.find('.')\n    if dot_pos_3 == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_5\
    \ = file_name.find('.')\n    if dot_pos_5 == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_7\
    \ = file_name.find('.')\n    if dot_pos_7 == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_9\
    \ = file_name.find('.')\n    if dot_pos_9 == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos { \n   \
    \     return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos { \n        return ", "    let mut file_name_len\
    \ = file_name.len();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut first_letter = String::from(\"\");\n    let mut second_letter = String::from(\"\
    \");\n    let mut third_letter = String::from(\"\");\n    \n    if file_name[dot_pos\
    \ - 1] == '0' {\n        file_name_len = file_name_len - 1;\n    }\n    \n   \
    \ if file_name[dot_pos - 1] == '.' {\n        first_letter = file_name[dot_pos\
    \ - 2];\n        file_name_len = file_name_len - 2;\n    }\n    \n    if file_name[dot_pos\
    \ - 1] == '.' {\n        second_letter = file_name[dot_pos - 1];\n        file_name_len\
    \ = file_name_len - 1;\n    }\n    \n    if file_name[dot_pos - 1] == '.' {\n\
    \        third_letter = file_name[dot_pos - 1];\n        file_name_len = file_name_len\
    \ - 1;\n    }\n    \n    if file_name_len < 3 {\n        return String::from(\"\
    No\");\n    }\n    \n    if !first_letter.is_alphabetic() {\n        return String::from(\"\
    No\");\n    }\n    \n    if !second_letter.is_alphabetic() {\n        return String::from(\"\
    No\");\n    }\n    \n    if !third_letter.is_alphabetic() {\n        return String::from(\"\
    No\");\n    }\n    \n    if !first_letter.is_alpha() {\n        return String::from(\"\
    No\");\n    }\n    \n    if !second_letter.is_alpha() {\n        return String::from(\"\
    No\");\n    }\n    \n    if !third_letter.is_alpha() {\n        return String::from(\"\
    No\");\n    }\n    \n    if !first_letter.is_digit() {\n        return String::from(\"\
    No\");\n    }\n    \n    if !second_letter.is_digit() {\n        return String::from(\"\
    No\");\n    }\n    \n    if !third_letter.is_digit() {\n        return String::from(\"\
    No\");\n    }\n    \n    if !first_letter.is_lower() {\n        return String::from(\"\
    No\");\n    }\n    \n    if !second_letter.is_lower() {\n        return String::from(\"\
    No\");\n    }\n    \n    if !third_letter.is_lower() {\n        return String::from(\"\
    No\");\n    }\n    \n    if !first_letter.is_upper() {\n        return String::from(\"\
    No\");\n    }\n    \n    if !second_letter.is_", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_length =\
    \ dot_pos_end - dot_pos_start;\n    let mut dot_pos_is_letter = false;\n    let\
    \ mut dot_pos_is_digit = false;\n    while dot_pos_length != 0 {\n        let\
    \ mut dot_pos_length = dot_pos_end - dot_pos_start;\n        if dot_pos_length\
    \ == 0 {\n            break;\n        }\n        let mut dot_pos_is_letter = false;\n\
    \        let mut dot_pos_is_digit = false;\n        for _ in 0..dot_pos_length\
    \ {\n            let mut c = file_name[dot_pos_start];\n            if c >= 'a'\
    \ && c <= 'z' {\n                dot_pos_is_letter = true;\n            } else\
    \ if c >= 'A' && c <= 'Z' {\n                dot_pos_is_digit = true;\n      \
    \      } else {\n                break;\n            }\n            dot_pos_start\
    \ += 1;\n        }\n        if dot_pos_is_letter {\n            break;\n     \
    \   }\n        if dot_pos_is_digit {\n            break;\n        }\n        dot_pos_end\
    \ -= 1;\n    }\n    if dot_pos_is_letter {\n        if dot_pos_is_digit {\n  \
    \          return String::from(\"No\");\n        }\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_is_digit {\n        return String::from(\"No\"\
    );\n    }\n    return String::from(\"Yes\");", "    let mut file_name_len = file_name.len();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    loop {\n        if file_name_len\
    \ > 3 {\n            return String::from(\"No\");\n        }\n        \n     \
    \   if file_name[dot_pos - 1] != String::from('0') && file_name[dot_pos - 1] !=\
    \ String::from('9') {\n            return String::from(\"No\");\n        }\n \
    \       \n        if file_name[dot_pos - 1] != String::from('.') {\n         \
    \   return String::from(\"No\");\n        }\n        \n        if file_name[dot_pos\
    \ - 2] != String::from('a') && file_name[dot_pos - 2] != String::from('z') &&\
    \ file_name[dot_pos - 2] != String::from('A') && file_name[dot_pos - 2] != String::from('Z')\
    \ {\n            return String::from(\"No\");\n        }\n        \n        if\
    \ file_name[dot_pos - 2] != String::from('.') {\n            return String::from(\"\
    No\");\n        }\n        \n        if file_name[dot_pos - 3] != String::from('txt')\
    \ && file_name[dot_pos - 3] != String::from('exe') && file_name[dot_pos - 3] !=\
    \ String::from('dll') {\n            return String::from(\"No\");\n        }\n\
    \        \n        dot_pos += 1;\n        file_name_len -= 1;\n    }", "    let\
    \ mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter2 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter2 = dot_pos_end;\n    let mut dot_pos_start_letter3 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter3 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter4 = dot_pos_start;\n    let mut dot_pos_end_letter4 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter5 = dot_pos_start;\n    let mut dot_pos_end_letter5\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter6 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter6 = dot_pos_end;\n    let mut dot_pos_start_letter7 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter7 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter8 = dot_pos_start;\n    let mut dot_pos_end_letter8 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter9 = dot_pos_start;\n    let mut dot_pos_end_letter9\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter10 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter10 = dot_pos_end;\n    let mut dot_pos_start_letter11\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter11 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter12 = dot_pos_start;\n    let mut dot_pos_end_letter12 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter13 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter13 = dot_pos_end;\n    let mut dot_pos_start_letter14 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter14 = dot_pos_end;\n    let mut dot_pos_start_letter15\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter15 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter16 = dot_pos_start;\n    let mut dot_pos_end_letter16 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter17 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter17 = dot_pos_end;\n    let mut dot_pos_start_letter18 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter18 = dot_pos_end;\n    let mut dot_pos_start_letter19",
  "    if file_name.chars().count() > 3 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().count() < 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 3 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 4 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 5 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 6 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 7 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 8 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 9 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 10 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 11 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 12 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 13 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 14 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n", "    let mut file_name\
    \ = file_name.to_string();\n    if file_name.len() > 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains('.') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with('0') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with('a') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with('A') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with('9') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with('z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with('Z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(' ') {", "    let mut file_name =\
    \ file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let\
    \ mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter = false;\n\
    \    let mut dot_pos_start_digit = false;\n    let mut dot_pos_end_digit = false;\n\
    \    while dot_pos_start != dot_pos_end {\n        if dot_pos_start == dot_pos_end\
    \ {\n            dot_pos_end_digit = true;\n        }\n        if dot_pos_start\
    \ == dot_pos_end {\n            dot_pos_end_letter = true;\n        }\n      \
    \  if dot_pos_start == dot_pos_end {\n            dot_pos_end_digit = true;\n\
    \        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_letter\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_digit\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_letter\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_digit\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_letter\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_digit\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_letter\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_digit\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_letter\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_digit\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_letter\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_digit\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_letter\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_digit\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_letter\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end_digit\
    \ = true;\n        }\n        if dot_pos_start == dot_pos_end {", "    if file_name.chars().count()\
    \ > 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_pos =\
    \ file_name.find('.')\n        let mut dot_pos_end = dot_pos;\n        let mut\
    \ dot_pos_start = dot_pos;\n        let mut dot_pos_start_letter = dot_pos;\n\
    \        let mut dot_pos_end_letter = dot_pos;\n        let mut dot_pos_start_letter_pos\
    \ = dot_pos;\n        let mut dot_pos_end_letter_pos = dot_pos;\n        let mut\
    \ dot_pos_start_letter_pos_end = dot_pos;\n        let mut dot_pos_end_letter_pos_end\
    \ = dot_pos;\n        let mut dot_pos_start_letter_pos_end_letter = dot_pos;\n\
    \        let mut dot_pos_end_letter_pos_end_letter = dot_pos;\n        let mut\
    \ dot_pos_start_letter_pos_end_letter_pos = dot_pos;\n        let mut dot_pos_end_letter_pos_end_letter_pos\
    \ = dot_pos;\n        let mut dot_pos_start_letter_pos_end_letter_pos_end = dot_pos;\n\
    \        let mut dot_pos_end_letter_pos_end_letter_pos_end = dot_pos;\n      \
    \  let mut dot_pos_start_letter_pos_end_letter_pos_end_letter = dot_pos;\n   \
    \     let mut dot_pos_end_letter_pos_end_letter_pos_end_letter = dot_pos;\n  \
    \      let mut dot_pos_start_letter_pos_end_letter_pos_end_letter_pos = dot_pos;\n\
    \        let mut dot_pos_end_letter_pos_end_letter_pos_end_letter_pos = dot_pos;\n\
    \        let mut dot_pos_start_letter_pos_end_letter_pos_end_letter_pos_end =\
    \ dot_pos;\n        let mut dot_pos_end_letter_pos_end_letter_pos_end_letter_pos_end\
    \ = dot_pos;\n        let mut dot_pos_start_letter_pos_end_letter_pos_end_letter_pos_end_letter\
    \ = dot_pos;\n        let mut dot_pos_end_letter_pos_end_letter_pos_end_letter_pos_end_letter\
    \ = dot_pos;\n        let mut dot_pos_start_letter_pos_end_letter_pos_end_letter_pos_end_letter_pos\
    \ = dot_pos;\n        let mut dot_pos_end_letter_pos_end_letter_pos_end_letter_pos_end_letter_pos\
    \ = dot_pos;\n        let mut dot_pos_start_letter_pos_end_letter_pos_end_letter_pos_end_letter_pos_end\
    \ = dot_pos;\n        let mut dot_pos_end_letter_pos_end_letter_pos_end_letter_pos_end_letter_pos_end\
    \ = dot_pos;\n        let mut dot_pos_start_letter_pos_end_letter_pos_end_letter_pos_end_letter_pos_end_letter\
    \ = dot_pos;\n        let mut dot_pos_end_letter_pos_end_letter_pos_end_letter_pos_end_letter_pos_end_letter\
    \ = dot_pos;\n        let mut dot_pos_start_letter_pos_end_letter_pos_", "   \
    \ let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos;\n    let mut dot_pos_start = dot_pos;\n  \
    \  while dot_pos_start != String::npos {\n        let mut dot_pos_end = dot_pos_start;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_start;\n\
    \        while dot_pos_end != String::npos {\n            let mut dot_pos_end\
    \ = dot_pos_start;\n            let mut dot_pos_start = dot_pos_end;\n       \
    \     let mut dot_pos_end = dot_pos_start;\n            while dot_pos_end != String::npos\
    \ {\n                let mut dot_pos_end = dot_pos_start;\n                let\
    \ mut dot_pos_start = dot_pos_end;\n                let mut dot_pos_end = dot_pos_start;\n\
    \                while dot_pos_end != String::npos {\n                    let\
    \ mut dot_pos_end = dot_pos_start;\n                    let mut dot_pos_start\
    \ = dot_pos_end;\n                    let mut dot_pos_end = dot_pos_start;\n \
    \                   while dot_pos_end != String::npos {\n                    \
    \    let mut dot_pos_end = dot_pos_start;\n                        let mut dot_pos_start\
    \ = dot_pos_end;\n                        let mut dot_pos_end = dot_pos_start;\n\
    \                        while dot_pos_end != String::npos {\n               \
    \             let mut dot_pos_end = dot_pos_start;\n                         \
    \   let mut dot_pos_start = dot_pos_end;\n                            let mut\
    \ dot_pos_end = dot_pos_start;\n                            while dot_pos_end\
    \ != String::npos {\n                                let mut dot_pos_end = dot_pos_start;\n\
    \                                let mut dot_pos_start = dot_pos_end;\n      \
    \                          let mut dot_pos_end = dot_pos_start;\n            \
    \                    while dot_pos_end != String::npos {\n                   \
    \                 let mut dot_pos_end = dot_pos_start;\n                     \
    \               let mut dot_pos_start = dot_pos_end;\n                       \
    \             let mut dot_pos_end = dot_pos_start;\n                         \
    \       }\n                            }\n                        }\n        \
    \            }\n                }\n            }\n        }\n    }\n    if dot_pos_start\
    \ != String::npos {\n        dot_pos_end = dot_pos_start;\n        let mut dot_pos_start\
    \ = dot_pos_end;\n        let mut dot_pos_end = dot_pos_start;\n        while\
    \ dot_pos_end != String::npos {\n            let mut dot_pos_end = dot_pos_start;\n\
    \            let mut dot_pos_start = dot_pos_end;\n            let mut dot_pos_end\
    \ = dot_pos_start;\n            while dot_pos_end != ", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n  \
    \  if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.len() <\
    \ 3 {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains('.')\
    \ == false {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n        return String::from(\"Yes\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n\
    \        return String::from(\"Yes\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_punctuation()) {\n        return String::from(\"Yes\");\n    }\n\
    \    if file_name.chars().any(|c| !c.is_ascii_digit()) {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_symbol()) {\n   \
    \     return String::from(\"Yes\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_whitespace())\
    \ {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_control()) {\n        return String::from(\"Yes\");\n    }\n   \
    \ if file_name.chars().any(|c| !c.is_ascii_graph()) {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_newline()) {\n  \
    \      return String::from(\"Yes\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_horizontal_tab()) {\n        return String::from(\"Yes\");\n   \
    \ }\n    if file_name.chars().any(|c| !c.is_ascii_vertical_tab()) {\n        return\
    \ String::from(\"Yes\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_formfeed())\
    \ {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_backspace()) {\n        return String::from(\"Yes\");\n    }\n \
    \   if file_name.chars().any(|c| !c.is_ascii_carriage_return()) {\n        return\
    \ String::from(\"Yes\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_linefeed())\
    \ {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_ascii_return()) {\n        return String::from(\"Yes\");\n    }\n\
    \    if file_name.chars().", "    let mut file_name = file_name.clone();\n   \
    \ let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return\
    \ String::from(\"No\") }\n    let mut dot_pos_end = file_name.find('.')\n    if\
    \ dot_pos_end == String::npos { return String::from(\"No\") }\n    if dot_pos_end\
    \ < dot_pos + 1 {\n        return String::from(\"No\")\n    }\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_", "    if file_name.len() > 3 {\n        String::from(\"No\")\n \
    \   } else {\n        let mut dot_index = file_name.find('.')\n        if dot_index\
    \ == String::npos {\n            String::from(\"No\")\n        } else {\n    \
    \        let mut first_letter = file_name.chars().next().unwrap();\n         \
    \   if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_index = file_name.find('.')\n\
    \                if dot_index == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_index = file_name.find('.')\n\
    \                    if dot_index == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_index\
    \ = file_name.find('.')\n                        if dot_index == String::npos\
    \ {\n                            String::from(\"No\")\n                      \
    \  } else {\n                            let mut dot_index = file_name.find('.')\n\
    \                            if dot_index == String::npos {\n                \
    \                String::from(\"No\")\n                            } else {\n\
    \                                let mut dot_index = file_name.find('.')\n   \
    \                             if dot_index == String::npos {\n               \
    \                     String::from(\"No\")\n                                }\
    \ else {\n                                    let mut dot_index = file_name.find('.')\n\
    \                                    if dot_index == String::npos {\n        \
    \                                String::from(\"No\")\n                      \
    \              } else {\n                                        let mut dot_index\
    \ = file_name.find('.')\n                                        if dot_index\
    \ == String::npos {\n                                            String::from(\"\
    No\")\n                                        } else {\n                    \
    \                        let mut dot_index = file_name.find('.')\n           \
    \                                 if dot_index == String::npos {\n           \
    \                                     String::from(\"No\")\n                 \
    \                           } else {\n                                       \
    \         let mut dot_index = file_name.find('.')\n                          \
    \                      if dot_index == String::npos {\n                      \
    \                              String::from(\"No\")\n                        \
    \                        } else {\n                                          \
    \          let mut dot_index = file_name.find('.')\n                         \
    \                           if dot_index == String::npos {\n                 \
    \                                       String::from(\"No\")\n               \
    \                                     } else {\n                             \
    \                           let mut dot_index = file_name.find('.')\n        \
    \                                                if dot_index == String::npos\
    \ {\n                                                            String::from(\"\
    No\")\n                                                        } else {\n    \
    \                                                        let mut dot_index = file_name.find('.')\n\
    \                                                            if dot_index == String::npos\
    \ {\n                                                                String::from(\"\
    No\")\n                                                            } else {\n\
    \                                                                let mut dot_index\
    \ = file_name.find('.')\n                                                    \
    \            if dot_index == String::npos {\n                                \
    \                                    String::from(\"No\")\n                  \
    \                                              } else {\n                    \
    \                                                ", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String", "    let mut file_name = file_name.clone();\n  \
    \  let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n \
    \       return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        if\
    \ file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z' ||\n        \
    \    file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end] <= 'Z' ||\n     \
    \       file_name[dot_pos_end] >= '0' && file_name[dot_pos_end] <= '9' {\n   \
    \         break;\n        }\n        dot_pos_end += 1;\n    }\n    if dot_pos_end\
    \ == file_name.len() {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[0..dot_pos\
    \ - 1].is_empty() {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] != 'a' && file_name[dot_pos - 1] != 'A' &&\n        file_name[dot_pos -\
    \ 1] != '0' && file_name[dot_pos - 1] != '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 1] == '.' {\n        if file_name[dot_pos\
    \ + 1] == '.' {\n            return String::from(\"Yes\");\n        }\n      \
    \  return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1] == '.' {\n\
    \        if file_name[dot_pos + 1] != '.' {\n            return String::from(\"\
    No\");\n        }\n        if file_name[dot_pos + 2] != 'txt' && file_name[dot_pos\
    \ + 2] != 'exe' &&\n            file_name[dot_pos + 2] != 'dll' {\n          \
    \  return String::from(\"No\");\n        }\n        return String::from(\"Yes\"\
    );\n    }\n    if file_name[dot_pos - 1] == '.' {\n        if file_name[dot_pos\
    \ + 1] != '.' {\n            return String::from(\"No\");\n        }\n       \
    \ if file_name[dot_pos + 2] != 'exe' && file_name[dot_pos + 2] != 'dll' {\n  \
    \          return String::from(\"No\");\n        }\n        return String::from(\"\
    Yes\");\n    }\n    if file_name[dot_pos - 1] == '.' {\n        if file_name[dot_pos\
    \ + 1] != '.' {\n            return String::from(\"No\");\n        }\n       \
    \ if file_name[dot_pos + 2] != 'dll' {\n            return String::from(\"No",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    while dot_pos_start < dot_pos_end {\n        if dot_pos_start\
    \ == dot_pos_end {\n            break;\n        }\n        let mut letter = file_name[dot_pos_start];\n\
    \        if letter < 'a' || letter > 'z' {\n            break;\n        }\n  \
    \      if dot_pos_start_letter {\n            if letter != dot_pos_start {\n \
    \               break;\n            }\n        } else {\n            if letter\
    \ != 'a' && letter != 'A' {\n                break;\n            }\n        }\n\
    \        dot_pos_start_letter = true;\n        dot_pos_start++;\n    }\n    dot_pos_end_letter\
    \ = true;\n    let mut dot_pos_end_letter = false;\n    while dot_pos_end_letter\
    \ {\n        if dot_pos_end_letter == dot_pos_end {\n            break;\n    \
    \    }\n        let mut letter = file_name[dot_pos_end];\n        if letter <\
    \ 'a' || letter > 'z' {\n            break;\n        }\n        if dot_pos_end_letter\
    \ {\n            if letter != dot_pos_end {\n                break;\n        \
    \    }\n        } else {\n            if letter != 'a' && letter != 'A' {\n  \
    \              break;\n            }\n        }\n        dot_pos_end_letter =\
    \ false;\n        dot_pos_end--;\n    }\n    if dot_pos_end_letter {\n       \
    \ return String::from(\"No\");\n    }\n    if dot_pos_start_letter {\n       \
    \ return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end {\n\
    \        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    let mut dot_pos_start = dot_pos;\n    dot_pos_start\
    \ -= 1;\n    while dot_pos_start > 0 && file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start]\
    \ <= 'z' {\n        dot_pos_start -= 1;\n    }\n    while dot_pos_end < file_name.len()\
    \ && file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z' {\n      \
    \  dot_pos_end += 1;\n    }\n    if dot_pos_start == dot_pos_end {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos_start == 0 || dot_pos_end == file_name.len()\
    \ - 1 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start\
    \ - 1] != '.' || file_name[dot_pos_end - 1] != 'txt' || file_name[dot_pos_end\
    \ - 1] != 'exe' || file_name[dot_pos_end - 1] != 'dll' {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == 0 {\n        return String::from(\"Yes\"\
    );\n    }\n    if dot_pos_end == file_name.len() - 1 {\n        return String::from(\"\
    Yes\");\n    }\n    if file_name[dot_pos_start - 1] != '.' || file_name[dot_pos_end\
    \ - 1] != 'txt' || file_name[dot_pos_end - 1] != 'exe' || file_name[dot_pos_end\
    \ - 1] != 'dll' {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start\
    \ == 0 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_end ==\
    \ file_name.len() - 1 {\n        return String::from(\"Yes\");\n    }\n    if\
    \ file_name[dot_pos_start - 1] != '.' || file_name[dot_pos_end - 1] != 'txt' ||\
    \ file_name[dot_pos_end - 1] != 'exe' || file_name[dot_pos_end - 1] != 'dll' {\n\
    \        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_start == 0 {\n\
    \        return String::from(\"Yes\");\n    }\n    if dot_pos_end == file_name.len()\
    \ - 1 {\n        return String", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\")\n    }\n    let mut dot_pos = dot_pos + 1;\n\
    \    let mut dot_len = file_name.len();\n    while dot_pos < dot_len {\n     \
    \   let mut dot_char = file_name[dot_pos];\n        if dot_char == '.' {\n   \
    \         if dot_pos == dot_len {\n                return String::from(\"No\"\
    )\n            }\n            dot_pos = dot_pos + 1;\n        } else {\n     \
    \       if dot_char >= 'a' && dot_char <= 'z' {\n                dot_pos = dot_pos\
    \ + 1;\n            } else if dot_char >= 'A' && dot_char <= 'Z' {\n         \
    \       dot_pos = dot_pos + 1;\n            } else {\n                return String::from(\"\
    No\")\n            }\n        }\n    }\n    if dot_pos == dot_len {\n        return\
    \ String::from(\"No\")\n    }\n    let mut dot_char = file_name[dot_pos];\n  \
    \  if dot_char >= 'a' && dot_char <= 'z' {\n        dot_pos = dot_pos + 1;\n \
    \   } else if dot_char >= 'A' && dot_char <= 'Z' {\n        dot_pos = dot_pos\
    \ + 1;\n    } else {\n        return String::from(\"No\")\n    }\n    let mut\
    \ dot_len = file_name.len();\n    let mut dot_pos = dot_pos + 1;\n    while dot_pos\
    \ < dot_len {\n        let mut dot_char = file_name[dot_pos];\n        if dot_char\
    \ == '.' {\n            if dot_pos == dot_len {\n                return String::from(\"\
    No\")\n            }\n            dot_pos = dot_pos + 1;\n        } else {\n \
    \           if dot_char >= 'a' && dot_char <= 'z' {\n                dot_pos =\
    \ dot_pos + 1;\n            } else if dot_char >= 'A' && dot_char <= 'Z' {\n \
    \               dot_pos = dot_pos + 1;\n            } else {\n               \
    \ return String::from(\"No\")\n            }\n        }\n    }\n    if dot_pos\
    \ == dot_len {\n        return String::from(\"No\")\n    }\n    let mut dot_char\
    \ = file_name[dot_pos];\n    if dot_char >= 'a' && dot_char <= 'z' {\n       \
    \ dot_pos = dot_pos + 1;\n    } else if dot_char >= 'A' && dot_char <= 'Z' {\n\
    \        dot_pos = dot_pos + 1;\n    } else {\n        return String::from(\"\
    No\")\n    }\n    let mut dot_len = file_name.len();\n    let mut dot_pos = dot_pos\
    \ + 1;\n    while dot_pos < dot_len {\n        let mu", "    if file_name.chars().count()\
    \ > 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_index\
    \ = file_name.chars().nth(file_name.chars().count() - 1).unwrap();\n        let\
    \ mut dot_index = dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n\
    \        let mut dot_index = dot_index.unwrap();\n        let mut dot_index =\
    \ dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n     \
    \   let mut dot_index = dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n\
    \        let mut dot_index = dot_index.unwrap();\n        let mut dot_index =\
    \ dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n     \
    \   let mut dot_index = dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n\
    \        let mut dot_index = dot_index.unwrap();\n        let mut dot_index =\
    \ dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n     \
    \   let mut dot_index = dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n\
    \        let mut dot_index = dot_index.unwrap();\n        let mut dot_index =\
    \ dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n     \
    \   let mut dot_index = dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n\
    \        let mut dot_index = dot_index.unwrap();\n        let mut dot_index =\
    \ dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n     \
    \   let mut dot_index = dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n\
    \        let mut dot_index = dot_index.unwrap();\n        let mut dot_index =\
    \ dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n     \
    \   let mut dot_index = dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n\
    \        let mut dot_index = dot_index.unwrap();\n        let mut dot_index =\
    \ dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n     \
    \   let mut dot_index = dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n\
    \        let mut dot_index = dot_index.unwrap();\n        let mut dot_index =\
    \ dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n     \
    \   let mut dot_index = dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n\
    \        let mut dot_index = dot_index.unwrap();\n        let mut dot_index =\
    \ dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n     \
    \   let mut dot_index = dot_index.unwrap();\n        let mut dot_index = dot_index.unwrap();\n\
    \        let mu", "    let mut file_name = file_name.to_string();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    if dot_pos_end == dot_pos + 1 {\n        return String::from(\"No\"\
    );\n    }\n    if dot_pos_end == dot_pos + 2 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 3 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 4 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 5 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 6 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 7 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 8 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 9 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 10 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 11 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 12 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 13 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 14 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 15 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 16 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 17 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 18 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 19 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 20 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 21 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 22 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end ", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    if file_name.len() < 3 {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_alphabetic()) {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_alphanumeric()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_lowercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_uppercase()) {\n       \
    \ return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_digit())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_punctuation()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_whitespace()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_control()) {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_newline())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_symbol()) {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii()) {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_control()) {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_newline()) {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_symbol()) {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii()) {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_control()) {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_newline()) {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_symbol()) {\n        return String::from(\"No\");\n    }\n", "    let\
    \ mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let\
    \ mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_", "    if file_name.len()\
    \ > 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_pos =\
    \ file_name.find('.')\n        if dot_pos == String::npos {\n            String::from(\"\
    No\")\n        } else {\n            let mut first_char = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_char.ascii_lowercase() != first_char {\n               \
    \ String::from(\"No\")\n            } else {\n                let mut dot_pos\
    \ = file_name.find('.')\n                if dot_pos == String::npos {\n      \
    \              String::from(\"No\")\n                } else {\n              \
    \      let mut dot_name = file_name[..dot_pos];\n                    if dot_name.chars().any(|c|\
    \ !c.ascii_lowercase().is_ascii()) {\n                        String::from(\"\
    No\")\n                    } else {\n                        String::from(\"Yes\"\
    )\n                    }\n                }\n            }\n        }\n    }",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    else if dot_pos\
    \ == 0 { return String::from(\"No\") }\n    else if file_name[dot_pos - 1] !=\
    \ String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n       \
    \ return String::from(\"No\");\n    }\n    let mut first_letter = file_name[dot_pos\
    \ - 1];\n    if first_letter != String::from('a') && first_letter != String::from('A')\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    else if dot_pos\
    \ == 0 { return String::from(\"No\") }\n    else if file_name[dot_pos - 1] !=\
    \ String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n       \
    \ return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    else if dot_pos\
    \ == 0 { return String::from(\"No\") }\n    else if file_name[dot_pos - 1] !=\
    \ String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n       \
    \ return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    else if dot_pos\
    \ == 0 { return String::from(\"No\") }\n    else if file_name[dot_pos - 1] !=\
    \ String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n       \
    \ return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    else if dot_pos\
    \ == 0 { return String::from(\"No\") }\n    else if file_name[dot_pos - 1] !=\
    \ String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n       \
    \ return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    else if dot_pos\
    \ == 0 { return String::from(\"No\") ", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    while dot_pos_end < file_name.len() {\n        let mut dot_pos_end\
    \ = dot_pos_end + 1;\n        if file_name[dot_pos_end] != '\\\\' {\n        \
    \    break;\n        }\n    }\n    if dot_pos_end == file_name.len() {\n     \
    \   return String::from(\"No\");\n    }\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n    let mut dot_pos_end =\
    \ dot_pos_end + 1;\n    while dot_pos_end < file_name.len() {\n        let mut\
    \ dot_pos_end = dot_pos_end + 1;\n        if file_name[dot_pos_end] != '\\\\'\
    \ {\n            break;\n        }\n    }\n    if dot_pos_end == file_name.len()\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n    let mut\
    \ dot_pos_end = dot_pos_end + 1;\n    while dot_pos_end < file_name.len() {\n\
    \        let mut dot_pos_end = dot_pos_end + 1;\n        if file_name[dot_pos_end]\
    \ != '\\\\' {\n            break;\n        }\n    }\n    if dot_pos_end == file_name.len()\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n    let mut\
    \ dot_pos_end = dot_pos_end + 1;\n    while dot_pos_end < file_name.len() {\n\
    \        let mut dot_pos_end = dot_pos_end + 1;\n        if file_name[dot_pos_end]\
    \ != '\\\\' {\n            break;\n        }\n    }\n    if dot_pos_end == file_name.len()\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n    let mut\
    \ dot_pos_end = dot_pos_end + 1;\n    while dot_pos_end < file_name.len() {\n\
    \        let mut dot_pos_end = dot_pos_end + 1;\n        if file_name[dot_pos_end]\
    \ != '\\\\' {\n            break;\n        }\n    }\n    if dot_pos_end == file_name.len()\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n    let mut\
    \ dot_pos_end = ", "    let mut file_name = file_name.to_string();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    if dot_pos < dot_pos_end {\n        return String::from(\"No\");\n\
    \    }\n    if file_name[dot_pos - 1] != String::from('0') && file_name[dot_pos\
    \ - 1] != String::from('9') {\n        return String::from(\"No\");\n    }\n \
    \   if file_name[dot_pos + 1] != String::from('.') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 2] != String::from('a'..'z') {\n   \
    \     return String::from(\"No\");\n    }\n    if file_name[dot_pos + 3] != String::from('A'..'Z')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos + 4]\
    \ != String::from('txt'..'exe') {\n        return String::from(\"No\");\n    }\n\
    \    if file_name[dot_pos + 5] != String::from('dll') {\n        return String::from(\"\
    No\");\n    }\n    String::from(\"Yes\")", "    if file_name.len() > 3 {\n   \
    \     return String::from(\"No\");\n    }\n    if file_name.contains('.') {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.starts_with('0')\
    \ && file_name.len() == 3 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.starts_with('a') && file_name.len() == 3 || file_name.starts_with('A')\
    \ && file_name.len() == 3 {\n        return String::from(\"Yes\");\n    }\n  \
    \  if file_name.starts_with('t') && file_name.len() == 3 || file_name.starts_with('T')\
    \ && file_name.len() == 3 {\n        return String::from(\"Yes\");\n    }\n  \
    \  if file_name.starts_with('e') && file_name.len() == 3 || file_name.starts_with('E')\
    \ && file_name.len() == 3 {\n        return String::from(\"Yes\");\n    }\n  \
    \  if file_name.starts_with('d') && file_name.len() == 3 || file_name.starts_with('D')\
    \ && file_name.len() == 3 {\n        return String::from(\"Yes\");\n    }\n  \
    \  if file_name.starts_with('s') && file_name.len() == 3 || file_name.starts_with('S')\
    \ && file_name.len() == 3 {\n        return String::from(\"Yes\");\n    }\n  \
    \  if file_name.starts_with('x') && file_name.len() == 3 || file_name.starts_with('X')\
    \ && file_name.len() == 3 {\n        return String::from(\"Yes\");\n    }\n  \
    \  if file_name.starts_with('l') && file_name.len() == 3 || file_name.starts_with('L')\
    \ && file_name.len() == 3 {\n        return String::from(\"Yes\");\n    }\n  \
    \  if file_name.starts_with('p') && file_name.len() == 3 || file_name.starts_with('P')\
    \ && file_name.len() == 3 {\n        return String::from(\"Yes\");\n    }\n  \
    \  if file_name.starts_with('b') && file_name.len() == 3 || file_name.starts_with('B')\
    \ && file_name.len() == 3 {\n        return String::from(\"Yes\");\n    }\n  \
    \  if file_name.starts_with('z') && file_name.len() == 3 || file_name.starts_with('Z')\
    \ && file_name.len() == 3 {\n        return String::from(\"Yes\");\n    }\n  \
    \  if file_name.starts_with('d') && file_name.len() == 3 || file_name.starts_with('D')\
    \ && file_name.len() == 3 {\n        return String::from(\"Yes\");\n    }\n  \
    \  if file_name.", "    let mut file_name = file_name.to_string();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n    dot_pos_end\
    \ += 1;\n    while dot_pos_end < file_name.len() {\n        let mut dot_pos_start\
    \ = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            break;\n        }\n    }\n    if dot_pos_start == dot_pos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_end - dot_pos\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 1] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 2] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 3] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 4] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 5] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 6] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 7] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 8] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 9] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 10] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 11] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 12] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 13] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 14] != '.' {\n        return String::", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos { \n", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        let\
    \ mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ != '0' && file_name[dot_pos_start] != '9' {\n            return String::from(\"\
    No\");\n        }\n        dot_pos_end += 1;\n        if dot_pos_end == file_name.len()\
    \ {\n            return String::from(\"No\");\n        }\n    }\n    return String::from(\"\
    Yes\");", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n   \
    \ let mut dot_pos_start = dot_pos;\n    dot_pos_start += 1;\n    while dot_pos_start\
    \ < dot_pos_end {\n        let mut dot_pos_end = dot_pos_start;\n        dot_pos_end\
    \ += 1;\n        let mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n\
    \        if dot_pos_start > dot_pos_end {\n            break;\n        }\n   \
    \     if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start] <= 'z' {\n\
    \            if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start] <=\
    \ 'Z' {\n                dot_pos_start += 1;\n            }\n        }\n    }\n\
    \    if dot_pos_start == dot_pos {\n        return String::from(\"No\");\n   \
    \ }\n    if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start] <= 'z'\
    \ {\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start] <=\
    \ 'Z' {\n            dot_pos_start += 1;\n        }\n    }\n    if dot_pos_start\
    \ == dot_pos {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start]\
    \ != '0' && file_name[dot_pos_start] != '1' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_start + 1] == '.' {\n        if file_name[dot_pos_start\
    \ + 2] != 't' && file_name[dot_pos_start + 2] != 'e' && file_name[dot_pos_start\
    \ + 2] != 'x' && file_name[dot_pos_start + 2] != 't' && file_name[dot_pos_start\
    \ + 2] != 'e' && file_name[dot_pos_start + 2] != 'x' {\n            return String::from(\"\
    No\");\n        }\n    }\n    if file_name[dot_pos_start + 1] == '.' {\n     \
    \   if file_name[dot_pos_start + 2] != 'e' && file_name[dot_pos_start + 2] !=\
    \ 'x' && file_name[dot_pos_start + 2] != 't' && file_name[dot_pos_start + 2] !=\
    \ 'e' && file_name[dot_pos_start + 2] != 'x' {\n            return String::from(\"\
    No\");\n        }\n    }\n    if file_name[dot_pos_start + 1] == '.' {\n     \
    \   if file_name[dot_pos_start + 2] != 'd' && file_name[dot_pos_start + 2] !=\
    \ 'a' && file_name[dot_pos_start + 2] != 'l' && file_name[dot_", "    let mut\
    \ file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ {\n        return ", "    let mut file_name = file_name.clone();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_start = dot_pos;\n    while dot_pos_start != dot_pos_end\
    \ {\n        let mut dot_pos_start = dot_pos_start;\n        if dot_pos_start\
    \ == String::npos {\n            return String::from(\"No\");\n        }\n   \
    \     if dot_pos_start > dot_pos_end {\n            return String::from(\"No\"\
    );\n        }\n        let mut dot_pos_start = dot_pos_start;\n        if dot_pos_start\
    \ > dot_pos_end {\n            return String::from(\"No\");\n        }\n     \
    \   let mut dot_pos_start = dot_pos_start;\n        if dot_pos_start > dot_pos_end\
    \ {\n            return String::from(\"No\");\n        }\n        let mut dot_pos_start\
    \ = dot_pos_start;\n        if dot_pos_start > dot_pos_end {\n            return\
    \ String::from(\"No\");\n        }\n        let mut dot_pos_start = dot_pos_start;\n\
    \        if dot_pos_start > dot_pos_end {\n            return String::from(\"\
    No\");\n        }\n        let mut dot_pos_start = dot_pos_start;\n        if\
    \ dot_pos_start > dot_pos_end {\n            return String::from(\"No\");\n  \
    \      }\n        let mut dot_pos_start = dot_pos_start;\n        if dot_pos_start\
    \ > dot_pos_end {\n            return String::from(\"No\");\n        }\n     \
    \   let mut dot_pos_start = dot_pos_start;\n        if dot_pos_start > dot_pos_end\
    \ {\n            return String::from(\"No\");\n        }\n        let mut dot_pos_start\
    \ = dot_pos_start;\n        if dot_pos_start > dot_pos_end {\n            return\
    \ String::from(\"No\");\n        }\n        let mut dot_pos_start = dot_pos_start;\n\
    \        if dot_pos_start > dot_pos_end {\n            return String::from(\"\
    No\");\n        }\n        let mut dot_pos_start = dot_pos_start;\n        if\
    \ dot_pos_start > dot_pos_end {\n            return String::from(\"No\");\n  \
    \      }\n        let mut dot_pos_start = dot_pos_start;\n        if dot_pos_start\
    \ > dot_pos_end {\n            return String::from(\"No\");\n        }\n     \
    \   let mut dot_pos_start = dot_pos_start;\n        if dot_pos_start > dot_pos_end\
    \ {\n            return String::from(\"No\");\n        }\n        let mut dot_pos_start\
    \ = dot_pos_start;\n", "    let mut file_name = file_name.clone();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String", "    if file_name.len() > 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"a\") || file_name.starts_with(\"\
    A\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    0\") || file_name.starts_with(\"9\") {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.starts_with(\".\") {\n        let mut dot_pos = file_name.find('.')\n\
    \        if dot_pos == String::npos {\n            return String::from(\"No\"\
    );\n        }\n        if dot_pos == 0 {\n            return String::from(\"No\"\
    );\n        }\n        if file_name[dot_pos - 1] != '.' {\n            return\
    \ String::from(\"No\");\n        }\n        let mut dot_pos_2 = file_name.find('.')\n\
    \        if dot_pos_2 == String::npos {\n            return String::from(\"No\"\
    );\n        }\n        if dot_pos_2 == 0 {\n            return String::from(\"\
    No\");\n        }\n        if file_name[dot_pos_2 - 1] != '.' {\n            return\
    \ String::from(\"No\");\n        }\n        if file_name[dot_pos_2 - 2] != '.'\
    \ {\n            return String::from(\"No\");\n        }\n        if file_name[dot_pos_2\
    \ - 3] != 'txt' {\n            return String::from(\"No\");\n        }\n     \
    \   if file_name[dot_pos_2 - 4] != 'exe' {\n            return String::from(\"\
    No\");\n        }\n        if file_name[dot_pos_2 - 5] != 'dll' {\n          \
    \  return String::from(\"No\");\n        }\n    }\n    return String::from(\"\
    Yes\");", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n    while dot_pos_end\
    \ < file_name.len() {\n        if file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end]\
    \ <= 'z' ||\n            file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end]\
    \ <= 'Z' ||\n            file_name[dot_pos_end] >= '0' && file_name[dot_pos_end]\
    \ <= '9' {\n            break;\n        }\n        dot_pos_end += 1;\n    }\n\
    \    if dot_pos_end == file_name.len() {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_start = dot_pos;\n    dot_pos_start -= 1;\n    while\
    \ dot_pos_start >= 0 {\n        if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start]\
    \ <= 'z' ||\n            file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' ||\n            file_name[dot_pos_start] >= '0' && file_name[dot_pos_start]\
    \ <= '9' {\n            break;\n        }\n        dot_pos_start -= 1;\n    }\n\
    \    if dot_pos_start == 0 {\n        return String::from(\"No\");\n    }\n  \
    \  if dot_pos_start < dot_pos_end {\n        return String::from(\"Yes\");\n \
    \   }\n    return String::from(\"No\");", "    let mut file_name_str = file_name.to_string();\n\
    \    file_name_str.truncate(3);\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0", "    let mut file_name = file_name.to_owned();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos +\
    \ 1;\n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_16 = file_name.find('.')\n    if ", "    let mut file_name\
    \ = file_name.to_string();\n    \n    // Remove all non-alphanumeric characters\
    \ from the file's name\n    file_name = file_name.chars().filter(|c| !c.is_alphanumeric()).collect::<String>();\n\
    \    \n    // Remove all non-alphanumeric characters from the beginning of the\
    \ file's name\n    file_name = file_name.chars().filter(|c| !c.is_alphanumeric()).collect::<String>();\n\
    \    \n    // Remove all non-alphanumeric characters from the end of the file's\
    \ name\n    file_name = file_name.chars().filter(|c| !c.is_alphanumeric()).collect::<String>();\n\
    \    \n    // Remove all non-alphanumeric characters from the beginning of the\
    \ substring before the dot\n    file_name = file_name.chars().filter(|c| !c.is_alphanumeric()).collect::<String>();\n\
    \    \n    // Remove all non-alphanumeric characters from the end of the substring\
    \ after the dot\n    file_name = file_name.chars().filter(|c| !c.is_alphanumeric()).collect::<String>();\n\
    \    \n    // Remove all non-alphanumeric characters from the beginning of the\
    \ substring before the dot\n    file_name = file_name.chars().filter(|c| !c.is_alphanumeric()).collect::<String>();\n\
    \    \n    // Remove all non-alphanumeric characters from the end of the substring\
    \ after the dot\n    file_name = file_name.chars().filter(|c| !c.is_alphanumeric()).collect::<String>();\n\
    \    \n    // Remove all non-alphanumeric characters from the beginning of the\
    \ substring before the dot\n    file_name = file_name.chars().filter(|c| !c.is_alphanumeric()).collect::<String>();\n\
    \    \n    // Remove all non-alphanumeric characters from the end of the substring\
    \ after the dot\n    file_name = file_name.chars().filter(|c| !c.is_alphanumeric()).collect::<String>();\n\
    \    \n    // Remove all non-alphanumeric characters from the beginning of the\
    \ substring before the dot\n    file_name = file_name.chars().filter(|c| !c.is_alphanumeric()).collect::<String>();\n\
    \    \n    // Remove all non-alphanumeric characters from the end of the substring\
    \ after the dot\n    file_name = file_name.chars().filter(|c| !c.is_alphanumeric()).collect::<String>();\n\
    \    \n    // Remove all non-alphanumeric characters from the beginning of the\
    \ substring before the dot\n    file_name = file_name.chars().filter(|c| !c.is_alphanumeric()).collect::<String>();\n\
    \    \n    // Remove all non-alphanumeric characters from the end of the substring\
    \ after the dot\n    file_name = file_name", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    while dot_pos_end < file_name.len() {\n        if file_name[dot_pos_end]\
    \ != '0' && file_name[dot_pos_end] != '9' {\n            return String::from(\"\
    No\");\n        }\n        dot_pos_end += 1;\n    }\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    while dot_pos_start < file_name.len() {\n        if file_name[dot_pos_start]\
    \ != 'a' && file_name[dot_pos_start] != 'z' {\n            return String::from(\"\
    No\");\n        }\n        dot_pos_start += 1;\n    }\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    while dot_pos_start < file_name.len() {\n        if file_name[dot_pos_start]\
    \ != 'A' && file_name[dot_pos_start] != 'Z' {\n            return String::from(\"\
    No\");\n        }\n        dot_pos_start += 1;\n    }\n    String::from(\"Yes\"\
    )", "    let mut file_name_str = file_name.to_string();\n    file_name_str.trim_left_matches('0');\n\
    \    file_name_str.trim_right_matches('9');\n    file_name_str.trim_left_matches('.');\n\
    \    file_name_str.trim_left_matches(\"\");\n    file_name_str.trim_left_matches(&\"\
    a..zA..Z\".to_string());\n    file_name_str", "    if file_name.chars().count()\
    \ > 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_pos =\
    \ file_name.rfind('.')\n        if dot_pos == String::npos {\n            String::from(\"\
    No\")\n        } else {\n            let mut dot_name = file_name.clone();\n \
    \           dot_name.truncate(dot_pos);\n            let mut dot_name_chars =\
    \ dot_name.chars();\n            let mut dot_name_chars_count = dot_name_chars.count();\n\
    \            let mut dot_name_chars_index = dot_name_chars.index();\n        \
    \    let mut dot_name_chars_index_count = dot_name_chars_index.count();\n    \
    \        let mut dot_name_chars_index_pos = dot_name_chars_index.position();\n\
    \            let mut dot_name_chars_index_pos_count = dot_name_chars_index_pos.count();\n\
    \            let mut dot_name_chars_index_pos_index = dot_name_chars_index_pos.index();\n\
    \            let mut dot_name_chars_index_pos_index_count = dot_name_chars_index_pos_index.count();\n\
    \            let mut dot_name_chars_index_pos_index_pos = dot_name_chars_index_pos_index.position();\n\
    \            let mut dot_name_chars_index_pos_index_pos_count = dot_name_chars_index_pos_index_pos.count();\n\
    \            let mut dot_name_chars_index_pos_index_pos_index = dot_name_chars_index_pos_index_pos.index();\n\
    \            let mut dot_name_chars_index_pos_index_pos_index_count = dot_name_chars_index_pos_index_pos_index.count();\n\
    \            let mut dot_name_chars_index_pos_index_pos_index_pos = dot_name_chars_index_pos_index_pos_index.position();\n\
    \            let mut dot_name_chars_index_pos_index_pos_index_pos_count = dot_name_chars_index_pos_index_pos_index_pos.count();\n\
    \            let mut dot_name_chars_index_pos_index_pos_index_pos_index = dot_name_chars_index_pos_index_pos_index_pos.index();\n\
    \            let mut dot_name_chars_index_pos_index_pos_index_pos_index_count\
    \ = dot_name_chars_index_pos_index_pos_index_pos_index.count();\n            let\
    \ mut dot_name_chars_index_pos_index_pos_index_pos_index_pos = dot_name_chars_index_pos_index_pos_index_pos_index.position();\n\
    \            let mut dot_name_chars_index_pos_index_pos_index_pos_index_pos_count\
    \ = dot_name_chars_index_pos_index_pos_index_pos_index_pos.count();\n        \
    \    let mut dot_name_chars_index_pos_index_pos_index_pos_index_pos_index = dot_name_chars_index_pos_index_pos_index_pos_index_pos_index.index();\n\
    \            let mut dot_name_chars_index_pos_index_pos_index_pos_index_pos_index_count\
    \ = ", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n    let mut dot_pos_start\
    \ = dot_pos;\n    dot_pos_start += 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    while dot_pos_start_letter < dot_pos_end {\n        let mut dot_pos_letter\
    \ = dot_pos_start_letter;\n        while dot_pos_letter < dot_pos_end {\n    \
    \        if file_name[dot_pos_letter] >= 'a' && file_name[dot_pos_letter] <= 'z'\
    \ {\n                dot_pos_letter += 1;\n            }\n            dot_pos_letter\
    \ += 1;\n        }\n        if dot_pos_letter < dot_pos_end {\n            if\
    \ file_name[dot_pos_letter] != 'a' && file_name[dot_pos_letter] != 'z' {\n   \
    \             return String::from(\"No\");\n            }\n            dot_pos_letter\
    \ += 1;\n        }\n        dot_pos_start_letter = dot_pos_letter;\n    }\n  \
    \  if dot_pos_start_letter < dot_pos_end {\n        if file_name[dot_pos_start_letter]\
    \ != 'a' && file_name[dot_pos_start_letter] != 'z' {\n            return String::from(\"\
    No\");\n        }\n    }\n    if dot_pos_start == dot_pos_end {\n        if file_name[dot_pos]\
    \ != 'a' && file_name[dot_pos] != 'z' {\n            return String::from(\"No\"\
    );\n        }\n    }\n    if dot_pos == 0 {\n        if file_name[dot_pos] !=\
    \ 'a' && file_name[dot_pos] != 'z' {\n            return String::from(\"No\");\n\
    \        }\n    }\n    if dot_pos == file_name.len() - 1 {\n        if file_name[dot_pos]\
    \ != 'a' && file_name[dot_pos] != 'z' {\n            return String::from(\"No\"\
    );\n        }\n    }\n    if file_name[dot_pos] == '.' {\n        if dot_pos ==\
    \ 0 {\n            if file_name[dot_pos] != 'a' && file_name[dot_pos] != 'z' {\n\
    \                return String::from(\"No\");\n            }\n        }\n    \
    \    if dot_pos == file_name.len() - 1 {\n            if file_name[dot_pos] !=\
    \ 'a' && file_name[dot_pos] != 'z' {\n                return String::from(\"No\"\
    );\n            }\n        }\n    }\n    if file_name[dot_pos] == '.' {\n    \
    \    if dot_pos == 0 {\n            if file_name[dot_pos] != 'a' && file_name[dot_pos]\
    \ != 'z' {", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let\
    \ mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_", "    let mut file_name_len\
    \ = file_name.len();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let\
    \ mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter2 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter2 = dot_pos_end;\n    let mut dot_pos_start_letter3 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter3 = dot_pos_end;\n    let mut dot_pos_start_letter4\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter4 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter5 = dot_pos_start;\n    let mut dot_pos_end_letter5 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter6 = dot_pos_start;\n    let mut dot_pos_end_letter6\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter7 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter7 = dot_pos_end;\n    let mut dot_pos_start_letter8 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter8 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter9 = dot_pos_start;\n    let mut dot_pos_end_letter9 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter10 = dot_pos_start;\n    let mut dot_pos_end_letter10\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter11 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter11 = dot_pos_end;\n    let mut dot_pos_start_letter12\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter12 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter13 = dot_pos_start;\n    let mut dot_pos_end_letter13 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter14 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter14 = dot_pos_end;\n    let mut dot_pos_start_letter15 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter15 = dot_pos_end;\n    let mut dot_pos_start_letter16\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter16 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter17 = dot_pos_start;\n    let mut dot_pos_end_letter17 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter18 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter18 = dot_pos_end;\n    let mut dot_pos_start_letter", "  \
    \  let mut file_name_chars = file_name.chars();\n    let mut dot_pos = file_name_chars.find_first_of('.');\n\
    \    let mut dot_pos_end = file_name_chars.find_first_not_of('.', dot_pos);\n\
    \    let mut dot_pos_start = dot_pos;\n    let mut dot_pos_start_end = dot_pos_end;\n\
    \    let mut dot_pos_start_end_valid = false;\n    let mut dot_pos_start_end_valid_chars\
    \ = String::new();\n    let mut dot_pos_start_end_valid_chars_len = 0;\n    let\
    \ mut dot_pos_start_end_valid_chars_len2 = 0;\n    let mut dot_pos_start_end_valid_chars_len3\
    \ = 0;\n    let mut dot_pos_start_end_valid_chars_len4 = 0;\n    let mut dot_pos_start_end_valid_chars_len5\
    \ = 0;\n    let mut dot_pos_start_end_valid_chars_len6 = 0;\n    let mut dot_pos_start_end_valid_chars_len7\
    \ = 0;\n    let mut dot_pos_start_end_valid_chars_len8 = 0;\n    let mut dot_pos_start_end_valid_chars_len9\
    \ = 0;\n    let mut dot_pos_start_end_valid_chars_len10 = 0;\n    let mut dot_pos_start_end_valid_chars_len11\
    \ = 0;\n    let mut dot_pos_start_end_valid_chars_len12 = 0;\n    let mut dot_pos_start_end_valid_chars_len13\
    \ = 0;\n    let mut dot_pos_start_end_valid_chars_len14 = 0;\n    let mut dot_pos_start_end_valid_chars_len15\
    \ = 0;\n    let mut dot_pos_start_end_valid_chars_len16 = 0;\n    let mut dot_pos_start_end_valid_chars_len17\
    \ = 0;\n    let mut dot_pos_start_end_valid_chars_len18 = 0;\n    let mut dot_pos_start_end_valid_chars_len19\
    \ = 0;\n    let mut dot_pos_start_end_valid_chars_len20 = 0;\n    let mut dot_pos_start_end_valid_chars_len21\
    \ = 0;\n    let mut dot_pos_start_end_valid_chars_len22 = 0;\n    let mut dot_pos_start_end_valid_chars_len23\
    \ = 0;\n    let mut dot_pos_start_end_valid_chars_len24 = 0;\n    let mut dot_pos_start_end_valid_chars_len25\
    \ = 0;\n    let mut dot_pos_start_end_valid_chars_len26 = 0;\n    let mut dot_pos_start_end_valid_chars_len27\
    \ = 0;\n    let mut dot_pos_start_end_valid_chars_len28 = 0;\n    let mut dot_pos_start_end_valid_chars_len29\
    \ = 0;\n    let mut dot_pos_start_end_valid_chars_len30 = 0;\n    let mut dot_pos_start_end_valid_chars_len31\
    \ = 0;\n    let mut dot_pos_start_end_valid_chars_len32 = 0;\n    let mut dot_pos_start_end_valid_",
  "    let mut counter = 0;\n    let mut first_letter = String::new();\n    let mut\
    \ last_letter = String::new();\n    let mut dot_position = String::new();\n  \
    \  let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_position = String::new();\n\
    \    let mut dot_position = String::new();\n    let mut dot_", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos { \n \
    \       return String::from(\"No\");\n    }\n    if dot_pos_end > dot_pos {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1] !=\
    \ String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n       \
    \ return String::from(\"No\");\n    }\n    if file_name[dot_pos_end - 1] != String::from('0')\
    \ && file_name[dot_pos_end - 1] != String::from('9') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 2] != String::from('a') && file_name[dot_pos\
    \ - 2] != String::from('z') && file_name[dot_pos - 2] != String::from('A') &&\
    \ file_name[dot_pos - 2] != String::from('Z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end - 2] != String::from('a') && file_name[dot_pos_end\
    \ - 2] != String::from('z') && file_name[dot_pos_end - 2] != String::from('A')\
    \ && file_name[dot_pos_end - 2] != String::from('Z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 3] != String::from('txt') && file_name[dot_pos\
    \ - 3] != String::from('exe') && file_name[dot_pos - 3] != String::from('dll')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 3] != String::from('txt') && file_name[dot_pos_end - 3] != String::from('exe')\
    \ && file_name[dot_pos_end - 3] != String::from('dll') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 4] != String::from('txt') && file_name[dot_pos\
    \ - 4] != String::from('exe') && file_name[dot_pos - 4] != String::from('dll')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 4] != String::from('txt') && file_name[dot_pos_end - 4] != String::from('exe')\
    \ && file_name[dot_pos_end - 4] != String::from('dll') {\n        return String::from(\"\
    No\");\n    }\n    if file_name", "    if file_name.len() > 3 {\n        String::from(\"\
    No\")\n    } else {\n        let mut dot_index = file_name.find('.')\n       \
    \ let mut dot_index = dot_index as usize;\n        let mut first_letter = String::from(\"\
    a\");\n        let mut last_letter = String::from(\"z\");\n        let mut first_letter_upper\
    \ = String::from(\"A\");\n        let mut last_letter_upper = String::from(\"\
    Z\");\n        let mut dot_index = dot_index as usize;\n        let mut dot_index\
    \ = dot_index as usize;\n        let mut dot_index = dot_index as usize;\n   \
    \     let mut dot_index = dot_index as usize;\n        let mut dot_index = dot_index\
    \ as usize;\n        let mut dot_index = dot_index as usize;\n        let mut\
    \ dot_index = dot_index as usize;\n        let mut dot_index = dot_index as usize;\n\
    \        let mut dot_index = dot_index as usize;\n        let mut dot_index =\
    \ dot_index as usize;\n        let mut dot_index = dot_index as usize;\n     \
    \   let mut dot_index = dot_index as usize;\n        let mut dot_index = dot_index\
    \ as usize;\n        let mut dot_index = dot_index as usize;\n        let mut\
    \ dot_index = dot_index as usize;\n        let mut dot_index = dot_index as usize;\n\
    \        let mut dot_index = dot_index as usize;\n        let mut dot_index =\
    \ dot_index as usize;\n        let mut dot_index = dot_index as usize;\n     \
    \   let mut dot_index = dot_index as usize;\n        let mut dot_index = dot_index\
    \ as usize;\n        let mut dot_index = dot_index as usize;\n        let mut\
    \ dot_index = dot_index as usize;\n        let mut dot_index = dot_index as usize;\n\
    \        let mut dot_index = dot_index as usize;\n        let mut dot_index =\
    \ dot_index as usize;\n        let mut dot_index = dot_index as usize;\n     \
    \   let mut dot_index = dot_index as usize;\n        let mut dot_index = dot_index\
    \ as usize;\n        let mut dot_index = dot_index as usize;\n        let mut\
    \ dot_index = dot_index as usize;\n        let mut dot_index = dot_index as usize;\n\
    \        let mut dot_index = dot_index as usize;\n        let mut dot_index =\
    \ dot_index as usize;\n        let mut dot_index = dot_index as usize;\n     \
    \   let mut dot_index = dot_index as usize;\n        let mut dot_index = dot_index\
    \ as usize;\n        let mut dot_index = dot_index as usize;\n        let mu",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end =\
    \ file_name.find('.')\n    if dot_pos_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end\
    \ = file_name.find('.')\n    if dot_pos_end == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n \
    \   let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return ", "    if file_name.chars().count() > 3 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 0 {\n    \
    \    return String::from(\"No\");\n    }\n    if file_name.chars().count() ==\
    \ 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_ascii_letter() {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_ascii_upper()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_ascii_lower() {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_digit()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_alnum() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_punct()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_whitespace() {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_control()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_xdigit() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_alnum()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_punct() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_whitespace()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_control() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_xdigit()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_alnum() {\n        return String::from(\"",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_letter = dot_pos;\n    let mut dot_pos_letter2\
    \ = dot_pos;\n    let mut dot_pos_letter3 = dot_pos;\n    let mut dot_pos_letter4\
    \ = dot_pos;\n    let mut dot_pos_letter5 = dot_pos;\n    let mut dot_pos_letter6\
    \ = dot_pos;\n    let mut dot_pos_letter7 = dot_pos;\n    let mut dot_pos_letter8\
    \ = dot_pos;\n    let mut dot_pos_letter9 = dot_pos;\n    let mut dot_pos_letter10\
    \ = dot_pos;\n    let mut dot_pos_letter11 = dot_pos;\n    let mut dot_pos_letter12\
    \ = dot_pos;\n    let mut dot_pos_letter13 = dot_pos;\n    let mut dot_pos_letter14\
    \ = dot_pos;\n    let mut dot_pos_letter15 = dot_pos;\n    let mut dot_pos_letter16\
    \ = dot_pos;\n    let mut dot_pos_letter17 = dot_pos;\n    let mut dot_pos_letter18\
    \ = dot_pos;\n    let mut dot_pos_letter19 = dot_pos;\n    let mut dot_pos_letter20\
    \ = dot_pos;\n    let mut dot_pos_letter21 = dot_pos;\n    let mut dot_pos_letter22\
    \ = dot_pos;\n    let mut dot_pos_letter23 = dot_pos;\n    let mut dot_pos_letter24\
    \ = dot_pos;\n    let mut dot_pos_letter25 = dot_pos;\n    let mut dot_pos_letter26\
    \ = dot_pos;\n    let mut dot_pos_letter27 = dot_pos;\n    let mut dot_pos_letter28\
    \ = dot_pos;\n    let mut dot_pos_letter29 = dot_pos;\n    let mut dot_pos_letter30\
    \ = dot_pos;\n    let mut dot_pos_letter31 = dot_pos;\n    let mut dot_pos_letter32\
    \ = dot_pos;\n    let mut dot_pos_letter33 = dot_pos;\n    let mut dot_pos_letter34\
    \ = dot_pos;\n    let mut dot_pos_letter35 = dot_pos;\n    let mut dot_pos_letter36\
    \ = dot_pos;\n    let mut dot_pos_letter37 = dot_", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_start = dot_pos;\n    while dot_pos_start != dot_pos_end\
    \ {\n        let mut dot_pos_start = dot_pos_start;\n        let mut dot_pos_end\
    \ = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n        let\
    \ mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let ", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { \n        return String::from(\"No\");\n    }\n  \
    \  let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = ", "    let mut file_name\
    \ : String = file_name;\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let\
    \ mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter2 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter2 = dot_pos_end;\n    let mut dot_pos_start_letter3 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter3 = dot_pos_end;\n    let mut dot_pos_start_letter4\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter4 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter5 = dot_pos_start;\n    let mut dot_pos_end_letter5 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter6 = dot_pos_start;\n    let mut dot_pos_end_letter6\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter7 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter7 = dot_pos_end;\n    let mut dot_pos_start_letter8 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter8 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter9 = dot_pos_start;\n    let mut dot_pos_end_letter9 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter10 = dot_pos_start;\n    let mut dot_pos_end_letter10\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter11 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter11 = dot_pos_end;\n    let mut dot_pos_start_letter12\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter12 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter13 = dot_pos_start;\n    let mut dot_pos_end_letter13 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter14 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter14 = dot_pos_end;\n    let mut dot_pos_start_letter15 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter15 = dot_pos_end;\n    let mut dot_pos_start_letter16\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter16 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter17 = dot_pos_start;\n    let mut dot_pos_end_letter17 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter18 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter18 = dot_pos_end;\n    let mut dot_pos_start_letter19", " \
    \   if file_name.len() > 3 {\n        String::from(\"No\")\n    } else {\n   \
    \     let mut dot_pos = file_name.find('.')\n        if dot_pos == String::npos\
    \ {\n            String::from(\"No\")\n        } else {\n            let mut first_letter\
    \ = file_name.chars().next().unwrap();\n            if first_letter < 'a' || first_letter\
    \ > 'z' {\n                String::from(\"No\")\n            } else if first_letter\
    \ < 'A' || first_letter > 'Z' {\n                String::from(\"No\")\n      \
    \      } else {\n                let mut dot_pos = file_name.find('.')\n     \
    \           if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_pos_2 = file_name.find('.')\n\
    \                    if dot_pos_2 == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_pos_3\
    \ = file_name.find('.')\n                        if dot_pos_3 == String::npos\
    \ {\n                            String::from(\"No\")\n                      \
    \  } else {\n                            let mut dot_pos_4 = file_name.find('.')\n\
    \                            if dot_pos_4 == String::npos {\n                \
    \                String::from(\"No\")\n                            } else {\n\
    \                                let mut dot_pos_5 = file_name.find('.')\n   \
    \                             if dot_pos_5 == String::npos {\n               \
    \                     String::from(\"No\")\n                                }\
    \ else {\n                                    let mut dot_pos_6 = file_name.find('.')\n\
    \                                    if dot_pos_6 == String::npos {\n        \
    \                                String::from(\"No\")\n                      \
    \              } else {\n                                        let mut dot_pos_7\
    \ = file_name.find('.')\n                                        if dot_pos_7\
    \ == String::npos {\n                                            String::from(\"\
    No\")\n                                        } else {\n                    \
    \                        let mut dot_pos_8 = file_name.find('.')\n           \
    \                                 if dot_pos_8 == String::npos {\n           \
    \                                     String::from(\"No\")\n                 \
    \                           } else {\n                                       \
    \         let mut dot_pos_9 = file_name.find('.')\n                          \
    \                      if dot_pos_9 == String::npos {\n                      \
    \                              String::from(\"No\")\n                        \
    \                        } else {\n                                          \
    \          let mut dot_pos_10 = file_name.find('.')\n                        \
    \                            if dot_pos_10 == String::npos {\n               \
    \                                         String::from(\"No\")\n             \
    \                                       } else {\n                           \
    \                             let mut dot_pos_11 = file_name.find('.')\n     \
    \                                                   if dot_pos_11 == String::npos\
    \ {\n                                                            String::from(\"\
    No\")\n                                                        } else {\n    \
    \                                                        let mut dot_pos_12 =\
    \ file_name.find('.')\n                                                      \
    \      if dot_pos_12 == String::npos {\n                                     \
    \                           String", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::", "    let mut file_name_components = file_name.split_ascii_lowercase();\n\
    \    if file_name_components.len() > 3 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name_components.len() == 3 {\n        if file_name_components[0].is_empty()\
    \ {\n            return String::from(\"No\");\n        }\n        if file_name_components[1]\
    \ != '.' {\n            return String::from(\"No\");\n        }\n        if file_name_components[0][0]\
    \ != 'a' && file_name_components[0][0] != 'A' ||\n            file_name_components[0][1]\
    \ != 'b' && file_name_components[0][1] != 'B' ||\n            file_name_components[0][2]\
    \ != 'c' && file_name_components[0][2] != 'C' ||\n            file_name_components[0][3]\
    \ != 'd' && file_name_components[0][3] != 'D' ||\n            file_name_components[0][4]\
    \ != 'e' && file_name_components[0][4] != 'E' ||\n            file_name_components[0][5]\
    \ != 'f' && file_name_components[0][5] != 'F' ||\n            file_name_components[0][6]\
    \ != 'g' && file_name_components[0][6] != 'G' ||\n            file_name_components[0][7]\
    \ != 'h' && file_name_components[0][7] != 'H' ||\n            file_name_components[0][8]\
    \ != 'i' && file_name_components[0][8] != 'I' ||\n            file_name_components[0][9]\
    \ != 'j' && file_name_components[0][9] != 'J' ||\n            file_name_components[0][10]\
    \ != 'k' && file_name_components[0][10] != 'K' ||\n            file_name_components[0][11]\
    \ != 'l' && file_name_components[0][11] != 'L' ||\n            file_name_components[0][12]\
    \ != 'm' && file_name_components[0][12] != 'M' ||\n            file_name_components[0][13]\
    \ != 'n' && file_name_components[0][13] != 'N' ||\n            file_name_components[0][14]\
    \ != 'o' && file_name_components[0][14] != 'O' ||\n            file_name_components[0][15]\
    \ != 'p' && file_name_components[0][15] != 'P' ||\n            file_name_components[0][16]\
    \ != 'q' && file_name_components[0][16] != 'Q' ||\n            file_name_components[0][17]\
    \ != 'r' && file_name_components[0][17] != 'R' ||\n            file_name_components[0][18]\
    \ != 's' && file_name_components[0][18] != 'S' ||\n            file_name_components[0][19]\
    \ != 't' && file_name_components[0][19] != 'T' ||\n            file_name_components[0]",
  "    let mut file_name : String = file_name.to_string();\n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_1 = file_name.find('.')\n    if dot_pos_1 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_2\
    \ = file_name.find('.')\n    if dot_pos_2 == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_4\
    \ = file_name.find('.')\n    if dot_pos_4 == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_6\
    \ = file_name.find('.')\n    if dot_pos_6 == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_8\
    \ = file_name.find('.')\n    if dot_pos_8 == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_10\
    \ = file_name.find('.')\n    if dot_pos_10 == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos { \n", "    if file_name.len() > 3 {\n    \
    \    return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    if dot_pos == 0 {\n        return String::from(\"No\");\n    }\n    let mut\
    \ first_char = file_name[0];\n    if first_char < 'a' || first_char > 'z' {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1] !=\
    \ '.' {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    if dot_pos == 0 {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos == 0 {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos == 0 {\n    \
    \    return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    if dot_pos == 0 {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos == 0 {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos == 0 {\n    \
    \    return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    if dot_pos == 0 {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos == 0 {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos +\
    \ 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ - 1;\n    let mut dot_pos_start = dot_pos;\n    while dot_pos_start != dot_pos_end\
    \ {\n        let mut dot_pos_start = dot_pos_start;\n        let mut dot_pos_end\
    \ = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n        let\
    \ mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let ", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.contains(\"\
    .\") {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_punctuation()) {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.chars().any(|c| !c.is_ascii_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_symbol()) {\n    \
    \    return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_punctuation()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_digit()) {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_symbol())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_punctuation()) {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_digit()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_symbol()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.", "    let mut file_name = file_name.to_string();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let\
    \ mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter = String::new();\n\
    \    let mut dot_pos_end_letter = String::new();\n    let mut dot_pos_start_letter2\
    \ = String::new();\n    let mut dot_pos_end_letter2 = String::new();\n    let\
    \ mut dot_pos_start_letter3 = String::new();\n    let mut dot_pos_end_letter3\
    \ = String::new();\n    let mut dot_pos_start_letter4 = String::new();\n    let\
    \ mut dot_pos_end_letter4 = String::new();\n    let mut dot_pos_start_letter5\
    \ = String::new();\n    let mut dot_pos_end_letter5 = String::new();\n    let\
    \ mut dot_pos_start_letter6 = String::new();\n    let mut dot_pos_end_letter6\
    \ = String::new();\n    let mut dot_pos_start_letter7 = String::new();\n    let\
    \ mut dot_pos_end_letter7 = String::new();\n    let mut dot_pos_start_letter8\
    \ = String::new();\n    let mut dot_pos_end_letter8 = String::new();\n    let\
    \ mut dot_pos_start_letter9 = String::new();\n    let mut dot_pos_end_letter9\
    \ = String::new();\n    let mut dot_pos_start_letter10 = String::new();\n    let\
    \ mut dot_pos_end_letter10 = String::new();\n    let mut dot_pos_start_letter11\
    \ = String::new();\n    let mut dot_pos_end_letter11 = String::new();\n    let\
    \ mut dot_pos_start_letter12 = String::new();\n    let mut dot_pos_end_letter12\
    \ = String::new();\n    let mut dot_pos_start_letter13 = String::new();\n    let\
    \ mut dot_pos_end_letter13 = String::new();\n    let mut dot_pos_start_letter14\
    \ = String::new();\n    let mut dot_pos_end_letter14 = String::new();\n    let\
    \ mut dot_pos_start_letter15 = String::new();\n    let mut dot_pos_end_letter15\
    \ = String::new();\n    let mut dot_pos_start_letter16 = String::new();\n    let\
    \ mut dot_pos_end_letter16 = String::new();\n    let mut dot_pos_start_letter17\
    \ = String::new();\n    let mut dot_pos_end_letter17 = String::new();\n", "  \
    \  let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.len() < 3 {\n        return String::from(\"No\");\n    }\n \
    \   if file_name.chars().any(|c| !c.is_ascii_letter()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != 'a'\
    \ && c != 'z') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'A' && c != 'Z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '0'\
    \ && c != '9') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c !=\
    \ '0' && c != '9') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' && c != 'z' || c != 'A' && c != 'Z' || c !=\
    \ '0' && c != '9' || c != '.') {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.chars().any(|c| !c.is_ascii_letter() || c != 'a' && c != 'z'\
    \ || c != 'A' && c != 'Z' || c != '0' && c != '9' || c != '.' || c != 'txt' ||\
    \ c != 'exe' || c != 'dll') {\n        return String::from(\"No\");\n    }\n \
    \   return String::from(\"Yes\");", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    let mut dot_pos_start = dot_pos;\n    while dot_pos_start != String::npos\
    \ && dot_pos_start < dot_pos_end {\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        while dot_pos_end != String::npos && dot_pos_end < dot_pos_end {\n  \
    \          let mut dot_pos_end = dot_pos_end;\n            let mut dot_pos_end\
    \ = dot_pos_end;\n            let mut dot_pos_end = dot_pos_end;\n        }\n\
    \    }\n    if dot_pos_start == String::npos {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start > dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_start = dot_pos_start;\n    let mut dot_pos_end\
    \ = dot_pos_end;\n    let mut dot_pos_end = dot_pos_end;\n    while dot_pos_end\
    \ != String::npos && dot_pos_end < dot_pos_end {\n        let mut dot_pos_end\
    \ = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n        let mut\
    \ dot_pos_end = dot_pos_end;\n    }\n    if dot_pos_start == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start > dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_end\
    \ = dot_pos_end;\n    while dot_pos_end != String::npos && dot_pos_end < dot_pos_end\
    \ {\n        let mut dot_pos_end = dot_pos_end;\n        let mut dot_pos_end =\
    \ dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n    }\n    if dot_pos_start\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    if dot_pos_end\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ > dot_pos_end {\n        return String::from(\"No\");\n    }\n    let mut ",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end =\
    \ file_name.find('.')\n    if dot_pos_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end\
    \ = file_name.find('.')\n    if dot_pos_end == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n \
    \   let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String", "    let mut file_name_len = file_name.len();\n \
    \   let mut dot_pos = file_name.rfind('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    if file_name_len == 0 {\n  \
    \      return String::from(\"No\");\n    }\n    if file_name_len > 3 {\n     \
    \   return String::from(\"No\");\n    }\n    let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.rfind('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_len = file_name[dot_pos+1..].chars().next().unwrap();\n\
    \    if dot_len != String::from(\"txt,exe,dll\") {\n        return String::from(\"\
    No\");\n    }\n    String::from(\"Yes\")", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    while dot_pos_end != String::npos && \n        file_name[dot_pos_end] !=\
    \ '.' && \n        file_name[dot_pos_end] != '0' && \n        file_name[dot_pos_end]\
    \ != '9' {\n        dot_pos_end++;\n    }\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_end == dot_pos\
    \ + 1 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] != String::from('0') && \n        file_name[dot_pos - 1] != String::from('9')\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos == 0 {\n    \
    \    return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_end {\n  \
    \      return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1] != String::from('0')\
    \ && \n        file_name[dot_pos - 1] != String::from('9') && \n        file_name[dot_pos\
    \ - 1] != String::from('a') && \n        file_name[dot_pos - 1] != String::from('A')\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos == dot_pos_end\
    \ + 1 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] != String::from('0') && \n        file_name[dot_pos_end - 1] != String::from('9')\
    \ && \n        file_name[dot_pos_end - 1] != String::from('a') && \n        file_name[dot_pos_end\
    \ - 1] != String::from('A') {\n        return String::from(\"No\");\n    }\n \
    \   if dot_pos_end == dot_pos_end - 1 && \n        file_name[dot_pos_end - 1]\
    \ != String::from('0') && \n        file_name[dot_pos_end - 1] != String::from('9')\
    \ && \n        file_name[dot_pos_end - 1] != String::from('a') && \n        file_name[dot_pos_end\
    \ - 1] != String::from('A') {\n        return String::from(\"No\");\n    }\n \
    \   if dot_pos_end == dot_pos_end - 1 && \n        file_name[dot_pos_end - 1]\
    \ != String::from('0') && \n        file_name[dot_pos_end - 1] != String::from('9')\
    \ && \n        file_name[dot_pos_end - 1] != String", "    let mut file_name =\
    \ file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if\
    \ dot_pos_end == String::npos { \n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos;\n\
    \    while dot_pos_start != dot_pos_end {\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            if file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' {\n                dot_pos_start++;\n\
    \            } else {\n                return String::from(\"No\");\n        \
    \    }\n        } else {\n            return String::from(\"No\");\n        }\n\
    \    }\n    if dot_pos_start == dot_pos {\n        return String::from(\"No\"\
    );\n    }\n    if dot_pos == dot_pos_end {\n        return String::from(\"Yes\"\
    );\n    }\n    if file_name[dot_pos] != '0' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos+1] != '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos+2] != '0' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos+3] != '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos+4] != '0' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos+5] != '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos+6] != '0' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos+7] != '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos+8] != '0' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos+9] != '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos+10] != '0' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos+11] != '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos+12] != '0' {\n        return String::from(\"\
    No\");\n", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n\
    \    \n    while dot_pos_end < file_name.len() {\n        let mut dot_pos_start\
    \ = dot_pos;\n        dot_pos_start += 1;\n        \n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        \n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        \n        if file_name[dot_pos_start]\
    \ == '.' {\n            break;\n        }\n        \n        if file_name[dot_pos_start]\
    \ == '0' {\n            dot_pos_start += 1;\n        }\n        \n        if file_name[dot_pos_start]\
    \ >= '9' {\n            return String::from(\"No\");\n        }\n    }\n    \n\
    \    if dot_pos_end == file_name.len() {\n        return String::from(\"No\");\n\
    \    }\n    \n    if file_name[dot_pos_end - 1] == '.' {\n        return String::from(\"\
    No\");\n    }\n    \n    if file_name[dot_pos_end - 1] >= 'a' && file_name[dot_pos_end\
    \ - 1] <= 'z' {\n        return String::from(\"No\");\n    }\n    \n    if file_name[dot_pos_end\
    \ - 1] >= 'A' && file_name[dot_pos_end - 1] <= 'Z' {\n        return String::from(\"\
    No\");\n    }\n    \n    if file_name[dot_pos_end - 1] == '0' {\n        return\
    \ String::from(\"No\");\n    }\n    \n    if file_name[dot_pos_end - 1] >= '9'\
    \ {\n        return String::from(\"No\");\n    }\n    \n    return String::from(\"\
    Yes\");", "    if file_name.len() < 3 {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1]\
    \ != String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n    \
    \    return String::from(\"No\");\n    }\n    let mut first_letter = file_name.chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().skip(dot_pos).any(|c| c != '.') {\n  \
    \      return String::from(\"No\");\n    }\n    if file_name.chars().skip(dot_pos\
    \ + 1).any(|c| c != '.' || c != 'txt' || c != 'exe' || c != 'dll') {\n       \
    \ return String::from(\"No\");\n    }\n    String::from(\"Yes\")", "    let mut\
    \ file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { \n        return String::from(\"No\");\n    }\n  \
    \  let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_2 = dot_pos_2 + 1;\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_3 = dot_pos_3 + 1;\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_4 = dot_pos_4 + 1;\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_5 = dot_pos_5 + 1;\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_6 = dot_pos_6 + 1;\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_7 = dot_pos_7 + 1;\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_8 = dot_pos_8 + 1;\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_9 = dot_pos_9 + 1;\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_10 = dot_pos_10 + 1;\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_11 = dot_pos_11 + 1;\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut ", "    let mut file_name = file_name.clone();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos {\n        return ", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let\
    \ mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter2 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter2 = dot_pos_end;\n    let mut dot_pos_start_letter3 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter3 = dot_pos_end;\n    let mut dot_pos_start_letter4\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter4 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter5 = dot_pos_start;\n    let mut dot_pos_end_letter5 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter6 = dot_pos_start;\n    let mut dot_pos_end_letter6\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter7 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter7 = dot_pos_end;\n    let mut dot_pos_start_letter8 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter8 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter9 = dot_pos_start;\n    let mut dot_pos_end_letter9 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter10 = dot_pos_start;\n    let mut dot_pos_end_letter10\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter11 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter11 = dot_pos_end;\n    let mut dot_pos_start_letter12\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter12 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter13 = dot_pos_start;\n    let mut dot_pos_end_letter13 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter14 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter14 = dot_pos_end;\n    let mut dot_pos_start_letter15 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter15 = dot_pos_end;\n    let mut dot_pos_start_letter16\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter16 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter17 = dot_pos_start;\n    let mut dot_pos_end_letter17 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter18 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter18 = dot_pos_end;\n    let mut dot_pos_start_letter19 = ",
  "    if file_name.len() > 3 {\n        String::from(\"No\")\n    } else {\n    \
    \    let mut dot_index = file_name.find('.')\n        if dot_index == String::npos\
    \ {\n            String::from(\"No\")\n        } else {\n            let mut first_letter\
    \ = file_name[..dot_index].chars().next().unwrap();\n            if first_letter\
    \ < 'a' || first_letter > 'z' {\n                String::from(\"No\")\n      \
    \      } else {\n                let mut dot_index = file_name.find('.')\n   \
    \             if dot_index == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_index];\n\
    \                    if dot_name.chars().any(|c| c != 'txt' && c != 'exe' && c\
    \ != 'dll') {\n                        String::from(\"No\")\n                \
    \    } else {\n                        String::from(\"Yes\")\n               \
    \     }\n                }\n            }\n        }\n    }", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.len() <\
    \ 3 {\n        return String::from(\"Yes\");\n    }\n    if file_name.contains(\"\
    .\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    a\") || file_name.starts_with(\"A\") || file_name.starts_with(\"0\") || file_name.starts_with(\"\
    9\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.starts_with(\"\
    .\") {\n        let mut dot_index = file_name.rfind('.')\n        if dot_index\
    \ == String::npos {\n            return String::from(\"No\");\n        }\n   \
    \     if dot_index == 0 {\n            return String::from(\"Yes\");\n       \
    \ }\n        let dot_string = file_name[dot_index..dot_index+3];\n        if dot_string\
    \ != \"txt\" && dot_string != \"exe\" && dot_string != \"dll\" {\n           \
    \ return String::from(\"No\");\n        }\n    }\n    return String::from(\"Yes\"\
    );", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_end = dot_pos;\n    dot_pos_end += 1;\n    while dot_pos_end\
    \ < file_name.len() {\n        let mut dot_pos_start = dot_pos;\n        dot_pos_start\
    \ += 1;\n        if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start]\
    \ <= 'z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= '0' && file_name[dot_pos_start]\
    \ <= '9' {\n            dot_pos_start += 1;\n        }\n        if dot_pos_start\
    \ == dot_pos_end {\n            break;\n        }\n    }\n    if dot_pos_start\
    \ == dot_pos {\n        return String::from(\"No\");\n    }\n    if dot_pos ==\
    \ dot_pos_end {\n        return String::from(\"Yes\");\n    }\n    if dot_pos\
    \ > dot_pos_end {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos]\
    \ != 'txt' && file_name[dot_pos] != 'exe' && file_name[dot_pos] != 'dll' {\n \
    \       return String::from(\"No\");\n    }\n    return String::from(\"Yes\");",
  "    if file_name.chars().count() > 3 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().count() == 0 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 3 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 4 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 5 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 6 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 7 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 8 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 9 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 10 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 11 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 12 {\n        if file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ != 'a' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.chars().count() == 13 {\n        if file_name.chars().first().unwrap",
  "    let mut file_name_len = file_name.len();\n    let mut dot_pos = file_name.rfind('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    \n    let mut dot_pos_end = dot_pos + 1;\n    while dot_pos_end < file_name_len\
    \ {\n        if file_name[dot_pos_end] != '\\0' {\n            break;\n      \
    \  }\n        dot_pos_end += 1;\n    }\n    \n    if dot_pos_end == file_name_len\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_start\
    \ = dot_pos;\n    while dot_pos_start > 0 && file_name[dot_pos_start - 1] >= 'a'\
    \ && file_name[dot_pos_start - 1] <= 'z' {\n        dot_pos_start -= 1;\n    }\n\
    \    \n    let mut dot_pos_end = dot_pos;\n    while dot_pos_end < file_name_len\
    \ && file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z' {\n      \
    \  dot_pos_end += 1;\n    }\n    \n    if dot_pos_start == dot_pos_end {\n   \
    \     return String::from(\"No\");\n    }\n    \n    if dot_pos_start == dot_pos_end\
    \ + 1 {\n        return String::from(\"No\");\n    }\n    \n    if file_name[dot_pos_start\
    \ - 1] != '.' {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_end\
    \ == dot_pos_start + 1 {\n        return String::from(\"No\");\n    }\n    \n\
    \    if file_name[dot_pos_end - 1] != '.' {\n        return String::from(\"No\"\
    );\n    }\n    \n    if dot_pos_end == dot_pos_start + 2 {\n        return String::from(\"\
    No\");\n    }\n    \n    if file_name[dot_pos_end - 2] != '.' {\n        return\
    \ String::from(\"No\");\n    }\n    \n    if dot_pos_end == dot_pos_start + 3\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if file_name[dot_pos_end\
    \ - 3] != '\\0' {\n        return String::from(\"No\");\n    }\n    \n    return\
    \ String::from(\"Yes\");", "    if file_name.len() < 3 {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut first_letter = file_name.chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() > 2 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 3 {\n        return String::from(\"\
    Yes\");\n    }\n    return String::from(\"No\");", "    if file_name.len() > 3\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.contains(\"\
    .\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    a\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    A\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    0\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    9\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    _\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    $\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    %\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    *\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    (\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    )\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    ~\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    %\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    @\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    $\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    %\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    ^\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    &\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    *\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    (\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    )\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    ~\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    %\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    @\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    $\") {\n        return String::from(\"No\");", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        let\
    \ mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ != '0' && file_name[dot_pos_start] != '9' {\n            return String::from(\"\
    No\");\n        }\n        dot_pos_end += 1;\n        if dot_pos_end == file_name.len()\
    \ {\n            return String::from(\"No\");\n        }\n    }\n    return String::from(\"\
    Yes\");", "    let mut file_name_chars = file_name.chars();\n    let mut dot_pos\
    \ = file_name_chars.find_first_of(\".\");\n    let mut dot_pos_end = file_name_chars.find_first_not_of(\"\
    .\", dot_pos);\n    let mut dot_pos_start = dot_pos;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end_end = dot_pos_start_end;\n   \
    \ let mut dot_pos_start_end_end_end = dot_pos_start_end_end;\n    let mut dot_pos_start_end_end_end_end\
    \ = dot_pos_start_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end;\n    let mut\
    \ dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end;\n \
    \   let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_", "    if file_name.len()\
    \ > 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_index\
    \ = file_name.find('.')\n        let mut dot_index = dot_index + 1\n        let\
    \ mut dot_index = dot_index + 1\n        let mut dot_index = dot_index + 1\n \
    \       let mut dot_index = dot_index + 1\n        let mut dot_index = dot_index\
    \ + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index =\
    \ dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index\
    \ = dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mut\
    \ dot_index = dot_index + 1\n        let mut dot_index = dot_index + 1\n     \
    \   let mut dot_index = dot_index + 1\n        let mut dot_index = dot_index +\
    \ 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index = dot_index\
    \ + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index =\
    \ dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index\
    \ = dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mut\
    \ dot_index = dot_index + 1\n        let mut dot_index = dot_index + 1\n     \
    \   let mut dot_index = dot_index + 1\n        let mut dot_index = dot_index +\
    \ 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index = dot_index\
    \ + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index =\
    \ dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index\
    \ = dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mut\
    \ dot_index = dot_index + 1\n        let mut dot_index = dot_index + 1\n     \
    \   let mut dot_index = dot_index + 1\n        let mut dot_index = dot_index +\
    \ 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index = dot_index\
    \ + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index =\
    \ dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index\
    \ = dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mut\
    \ dot_index = dot_index + 1\n        let mut dot_index = dot_index + 1\n     \
    \   let mut dot_index = dot_index + 1\n        let mut dot_index = dot_index +\
    \ 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index = dot_index\
    \ + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index =\
    \ dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index\
    \ = dot_index + 1\n        let mut dot_index = dot_index + 1", "    let mut dot_pos\
    \ = file_name.find('.')\n    let mut dot_pos_end = file_name.len();\n    let mut\
    \ dot_pos_start = 0;\n    loop {\n        if dot_pos == dot_pos_end {\n      \
    \      return String::from(\"No\");\n        }\n        if dot_pos == dot_pos_start\
    \ {\n            dot_pos_end = dot_pos_end;\n        }\n        let mut dot_pos_start\
    \ = dot_pos + 1;\n        if dot_pos_start == dot_pos_end {\n            dot_pos_end\
    \ = dot_pos_end;\n        }\n        let mut dot_pos_end = dot_pos_end - 1;\n\
    \        if dot_pos_end < dot_pos_start {\n            dot_pos_end = dot_pos_end;\n\
    \        }\n        if dot_pos_end < 3 {\n            return String::from(\"No\"\
    );\n        }\n        let mut dot_pos_start = dot_pos_end - 1;\n        if dot_pos_start\
    \ < dot_pos_end {\n            if dot_pos_start < 'a' || dot_pos_start > 'z' {\n\
    \                return String::from(\"No\");\n            }\n            if dot_pos_end\
    \ < 'a' || dot_pos_end > 'z' {\n                return String::from(\"No\");\n\
    \            }\n        }\n        dot_pos = dot_pos_end;\n    }", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut first_letter = file_name.chars().next().unwrap();\n    if first_letter\
    \ < 'a' || first_letter > 'z' {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.chars().count(|c| c != '.') != 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count(|c| c != '.') != 1 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count(|c| c != '.') !=\
    \ 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c != '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c != '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c != '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c != '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c != '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c != '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c != '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c != '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c != '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c != '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c != '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c != '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c != '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c ", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos\
    \ + 1;\n    while dot_pos_start < file_name.len() {\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start++;\n\
    \        } else if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start++;\n        } else {\n            return\
    \ String::from(\"No\");\n        }\n    }\n    while dot_pos_end < file_name.len()\
    \ {\n        if file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z'\
    \ {\n            dot_pos_end++;\n        } else if file_name[dot_pos_end] >= 'A'\
    \ && file_name[dot_pos_end] <= 'Z' {\n            dot_pos_end++;\n        } else\
    \ {\n            return String::from(\"No\");\n        }\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos + 1 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_end\
    \ == dot_pos + 1 {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos_start]\
    \ != '0' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] != '9' {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos + 1 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_end\
    \ == dot_pos + 1 {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos_start]\
    \ != 'a' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] != 'z' {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos + 1 {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_end\
    \ == dot_pos + 1 {\n        return String::from(\"Yes\");\n    }\n    if file_name[dot_pos_start]\
    \ != 'A' {\n        return String::from(\"No\");\n    }\n    if file_name"]
stop_tokens:
- "\n}"

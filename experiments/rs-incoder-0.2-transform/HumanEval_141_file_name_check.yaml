name: HumanEval_141_file_name_check
language: rs
prompt: "/// Create a function which takes a string representing a file's name, and\
  \ returns\n/// 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  /// A file's name is considered to be valid if and only if all the following conditions\
  \ \n/// are met:\n/// - There should not be more than three digits ('0'-'9') in\
  \ the file's name.\n/// - The file's name contains exactly one dot '.'\n/// - The\
  \ substring before the dot should not be empty, and it starts with a letter from\
  \ \n/// the latin alphapet ('a'-'z' and 'A'-'Z').\n/// - The substring after the\
  \ dot should be one of these: ['txt', 'exe', 'dll']\n/// Examples:\n/// >>> file_name_check(String::from(\"\
  example.txt\"))\n/// String::from(\"Yes\")\n/// >>> file_name_check(String::from(\"\
  1example.dll\"))\n/// String::from(\"No\")\nfn file_name_check(file_name: String)\
  \ -> String {\n"
tests: "}\n\nfn main() {\n    let candidate = file_name_check;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n}\n"
completions: ["    let mut file_name_chars = file_name.chars();\n    let mut dot_pos\
    \ = file_name_chars.find_first_of('.');\n    let mut dot_pos_end = file_name_chars.find_first_not_of('.',\
    \ dot_pos);\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    let mut dot_pos_start_end_end = dot_pos_start_end;\n   \
    \ let mut dot_pos_start_end_end_end = dot_pos_start_end_end;\n    let mut dot_pos_start_end_end_end_end\
    \ = dot_pos_start_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end;\n    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end;\n    let mut\
    \ dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end;\n \
    \   let mut dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end_end_end_end_end_end_end_end;\n\
    \    let mut dot_pos_start_end_end_end_end_end_end_", "    let mut file_name =\
    \ file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut first_letter = String::from(\"\");\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    \n    for c in file_name.chars() {\n        if c.is_digit() {\n     \
    \       return String::from(\"No\");\n        }\n        if c.is_lowercase() {\n\
    \            if first_letter == String::from(\"\") {\n                first_letter\
    \ = String::from(c.to_lowercase());\n            }\n            else {\n     \
    \           if first_letter != String::from(c.to_lowercase()) {\n            \
    \        return String::from(\"No\");\n                }\n            }\n    \
    \    }\n        else if c.is_uppercase() {\n            if first_letter == String::from(\"\
    \") {\n                first_letter = String::from(c.to_uppercase());\n      \
    \      }\n            else {\n                if first_letter != String::from(c.to_uppercase())\
    \ {\n                    return String::from(\"No\");\n                }\n   \
    \         }\n        }\n    }\n    \n    if dot_pos == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    \n    if file_name[dot_pos - 1] !=\
    \ '.' {\n        return String::from(\"No\");\n    }\n    \n    if file_name[dot_pos\
    \ - 2] != String::from(\"a\") && file_name[dot_pos - 2] != String::from(\"A\"\
    ) {\n        return String::from(\"No\");\n    }\n    \n    if file_name[dot_pos\
    \ - 3] != String::from(\"z\") && file_name[dot_pos - 3] != String::from(\"Z\"\
    ) {\n        return String::from(\"No\");\n    }\n    \n    if file_name[dot_pos\
    \ - 4] != String::from(\"0\") && file_name[dot_pos - 4] != String::from(\"9\"\
    ) {\n        return String::from(\"No\");\n    }\n    \n    return String::from(\"\
    Yes\");", "    if file_name.len() > 3 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.contains('.') {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.starts_with(\"a\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"A\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"0\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"9\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n", "    if file_name.len() > 3 {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut first_char = file_name[..dot_pos].chars().next().unwrap();\n\
    \    if first_char.len() != 1 || first_char != 'a' || first_char != 'z' || first_char\
    \ != 'A' {\n        return String::from(\"No\");\n    }\n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_char = file_name[dot_pos + 1..].chars().next().unwrap();\n\
    \    if dot_char.len() != 1 || dot_char != 'txt' || dot_char != 'exe' || dot_char\
    \ != 'dll' {\n        return String::from(\"No\");\n    }\n    String::from(\"\
    Yes\")", "    if file_name.len() > 3 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.contains(\".\") {\n        return String::from(\"No\"\
    );\n    }\n    if file_name.starts_with(\"a\") || file_name.starts_with(\"A\"\
    ) {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    0\") || file_name.starts_with(\"9\") {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.starts_with(\".\") {\n        let mut dot_index = file_name.rfind('.')\n\
    \        if dot_index == String::npos {\n            return String::from(\"No\"\
    );\n        }\n        if dot_index == 0 {\n            return String::from(\"\
    No\");\n        }\n        let mut dot_string = file_name.clone();\n        dot_string.truncate(dot_index\
    \ - 1);\n        if dot_string.contains(\"txt\") || dot_string.contains(\"exe\"\
    ) || dot_string.contains(\"dll\") {\n            return String::from(\"Yes\");\n\
    \        }\n    }\n    return String::from(\"No\");", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.contains('.')\
    \ == false {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_digit()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_punctuation()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_symbol()) {\n    \
    \    return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_whitespace())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_control()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_newline()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_linefeed()) {\n  \
    \      return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_formfeed())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_backspace()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_formfeed()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_newline()) {\n   \
    \     return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_linefeed())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_control()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_newline()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_linefeed()) {\n  \
    \      return String::from(\"No\");\n    }", "    let mut file_name_split = file_name.split('.');\n\
    \    let mut file_name_split_len = file_name_split.len();\n    let mut file_name_split_index\
    \ = 0;\n    let mut file_name_split_chars = String::new();\n    let mut file_name_split_chars_len\
    \ = String::new();\n    let mut file_name_split_char_index = 0;\n    let mut file_name_split_chars_index\
    \ = 0;\n    let mut file_name_split_chars_len = file_name_split_chars.len();\n\
    \    let mut file_name_split_chars_index = 0;\n    let mut file_name_split_chars_len\
    \ = file_name_split_chars.len();\n    let mut file_name_split_chars_index = 0;\n\
    \    let mut file_name_split_chars_len = file_name_split_chars.len();\n    let\
    \ mut file_name_split_chars_index = 0;\n    let mut file_name_split_chars_len\
    \ = file_name_split_chars.len();\n    let mut file_name_split_chars_index = 0;\n\
    \    let mut file_name_split_chars_len = file_name_split_chars.len();\n    let\
    \ mut file_name_split_chars_index = 0;\n    let mut file_name_split_chars_len\
    \ = file_name_split_chars.len();\n    let mut file_name_split_chars_index = 0;\n\
    \    let mut file_name_split_chars_len = file_name_split_chars.len();\n    let\
    \ mut file_name_split_chars_index = 0;\n    let mut file_name_split_chars_len\
    \ = file_name_split_chars.len();\n    let mut file_name_split_chars_index = 0;\n\
    \    let mut file_name_split_chars_len = file_name_split_chars.len();\n    let\
    \ mut file_name_split_chars_index = 0;\n    let mut file_name_split_chars_len\
    \ = file_name_split_chars.len();\n    let mut file_name_split_chars_index = 0;\n\
    \    let mut file_name_split_chars_len = file_name_split_chars.len();\n    let\
    \ mut file_name_split_chars_index = 0;\n    let mut file_name_split_chars_len\
    \ = file_name_split_chars.len();\n    let mut file_name_split_chars_index = 0;\n\
    \    let mut file_name_split_chars_len = file_name_split_chars.len();\n    let\
    \ mut file_name_split_chars_index = 0;\n    let mut file_name_split_chars_len\
    \ = file_name_split_chars.len();\n    let mut file_name_split_chars_index = 0;\n\
    \    let mut file_name_split_chars_len = file_name_split_chars.len();\n    let\
    \ mut file_name_split_chars_index = 0;\n    let mut file_name_split_chars_len\
    \ = file_name_", "    let mut file_name = file_name.to_string();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end_2 = file_name.find('.')\n    if dot_pos_end_2\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end_2 = dot_pos_end_2 + 1;\n    let mut dot_pos_end_3 = file_name.find('.')\n\
    \    if dot_pos_end_3 == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end_3 = dot_pos_end_3 + 1;\n    let mut dot_pos_end_4\
    \ = file_name.find('.')\n    if dot_pos_end_4 == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end_4 = dot_pos_end_4 + 1;\n\
    \    let mut dot_pos_end_5 = file_name.find('.')\n    if dot_pos_end_5 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end_5 =\
    \ dot_pos_end_5 + 1;\n    let mut dot_pos_end_6 = file_name.find('.')\n    if\
    \ dot_pos_end_6 == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end_6 = dot_pos_end_6 + 1;\n    let mut dot_pos_end_7 = file_name.find('.')\n\
    \    if dot_pos_end_7 == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end_7 = dot_pos_end_7 + 1;\n    let mut dot_pos_end_8\
    \ = file_name.find('.')\n    if dot_pos_end_8 == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end_8 = dot_pos_end_8 + 1;\n\
    \    let mut dot_pos_end_9 = file_name.find('.')\n    if dot_pos_end_9 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end_9 =\
    \ dot_pos_end_9 + 1;\n    let mut dot_pos_end_10 = file_name.find('.')\n    if\
    \ dot_pos_end_10 == String::npos {\n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_end_10 = dot_pos_end_10", "    if file_name.chars().count()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.rfind('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut first_char = file_name[dot_pos - 1..dot_pos].chars().next()\n   \
    \ if first_char.count() > 1 {\n        return String::from(\"No\");\n    }\n \
    \   if first_char.count() < 1 || first_char.first().unwrap() != 'a' || first_char.first().unwrap()\
    \ != 'z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 1..].chars().any(|c| !c.is_ascii_alphanumeric()) {\n        return String::from(\"\
    No\");\n    }\n    String::from(\"Yes\")", "    if file_name.chars().count() >\
    \ 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_pos = file_name.rfind('.')\n\
    \        let mut dot_pos_end = file_name.rfind('.')\n        let mut dot_pos_start\
    \ = dot_pos + 1;\n        let mut dot_pos_end = dot_pos_end - 1;\n        let\
    \ mut dot_pos_start = dot_pos_start - 1;\n        let mut dot_pos_end = dot_pos_end\
    \ - 1;\n        let mut dot_pos_start = dot_pos_start - 1;\n        let mut dot_pos_end\
    \ = dot_pos_end - 1;\n        let mut dot_pos_start = dot_pos_start - 1;\n   \
    \     let mut dot_pos_end = dot_pos_end - 1;\n        let mut dot_pos_start =\
    \ dot_pos_start - 1;\n        let mut dot_pos_end = dot_pos_end - 1;\n       \
    \ let mut dot_pos_start = dot_pos_start - 1;\n        let mut dot_pos_end = dot_pos_end\
    \ - 1;\n        let mut dot_pos_start = dot_pos_start - 1;\n        let mut dot_pos_end\
    \ = dot_pos_end - 1;\n        let mut dot_pos_start = dot_pos_start - 1;\n   \
    \     let mut dot_pos_end = dot_pos_end - 1;\n        let mut dot_pos_start =\
    \ dot_pos_start - 1;\n        let mut dot_pos_end = dot_pos_end - 1;\n       \
    \ let mut dot_pos_start = dot_pos_start - 1;\n        let mut dot_pos_end = dot_pos_end\
    \ - 1;\n        let mut dot_pos_start = dot_pos_start - 1;\n        let mut dot_pos_end\
    \ = dot_pos_end - 1;\n        let mut dot_pos_start = dot_pos_start - 1;\n   \
    \     let mut dot_pos_end = dot_pos_end - 1;\n        let mut dot_pos_start =\
    \ dot_pos_start - 1;\n        let mut dot_pos_end = dot_pos_end - 1;\n       \
    \ let mut dot_pos_start = dot_pos_start - 1;\n        let mut dot_pos_end = dot_pos_end\
    \ - 1;\n        let mut dot_pos_start = dot_pos_start - 1;\n        let mut dot_pos_end\
    \ = dot_pos_end - 1;\n        let mut dot_pos_start = dot_pos_start - 1;\n   \
    \     let mut dot_pos_end = dot_pos_end - 1;\n        let mut dot_pos_start =\
    \ dot_pos_start - 1;\n        let mut dot_pos_end = dot_pos_end - 1;\n       \
    \ let mut dot_pos_start = dot_pos_start - 1;\n        let mut dot_pos_end = dot_pos_end\
    \ - 1;\n        let mut dot_pos_start = dot_pos_start - 1;\n        let mut dot_pos_end\
    \ = dot_pos_end - 1;\n        let mut dot_pos_start = dot_pos_start - 1;\n   \
    \     let mut dot_pos_end = dot_pos_end - 1;\n        let mut dot_pos_start =\
    \ dot_pos_start - 1;\n", "    let mut file_name = file_name.clone();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_end = dot_pos_start\
    \ + 1;\n    let mut dot_pos_start_letter = String::new();\n    let mut dot_pos_end_letter\
    \ = String::new();\n    let mut dot_pos_start_letter = String::new();\n    let\
    \ mut dot_pos_end_letter = String::new();\n    let mut dot_pos_start_letter =\
    \ String::new();\n    let mut dot_pos_end_letter = String::new();\n    let mut\
    \ dot_pos_start_letter = String::new();\n    let mut dot_pos_end_letter = String::new();\n\
    \    let mut dot_pos_start_letter = String::new();\n    let mut dot_pos_end_letter\
    \ = String::new();\n    let mut dot_pos_start_letter = String::new();\n    let\
    \ mut dot_pos_end_letter = String::new();\n    let mut dot_pos_start_letter =\
    \ String::new();\n    let mut dot_pos_end_letter = String::new();\n    let mut\
    \ dot_pos_start_letter = String::new();\n    let mut dot_pos_end_letter = String::new();\n\
    \    let mut dot_pos_start_letter = String::new();\n    let mut dot_pos_end_letter\
    \ = String::new();\n    let mut dot_pos_start_letter = String::new();\n    let\
    \ mut dot_pos_end_letter = String::new();\n    let mut dot_pos_start_letter =\
    \ String::new();\n    let mut dot_pos_end_letter = String::new();\n    let mut\
    \ dot_pos_start_letter = String::new();\n    let mut dot_pos_end_letter = String::new();\n\
    \    let mut dot_pos_start_letter = String::new();\n    let mut dot_pos_end_letter\
    \ = String::new();\n    let mut dot_pos_start_letter = String::new();\n    let\
    \ mut dot_pos_end_letter = String::new();\n    let mut dot_pos_start_letter =\
    \ String::new();\n    let mut dot_pos_end_letter = String::new();\n    let mut\
    \ dot_pos_start_letter = String::new();\n    let mut dot_pos_end_letter = String::new();\n\
    \    let mut dot_", "    if file_name.chars().count() > 3 {\n        String::from(\"\
    No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n        if\
    \ dot_pos == String::npos {\n            String::from(\"No\")\n        } else\
    \ {\n            let mut first_letter = file_name.chars().next().unwrap();\n \
    \           if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_pos = file_name.find('.')\n\
    \                    if dot_pos == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        let mut dot_pos =\
    \ file_name.find('.')\n                        if dot_pos == String::npos {\n\
    \                            String::from(\"No\")\n                        } else\
    \ {\n                            if dot_pos == dot_pos + 1 {\n               \
    \                 String::from(\"Yes\")\n                            } else {\n\
    \                                String::from(\"No\")\n                      \
    \      }\n                        }\n                    }\n                }\n\
    \            }\n        }\n    }", "    let mut file_name_chars = file_name.chars();\n\
    \    let mut dot_pos = file_name_chars.next().unwrap().unwrap();\n    let mut\
    \ dot_pos_next = dot_pos.unwrap();\n    let mut dot_pos_next_next = dot_pos_next.unwrap();\n\
    \    let mut dot_pos_next_next_next = dot_pos_next_next.unwrap();\n    let mut\
    \ dot_pos_next_next_next_next = dot_pos_next_next_next.unwrap();\n    let mut\
    \ dot_pos_next_next_next_next_next = dot_pos_next_next_next_next.unwrap();\n \
    \   let mut dot_pos_next_next_next_next_next_next = dot_pos_next_next_next_next_next.unwrap();\n\
    \    let mut dot_pos_next_next_next_next_next_next_next = dot_pos_next_next_next_next_next_next.unwrap();\n\
    \    let mut dot_pos_next_next_next_next_next_next_next_next = dot_pos_next_next_next_next_next_next_next.unwrap();\n\
    \    let mut dot_pos_next_next_next_next_next_next_next_next_next = dot_pos_next_next_next_next_next_next_next_next.unwrap();\n\
    \    let mut dot_pos_next_next_next_next_next_next_next_next_next = dot_pos_next_next_next_next_next_next_next_next_next.unwrap();\n\
    \    let mut dot_pos_next_next_next_next_next_next_next_next_next_next = dot_pos_next_next_next_next_next_next_next_next_next_next.unwrap();\n\
    \    let mut dot_pos_next_next_next_next_next_next_next_next_next_next_next =\
    \ dot_pos_next_next_next_next_next_next_next_next_next_next_next.unwrap();\n \
    \   let mut dot_pos_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = dot_pos_next_next_next_next_next_next_next_next_next_next_next_next.unwrap();\n\
    \    let mut dot_pos_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = dot_pos_next_next_next_next_next_next_next_next_next_next_next_next.unwrap();\n\
    \    let mut dot_pos_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = dot_pos_next_next_next_next_next_next_next_next_next_next_next_next_next.unwrap();\n\
    \    let mut dot_pos_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = dot_pos_next_next_next_next_next_next_next_next_next_next_next_next_next_next.unwrap();\n\
    \    let mut dot_pos_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = dot_pos_next_next_next_next_next_next_next_next_next_next_next_next_next_next.unwrap();\n\
    \    let mut dot_pos_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = dot_pos_next_next_next_next_next_next_next_next_next_next_next_next_next_next.unwrap();\n\
    \    let mut dot_pos_next_next_next_", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos +\
    \ 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String", "    if file_name.len() > 3 {\n        String::from(\"\
    No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n        if\
    \ dot_pos == String::npos {\n            String::from(\"No\")\n        } else\
    \ {\n            let mut first_letter = file_name[0..dot_pos].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[dot_pos\
    \ + 1..].chars().next().unwrap();\n                    if dot_name.contains('.')\
    \ {\n                        String::from(\"No\")\n                    } else\
    \ {\n                        let mut dot_name = file_name[dot_pos + 1..].chars().next().unwrap();\n\
    \                        if dot_name.contains('.') {\n                       \
    \     String::from(\"No\")\n                        } else {\n               \
    \             String::from(\"Yes\")\n                        }\n             \
    \       }\n                }\n            }\n        }\n    }", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if\
    \ dot_pos_end == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = file_name.find('.')\n\
    \    if dot_pos_start == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_start = ", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = ", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    if dot_pos == 0 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] != String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n\
    \        return String::from(\"No\");\n    }\n    let mut first_letter = file_name[dot_pos\
    \ - 1];\n    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    let mut last_letter = file_name[dot_pos];\n    if last_letter\
    \ < 'a' || last_letter > 'z' {\n        return String::from(\"No\");\n    }\n\
    \    if file_name[dot_pos - 2] != String::from('.') {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 2] != String::from('txt') && file_name[dot_pos\
    \ - 2] != String::from('exe') && file_name[dot_pos - 2] != String::from('dll')\
    \ {\n        return String::from(\"No\");\n    }\n    String::from(\"Yes\")",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos\
    \ + 1;\n    let mut dot_pos_start_letter = true;\n    let mut dot_pos_end_letter\
    \ = true;\n    let mut dot_pos_start_letter2 = true;\n    let mut dot_pos_end_letter2\
    \ = true;\n    let mut dot_pos_start_letter3 = true;\n    let mut dot_pos_end_letter3\
    \ = true;\n    let mut dot_pos_start_letter4 = true;\n    let mut dot_pos_end_letter4\
    \ = true;\n    let mut dot_pos_start_letter5 = true;\n    let mut dot_pos_end_letter5\
    \ = true;\n    let mut dot_pos_start_letter6 = true;\n    let mut dot_pos_end_letter6\
    \ = true;\n    let mut dot_pos_start_letter7 = true;\n    let mut dot_pos_end_letter7\
    \ = true;\n    let mut dot_pos_start_letter8 = true;\n    let mut dot_pos_end_letter8\
    \ = true;\n    let mut dot_pos_start_letter9 = true;\n    let mut dot_pos_end_letter9\
    \ = true;\n    let mut dot_pos_start_letter10 = true;\n    let mut dot_pos_end_letter10\
    \ = true;\n    let mut dot_pos_start_letter11 = true;\n    let mut dot_pos_end_letter11\
    \ = true;\n    let mut dot_pos_start_letter12 = true;\n    let mut dot_pos_end_letter12\
    \ = true;\n    let mut dot_pos_start_letter13 = true;\n    let mut dot_pos_end_letter13\
    \ = true;\n    let mut dot_pos_start_letter14 = true;\n    let mut dot_pos_end_letter14\
    \ = true;\n    let mut dot_pos_start_letter15 = true;\n    let mut dot_pos_end_letter15\
    \ = true;\n    let mut dot_pos_start_letter16 = true;\n    let mut dot_pos_end_letter16\
    \ = true;\n    let mut dot_pos_start_letter17 = true;\n    let mut dot_pos_end_letter17\
    \ = true;\n    let mut dot_pos_start_letter18 = true;\n    let mut dot_pos_end_letter18\
    \ = true;\n    let mut dot_pos_start_letter19 = true;\n    let mut dot_pos_end_letter19\
    \ = true;\n    let mut dot_pos_start_letter20 = true;\n    let mut dot_pos_end_letter20\
    \ = true;\n    let mut dot_pos_start_letter21 = true;\n    let mut dot_pos_end_letter21\
    \ = true;\n    let mut dot_pos_start_letter22 = true;\n    let mut dot_pos_end_letter22\
    \ = true;\n    let mut dot_pos_start_letter23 = true;\n    let mu", "    let mut\
    \ file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter2 = false;\n    let mut dot_pos_end_letter2\
    \ = false;\n    let mut dot_pos_start_letter3 = false;\n    let mut dot_pos_end_letter3\
    \ = false;\n    let mut dot_pos_start_letter4 = false;\n    let mut dot_pos_end_letter4\
    \ = false;\n    let mut dot_pos_start_letter5 = false;\n    let mut dot_pos_end_letter5\
    \ = false;\n    let mut dot_pos_start_letter6 = false;\n    let mut dot_pos_end_letter6\
    \ = false;\n    let mut dot_pos_start_letter7 = false;\n    let mut dot_pos_end_letter7\
    \ = false;\n    let mut dot_pos_start_letter8 = false;\n    let mut dot_pos_end_letter8\
    \ = false;\n    let mut dot_pos_start_letter9 = false;\n    let mut dot_pos_end_letter9\
    \ = false;\n    let mut dot_pos_start_letter10 = false;\n    let mut dot_pos_end_letter10\
    \ = false;\n    let mut dot_pos_start_letter11 = false;\n    let mut dot_pos_end_letter11\
    \ = false;\n    let mut dot_pos_start_letter12 = false;\n    let mut dot_pos_end_letter12\
    \ = false;\n    let mut dot_pos_start_letter13 = false;\n    let mut dot_pos_end_letter13\
    \ = false;\n    let mut dot_pos_start_letter14 = false;\n    let mut dot_pos_end_letter14\
    \ = false;\n    let mut dot_pos_start_letter15 = false;\n    let mut dot_pos_end_letter15\
    \ = false;\n    let mut dot_pos_start_letter16 = false;\n    let mut dot_pos_end_letter16\
    \ = false;\n    let mut dot_pos_start_letter17 = false;\n    let mut dot_pos_end_letter17\
    \ = false;\n    let mut dot_pos_start_letter18 = false;\n    let mut dot_pos_end_letter18\
    \ = false;\n    let mut dot_pos_start_letter19 = false;\n    let mut dot_pos_end_letter19\
    \ = false;\n    let mut dot_pos_start_letter20 = false;\n    let mut dot_pos_end_letter20\
    \ = false;\n    let mut dot_pos_start_letter21 = false;\n    let mut dot_pos_end_letter21\
    \ = false;\n    let mut dot_pos_start_letter22 = false;\n    let mut dot_pos_end_letter22\
    \ = false;\n    let mut dot_pos_start_letter23 = false;\n    let mut ", "    if\
    \ file_name.len() > 3 {\n        String::from(\"No\")\n    } else {\n        let\
    \ mut dot_pos = file_name.find('.')\n        if dot_pos == String::npos {\n  \
    \          String::from(\"No\")\n        } else {\n            let mut first_char\
    \ = file_name[..dot_pos].chars().next().unwrap();\n            if first_char.isalpha()\
    \ == false {\n                String::from(\"No\")\n            } else if first_char\
    \ == 'a' || first_char == 'A' {\n                String::from(\"No\")\n      \
    \      } else if first_char == 'b' || first_char == 'B' {\n                String::from(\"\
    No\")\n            } else if first_char == 'c' || first_char == 'C' {\n      \
    \          String::from(\"No\")\n            } else if first_char == 'd' || first_char\
    \ == 'D' {\n                String::from(\"No\")\n            } else if first_char\
    \ == 'e' || first_char == 'E' {\n                String::from(\"No\")\n      \
    \      } else if first_char == 'f' || first_char == 'F' {\n                String::from(\"\
    No\")\n            } else if first_char == 'g' || first_char == 'G' {\n      \
    \          String::from(\"No\")\n            } else if first_char == 'h' || first_char\
    \ == 'H' {\n                String::from(\"No\")\n            } else if first_char\
    \ == 'i' || first_char == 'I' {\n                String::from(\"No\")\n      \
    \      } else if first_char == 'j' || first_char == 'J' {\n                String::from(\"\
    No\")\n            } else if first_char == 'k' || first_char == 'K' {\n      \
    \          String::from(\"No\")\n            } else if first_char == 'l' || first_char\
    \ == 'L' {\n                String::from(\"No\")\n            } else if first_char\
    \ == 'm' || first_char == 'M' {\n                String::from(\"No\")\n      \
    \      } else if first_char == 'n' || first_char == 'N' {\n                String::from(\"\
    No\")\n            } else if first_char == 'o' || first_char == 'O' {\n      \
    \          String::from(\"No\")\n            } else if first_char == 'p' || first_char\
    \ == 'P' {\n                String::from(\"No\")\n            } else if first_char\
    \ == 'q' || first_char == 'Q' {\n                String::from(\"No\")\n      \
    \      } else if first_char == 'r' || first_char == 'R' {\n                String::from(\"\
    No\")\n            } else if first_char == 's' || first_char == 'S' {\n      \
    \          String", "    let mut file_name = file_name.clone();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_start = dot_pos + 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n \
    \   let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end\
    \ - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end\
    \ = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut\
    \ dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end -\
    \ 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end\
    \ = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut\
    \ dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end -\
    \ 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end\
    \ = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start\
    \ - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start\
    \ = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end - 1;\n    let mut\
    \ dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end = dot_pos_end -\
    \ 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let mut dot_pos_end\
    \ = dot_pos_end - 1;\n    let mut dot_pos_start = dot_pos_start - 1;\n    let\
    \ mut dot_pos_end = dot_pos_end - 1;\n    let mut dot_pos_start = ", "    let\
    \ mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter2 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter2 = dot_pos_end;\n    let mut dot_pos_start_letter3 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter3 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter4 = dot_pos_start;\n    let mut dot_pos_end_letter4 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter5 = dot_pos_start;\n    let mut dot_pos_end_letter5\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter6 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter6 = dot_pos_end;\n    let mut dot_pos_start_letter7 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter7 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter8 = dot_pos_start;\n    let mut dot_pos_end_letter8 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter9 = dot_pos_start;\n    let mut dot_pos_end_letter9\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter10 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter10 = dot_pos_end;\n    let mut dot_pos_start_letter11\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter11 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter12 = dot_pos_start;\n    let mut dot_pos_end_letter12 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter13 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter13 = dot_pos_end;\n    let mut dot_pos_start_letter14 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter14 = dot_pos_end;\n    let mut dot_pos_start_letter15\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter15 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter16 = dot_pos_start;\n    let mut dot_pos_end_letter16 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter17 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter17 = dot_pos_end;\n    let mut dot_pos_start_letter18 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter18 = dot_pos_end;\n    let mut dot_pos_start_letter19",
  "    let mut file_name = file_name.to_string();\n    \n    if file_name.len() >\
    \ 3 {\n        file_name.truncate(3);\n    }\n    \n    if file_name.contains(\"\
    .\") {\n        file_name.truncate(file_name.rfind('.'));\n    }\n    \n    if\
    \ file_name.starts_with(\"a\") || file_name.starts_with(\"A\") {\n        file_name.truncate(0);\n\
    \    }\n    \n    if file_name.contains(\".\") {\n        file_name.truncate(file_name.rfind('.'));\n\
    \    }\n    \n    if file_name.contains(\"txt\") || file_name.contains(\"exe\"\
    ) || file_name.contains(\"dll\") {\n        file_name.truncate(0);\n    }\n  \
    \  \n    file_name", "    let mut file_name = file_name.to_string();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    let mut dot_pos_start = dot_pos;\n    dot_pos_start\
    \ += 1;\n    while dot_pos_start < dot_pos_end {\n        let mut dot_pos_end\
    \ = dot_pos_start;\n        dot_pos_end += 1;\n        if file_name[dot_pos_end]\
    \ != '\\0' {\n            if file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end]\
    \ <= 'z' {\n                dot_pos_end += 1;\n            }\n            if file_name[dot_pos_end]\
    \ >= 'A' && file_name[dot_pos_end] <= 'Z' {\n                dot_pos_end += 1;\n\
    \            }\n            if dot_pos_end == dot_pos_start {\n              \
    \  return String::from(\"No\");\n            }\n        }\n        dot_pos_start\
    \ += 1;\n    }\n    return String::from(\"Yes\");", "    let mut file_name_split\
    \ = file_name.split('.');\n    if file_name_split.len() != 2 {\n        return\
    \ String::from(\"No\");\n    }\n    let mut file_name_split_first = file_name_split[0].chars();\n\
    \    if file_name_split_first.len() != 1 && file_name_split_first.first().unwrap()\
    \ != 'a' && file_name_split_first.first().unwrap() != 'A' {\n        return String::from(\"\
    No\");\n    }\n    let mut file_name_split_last = file_name_split[1].chars();\n\
    \    if file_name_split_last.len() != 1 && file_name_split_last.first().unwrap()\
    \ != 'a' && file_name_split_last.first().unwrap() != 'A' {\n        return String::from(\"\
    No\");\n    }\n    if file_name_split_first.first().unwrap() == 'a' || file_name_split_first.first().unwrap()\
    \ == 'A' {\n        if file_name_split_first.last().unwrap() == 'z' || file_name_split_first.last().unwrap()\
    \ == 'Z' {\n            if file_name_split_last.first().unwrap() == 't' || file_name_split_last.first().unwrap()\
    \ == 'T' {\n                if file_name_split_last.last().unwrap() == 'e' ||\
    \ file_name_split_last.last().unwrap() == 'E' {\n                    if file_name_split_last.last().unwrap()\
    \ == 's' || file_name_split_last.last().unwrap() == 'S' {\n                  \
    \      return String::from(\"Yes\");\n                    }\n                }\n\
    \            }\n        }\n    }\n    return String::from(\"No\");", "    let\
    \ mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    if dot_pos == 0 {\n        return String::from(\"No\");\n    }\n    if file_name[0..dot_pos\
    \ - 1].is_empty() {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] != 'a' && file_name[dot_pos - 1] != 'b' && file_name[dot_pos - 1] != 'c'\
    \ &&\n        file_name[dot_pos - 1] != 'd' && file_name[dot_pos - 1] != 'e' &&\
    \ file_name[dot_pos - 1] != 'f' &&\n        file_name[dot_pos - 1] != 'g' && file_name[dot_pos\
    \ - 1] != 'h' && file_name[dot_pos - 1] != 'i' &&\n        file_name[dot_pos -\
    \ 1] != 'j' && file_name[dot_pos - 1] != 'k' && file_name[dot_pos - 1] != 'l'\
    \ &&\n        file_name[dot_pos - 1] != 'm' && file_name[dot_pos - 1] != 'n' &&\
    \ file_name[dot_pos - 1] != 'o' &&\n        file_name[dot_pos - 1] != 'p' && file_name[dot_pos\
    \ - 1] != 'q' && file_name[dot_pos - 1] != 'r' &&\n        file_name[dot_pos -\
    \ 1] != 's' && file_name[dot_pos - 1] != 't' && file_name[dot_pos - 1] != 'u'\
    \ &&\n        file_name[dot_pos - 1] != 'v' && file_name[dot_pos - 1] != 'w' &&\
    \ file_name[dot_pos - 1] != 'x' &&\n        file_name[dot_pos - 1] != 'y' && file_name[dot_pos\
    \ - 1] != 'z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] == 'a' || file_name[dot_pos - 1] == 'b' || file_name[dot_pos - 1] == 'c'\
    \ ||\n        file_name[dot_pos - 1] == 'd' || file_name[dot_pos - 1] == 'e' ||\
    \ file_name[dot_pos - 1] == 'f' ||\n        file_name[dot_pos - 1] == 'g' || file_name[dot_pos\
    \ - 1] == 'h' || file_name[dot_pos - 1] == 'i' ||\n        file_name[dot_pos -\
    \ 1] == 'j' || file_name[dot_pos - 1] == 'k' || file_name[dot_pos - 1] == 'l'\
    \ ||\n        file_name[dot_pos - 1] == 'm' || file_name[dot_pos - 1] == 'n' ||\
    \ file_name[dot_pos - 1] == 'o' ||\n        file_name[dot_pos - 1] == 'p' || file_name[dot_",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos + 1;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let ", "    let\
    \ mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos;\n    while dot_pos_start != dot_pos_end {\n        let mut dot_pos_start\
    \ = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n        if dot_pos_start\
    \ == dot_pos_end {\n            dot_pos_end = dot_pos_end + 1;\n        }\n  \
    \      if dot_pos_start < dot_pos_end {\n            if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n                dot_pos_start =\
    \ dot_pos_start + 1;\n            }\n            if file_name[dot_pos_end] >=\
    \ 'a' && file_name[dot_pos_end] <= 'z' {\n                dot_pos_end = dot_pos_end\
    \ - 1;\n            }\n        }\n    }\n    if file_name[dot_pos_start] == '.'\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end]\
    \ <= 'z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end]\
    \ <= 'Z' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start]\
    \ >= '0' && file_name[dot_pos_start] <= '9' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end] >= '0' && file_name[dot_pos_end]\
    \ <= '9' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start]\
    \ == '.' {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] ", "    let mut file_name : String = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_start = dot_pos;\n    while dot_pos_start != dot_pos_end\
    \ {\n        let mut dot_pos_start = dot_pos_start;\n        let mut dot_pos_end\
    \ = dot_pos_end;\n        let mut dot_pos_start = dot_pos_start;\n        while\
    \ dot_pos_start != dot_pos_end {\n            let mut dot_pos_start = dot_pos_start;\n\
    \            let mut dot_pos_end = dot_pos_end;\n            let mut dot_pos_start\
    \ = dot_pos_start;\n            while dot_pos_start != dot_pos_end {\n       \
    \         let mut dot_pos_start = dot_pos_start;\n                let mut dot_pos_end\
    \ = dot_pos_end;\n                let mut dot_pos_start = dot_pos_start;\n   \
    \             while dot_pos_start != dot_pos_end {\n                    let mut\
    \ dot_pos_start = dot_pos_start;\n                    let mut dot_pos_end = dot_pos_end;\n\
    \                    let mut dot_pos_start = dot_pos_start;\n                \
    \    while dot_pos_start != dot_pos_end {\n                        let mut dot_pos_start\
    \ = dot_pos_start;\n                        let mut dot_pos_end = dot_pos_end;\n\
    \                        let mut dot_pos_start = dot_pos_start;\n            \
    \            while dot_pos_start != dot_pos_end {\n                          \
    \  let mut dot_pos_start = dot_pos_start;\n                            let mut\
    \ dot_pos_end = dot_pos_end;\n                            let mut dot_pos_start\
    \ = dot_pos_start;\n                            while dot_pos_start != dot_pos_end\
    \ {\n                                let mut dot_pos_start = dot_pos_start;\n\
    \                                let mut dot_pos_end = dot_pos_end;\n        \
    \                        let mut dot_pos_start = dot_pos_start;\n            \
    \                    while dot_pos_start != dot_pos_end {\n                  \
    \                  let mut dot_pos_start = dot_pos_start;\n                  \
    \                  let mut dot_pos_end = dot_pos_end;\n                      \
    \              let mut dot_pos_start = dot_pos_start;\n                      \
    \              while dot_pos_start != dot_pos_end {\n                        \
    \                let mut dot_pos_start = dot_pos_start;\n                    \
    \                    let mut dot_pos_end = dot_pos_end;\n                    \
    \                    let mut dot_pos_start = dot_pos_start;\n                \
    \                        while dot_pos_start != dot_pos_end {\n              \
    \                              let mut dot_pos_start = dot_pos_start;\n      \
    \                                      let mut dot_pos_end = dot_pos_end;\n  \
    \                                          let mut dot_pos_start = dot_pos_",
  "    if file_name.chars().count() > 3 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().count() == 0 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_ascii_letter()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().last().unwrap().is_ascii_letter() {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.char", " \
    \   let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    while dot_pos_start < file_name.len() {\n        let mut dot_pos_end\
    \ = dot_pos_start;\n        while dot_pos_end < file_name.len() {\n          \
    \  if file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z' {\n     \
    \           dot_pos_end += 1;\n            } else if file_name[dot_pos_end] >=\
    \ 'A' && file_name[dot_pos_end] <= 'Z' {\n                dot_pos_end += 1;\n\
    \            } else {\n                break;\n            }\n        }\n    \
    \    if dot_pos_start == dot_pos_end {\n            break;\n        }\n      \
    \  if file_name[dot_pos_start] >= '0' && file_name[dot_pos_start] <= '9' {\n \
    \           break;\n        }\n        dot_pos_start = dot_pos_end;\n    }\n \
    \   if dot_pos_start == dot_pos {\n        return String::from(\"No\");\n    }\n\
    \    if dot_pos_start < dot_pos {\n        dot_pos_start += 1;\n    }\n    if\
    \ dot_pos_end == dot_pos {\n        return String::from(\"Yes\");\n    }\n   \
    \ if dot_pos_end < dot_pos {\n        dot_pos_end += 1;\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ < dot_pos_end {\n        dot_pos_start += 1;\n    }\n    if dot_pos_end == dot_pos_end\
    \ {\n        return String::from(\"Yes\");\n    }\n    if dot_pos_end < dot_pos_end\
    \ {\n        dot_pos_end += 1;\n    }\n    if dot_pos_start == dot_pos_end {\n\
    \        return String::from(\"No\");\n    }\n    if dot_pos_start < dot_pos_end\
    \ {\n        dot_pos_start += 1;\n    }\n    if dot_pos_end == dot_pos_end {\n\
    \        return String::from(\"Yes\");\n    }\n    if dot_pos_end < dot_pos_end\
    \ {\n        dot_pos_end += 1;\n    }\n    if dot_pos_start == dot_pos_end {\n\
    \        return String::from(\"No\");\n    }\n    if dot_pos_start < dot_pos_end\
    \ {\n        dot_pos_start += 1;\n    }\n    if dot_pos_end == dot_pos_end {\n\
    \        return String::from(\"Yes\");\n    }\n    if dot_pos_end < dot_pos_end\
    \ {\n        dot_pos_", "    if file_name.len() > 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains('.') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()) {\n    \
    \    return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '.')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase() || c != 'a' || c != 'z') {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase() || c !=\
    \ 'A' || c != 'Z') {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_digit() || c != '0' || c != '9') {\n        return String::from(\"No\"\
    );\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '.' ||\
    \ c != '0' || c != '9') {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_lowercase() || c != 'a' || c != 'z' ||\
    \ c != 'A' || c != 'Z') {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_uppercase() || c != 'A' || c != 'Z' ||\
    \ c != 'a' || c != 'z') {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_digit() || c != '0' || c != '9' || c != 'a'\
    \ || c != 'z' || c != 'A' || c != 'Z') {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '.' || c\
    \ != '0' || c != '9' || c != 'a' || c != 'z' || c != 'A' || c != 'Z') {\n    \
    \    return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| ",
  "    if file_name.chars().count() > 3 {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut first_letter = file_name.chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() > dot_index {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() < dot_index {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.chars().next()\
    \ != dot_index {\n        return String::from(\"No\");\n    }\n    if file_name.char",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = dot_pos + 1;\n    while dot_pos < file_name.len() {\n \
    \       let mut dot_pos = file_name.find('.', dot_pos);\n        if dot_pos ==\
    \ String::npos {\n            return String::from(\"No\");\n        }\n      \
    \  let mut dot_pos = dot_pos + 1;\n        if dot_pos == file_name.len() {\n \
    \           return String::from(\"No\");\n        }\n        let mut dot_pos =\
    \ file_name.find('.', dot_pos);\n        if dot_pos == String::npos {\n      \
    \      return String::from(\"No\");\n        }\n        let mut dot_pos = dot_pos\
    \ + 1;\n        if dot_pos == file_name.len() {\n            return String::from(\"\
    No\");\n        }\n        let mut dot_pos = file_name.find('.', dot_pos);\n \
    \       if dot_pos == String::npos {\n            return String::from(\"No\");\n\
    \        }\n        let mut dot_pos = dot_pos + 1;\n        if dot_pos == file_name.len()\
    \ {\n            return String::from(\"No\");\n        }\n        let mut dot_pos\
    \ = file_name.find('.', dot_pos);\n        if dot_pos == String::npos {\n    \
    \        return String::from(\"No\");\n        }\n        let mut dot_pos = dot_pos\
    \ + 1;\n        if dot_pos == file_name.len() {\n            return String::from(\"\
    No\");\n        }\n        let mut dot_pos = file_name.find('.', dot_pos);\n \
    \       if dot_pos == String::npos {\n            return String::from(\"No\");\n\
    \        }\n        let mut dot_pos = dot_pos + 1;\n        if dot_pos == file_name.len()\
    \ {\n            return String::from(\"No\");\n        }\n        let mut dot_pos\
    \ = file_name.find('.', dot_pos);\n        if dot_pos == String::npos {\n    \
    \        return String::from(\"No\");\n        }\n        let mut dot_pos = dot_pos\
    \ + 1;\n        if dot_pos == file_name.len() {\n            return String::from(\"\
    No\");\n        }\n        let mut dot_pos = file_name.find('.', dot_pos);\n \
    \       if dot_pos == String::npos {\n            return String::from(\"No\");\n\
    \        }\n        let mut dot_pos = dot_pos + 1;\n        if dot_pos == file_name.len()\
    \ {\n            return String::from(\"No\");\n        }\n        let mut dot_pos\
    \ = file_name.find('.', dot_pos);\n        if dot_pos == String::", "    let mut\
    \ file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    \n    let mut dot_pos_end = dot_pos;\n    \n    while dot_pos_end < file_name.len()\
    \ {\n        let mut dot_pos_start = dot_pos_end;\n        \n        while dot_pos_start\
    \ < file_name.len() {\n            let mut char_pos = dot_pos_start;\n       \
    \     \n            if char_pos > dot_pos_end {\n                break;\n    \
    \        }\n            \n            let mut char_pos_end = char_pos;\n     \
    \       \n            while char_pos_end < file_name.len() {\n               \
    \ let mut char_pos_start = char_pos_end;\n                \n                if\
    \ char_pos_start > dot_pos_end {\n                    break;\n               \
    \ }\n                \n                let mut char_pos_end = char_pos_start;\n\
    \                \n                while char_pos_end < file_name.len() {\n  \
    \                  let mut char_pos_start = char_pos_end;\n                  \
    \  \n                    if char_pos_start > dot_pos_end {\n                 \
    \       break;\n                    }\n                    \n                \
    \    let mut char_pos_end = char_pos_start;\n                    \n          \
    \          if char_pos_end > dot_pos_end {\n                        break;\n \
    \                   }\n                    \n                    let mut char_pos_start\
    \ = char_pos_end;\n                    \n                    if char_pos_start\
    \ > dot_pos_end {\n                        break;\n                    }\n   \
    \                 \n                    let mut char_pos_end = char_pos_start;\n\
    \                    \n                    if char_pos_end > dot_pos_end {\n \
    \                       break;\n                    }\n                    \n\
    \                    let mut char_pos_start = char_pos_end;\n                \
    \    \n                    if char_pos_start > dot_pos_end {\n               \
    \         break;\n                    }\n                    \n              \
    \      let mut char_pos_end = char_pos_start;\n                    \n        \
    \            if char_pos_end > dot_pos_end {\n                        break;\n\
    \                    }\n                    \n                    let mut char_pos_start\
    \ = char_pos_end;\n                    \n                    if char_pos_start\
    \ > dot_pos_end {\n                        break;\n                    }\n   \
    \                 \n                    let mut char_pos_end = char_pos_start;\n\
    \                    \n                    if char_pos_end > dot_pos_end {\n \
    \                       break;\n                    }\n                    \n\
    \                    let mut char_pos_start = char_pos_end;\n                \
    \    \n                    if char_pos_start > dot_pos_end {\n               \
    \         break;\n                    }\n                    \n              \
    \      let mut char_pos_end = char_pos_start;\n                    \n        \
    \            if char_pos_end > dot_pos_end {\n                        break;\n\
    \                    }\n                    \n                    let mut char_pos_start\
    \ = char_pos_end;\n                    \n                    if char_pos_start\
    \ > dot_pos_end {\n                        break;\n                    }", " \
    \   if file_name.len() > 3 {\n        String::from(\"No\")\n    } else {\n   \
    \     let mut dot_pos = file_name.find('.')\n        if dot_pos == String::npos\
    \ {\n            String::from(\"No\")\n        } else {\n            let mut first_letter\
    \ = file_name[..dot_pos].chars().next().unwrap();\n            if first_letter\
    \ < 'a' || first_letter > 'z' {\n                String::from(\"No\")\n      \
    \      } else {\n                let mut dot_pos = file_name.find('.')\n     \
    \           if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_pos];\n\
    \                    let mut dot_name_chars = dot_name.chars();\n            \
    \        let mut dot_name_chars_iter = dot_name_chars.iter();\n              \
    \      let mut dot_name_chars_next = dot_name_chars_iter.next();\n           \
    \         let mut dot_name_chars_prev = dot_name_chars_iter.prev();\n        \
    \            let mut dot_name_chars_next_next = dot_name_chars_iter.next_back();\n\
    \                    let mut dot_name_chars_prev_prev = dot_name_chars_iter.prev_back();\n\
    \                    let mut dot_name_chars_next_next_next = dot_name_chars_iter.next_back();\n\
    \                    let mut dot_name_chars_prev_prev_next = dot_name_chars_iter.prev_back();\n\
    \                    let mut dot_name_chars_next_next_next_next = dot_name_chars_iter.next_back();\n\
    \                    let mut dot_name_chars_prev_prev_prev_next = dot_name_chars_iter.prev_back();\n\
    \                    let mut dot_name_chars_next_next_next_next_next = dot_name_chars_iter.next_back();\n\
    \                    let mut dot_name_chars_prev_prev_prev_prev_next = dot_name_chars_iter.prev_back();\n\
    \                    let mut dot_name_chars_next_next_next_next_next_next = dot_name_chars_iter.next_back();\n\
    \                    let mut dot_name_chars_prev_prev_prev_prev_prev_next = dot_name_chars_iter.prev_back();\n\
    \                    let mut dot_name_chars_next_next_next_next_next_next_next\
    \ = dot_name_chars_iter.next_back();\n                    let mut dot_name_chars_prev_prev_prev_prev_prev_prev_next\
    \ = dot_name_chars_iter.prev_back();\n                    let mut dot_name_chars_next_next_next_next_next_next_next_next\
    \ = dot_name_chars_iter.next_back();\n                    let mut dot_name_chars_prev_prev_prev_prev_prev_prev_next\
    \ = dot_name_chars_iter.prev_back();\n                    let mut dot_name_chars_next_",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos + 1;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let ", "    let\
    \ mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_", "    let mut counter\
    \ = 0;\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut\
    \ l = 0;\n    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n    let\
    \ mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n   \
    \ let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n\
    \    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n    let mut a = 0;\n\
    \    let mut b = 0;\n    let mut c = 0;\n    let mut d = 0;\n    let mut e = 0;\n\
    \    let mut f = 0;\n    let mut g = 0;\n    let mut h = 0;\n    let mut i = 0;\n\
    \    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n\
    \    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n    let mut q = 0;\n\
    \    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n\
    \    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n\
    \    let mut z = 0;\n    let mut a = 0;\n    let mut b = 0;\n    let mut c = 0;\n\
    \    let mut d = 0;\n    let mut e = 0;\n    let mut f = 0;\n    let mut g = 0;\n\
    \    let mut h = 0;\n    let mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n\
    \    let mut l = 0;\n    let mut m = 0;\n    let mut n = 0;\n    let mut o = 0;\n\
    \    let mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n\
    \    let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n\
    \    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n    let mut a = 0;\n\
    \    let mut b = 0;\n    let mut c = 0;\n    let mut d = 0;\n    let mut e = 0;\n\
    \    let mut f = 0;\n    let mut g = 0;\n    let mut h = 0;\n    let mut i = 0;\n\
    \    let mut j = 0;\n    let mut k = 0;\n    let mut l = 0;\n    let mut m = 0;\n\
    \    let mut n = 0;\n    let mut o = 0;\n    let mut p = 0;\n", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { return String::from(\"No\") }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { return String::from(\"No\") }\n    let mut\
    \ dot_pos_start = dot_pos + 1\n    while dot_pos_start > dot_pos_end {\n     \
    \   if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start] <= 'z' {\n\
    \            dot_pos_start -= 1;\n        } else if file_name[dot_pos_start] >=\
    \ 'A' && file_name[dot_pos_start] <= 'Z' {\n            dot_pos_start -= 1;\n\
    \        } else {\n            return String::from(\"No\");\n        }\n    }\n\
    \    if dot_pos_start == dot_pos_end {\n        if file_name[dot_pos_start] >=\
    \ 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        } else if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        } else {\n            return\
    \ String::from(\"No\");\n        }\n    }\n    if file_name[dot_pos_start] >=\
    \ '0' && file_name[dot_pos_start] <= '9' {\n        return String::from(\"Yes\"\
    );\n    } else {\n        return String::from(\"No\");\n    }", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_start = dot_pos;\n    let mut dot_pos_end = dot_pos;\n    \n   \
    \ loop {\n        dot_pos_end = dot_pos_start.saturating_sub(1);\n        if dot_pos_end\
    \ < String::npos && dot_pos_end != dot_pos_start {\n            return String::from(\"\
    No\");\n        }\n        \n        let mut dot_pos_start = dot_pos_end;\n  \
    \      \n        if dot_pos_start < String::npos && dot_pos_start != dot_pos_end\
    \ {\n            return String::from(\"No\");\n        }\n        \n        let\
    \ mut dot_pos_end = dot_pos_end;\n        \n        if dot_pos_end < String::npos\
    \ && dot_pos_end != dot_pos_start {\n            return String::from(\"No\");\n\
    \        }\n        \n        let mut dot_pos_start = dot_pos_end;\n        \n\
    \        if dot_pos_start < String::npos && dot_pos_start != dot_pos_end {\n \
    \           return String::from(\"No\");\n        }\n        \n        let mut\
    \ dot_pos_end = dot_pos_end;\n        \n        if dot_pos_end < String::npos\
    \ && dot_pos_end != dot_pos_start {\n            return String::from(\"No\");\n\
    \        }\n        \n        let mut dot_pos_start = dot_pos_end;\n        \n\
    \        if dot_pos_start < String::npos && dot_pos_start != dot_pos_end {\n \
    \           return String::from(\"No\");\n        }\n        \n        let mut\
    \ dot_pos_end = dot_pos_end;\n        \n        if dot_pos_end < String::npos\
    \ && dot_pos_end != dot_pos_start {\n            return String::from(\"No\");\n\
    \        }\n        \n        let mut dot_pos_start = dot_pos_end;\n        \n\
    \        if dot_pos_start < String::npos && dot_pos_start != dot_pos_end {\n \
    \           return String::from(\"No\");\n        }\n        \n        let mut\
    \ dot_pos_end = dot_pos_end;\n        \n        if dot_pos_end < String::npos\
    \ && dot_pos_end != dot_pos_start {\n            return String::from(\"No\");\n\
    \        }\n        \n        let mut dot_pos_start = dot_pos_end;\n        \n\
    \        if dot_pos_start < String::npos && dot_pos_start != dot_pos_end {\n \
    \           return String::from(\"No\");\n        }\n        \n        let mut\
    \ dot_pos_end = dot_pos_end;\n        \n        if dot_pos_", "    let mut file_name\
    \ = file_name.to_string();\n    \n    // Remove all non-alphanumeric characters\
    \ from the file's name\n    file_name.chars().filter(|c| !c.is_alphanumeric()).collect::<String>().to_string()",
  "    let mut file_name_chars = file_name.chars();\n    let mut dot_pos = file_name_chars.find_first_of('.');\n\
    \    let mut dot_pos_end = file_name_chars.len();\n    \n    if dot_pos == String::new().len()\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos != 0 {\n\
    \        dot_pos_end = dot_pos;\n    }\n    \n    let mut first_char_pos = 0;\n\
    \    \n    for c in file_name_chars {\n        if !c.is_ascii_letter() {\n   \
    \         return String::from(\"No\");\n        }\n        \n        if first_char_pos\
    \ == dot_pos {\n            return String::from(\"No\");\n        }\n        \n\
    \        first_char_pos = c;\n    }\n    \n    if dot_pos_end != file_name_chars.len()\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if file_name_chars[dot_pos_end\
    \ - 1] != '.' {\n        return String::from(\"No\");\n    }\n    \n    if file_name_chars[dot_pos_end\
    \ - 2] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name_chars[dot_pos_end\
    \ - 3] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name_chars[dot_pos_end\
    \ - 4] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name_chars[dot_pos_end\
    \ - 5] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name_chars[dot_pos_end\
    \ - 6] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name_chars[dot_pos_end\
    \ - 7] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name_chars[dot_pos_end\
    \ - 8] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name_chars[dot_pos_end\
    \ - 9] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name_chars[dot_pos_end\
    \ - 10] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name_chars[dot_pos_end\
    \ - 11] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name_chars[dot_pos_end\
    \ - 12] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name_chars[dot_pos_end\
    \ - 13] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name",
  "    if file_name.chars().count() > 3 {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos = file_name.rfind('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut first_char = file_name[dot_pos\
    \ + 1..].chars().next()\n    if first_char == String::from('.') {\n        return\
    \ String::from(\"No\");\n    }\n    if first_char.starts_with(String::from('a'))\
    \ || first_char.starts_with(String::from('A')) {\n        return String::from(\"\
    No\");\n    }\n    if first_char.starts_with(String::from('0')) || first_char.starts_with(String::from('9'))\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos == 0 {\n    \
    \    return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1..dot_pos].count()\
    \ != 1 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1..dot_pos].chars().next().unwrap().to_ascii_lowercase() != file_name[dot_pos\
    \ - 1..dot_pos] {\n        return String::from(\"No\");\n    }\n    return String::from(\"\
    Yes\");", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    let mut dot_pos_start_letter = true;\n    while dot_pos_start\
    \ < dot_pos_end {\n        if dot_pos_start == dot_pos_end {\n            break;\n\
    \        }\n        let mut letter = file_name[dot_pos_start];\n        if !((letter\
    \ >= 'a' && letter <= 'z') || (letter >= 'A' && letter <= 'Z')) {\n          \
    \  dot_pos_start_letter = false;\n            break;\n        }\n        dot_pos_start\
    \ += 1;\n    }\n    if dot_pos_start_letter {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == ", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    \n    let mut first_letter =\
    \ file_name.chars().next().unwrap();\n    if first_letter < 'a' || first_letter\
    \ > 'z' {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    if\
    \ dot_pos == dot_pos_2 {\n        return String::from(\"No\");\n    }\n    \n\
    \    if dot_pos > dot_pos_2 {\n        return String::from(\"No\");\n    }\n \
    \   \n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    \n    if dot_pos_3 > dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_3 > dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_3 > dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_3 > dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_3 > dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_3 > dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_3 > dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_3 > dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_3 > dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_3 > dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_3 > dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_3 > dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_3 > dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_3 > dot_pos_2\
    \ {\n        return String::from(\"No\");\n    }\n", "    if file_name.chars().count()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_ascii_letter() {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_ascii_upper()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_ascii_lower() {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_digit()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_alnum() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_punct()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_space() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_xdigit()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_alpha() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_digit()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_alnum() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_punct()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_space() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().first().unwrap().is_xdigit()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_alpha() {\n        return String::from(\"\
    No", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let ", "    let\
    \ mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos;\n    while dot_pos_start > 0 && file_name[dot_pos_start - 1] >= 'a'\
    \ && file_name[dot_pos_start - 1] <= 'z' {\n        dot_pos_start -= 1;\n    }\n\
    \    if dot_pos_start == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos;\n    while dot_pos_end < file_name.len()\
    \ && file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z' {\n      \
    \  dot_pos_end += 1;\n    }\n    if dot_pos_end == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos_end - dot_pos_start != 1 {\n  \
    \      return String::from(\"No\");\n    }\n    let mut dot_pos_start = dot_pos;\n\
    \    while dot_pos_start > 0 && file_name[dot_pos_start - 1] >= 'A' && file_name[dot_pos_start\
    \ - 1] <= 'Z' {\n        dot_pos_start -= 1;\n    }\n    if dot_pos_start == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    while dot_pos_end < file_name.len() && file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end]\
    \ <= 'Z' {\n        dot_pos_end += 1;\n    }\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    if dot_pos_end - dot_pos_start\
    \ != 1 {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start\
    \ = dot_pos;\n    while dot_pos_start > 0 && file_name[dot_pos_start - 1] >= '0'\
    \ && file_name[dot_pos_start - 1] <= '9' {\n        dot_pos_start -= 1;\n    }\n\
    \    if dot_pos_start == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos;\n    while dot_pos_end < file_name.len()\
    \ && file_name[dot_pos_end] >= '0' && file_name[dot_pos_end] <= '9' {\n      \
    \  dot_pos_end += 1;\n", "    let mut file_name = file_name.to_string();\n   \
    \ let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    if file_name.len() > 3 {\n   \
    \     return String::from(\"No\");\n    }\n    if file_name.starts_with(\"0\"\
    ) || file_name.starts_with(\"1\") || file_name.starts_with(\"2\") || file_name.starts_with(\"\
    3\") || file_name.starts_with(\"4\") || file_name.starts_with(\"5\") || file_name.starts_with(\"\
    6\") || file_name.starts_with(\"7\") || file_name.starts_with(\"8\") || file_name.starts_with(\"\
    9\") {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_punctuation()) {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.chars().any(|c| !c.is_ascii_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_symbol()) {\n    \
    \    return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_whitespace())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_control()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_newline()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_linefeed()) {\n  \
    \      return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_formfeed())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_backspace()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_formfeed()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::", "    let mut file_name = file_name.to_string();\n \
    \   let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = ", "    let mut file_name : String = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos { \n \
    \       return String::from(\"No\");\n    }\n    \n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos { \n \
    \       return String::from(\"No\");\n    }\n    \n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    \n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    \n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15\
    \ == String::npos { \n        return String::", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter2 = dot_pos_start;\n    let mut dot_pos_end_letter2 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter3 = dot_pos_start;\n    let mut dot_pos_end_letter3\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter4 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter4 = dot_pos_end;\n    let mut dot_pos_start_letter5 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter5 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter6 = dot_pos_start;\n    let mut dot_pos_end_letter6 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter7 = dot_pos_start;\n    let mut dot_pos_end_letter7\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter8 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter8 = dot_pos_end;\n    let mut dot_pos_start_letter9 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter9 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter10 = dot_pos_start;\n    let mut dot_pos_end_letter10 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter11 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter11 = dot_pos_end;\n    let mut dot_pos_start_letter12 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter12 = dot_pos_end;\n    let mut dot_pos_start_letter13\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter13 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter14 = dot_pos_start;\n    let mut dot_pos_end_letter14 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter15 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter15 = dot_pos_end;\n    let mut dot_pos_start_letter16 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter16 = dot_pos_end;\n    let mut dot_pos_start_letter17\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter17 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter18 = dot_pos_start;\n    let mut dot_pos_end_letter18 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter19 = ", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    while\
    \ dot_pos_start < file_name.len() {\n        if file_name[dot_pos_start] >= 'a'\
    \ && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start++;\n       \
    \ } else if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start] <= 'Z'\
    \ {\n            dot_pos_start++;\n        } else {\n            return String::from(\"\
    No\");\n        }\n    }\n    while dot_pos_end < file_name.len() {\n        if\
    \ file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z' {\n         \
    \   dot_pos_end++;\n        } else if file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end]\
    \ <= 'Z' {\n            dot_pos_end++;\n        } else {\n            return String::from(\"\
    No\");\n        }\n    }\n    if dot_pos_start == dot_pos_end {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos + 1 {\n      \
    \  return String::from(\"No\");\n    }\n    if dot_pos_end == dot_pos + 1 {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start]\
    \ != '0' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] != '9' {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos + 1 {\n        return String::from(\"No\");\n    }\n    if dot_pos_end\
    \ == dot_pos + 1 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start]\
    \ != 'a' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end\
    \ - 1] != 'z' {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos + 1 {\n        return String::from(\"No\");\n    }\n    if dot_pos_end\
    \ == dot_pos + 1 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start]\
    \ != 'A' {\n        return String::from(\"No\");\n    }\n    if file_name", " \
    \   let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ {\n        return ", "    if file_name.chars().count() > 3 {\n        String::from(\"\
    No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n        if\
    \ dot_pos == String::npos {\n            String::from(\"No\")\n        } else\
    \ {\n            let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else if let Some(dot_pos) = file_name.find('..', dot_pos\
    \ + 1) {\n                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_letter = file_name[dot_pos\
    \ + 1..].chars().next().unwrap();\n                    if dot_letter < 'a' ||\
    \ dot_letter > 'z' {\n                        String::from(\"No\")\n         \
    \           } else {\n                        String::from(\"Yes\")\n        \
    \            }\n                }\n            } else {\n                String::from(\"\
    No\")\n            }\n        }\n    }", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    while dot_pos_start < dot_pos_end {\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start_letter\
    \ = dot_pos_start;\n            break;\n        }\n        dot_pos_start += 1;\n\
    \    }\n    if dot_pos_start_letter != dot_pos_start {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end_letter = dot_pos_end;\n    while dot_pos_end_letter\
    \ > dot_pos_start {\n        if file_name[dot_pos_end_letter] >= 'a' && file_name[dot_pos_end_letter]\
    \ <= 'z' {\n            break;\n        }\n        dot_pos_end_letter -= 1;\n\
    \    }\n    if dot_pos_end_letter != dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end_letter < dot_pos_start {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end_letter] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end_letter - 1] != '0' {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[dot_pos_end_letter - 2] != '9'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end_letter\
    \ - 3] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end_letter\
    \ - 4] != 'txt' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end_letter\
    \ - 5] != 'exe' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end_letter\
    \ - 6] != 'dll' {\n        return String::from(\"No\");\n    }\n    return String::from(\"\
    Yes\");", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end_end\
    \ = file_name.find('.')\n    if dot_pos_end_end == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end_end = dot_pos_end_end\
    \ + 1;\n    let mut dot_pos_end_end_end = file_name.find('.')\n    if dot_pos_end_end_end\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end_end_end = dot_pos_end_end_end + 1;\n    let mut dot_pos_end_end_end_end\
    \ = file_name.find('.')\n    if dot_pos_end_end_end_end == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    let mut dot_pos_end_end_end_end\
    \ = dot_pos_end_end_end_end + 1;\n    let mut dot_pos_end_end_end_end_end = file_name.find('.')\n\
    \    if dot_pos_end_end_end_end_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end_end_end_end_end = dot_pos_end_end_end_end_end\
    \ + 1;\n    let mut dot_pos_end_end_end_end_end_end = file_name.find('.')\n  \
    \  if dot_pos_end_end_end_end_end_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end_end_end_end_end_end_end = dot_pos_end_end_end_end_end_end_end\
    \ + 1;\n    let mut dot_pos_end_end_end_end_end_end_end_end = file_name.find('.')\n\
    \    if dot_pos_end_end_end_end_end_end_end_end == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end_end_end_end_end_end_end_end\
    \ = dot_pos_end_end_end_end_end_end_end_end_end + 1;\n    let mut dot_pos_end_end_end_end_end_end_end_end_end_end\
    \ = file_name.find('.')\n    if dot_pos_end_end_end_end_end_end_end_end_end ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end_end_end_end_end_end_end_end_end_end\
    \ = ", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos + 1;\n    while dot_pos_start < dot_pos_end {\n        let mut char_pos\
    \ = file_name.find(' ', dot_pos_start);\n        if char_pos == String::npos {\n\
    \            return String::from(\"No\");\n        }\n        let mut char_pos_end\
    \ = file_name.find(' ', dot_pos_end);\n        if char_pos_end == String::npos\
    \ {\n            return String::from(\"No\");\n        }\n        if char_pos\
    \ > char_pos_end {\n            return String::from(\"No\");\n        }\n    \
    \    let mut char_pos_start = char_pos + 1;\n        if char_pos_start > char_pos_end\
    \ {\n            return String::from(\"No\");\n        }\n        let mut char_pos_start\
    \ = char_pos_start + 1;\n        if char_pos_start > char_pos_end {\n        \
    \    return String::from(\"No\");\n        }\n        let mut char_pos_start =\
    \ char_pos_start + 1;\n        if char_pos_start > char_pos_end {\n          \
    \  return String::from(\"No\");\n        }\n        let mut char_pos_start = char_pos_start\
    \ + 1;\n        if char_pos_start > char_pos_end {\n            return String::from(\"\
    No\");\n        }\n        let mut char_pos_start = char_pos_start + 1;\n    \
    \    if char_pos_start > char_pos_end {\n            return String::from(\"No\"\
    );\n        }\n        let mut char_pos_start = char_pos_start + 1;\n        if\
    \ char_pos_start > char_pos_end {\n            return String::from(\"No\");\n\
    \        }\n        let mut char_pos_start = char_pos_start + 1;\n        if char_pos_start\
    \ > char_pos_end {\n            return String::from(\"No\");\n        }\n    \
    \    let mut char_pos_start = char_pos_start + 1;\n        if char_pos_start >\
    \ char_pos_end {\n            return String::from(\"No\");\n        }\n      \
    \  let mut char_pos_start = char_pos_start + 1;\n        if char_pos_start > char_pos_end\
    \ {\n            return String::from(\"No\");\n        }\n        let mut char_pos_start\
    \ = char_pos_start + 1;\n        if char_pos_start > char_pos_end {\n        \
    \    return String::from(\"No\");\n        }\n        let mut char_pos_start =\
    \ char_pos_start + 1;\n        if char_pos_start > char_pos_end {\n", "    if\
    \ file_name.len() > 3 {\n        String::from(\"No\")\n    } else {\n        let\
    \ mut dot_pos = file_name.find('.')\n        if dot_pos == String::npos {\n  \
    \          String::from(\"No\")\n        } else {\n            let mut first_letter\
    \ = file_name[..dot_pos].chars().next().unwrap();\n            if first_letter\
    \ < 'a' || first_letter > 'z' {\n                String::from(\"No\")\n      \
    \      } else {\n                let mut dot_pos = file_name.find('.')\n     \
    \           if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_pos];\n\
    \                    if dot_name.len() == dot_pos {\n                        if\
    \ dot_name.chars().any(|c| c != '.') {\n                            String::from(\"\
    No\")\n                        } else {\n                            String::from(\"\
    Yes\")\n                        }\n                    } else {\n            \
    \            String::from(\"No\")\n                    }\n                }\n\
    \            }\n        }\n    }", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos { \n", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\")\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { \n        return String::from(\"No\")\n\
    \    }\n    let mut dot_pos_start = dot_pos + 1\n    if dot_pos_start == String::npos\
    \ { \n        return String::from(\"No\")\n    }\n    let mut dot_pos_start_end\
    \ = dot_pos_start + 1\n    if dot_pos_start_end == String::npos { \n        return\
    \ String::from(\"No\")\n    }\n    let mut dot_pos_start_end_end = dot_pos_start_end\
    \ + 1\n    if dot_pos_start_end_end == String::npos { \n        return String::from(\"\
    No\")\n    }\n    let mut dot_pos_start_end_end_end = dot_pos_start_end_end +\
    \ 1\n    if dot_pos_start_end_end_end == String::npos { \n        return String::from(\"\
    No\")\n    }\n    let mut dot_pos_start_end_end_end_end = dot_pos_start_end_end_end\
    \ + 1\n    if dot_pos_start_end_end_end_end == String::npos { \n        return\
    \ String::from(\"No\")\n    }\n    let mut dot_pos_start_end_end_end_end_end =\
    \ dot_pos_start_end_end_end_end + 1\n    if dot_pos_start_end_end_end_end_end\
    \ == String::npos { \n        return String::from(\"No\")\n    }\n    let mut\
    \ dot_pos_start_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end +\
    \ 1\n    if dot_pos_start_end_end_end_end_end_end == String::npos { \n       \
    \ return String::from(\"No\")\n    }\n    let mut dot_pos_start_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end + 1\n    if dot_pos_start_end_end_end_end_end_end_end\
    \ == String::npos { \n        return String::from(\"No\")\n    }\n    let mut\
    \ dot_pos_start_end_end_end_end_end_end_end = dot_pos_start_end_end_end_end_end_end_end\
    \ + 1\n    if dot_pos_start_end_end_end_end_end_end_end_end == String::npos {\
    \ \n        return String::from(\"No\")\n    }\n    let mut dot_pos_start_end_end_end_end_end_end_end_end\
    \ = dot_pos_start_end_end_end_end_end_end_end_end + 1\n    if dot_pos_start_end_end_end_end_end_end_end_end_end\
    \ == String::npos { \n        return String::from(\"No\")\n", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { \n        return String::from(\"No\");\n    }\n  \
    \  let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos {\
    \ \n        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ { \n", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.contains(\"\
    .\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    a\") || file_name.starts_with(\"A\") {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.starts_with(\"0\") || file_name.starts_with(\"9\") {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    .\") {\n        let mut dot_index = file_name.rfind(\".\");\n        if dot_index\
    \ == String::npos {\n            return String::from(\"No\");\n        }\n   \
    \     let mut dot_name = file_name.clone();\n        dot_name.truncate(dot_index);\n\
    \        if dot_name.contains(\".\") {\n            return String::from(\"No\"\
    );\n        }\n        if dot_name.starts_with(\"a\") || dot_name.starts_with(\"\
    A\") {\n            return String::from(\"No\");\n        }\n        if dot_name.starts_with(\"\
    0\") || dot_name.starts_with(\"9\") {\n            return String::from(\"No\"\
    );\n        }\n    }\n    return String::from(\"Yes\");", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n  \
    \  if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_letter = file_name[dot_pos\
    \ + 1..].chars().next().unwrap();\n    if dot_letter != 'txt' && dot_letter !=\
    \ 'exe' && dot_letter != 'dll' {\n        return String::from(\"No\");\n    }\n\
    \    String::from(\"Yes\")", "    let mut file_name = file_name.to_string();\n\
    \    if file_name.len() > 3 {\n        file_name.truncate(3);\n    }\n    if file_name.contains('.')\
    \ {\n        file_name.truncate(file_name.rfind('.'));\n    }\n    if file_name.starts_with('0')\
    \ && file_name.len() == 3 {\n        file_name.truncate(2);\n    }\n    if file_name.starts_with('a')\
    \ && file_name.len() == 3 {\n        file_name.truncate(2);\n    }\n    if file_name.starts_with('A')\
    \ && file_name.len() == 3 {\n        file_name.truncate(2);\n    }\n    if file_name.starts_with('z')\
    \ && file_name.len() == 3 {\n        file_name.truncate(2);\n    }\n    if file_name.starts_with('Z')\
    \ && file_name.len() == 3 {\n        file_name.truncate(2);\n    }\n    if file_name.starts_with('0')\
    \ && file_name.len() == 2 {\n        file_name.truncate(1);\n    }\n    if file_name.starts_with('a')\
    \ && file_name.len() == 2 {\n        file_name.truncate(1);\n    }\n    if file_name.starts_with('A')\
    \ && file_name.len() == 2 {\n        file_name.truncate(1);\n    }\n    if file_name.starts_with('z')\
    \ && file_name.len() == 2 {\n        file_name.truncate(1);\n    }\n    if file_name.starts_with('Z')\
    \ && file_name.len() == 2 {\n        file_name.truncate(1);\n    }\n    if file_name.starts_with('0')\
    \ && file_name.len() == 1 {\n        file_name.truncate(0);\n    }\n    if file_name.starts_with('a')\
    \ && file_name.len() == 1 {\n        file_name.truncate(0);\n    }\n    if file_name.starts_with('A')\
    \ && file_name.len() == 1 {\n        file_name.truncate(0);\n    }\n    if file_name.starts_with('z')\
    \ && file_name.len() == 1 {\n        file_name.truncate(0);\n    }\n    if file_name.starts_with('Z')\
    \ && file_name.len() == 1 {\n        file_name.truncate(0);\n    }\n    if file_name.starts_with('0')\
    \ && file_name.len() == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.starts_with('a')\
    \ && file_name.len() == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.starts_with('A')\
    \ && file_name.len() == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.starts_with('z')\
    \ && file_name.len() == 0 {\n        file_name.truncate(0);\n    }\n    if file_name.starts_with",
  "    if file_name.len() > 3 {\n        String::from(\"No\")\n    } else {\n    \
    \    let mut dot_pos = file_name.find('.')\n        let mut dot_pos_2 = file_name.find('.')\n\
    \        if dot_pos == dot_pos_2 {\n            String::from(\"No\")\n       \
    \ } else {\n            let mut first_letter = file_name.chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos_3 = file_name.find('.')\n\
    \                if dot_pos_3 == dot_pos_2 {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_pos_4 = file_name.find('.')\n\
    \                    if dot_pos_4 == dot_pos_2 {\n                        String::from(\"\
    No\")\n                    } else {\n                        String::from(\"Yes\"\
    )\n                    }\n                }\n            }\n        }\n    }",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    let mut ", "    if file_name.chars().count() > 3 {\n        String::from(\"\
    No\")\n    } else {\n        let mut dot_pos = file_name.rfind('.')\n        if\
    \ dot_pos == String::npos {\n            String::from(\"No\")\n        } else\
    \ {\n            let mut dot_name = file_name.clone();\n            dot_name.truncate(dot_pos);\n\
    \            if dot_name.chars().count() > 1 {\n                dot_name.truncate(0);\n\
    \                if dot_name.chars().count() > 1 {\n                    dot_name.truncate(0);\n\
    \                    if dot_name.chars().count() > 1 {\n                     \
    \   dot_name.truncate(0);\n                        if dot_name.chars().count()\
    \ > 1 {\n                            dot_name.truncate(0);\n                 \
    \           if dot_name.chars().count() > 1 {\n                              \
    \  dot_name.truncate(0);\n                                if dot_name.chars().count()\
    \ > 1 {\n                                    dot_name.truncate(0);\n         \
    \                           if dot_name.chars().count() > 1 {\n              \
    \                          dot_name.truncate(0);\n                           \
    \             if dot_name.chars().count() > 1 {\n                            \
    \                dot_name.truncate(0);\n                                     \
    \       if dot_name.chars().count() > 1 {\n                                  \
    \              dot_name.truncate(0);\n                                       \
    \         if dot_name.chars().count() > 1 {\n                                \
    \                    dot_name.truncate(0);\n                                 \
    \                   if dot_name.chars().count() > 1 {\n                      \
    \                                  dot_name.truncate(0);\n                   \
    \                                     if dot_name.chars().count() > 1 {\n    \
    \                                                        dot_name.truncate(0);\n\
    \                                                            if dot_name.chars().count()\
    \ > 1 {\n                                                                dot_name.truncate(0);\n\
    \                                                                if dot_name.chars().count()\
    \ > 1 {\n                                                                    dot_name.truncate(0);\n\
    \                                                                    if dot_name.chars().count()\
    \ > 1 {\n                                                                    \
    \    dot_name.truncate(0);\n                                                 \
    \                   }\n                                                      \
    \          }\n                                                            }\n\
    \                                                        }\n                 \
    \                                   }\n                                      \
    \          }\n                                            }\n                \
    \                        }\n                                    }\n          \
    \                      }\n                            }\n                    \
    \    }\n                    }\n                }\n            }\n        }\n \
    \   }", "    let mut file_name = file_name.to_string();\n    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.contains('.')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    a\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    A\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    0\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    9\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    _\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    $\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    %\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    *\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    (\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    )\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    ~\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    \\\"\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    '\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    <\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    <\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    =\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    ?\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    @\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    [\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    ]\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    {\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    }\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    (\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    )", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_", "    if file_name.len()\
    \ > 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_index\
    \ = file_name.rfind('.')\n        if dot_index == String::npos {\n           \
    \ String::from(\"No\")\n        } else {\n            let mut first_letter = file_name[..dot_index].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_index = file_name.rfind('.')\n\
    \                if dot_index == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_index];\n\
    \                    if dot_name.chars().any(|c| c != '.') {\n               \
    \         String::from(\"No\")\n                    } else {\n               \
    \         String::from(\"Yes\")\n                    }\n                }\n  \
    \          }\n        }\n    }", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos +\
    \ 1;\n    let mut dot_pos_end = file_name.len();\n    let mut dot_pos_start =\
    \ 0;\n    while dot_pos < dot_pos_end {\n        let mut dot_pos_start = dot_pos;\n\
    \        if dot_pos == dot_pos_end {\n            break;\n        }\n        if\
    \ file_name[dot_pos] >= 'a' && file_name[dot_pos] <= 'z' {\n            dot_pos_start\
    \ = dot_pos + 1;\n        }\n        if file_name[dot_pos] >= 'A' && file_name[dot_pos]\
    \ <= 'Z' {\n            dot_pos_start = dot_pos + 1;\n        }\n        if dot_pos_start\
    \ == dot_pos {\n            break;\n        }\n        dot_pos_end = dot_pos;\n\
    \        dot_pos = dot_pos + 1;\n    }\n    if dot_pos_start == dot_pos {\n  \
    \      return String::from(\"No\");\n    }\n    if dot_pos_start == 0 {\n    \
    \    return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start\
    \ - 1] >= '0' && file_name[dot_pos_start - 1] <= '9' {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end + 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_start - 1] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end + 2 {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_start - 2] != 'txt' && file_name[dot_pos_start\
    \ - 2] != 'exe' && file_name[dot_pos_start - 2] != 'dll' {\n        return String::from(\"\
    No\");\n    }\n    return String::from(\"Yes\");", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos;\n    while dot_pos_start != dot_pos_end\
    \ {\n        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end\
    \ = dot_pos_end;\n        if dot_pos_start == dot_pos {\n            dot_pos_start\
    \ += 1;\n        }\n        if dot_pos_end == dot_pos {\n            dot_pos_end\
    \ += 1;\n        }\n        if dot_pos_start < dot_pos_end {\n            let\
    \ mut dot_pos_start = dot_pos_end;\n            let mut dot_pos_end = dot_pos_end;\n\
    \            if dot_pos_start == dot_pos {\n                dot_pos_start += 1;\n\
    \            }\n            if dot_pos_end == dot_pos {\n                dot_pos_end\
    \ += 1;\n            }\n            if dot_pos_start < dot_pos_end {\n       \
    \         dot_pos_end = dot_pos;\n            }\n        }\n        if dot_pos_start\
    \ == dot_pos {\n            dot_pos_start += 1;\n        }\n        if dot_pos_end\
    \ == dot_pos {\n            dot_pos_end += 1;\n        }\n        if dot_pos_start\
    \ < dot_pos_end {\n            dot_pos_end = dot_pos;\n        }\n        if dot_pos_start\
    \ == dot_pos {\n            dot_pos_start += 1;\n        }\n        if dot_pos_end\
    \ == dot_pos {\n            dot_pos_end += 1;\n        }\n        if dot_pos_start\
    \ < dot_pos_end {\n            dot_pos_end = dot_pos;\n        }\n        if dot_pos_start\
    \ == dot_pos {\n            dot_pos_start += 1;\n        }\n        if dot_pos_end\
    \ == dot_pos {\n            dot_pos_end += 1;\n        }\n        if dot_pos_start\
    \ < dot_pos_end {\n            dot_pos_end = dot_pos;\n        }\n        if dot_pos_start\
    \ == dot_pos {\n            dot_pos_start += 1;\n        }\n        if dot_pos_end\
    \ == dot_pos {\n            dot_pos_end += 1;\n        }\n        if dot_pos_start\
    \ < dot_pos_end {\n            dot_pos_end = dot_pos;\n        }\n        if dot_pos_start\
    \ == dot_pos {\n            dot_pos_start += 1;\n        }\n        if dot_pos_end\
    \ == dot_pos {\n            dot_pos_end += 1;\n        }\n        if dot_pos_start\
    \ < dot_pos_end {\n            dot_pos_end = dot_pos;\n        }\n        if dot_pos_start\
    \ == dot_pos {\n            dot_pos_start += 1;\n        }\n        if ", "  \
    \  let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    let mut dot_pos\
    \ = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end\
    \ == String::npos { return String::from(\"No\") }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end_2 = file_name.find('.')\n    if dot_pos_end_2\
    \ == String::npos { return String::from(\"No\") }\n    let mut dot_pos_end_2 =\
    \ dot_pos_end_2 + 1;\n    let mut dot_pos_end_3 = file_name.find('.')\n    if\
    \ dot_pos_end_3 == String::npos { return String::from(\"No\") }\n    let mut dot_pos_end_3\
    \ = dot_pos_end_3 + 1;\n    let mut dot_pos_end_4 = file_name.find('.')\n    if\
    \ dot_pos_end_4 == String::npos { return String::from(\"No\") }\n    let mut dot_pos_end_4\
    \ = dot_pos_end_4 + 1;\n    let mut dot_pos_end_5 = file_name.find('.')\n    if\
    \ dot_pos_end_5 == String::npos { return String::from(\"No\") }\n    let mut dot_pos_end_5\
    \ = dot_pos_end_5 + 1;\n    let mut dot_pos_end_6 = file_name.find('.')\n    if\
    \ dot_pos_end_6 == String::npos { return String::from(\"No\") }\n    let mut dot_pos_end_6\
    \ = dot_pos_end_6 + 1;\n    let mut dot_pos_end_7 = file_name.find('.')\n    if\
    \ dot_pos_end_7 == String::npos { return String::from(\"No\") }\n    let mut dot_pos_end_7\
    \ = dot_pos_end_7 + 1;\n    let mut dot_pos_end_8 = file_name.find('.')\n    if\
    \ dot_pos_end_8 == String::npos { return String::from(\"No\") }\n    let mut dot_pos_end_8\
    \ = dot_pos_end_8 + 1;\n    let mut dot_pos_end_9 = file_name.find('.')\n    if\
    \ dot_pos_end_9 == String::npos { return String::from(\"No\") }\n    let mut dot_pos_end_9\
    \ = dot_pos_end_9 + 1;\n    let mut dot_pos_end_10 = file_name.find('.')\n   \
    \ if dot_pos_end_10 == String::npos { return String::from(\"No\") }\n    let mut\
    \ dot_pos_end_10 = dot_pos_end_10 + 1;\n    let mut dot_pos_end_11 = file_name.find('.')\n\
    \    if dot_pos_end_11 == String::npos { return String::from(\"No\") }\n    let ",
  "    if file_name.chars().count() > 3 {\n        String::from(\"No\")\n    } else\
    \ {\n        let mut dot_pos = file_name.rfind('.')\n        let mut dot_pos_end\
    \ = dot_pos;\n        let mut dot_pos_start = dot_pos;\n        let mut dot_pos_len\
    \ = dot_pos - dot_pos_start;\n        let mut dot_pos_len2 = dot_pos_len;\n  \
    \      let mut dot_pos_len3 = dot_pos_len;\n        let mut dot_pos_len4 = dot_pos_len;\n\
    \        let mut dot_pos_len5 = dot_pos_len;\n        let mut dot_pos_len6 = dot_pos_len;\n\
    \        let mut dot_pos_len7 = dot_pos_len;\n        let mut dot_pos_len8 = dot_pos_len;\n\
    \        let mut dot_pos_len9 = dot_pos_len;\n        let mut dot_pos_len10 =\
    \ dot_pos_len;\n        let mut dot_pos_len11 = dot_pos_len;\n        let mut\
    \ dot_pos_len12 = dot_pos_len;\n        let mut dot_pos_len13 = dot_pos_len;\n\
    \        let mut dot_pos_len14 = dot_pos_len;\n        let mut dot_pos_len15 =\
    \ dot_pos_len;\n        let mut dot_pos_len16 = dot_pos_len;\n        let mut\
    \ dot_pos_len17 = dot_pos_len;\n        let mut dot_pos_len18 = dot_pos_len;\n\
    \        let mut dot_pos_len19 = dot_pos_len;\n        let mut dot_pos_len20 =\
    \ dot_pos_len;\n        let mut dot_pos_len21 = dot_pos_len;\n        let mut\
    \ dot_pos_len22 = dot_pos_len;\n        let mut dot_pos_len23 = dot_pos_len;\n\
    \        let mut dot_pos_len24 = dot_pos_len;\n        let mut dot_pos_len25 =\
    \ dot_pos_len;\n        let mut dot_pos_len26 = dot_pos_len;\n        let mut\
    \ dot_pos_len27 = dot_pos_len;\n        let mut dot_pos_len28 = dot_pos_len;\n\
    \        let mut dot_pos_len29 = dot_pos_len;\n        let mut dot_pos_len30 =\
    \ dot_pos_len;\n        let mut dot_pos_len31 = dot_pos_len;\n        let mut\
    \ dot_pos_len32 = dot_pos_len;\n        let mut dot_pos_len33 = dot_pos_len;\n\
    \        let mut dot_pos_len34 = dot_pos_len;\n        let mut dot_pos_len35 =\
    \ dot_pos_len;\n        let mut dot_pos_len36 = dot_pos_len;\n        let mut\
    \ dot_pos_len37 = dot_pos_len;\n        let mut dot_pos_len38 = dot_pos_len;\n\
    \        let mut dot_pos_len39 = dot_pos_len;\n        let mut dot_", "    let\
    \ mut counter = 0;\n    let mut dot_count = 0;\n    let mut first_letter = false;\n\
    \    let mut last_letter = false;\n    let mut first_letter_is_letter = false;\n\
    \    let mut last_letter_is_letter = false;\n    let mut first_letter_is_digit\
    \ = false;\n    let mut last_letter_is_digit = false;\n    let mut first_letter_is_dot\
    \ = false;\n    let mut last_letter_is_dot = false;\n    let mut dot_is_digit\
    \ = false;\n    let mut dot_is_letter = false;\n    let mut dot_is_dot = false;\n\
    \    let mut dot_is_space = false;\n    let mut dot_is_dash = false;\n    let\
    \ mut dot_is_slash = false;\n    let mut dot_is_colon = false;\n    let mut dot_is_semicolon\
    \ = false;\n    let mut dot_is_equal = false;\n    let mut dot_is_comma = false;\n\
    \    let mut dot_is_apostrophe = false;\n    let mut dot_is_dollar = false;\n\
    \    let mut dot_is_percent = false;\n    let mut dot_is_ampersand = false;\n\
    \    let mut dot_is_asterisk = false;\n    let mut dot_is_plus = false;\n    let\
    \ mut dot_is_minus = false;\n    let mut dot_is_open_bracket = false;\n    let\
    \ mut dot_is_close_bracket = false;\n    let mut dot_is_open_square_bracket =\
    \ false;\n    let mut dot_is_close_square_bracket = false;\n    let mut dot_is_open_brace\
    \ = false;\n    let mut dot_is_close_brace = false;\n    let mut dot_is_open_bracket\
    \ = false;\n    let mut dot_is_close_bracket = false;\n    let mut dot_is_open_square_bracket\
    \ = false;\n    let mut dot_is_close_square_bracket = false;\n    let mut dot_is_open_brace\
    \ = false;\n    let mut dot_is_close_brace = false;\n    let mut dot_is_open_bracket\
    \ = false;\n    let mut dot_is_close_bracket = false;\n    let mut dot_is_open_square_bracket\
    \ = false;\n    let mut dot_is_close_square_bracket = false;\n    let mut dot_is_open_brace\
    \ = false;\n    let mut dot_is_close_brace = false;\n    let mut dot_is_open_bracket\
    \ = false;\n    let mut dot_is_close_bracket = false;\n    let mut dot_is_open_square_bracket\
    \ = false;\n    let mut dot_is_close_square_bracket = false;\n    let mut dot_is_open_brace\
    \ = false;\n    let mut dot_is_close_brace = false;\n    let mut dot_is_open_bracket\
    \ = false;\n    let mut dot_is_close_bra", "    let mut file_name_str = file_name.to_string();\n\
    \    file_name_str.truncate(3);\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"\
    0\");\n    file_name_str.push_str(\"0\");\n    file_name_str.push_str(\"0\");\n\
    \    file_name_str.push_str(\"0", "    if file_name.chars().count() > 3 {\n  \
    \      return String::from(\"No\");\n    }\n    if file_name.chars().count() ==\
    \ 0 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 3 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 4 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 5 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 6 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 7 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 8 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 9 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 10 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 11 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 12 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 13 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 14 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 15 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 16 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 17 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 18 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 19 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 20 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 21 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 22 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 23 {\n        return String::from(\"Yes\");\n    }\n    if file_name.chars().count()\
    \ == 24 {\n        return String::from(\"Yes\");\n", "    let mut file_name_components\
    \ = file_name.split_ascii_lowercase();\n    file_name_components.remove(\".txt\"\
    );\n    file_name_components.remove(\".exe\");\n    file_name_components.remove(\"\
    .dll\");\n    file_name_components.remove(\"..\");\n    file_name_components.remove(\"\
    0\");\n    file_name_components.remove(\"1\");\n    file_name_components.remove(\"\
    2\");\n    file_name_components.remove(\"3\");\n    file_name_components.remove(\"\
    4\");\n    file_name_components.remove(\"5\");\n    file_name_components.remove(\"\
    6\");\n    file_name_components.remove(\"7\");\n    file_name_components.remove(\"\
    8\");\n    file_name_components.remove(\"9\");\n    file_name_components.remove(\"\
    a\");\n    file_name_components.remove(\"b\");\n    file_name_components.remove(\"\
    c\");\n    file_name_components.remove(\"d\");\n    file_name_components.remove(\"\
    e\");\n    file_name_components.remove(\"f\");\n    file_name_components.remove(\"\
    g\");\n    file_name_components.remove(\"h\");\n    file_name_components.remove(\"\
    i\");\n    file_name_components.remove(\"j\");\n    file_name_components.remove(\"\
    k\");\n    file_name_components.remove(\"l\");\n    file_name_components.remove(\"\
    m\");\n    file_name_components.remove(\"n\");\n    file_name_components.remove(\"\
    o\");\n    file_name_components.remove(\"p\");\n    file_name_components.remove(\"\
    q\");\n    file_name_components.remove(\"r\");\n    file_name_components.remove(\"\
    s\");\n    file_name_components.remove(\"t\");\n    file_name_components.remove(\"\
    u\");\n    file_name_components.remove(\"v\");\n    file_name_components.remove(\"\
    w\");\n    file_name_components.remove(\"x\");\n    file_name_components.remove(\"\
    y\");\n    file_name_components.remove(\"z\");\n    file_name_components.remove(\"\
    A\");\n    file_name_components.remove(\"B\");\n    file_name_components.remove(\"\
    C\");\n    file_name_components.remove(\"D\");\n    file_name_components.remove(\"\
    E\");\n    file_name_components.remove(\"F\");\n    file_name_components.remove(\"\
    G\");\n    file_name_components.remove(\"H\");\n    file_name_components.remove(\"\
    I\");\n    file_name_components.remove(\"J\");\n    file_name_components.remove(\"\
    K\");\n    file_name_components.remove(\"L\");\n    file_name_components.remove(\"\
    M\");\n    file_name_components.remove(\"N\");\n    file_name_components.remove(\"\
    O\");\n    file_name_components.remove(\"", "    if file_name.len() > 3 {\n  \
    \      String::from(\"No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n\
    \        if dot_pos == String::npos {\n            String::from(\"No\")\n    \
    \    } else {\n            let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_pos];\n\
    \                    if dot_name.chars().any(|c| c != '.') {\n               \
    \         String::from(\"No\")\n                    } else {\n               \
    \         let mut dot_pos = dot_name.find('.')\n                        if dot_pos\
    \ == String::npos {\n                            String::from(\"No\")\n      \
    \                  } else {\n                            let mut dot_name = dot_name[..dot_pos];\n\
    \                            if dot_name.chars().any(|c| c != 'txt' && c != 'exe'\
    \ && c != 'dll') {\n                                String::from(\"No\")\n   \
    \                         } else {\n                                String::from(\"\
    Yes\")\n                            }\n                        }\n           \
    \         }\n                }\n            }\n        }\n    }", "    if file_name.chars().count()\
    \ > 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_pos =\
    \ file_name.rfind('.')\n        if dot_pos == String::npos {\n            String::from(\"\
    No\")\n        } else {\n            let mut first_char = file_name[dot_pos as\
    \ usize].to_ascii_lowercase();\n            if first_char == 'a' || first_char\
    \ == 'b' || first_char == 'c' || first_char == 'd' ||\n                first_char\
    \ == 'e' || first_char == 'f' || first_char == 'g' || first_char == 'h' ||\n \
    \               first_char == 'i' || first_char == 'j' || first_char == 'k' ||\
    \ first_char == 'l' ||\n                first_char == 'm' || first_char == 'n'\
    \ || first_char == 'o' || first_char == 'p' ||\n                first_char ==\
    \ 'q' || first_char == 'r' || first_char == 's' || first_char == 't' ||\n    \
    \            first_char == 'u' || first_char == 'v' || first_char == 'w' || first_char\
    \ == 'x' ||\n                first_char == 'y' || first_char == 'z' {\n      \
    \          String::from(\"No\")\n            } else {\n                String::from(\"\
    Yes\")\n            }\n        }\n    }", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos { \n        return ", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if\
    \ dot_pos_end == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end_2 = file_name.find('.')\n\
    \    if dot_pos_end_2 == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end_2 = dot_pos_end_2 + 1;\n    let mut dot_pos_end_3\
    \ = file_name.find('.')\n    if dot_pos_end_3 == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end_3 = dot_pos_end_3 + 1;\n\
    \    let mut dot_pos_end_4 = file_name.find('.')\n    if dot_pos_end_4 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end_4 =\
    \ dot_pos_end_4 + 1;\n    let mut dot_pos_end_5 = file_name.find('.')\n    if\
    \ dot_pos_end_5 == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end_5 = dot_pos_end_5 + 1;\n    let mut dot_pos_end_6 = file_name.find('.')\n\
    \    if dot_pos_end_6 == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end_6 = dot_pos_end_6 + 1;\n    let mut dot_pos_end_7\
    \ = file_name.find('.')\n    if dot_pos_end_7 == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end_7 = dot_pos_end_7 + 1;\n\
    \    let mut dot_pos_end_8 = file_name.find('.')\n    if dot_pos_end_8 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end_8 =\
    \ dot_pos_end_8 + 1;\n    let mut dot_pos_end_9 = file_name.find('.')\n    if\
    \ dot_pos_end_9 == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end_9 = dot_pos_end_9 + 1;\n    let mut dot_pos_end_10 =\
    \ file_name.find('.')\n    if dot_pos_end_10 == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end_10 = dot_pos_end_10 +\
    \ 1;", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ {\n        return ", "    let mut file_name = file_name.clone();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = ", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos;\n    while\
    \ dot_pos_start != dot_pos_end {\n        let mut dot_pos_start = dot_pos_end;\n\
    \        let mut dot_pos_end = dot_pos_start;\n        let mut dot_pos_end = dot_pos_start..=dot_pos_end.find(\"\
    -\");\n        if dot_pos_end == dot_pos_start {\n            dot_pos_end = dot_pos_end.next();\n\
    \        }\n        if dot_pos_end == dot_pos_start {\n            dot_pos_end\
    \ = dot_pos_end.next();\n        }\n        if dot_pos_end == dot_pos_start {\n\
    \            dot_pos_end = dot_pos_end.next();\n        }\n        if dot_pos_end\
    \ == dot_pos_start {\n            dot_pos_end = dot_pos_end.next();\n        }\n\
    \        if dot_pos_end == dot_pos_start {\n            dot_pos_end = dot_pos_end.next();\n\
    \        }\n        if dot_pos_end == dot_pos_start {\n            dot_pos_end\
    \ = dot_pos_end.next();\n        }\n        if dot_pos_end == dot_pos_start {\n\
    \            dot_pos_end = dot_pos_end.next();\n        }\n        if dot_pos_end\
    \ == dot_pos_start {\n            dot_pos_end = dot_pos_end.next();\n        }\n\
    \        if dot_pos_end == dot_pos_start {\n            dot_pos_end = dot_pos_end.next();\n\
    \        }\n        if dot_pos_end == dot_pos_start {\n            dot_pos_end\
    \ = dot_pos_end.next();\n        }\n        if dot_pos_end == dot_pos_start {\n\
    \            dot_pos_end = dot_pos_end.next();\n        }\n        if dot_pos_end\
    \ == dot_pos_start {\n            dot_pos_end = dot_pos_end.next();\n        }\n\
    \        if dot_pos_end == dot_pos_start {\n            dot_pos_end = dot_pos_end.next();\n\
    \        }\n        if dot_pos_end == dot_pos_start {\n            dot_pos_end\
    \ = dot_pos_end.next();\n        }\n        if dot_pos_end == dot_pos_start {\n\
    \            dot_pos_end = dot_pos_end.next();\n        }\n        if dot_pos_end\
    \ == dot_pos_start {\n            dot_pos_end = dot_pos_end.next();\n        }\n\
    \        if dot_pos_end == dot_pos_start {\n            dot_pos_end = dot_pos_end.next();\n\
    \        }\n        if dot_pos_end == dot_pos_start {\n            dot_pos_end\
    \ = dot_pos_end.next();\n        }\n        if dot_pos_end == dot_pos_start {\n\
    \            dot_pos_end = dot_pos_end.next();\n        }\n        if dot_pos_end\
    \ == dot_", "    let mut file_name = file_name.clone();\n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_start = dot_pos;\n    while dot_pos_start != dot_pos_end {\n       \
    \ let mut dot_pos_start = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end = dot_pos_end;\n\
    \        let ", "    let mut file_name = file_name.to_string();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.len() ==\
    \ 0 {\n        return String::from(\"No\");\n    }\n    if file_name.len() ==\
    \ 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_punctuation()) {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.chars().any(|c| !c.is_ascii_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_symbol()) {\n    \
    \    return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_punctuation()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_digit()) {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_symbol())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_punctuation()) {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_digit()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_symbol()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_", "    let mut dot_pos = file_name.find('.')\n    let mut dot_pos_end\
    \ = file_name.len();\n    \n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    if dot_pos == 0 {\n        return String::from(\"No\"\
    );\n    }\n    \n    if dot_pos > dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_start = dot_pos - 1;\n    \n    while\
    \ dot_pos_start > dot_pos_end {\n        if file_name[dot_pos_start] >= 'a' &&\
    \ file_name[dot_pos_start] <= 'z' {\n            dot_pos_start--;\n        } else\
    \ if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start] <= 'Z' {\n  \
    \          dot_pos_start--;\n        } else {\n            return String::from(\"\
    No\");\n        }\n    }\n    \n    if dot_pos_start == dot_pos_end {\n      \
    \  return String::from(\"No\");\n    }\n    \n    if file_name[dot_pos_start]\
    \ != '0' {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_start\
    \ == 0 {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_start\
    \ > dot_pos_end {\n        return String::from(\"No\");\n    }\n    \n    if file_name[dot_pos_start]\
    \ != '0' {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_start\
    \ == 0 {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_start\
    \ > dot_pos_end {\n        return String::from(\"No\");\n    }\n    \n    if file_name[dot_pos_start]\
    \ != '0' {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_start\
    \ == 0 {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_start\
    \ > dot_pos_end {\n        return String::from(\"No\");\n    }\n    \n    if file_name[dot_pos_start]\
    \ != '0' {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_start\
    \ == 0 {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_start\
    \ > dot_pos_end {\n        return String::from(\"No\");\n    }\n    \n    if file_name[dot_pos_start]\
    \ != '0' {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_start\
    \ == 0 {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_start\
    \ > dot_pos_end {", "    if file_name.len() > 3 {\n        String::from(\"No\"\
    )\n    } else {\n        let mut dot_pos = file_name.find('.')\n        if dot_pos\
    \ == String::npos {\n            String::from(\"No\")\n        } else {\n    \
    \        let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_pos];\n\
    \                    if dot_name.contains(\".\") {\n                        dot_name.split_off('.').next().unwrap().to_lowercase()\n\
    \                    } else {\n                        String::from(\"No\")\n\
    \                    }\n                }\n            }\n        }\n    }", " \
    \   let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos;\n    while dot_pos_start != String::npos && \n        file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' &&\n        file_name[dot_pos_start+1]\
    \ >= 'a' && file_name[dot_pos_start+1] <= 'z' {\n        dot_pos_start += 1;\n\
    \    }\n    if dot_pos_start == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos_start;\n    while dot_pos_end\
    \ != String::npos && \n        file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end]\
    \ <= 'z' &&\n        file_name[dot_pos_end+1] >= 'a' && file_name[dot_pos_end+1]\
    \ <= 'z' {\n        dot_pos_end += 1;\n    }\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_end - dot_pos_start\
    \ != 3 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start]\
    \ != '0' || file_name[dot_pos_start+1] != '0' || \n        file_name[dot_pos_start+2]\
    \ != '0' {\n        return String::from(\"No\");\n    }\n    if dot_pos_end !=\
    \ dot_pos_start + 3 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end]\
    \ != '0' || file_name[dot_pos_end+1] != '0' || \n        file_name[dot_pos_end+2]\
    \ != '0' {\n        return String::from(\"No\");\n    }\n    if dot_pos_end !=\
    \ dot_pos_start + 2 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end]\
    \ != '0' || file_name[dot_pos_end+1] != '0' || \n        file_name[dot_pos_end+2]\
    \ != '0' {\n        return String::from(\"No\");\n    }\n    if dot_pos_end !=\
    \ dot_pos_start + 1 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end]\
    \ != '0' || file_name[dot_pos_end+1] != '0' || \n        file_name[dot_pos_end+2]\
    \ != '0' {\n        return String::from(\"No\");\n    }", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n\
    \    let mut dot_pos_start2 = dot_pos_start + 1;\n    let mut dot_pos_end2 = dot_pos_end\
    \ + 1;\n    let mut dot_pos_start3 = dot_pos_start2 + 1;\n    let mut dot_pos_end3\
    \ = dot_pos_end2 + 1;\n    let mut dot_pos_start4 = dot_pos_start3 + 1;\n    let\
    \ mut dot_pos_end4 = dot_pos_end3 + 1;\n    let mut dot_pos_start5 = dot_pos_start4\
    \ + 1;\n    let mut dot_pos_end5 = dot_pos_end4 + 1;\n    let mut dot_pos_start6\
    \ = dot_pos_start5 + 1;\n    let mut dot_pos_end6 = dot_pos_end5 + 1;\n    let\
    \ mut dot_pos_start7 = dot_pos_start6 + 1;\n    let mut dot_pos_end7 = dot_pos_end6\
    \ + 1;\n    let mut dot_pos_start8 = dot_pos_start7 + 1;\n    let mut dot_pos_end8\
    \ = dot_pos_end7 + 1;\n    let mut dot_pos_start9 = dot_pos_start8 + 1;\n    let\
    \ mut dot_pos_end9 = dot_pos_end8 + 1;\n    let mut dot_pos_start10 = dot_pos_start9\
    \ + 1;\n    let mut dot_pos_end10 = dot_pos_end9 + 1;\n    let mut dot_pos_start11\
    \ = dot_pos_start10 + 1;\n    let mut dot_pos_end11 = dot_pos_end10 + 1;\n   \
    \ let mut dot_pos_start12 = dot_pos_start11 + 1;\n    let mut dot_pos_end12 =\
    \ dot_pos_end11 + 1;\n    let mut dot_pos_start13 = dot_pos_start12 + 1;\n   \
    \ let mut dot_pos_end13 = dot_pos_end12 + 1;\n    let mut dot_pos_start14 = dot_pos_start13\
    \ + 1;\n    let mut dot_pos_end14 = dot_pos_end13 + 1;\n    let mut dot_pos_start15\
    \ = dot_pos_start14 + 1;\n    let mut dot_pos_end15 = dot_pos_end14 + 1;\n   \
    \ let mut dot_pos_start16 = dot_pos_start15 + 1;\n    let mut dot_pos_end16 =\
    \ dot_pos_end15 + 1;\n    let mut dot_pos_start17 = dot_pos_start16 + 1;\n   \
    \ let mut dot_pos_end17 = dot_pos_end16 + 1;\n    let mut dot_pos_start18 = dot_pos_start17\
    \ + 1;\n    let mut dot_pos_end18 = dot_pos_end17 + 1;", "    let mut file_name\
    \ : String = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_name = file_name.clone();\n    dot_name.truncate(dot_pos);\n\
    \    let mut dot_name_pos = 0;\n    let mut dot_name_len = dot_name.len();\n \
    \   while dot_name_pos < dot_name_len {\n        let mut dot_name_char = dot_name[dot_name_pos];\n\
    \        if dot_name_char == '.' {\n            if dot_name_pos == 0 {\n     \
    \           return String::from(\"No\");\n            }\n            dot_name_pos++;\n\
    \            continue;\n        }\n        if dot_name_char >= 'a' && dot_name_char\
    \ <= 'z' {\n            dot_name_pos++;\n            continue;\n        }\n  \
    \      if dot_name_char >= 'A' && dot_name_char <= 'Z' {\n            dot_name_pos++;\n\
    \            continue;\n        }\n        if dot_name_char >= '0' && dot_name_char\
    \ <= '9' {\n            dot_name_pos++;\n            continue;\n        }\n  \
    \      return String::from(\"No\");\n    }\n    if dot_name_pos == dot_name_len\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_name[dot_name_pos]\
    \ != '\\0' {\n        return String::from(\"No\");\n    }\n    if dot_name_pos\
    \ == 0 {\n        return String::from(\"No\");\n    }\n    if dot_name[dot_name_pos\
    \ - 1] != '\\0' {\n        return String::from(\"No\");\n    }\n    if dot_name[dot_name_pos\
    \ - 2] != '\\0' {\n        return String::from(\"No\");\n    }\n    if dot_name[dot_name_pos\
    \ - 3] != '\\0' {\n        return String::from(\"No\");\n    }\n    if dot_name[dot_name_pos\
    \ - 4] != '\\0' {\n        return String::from(\"No\");\n    }\n    if dot_name[dot_name_pos\
    \ - 5] != '\\0' {\n        return String::from(\"No\");\n    }\n    if dot_name[dot_name_pos\
    \ - 6] != '\\0' {\n        return String::from(\"No\");\n    }\n    if dot_name[dot_name_pos\
    \ - 7] != '\\0' {\n        return String::from(\"No\");\n    }\n    if dot_name[dot_name_pos\
    \ - 8] != '\\0' {\n        return String::from(\"No\");\n    }\n    if dot_name[dot_name_pos\
    \ - 9] != '\\0' {\n        return String::from(\"No", "    let mut file_name =\
    \ file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    let mut first_letter\
    \ = file_name[0];\n    if first_letter < 'a' || first_letter > 'z' {\n       \
    \ return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    if file_name[dot_pos -\
    \ 1] != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_2]\
    \ != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ - 1] != file_name[dot_pos_2] {\n        return String::from(\"No\");\n    }\n\
    \    if file_name[dot_pos - 1] != file_name[dot_pos_2 + 1] {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_2] != file_name[dot_pos_2 + 1] {\n   \
    \     return String::from(\"No\");\n    }\n    if file_name[dot_pos_2] != file_name[dot_pos\
    \ + 1] {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_2]\
    \ != file_name[dot_pos + 2] {\n        return String::from(\"No\");\n    }\n \
    \   if file_name[dot_pos_2] != file_name[dot_pos + 3] {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_2] != file_name[dot_pos + 4] {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name[dot_pos_2] != file_name[dot_pos\
    \ + 5] {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_2]\
    \ != file_name[dot_pos + 6] {\n        return String::from(\"No\");\n    }\n \
    \   if file_name[dot_pos_2] != file_name[dot_pos + 7] {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_2] != file_name[dot_pos + 8] {\n     \
    \   return String::from(\"No\");\n    }\n    if file_name[dot_pos_2] != file_name[dot_pos\
    \ + 9] {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_2]\
    \ != file_name[dot_pos + 10] {\n        return String::from(\"No\");\n    }\n\
    \    if ", "    let mut file_name_chars = file_name.chars();\n    let mut dot_pos\
    \ = file_name_chars.find_first_of(\".\");\n    let mut dot_pos_end = file_name_chars.len();\n\
    \    if dot_pos == String::new().len() {\n        return String::from(\"No\");\n\
    \    }\n    if dot_pos == 0 {\n        return String::from(\"No\");\n    }\n \
    \   if dot_pos == dot_pos_end {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_start = 0;\n    let mut dot_pos_end = dot_pos_end;\n    let\
    \ mut dot_pos_start = 0;\n    let mut dot_pos_end = dot_pos_end;\n    let mut\
    \ dot_pos_start = 0;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = 0;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start = 0;\n\
    \    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start = 0;\n    let\
    \ mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start = 0;\n    let mut\
    \ dot_pos_end = dot_pos_end;\n    let mut dot_pos_start = 0;\n    let mut dot_pos_end\
    \ = dot_pos_end;\n    let mut dot_pos_start = 0;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = 0;\n    let mut dot_pos_end = dot_pos_end;\n    let\
    \ mut dot_pos_start = 0;\n    let mut dot_pos_end = dot_pos_end;\n    let mut\
    \ dot_pos_start = 0;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = 0;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start = 0;\n\
    \    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start = 0;\n    let\
    \ mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start = 0;\n    let mut\
    \ dot_pos_end = dot_pos_end;\n    let mut dot_pos_start = 0;\n    let mut dot_pos_end\
    \ = dot_pos_end;\n    let mut dot_pos_start = 0;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start = 0;\n    let mut dot_pos_end = dot_pos_end;\n    let\
    \ mut dot_pos_start = 0;\n    let mut dot_pos_end = dot_pos_end;\n    let mut\
    \ dot_pos_start = 0;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = 0;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start = 0;\n\
    \    let mut dot_pos_end = dot_pos_end;\n    let mu", "    if file_name.len()\
    \ > 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_pos =\
    \ file_name.find('.')\n        if dot_pos == String::npos {\n            String::from(\"\
    No\")\n        } else {\n            let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_pos];\n\
    \                    if dot_name.chars().any(|c| c != '.') {\n               \
    \         String::from(\"No\")\n                    } else {\n               \
    \         if dot_name.len() != dot_pos {\n                            String::from(\"\
    No\")\n                        } else {\n                            if dot_name.chars().any(|c|\
    \ c != 'txt' && c != 'exe' && c != 'dll') {\n                                String::from(\"\
    No\")\n                            } else {\n                                String::from(\"\
    Yes\")\n                            }\n                        }\n           \
    \         }\n                }\n            }\n        }\n    }", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.contains('.')\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_digit()) {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_digit()) {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_", "    if file_name.len() > 3 {\n        String::from(\"\
    No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n        if\
    \ dot_pos == String::npos {\n            String::from(\"No\")\n        } else\
    \ {\n            let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_letter = file_name[dot_pos\
    \ + 1..].chars().next().unwrap();\n                    if dot_letter < 'a' ||\
    \ dot_letter > 'z' {\n                        String::from(\"No\")\n         \
    \           } else {\n                        String::from(\"Yes\")\n        \
    \            }\n                }\n            }\n        }\n    }", "    let\
    \ mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = dot_pos + 1;\n    let mut dot_len = file_name.len();\n\
    \    let mut dot_len2 = dot_len;\n    while dot_len2 > dot_pos {\n        if file_name[dot_pos]\
    \ >= 'a' && file_name[dot_pos] <= 'z' {\n            dot_len2 -= 1;\n        }\n\
    \        if file_name[dot_pos] >= 'A' && file_name[dot_pos] <= 'Z' {\n       \
    \     dot_len2 -= 1;\n        }\n        if file_name[dot_pos] >= '0' && file_name[dot_pos]\
    \ <= '9' {\n            dot_len2 -= 1;\n        }\n        dot_pos += 1;\n   \
    \ }\n    if dot_len2 > dot_pos {\n        return String::from(\"No\");\n    }\n\
    \    if dot_pos == dot_len {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name[dot_pos] != '0' && file_name[dot_pos] != '1' {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[dot_pos] == '0' {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name[dot_pos] == '1' {\n        return\
    \ String::from(\"Yes\");\n    }\n    if file_name[dot_pos] == '.' {\n        let\
    \ mut dot_pos = dot_pos + 1;\n        let mut dot_len = file_name.len();\n   \
    \     let mut dot_len2 = dot_len;\n        while dot_len2 > dot_pos {\n      \
    \      if file_name[dot_pos] >= 'a' && file_name[dot_pos] <= 'z' {\n         \
    \       dot_len2 -= 1;\n            }\n            if file_name[dot_pos] >= 'A'\
    \ && file_name[dot_pos] <= 'Z' {\n                dot_len2 -= 1;\n           \
    \ }\n            if file_name[dot_pos] >= '0' && file_name[dot_pos] <= '9' {\n\
    \                dot_len2 -= 1;\n            }\n            dot_pos += 1;\n  \
    \      }\n        if dot_len2 > dot_pos {\n            return String::from(\"\
    No\");\n        }\n        if dot_pos == dot_len {\n            return String::from(\"\
    No\");\n        }\n        if file_name[dot_pos] != '0' && file_name[dot_pos]\
    \ != '1' {\n            return String::from(\"No\");\n        }\n        if file_name[dot_pos]\
    \ == '0' {\n            return String::from(\"No\");\n        }\n        if file_name[dot_pos",
  "    if file_name.chars().count() > 3 {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().count() == 0 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 1 {\n        if file_name.chars().first().unwrap().is_ascii_letter()\
    \ {\n            return String::from(\"Yes\");\n        }\n    }\n    if file_name.chars().count()\
    \ == 2 {\n        if file_name.chars().first().unwrap().is_ascii_letter() &&\n\
    \            file_name.chars().last().unwrap().is_ascii_letter() {\n         \
    \   if file_name.chars().first().unwrap().to_ascii_lowercase() !=\n          \
    \      file_name.chars().last().unwrap().to_ascii_lowercase() {\n            \
    \    return String::from(\"No\");\n            }\n        }\n    }\n    if file_name.chars().count()\
    \ == 3 {\n        if file_name.chars().first().unwrap().is_ascii_letter() &&\n\
    \            file_name.chars().last().unwrap().is_ascii_letter() &&\n        \
    \    file_name.chars().first().unwrap().to_ascii_lowercase() !=\n            \
    \    file_name.chars().last().unwrap().to_ascii_lowercase() &&\n            file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ !=\n                file_name.chars().last().unwrap().to_ascii_lowercase() {\n\
    \            return String::from(\"No\");\n        }\n    }\n    if file_name.chars().count()\
    \ == 4 {\n        if file_name.chars().first().unwrap().is_ascii_letter() &&\n\
    \            file_name.chars().last().unwrap().is_ascii_letter() &&\n        \
    \    file_name.chars().first().unwrap().to_ascii_lowercase() !=\n            \
    \    file_name.chars().last().unwrap().to_ascii_lowercase() &&\n            file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ !=\n                file_name.chars().last().unwrap().to_ascii_lowercase() &&\n\
    \            file_name.chars().first().unwrap().to_ascii_lowercase() !=\n    \
    \            file_name.chars().last().unwrap().to_ascii_lowercase() {\n      \
    \      return String::from(\"No\");\n        }\n    }\n    if file_name.chars().count()\
    \ == 5 {\n        if file_name.chars().first().unwrap().is_ascii_letter() &&\n\
    \            file_name.chars().last().unwrap().is_ascii_letter() &&\n        \
    \    file_name.chars().first().unwrap().to_ascii_lowercase() !=\n            \
    \    file_name.chars().last().unwrap().to_ascii_lowercase() &&\n            file_name.chars().first().unwrap().to_ascii_lowercase()\
    \ !=\n                file_name.chars().last().unwrap().to_ascii_lowercase() &&\n\
    \            file_name.chars().first().unwrap().to_ascii_lowercase() !=\n    \
    \            file_name.chars().", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_start = dot_pos;\n    if dot_pos_start == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_start_end\
    \ = dot_pos_end;\n    if dot_pos_start_end == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_start_end_2 = dot_pos_start_end;\n\
    \    if dot_pos_start_end_2 == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_start_end_3 = dot_pos_start_end_2;\n    if\
    \ dot_pos_start_end_3 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_start_end_4 = dot_pos_start_end_3;\n    if dot_pos_start_end_4\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_start_end_5 = dot_pos_start_end_4;\n    if dot_pos_start_end_5 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_start_end_6\
    \ = dot_pos_start_end_5;\n    if dot_pos_start_end_6 == String::npos { \n    \
    \    return String::from(\"No\");\n    }\n    let mut dot_pos_start_end_7 = dot_pos_start_end_6;\n\
    \    if dot_pos_start_end_7 == String::npos { \n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_start_end_8 = dot_pos_start_end_7;\n    if\
    \ dot_pos_start_end_8 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_start_end_9 = dot_pos_start_end_8;\n    if dot_pos_start_end_9\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_start_end_10 = dot_pos_start_end_9;\n    if dot_pos_start_end_10 ==\
    \ String::npos { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_start_end_11\
    \ = dot_pos_start_end_10;\n    if dot_pos_start_end_11 == String::npos { \n  \
    \      return String::from(\"No\");\n    }\n    let mut dot_pos_start_end_12 =\
    \ dot_pos_", "    let mut file_name_len = file_name.len();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_next = dot_pos + 1;\n    while dot_pos_next\
    \ < file_name_len {\n        if file_name[dot_pos_next] >= 'a' && file_name[dot_pos_next]\
    \ <= 'z' {\n            dot_pos_next += 1;\n        } else if file_name[dot_pos_next]\
    \ >= 'A' && file_name[dot_pos_next] <= 'Z' {\n            dot_pos_next += 1;\n\
    \        } else {\n            break;\n        }\n    }\n    \n    if dot_pos_next\
    \ == file_name_len {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_prev = dot_pos - 1;\n    while dot_pos_prev >= 0 {\n        if file_name[dot_pos_prev]\
    \ >= 'a' && file_name[dot_pos_prev] <= 'z' {\n            dot_pos_prev -= 1;\n\
    \        } else if file_name[dot_pos_prev] >= 'A' && file_name[dot_pos_prev] <=\
    \ 'Z' {\n            dot_pos_prev -= 1;\n        } else {\n            break;\n\
    \        }\n    }\n    \n    if dot_pos_prev == 0 {\n        return String::from(\"\
    No\");\n    }\n    \n    if dot_pos_prev < dot_pos {\n        return String::from(\"\
    No\");\n    }\n    \n    if dot_pos == dot_pos_prev + 1 {\n        return String::from(\"\
    No\");\n    }\n    \n    if dot_pos == dot_pos_prev + 2 {\n        return String::from(\"\
    Yes\");\n    }\n    \n    if dot_pos == dot_pos_prev + 3 {\n        return String::from(\"\
    Yes\");\n    }\n    \n    return String::from(\"No\");", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { return String::from(\"No\") }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { return String::from(\"No\") }\n    let mut\
    \ dot_pos_start = dot_pos;\n    while dot_pos_start != dot_pos_end {\n       \
    \ if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start] <= 'z' ||\n \
    \           file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start] <= 'Z'\
    \ {\n            dot_pos_start += 1;\n        } else {\n            return String::from(\"\
    No\");\n        }\n    }\n    if file_name[dot_pos_start] == '.' {\n        if\
    \ file_name[dot_pos_start + 1] == '.' {\n            if file_name[dot_pos_start\
    \ + 2] == '.' {\n                return String::from(\"Yes\");\n            }\
    \ else {\n                return String::from(\"No\");\n            }\n      \
    \  } else {\n            return String::from(\"No\");\n        }\n    } else {\n\
    \        return String::from(\"No\");\n    }", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String", "    let mut file_name = file_name.clone();\n  \
    \  let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_end = dot_pos_end;\n\
    \    let mut dot_pos_start2 = dot_pos_start;\n    let mut dot_pos_end2 = dot_pos_end;\n\
    \    let mut dot_pos_start3 = dot_pos_start;\n    let mut dot_pos_end3 = dot_pos_end;\n\
    \    let mut dot_pos_start4 = dot_pos_start;\n    let mut dot_pos_end4 = dot_pos_end;\n\
    \    let mut dot_pos_start5 = dot_pos_start;\n    let mut dot_pos_end5 = dot_pos_end;\n\
    \    let mut dot_pos_start6 = dot_pos_start;\n    let mut dot_pos_end6 = dot_pos_end;\n\
    \    let mut dot_pos_start7 = dot_pos_start;\n    let mut dot_pos_end7 = dot_pos_end;\n\
    \    let mut dot_pos_start8 = dot_pos_start;\n    let mut dot_pos_end8 = dot_pos_end;\n\
    \    let mut dot_pos_start9 = dot_pos_start;\n    let mut dot_pos_end9 = dot_pos_end;\n\
    \    let mut dot_pos_start10 = dot_pos_start;\n    let mut dot_pos_end10 = dot_pos_end;\n\
    \    let mut dot_pos_start11 = dot_pos_start;\n    let mut dot_pos_end11 = dot_pos_end;\n\
    \    let mut dot_pos_start12 = dot_pos_start;\n    let mut dot_pos_end12 = dot_pos_end;\n\
    \    let mut dot_pos_start13 = dot_pos_start;\n    let mut dot_pos_end13 = dot_pos_end;\n\
    \    let mut dot_pos_start14 = dot_pos_start;\n    let mut dot_pos_end14 = dot_pos_end;\n\
    \    let mut dot_pos_start15 = dot_pos_start;\n    let mut dot_pos_end15 = dot_pos_end;\n\
    \    let mut dot_pos_start16 = dot_pos_start;\n    let mut dot_pos_end16 = dot_pos_end;\n\
    \    let mut dot_pos_start17 = dot_pos_start;\n    let mut dot_pos_end17 = dot_pos_end;\n\
    \    let mut dot_pos_start18 = dot_pos_start;\n    let mut dot_pos_end18 = dot_pos_end;\n\
    \    let mut dot_pos_start19 = dot_pos_start;\n    let mut dot_pos_end19 = dot_pos_end;\n\
    \    let mut dot_pos_start20 = dot_pos_start;", "    if file_name.len() > 3 {\n\
    \        String::from(\"No\")\n    } else {\n        let mut dot_pos = file_name.find('.')\n\
    \        if dot_pos == String::npos {\n            String::from(\"No\")\n    \
    \    } else {\n            let mut first_letter = file_name[..dot_pos].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_pos = file_name.find('.')\n\
    \                if dot_pos == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_pos];\n\
    \                    if dot_name.chars().any(|c| c != '.') {\n               \
    \         String::from(\"No\")\n                    } else {\n               \
    \         let mut dot_pos = dot_name.find('.')\n                        if dot_pos\
    \ == String::npos {\n                            String::from(\"No\")\n      \
    \                  } else {\n                            if dot_name[..dot_pos].chars().any(|c|\
    \ c != '.') {\n                                String::from(\"No\")\n        \
    \                    } else {\n                                String::from(\"\
    Yes\")\n                            }\n                        }\n           \
    \         }\n                }\n            }\n        }\n    }", "    let mut\
    \ file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos { \n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos { \n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ { \n", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    while dot_pos_start != dot_pos_end {\n        let mut dot_pos_start_letter\
    \ = dot_pos_start.is_ascii_letter();\n        let mut dot_pos_end_letter = dot_pos_end.is_ascii_letter();\n\
    \        if dot_pos_start_letter && dot_pos_end_letter {\n            break;\n\
    \        }\n        if dot_pos_start_letter {\n            dot_pos_start_letter\
    \ = false;\n        }\n        if dot_pos_end_letter {\n            dot_pos_end_letter\
    \ = false;\n        }\n        if dot_pos_start == dot_pos_end {\n           \
    \ break;\n        }\n        dot_pos_start += 1;\n        dot_pos_end += 1;\n\
    \    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"",
  "    let mut counter = 0;\n    let mut current_char: char;\n    for current_char\
    \ in file_name {\n        if current_char == '.' {\n            if counter > 2\
    \ {\n                return String::from(\"No\");\n            }\n           \
    \ counter += 1;\n        }\n        if current_char >= 'a' && current_char <=\
    \ 'z' {\n            if counter > 2 {\n                return String::from(\"\
    No\");\n            }\n            counter += 1;\n        }\n        if current_char\
    \ >= 'A' && current_char <= 'Z' {\n            if counter > 2 {\n            \
    \    return String::from(\"No\");\n            }\n            counter += 1;\n\
    \        }\n    }\n    if counter > 3 {\n        return String::from(\"No\");\n\
    \    }\n    String::from(\"Yes\")", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return\
    \ String::from(\"No\") }\n    else if dot_pos == 0 { return String::from(\"No\"\
    ) }\n    else if file_name[dot_pos - 1] != String::from('0') && file_name[dot_pos\
    \ - 1] != String::from('9') {\n        return String::from(\"No\")\n    }\n  \
    \  let mut first_letter = String::from('a')\n    if file_name[0] >= 'a' && file_name[0]\
    \ <= 'z' {\n        first_letter = String::from('a')\n    }\n    else if file_name[0]\
    \ >= 'A' && file_name[0] <= 'Z' {\n        first_letter = String::from('A')\n\
    \    }\n    else { return String::from(\"No\") }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    else if dot_pos\
    \ == 0 { return String::from(\"No\") }\n    else if file_name[dot_pos - 1] !=\
    \ String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n       \
    \ return String::from(\"No\")\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    else if dot_pos\
    \ == 0 { return String::from(\"No\") }\n    else if file_name[dot_pos - 1] !=\
    \ String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n       \
    \ return String::from(\"No\")\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    else if dot_pos\
    \ == 0 { return String::from(\"No\") }\n    else if file_name[dot_pos - 1] !=\
    \ String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n       \
    \ return String::from(\"No\")\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    else if dot_pos\
    \ == 0 { return String::from(\"No\") }\n    else if file_name[dot_pos - 1] !=\
    \ String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n       \
    \ return String::from(\"No\")\n    }\n    let mut dot_pos = ", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    let mut dot_pos_start = dot_pos;\n\
    \    while dot_pos_start != dot_pos_end {\n        let mut dot_pos_start = dot_pos_start;\n\
    \        let mut dot_pos_end = dot_pos_end;\n        if dot_pos_start == dot_pos_end\
    \ {\n            dot_pos_end = dot_pos_end;\n        }\n        if dot_pos_start\
    \ < dot_pos_end {\n            if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start]\
    \ <= 'z' {\n                dot_pos_start += 1;\n            }\n            if\
    \ file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z' {\n         \
    \       dot_pos_end -= 1;\n            }\n        }\n        if dot_pos_start\
    \ == dot_pos_end {\n            dot_pos_end = dot_pos_end;\n        }\n      \
    \  if dot_pos_start < dot_pos_end {\n            if file_name[dot_pos_start] >=\
    \ '0' && file_name[dot_pos_start] <= '9' {\n                dot_pos_start += 1;\n\
    \            }\n            if file_name[dot_pos_end] >= '0' && file_name[dot_pos_end]\
    \ <= '9' {\n                dot_pos_end -= 1;\n            }\n        }\n    \
    \    if dot_pos_start == dot_pos_end {\n            dot_pos_end = dot_pos_end;\n\
    \        }\n        if dot_pos_start < dot_pos_end {\n            if file_name[dot_pos_start]\
    \ != 'a' && file_name[dot_pos_start] != 'A' {\n                dot_pos_start +=\
    \ 1;\n            }\n            if file_name[dot_pos_end] != 'a' && file_name[dot_pos_end]\
    \ != 'A' {\n                dot_pos_end -= 1;\n            }\n        }\n    \
    \    if dot_pos_start == dot_pos_end {\n            dot_pos_end = dot_pos_end;\n\
    \        }\n        if dot_pos_start < dot_pos_end {\n            if file_name[dot_pos_start]\
    \ != 'z' && file_name[dot_pos_start] != 'Z' {\n                dot_pos_start +=\
    \ 1;\n            }\n            if file_name[dot_pos_end] != 'z' && file_name[dot_pos_end]\
    \ != 'Z' {\n                dot_pos_end -= 1;\n            }\n        }\n    \
    \    if dot_pos_start == dot_pos_end {\n            dot_pos_end = dot_pos_end;\n\
    \        }\n        if dot_pos_start < ", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_", "    let mut file_name = file_name.clone();\n  \
    \  let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n \
    \       return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        let\
    \ mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ == '.' {\n            break;\n        }\n    }\n    if dot_pos_start == dot_pos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start =\
    \ dot_pos;\n    dot_pos_start += 1;\n    while dot_pos_start < file_name.len()\
    \ {\n        let mut dot_pos_end = dot_pos;\n        dot_pos_end += 1;\n     \
    \   if file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z' {\n    \
    \        dot_pos_end += 1;\n        }\n        if file_name[dot_pos_end] >= 'A'\
    \ && file_name[dot_pos_end] <= 'Z' {\n            dot_pos_end += 1;\n        }\n\
    \        if file_name[dot_pos_end] == '.' {\n            break;\n        }\n \
    \   }\n    if dot_pos_end == dot_pos {\n        return String::from(\"No\");\n\
    \    }\n    if file_name[dot_pos - 1] >= '0' && file_name[dot_pos - 1] <= '9'\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos - 1]\
    \ == '.' {\n        if file_name[dot_pos - 2] != 't' && file_name[dot_pos - 2]\
    \ != 'e' && file_name[dot_pos - 2] != 'x' && file_name[dot_pos - 2] != 't' &&\
    \ file_name[dot_pos - 2] != 'e' && file_name[dot_pos - 2] != 'x' && file_name[dot_pos\
    \ - 2] != 't' && file_name[dot_pos - 2] != 'e' && file_name[dot_pos - 2] != 'x'\
    \ {\n            return String::from(\"No\");\n        }\n    }\n    if file_name[dot_pos\
    \ - 1] == 't' || file_name[dot_pos - 1] == 'e' || file_name[dot_pos - 1] == 'x'\
    \ {\n        if file_name[dot_pos - 2] != 't' && file_name[dot_po", "    if file_name.chars().count()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 0 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().first().unwrap().is_ascii_letter() {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().last().unwrap().is_ascii_letter()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().first().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().first().unwrap().is_ascii_letter() {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 2 && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().first().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ && file_name.chars().first().unwrap().is_ascii_letter() && file_name.chars().last().unwrap().is_ascii_letter()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count()\
    \ == 2 && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first().unwrap().is_ascii_letter()\
    \ && file_name.chars().last().unwrap().is_ascii_letter() && file_name.chars().first",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = dot_pos + 1;\n    let mut dot_len = file_name.len();\n\
    \    while dot_pos < dot_len {\n        let mut dot_char = file_name[dot_pos];\n\
    \        if dot_char == '.' {\n            dot_pos = dot_pos + 1;\n          \
    \  dot_len = dot_len - dot_pos;\n        } else {\n            break;\n      \
    \  }\n    }\n    let mut dot_char = file_name[dot_pos];\n    if dot_char != 'a'\
    \ && dot_char != 'b' && dot_char != 'c' && dot_char != 'd' && dot_char != 'e'\
    \ && dot_char != 'f' && dot_char != 'g' && dot_char != 'h' && dot_char != 'i'\
    \ && dot_char != 'j' && dot_char != 'k' && dot_char != 'l' && dot_char != 'm'\
    \ && dot_char != 'n' && dot_char != 'o' && dot_char != 'p' && dot_char != 'q'\
    \ && dot_char != 'r' && dot_char != 's' && dot_char != 't' && dot_char != 'u'\
    \ && dot_char != 'v' && dot_char != 'w' && dot_char != 'x' && dot_char != 'y'\
    \ && dot_char != 'z' {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos = dot_pos + 1;\n    let mut dot_len = file_name.len();\n    while dot_pos\
    \ < dot_len {\n        let mut dot_char = file_name[dot_pos];\n        if dot_char\
    \ == '.' {\n            dot_pos = dot_pos + 1;\n            dot_len = dot_len\
    \ - dot_pos;\n        } else {\n            break;\n        }\n    }\n    let\
    \ mut dot_char = file_name[dot_pos];\n    if dot_char != 'a' && dot_char != 'b'\
    \ && dot_char != 'c' && dot_char != 'd' && dot_char != 'e' && dot_char != 'f'\
    \ && dot_char != 'g' && dot_char != 'h' && dot_char != 'i' && dot_char != 'j'\
    \ && dot_char != 'k' && dot_char != 'l' && dot_char != 'm' && dot_char != 'n'\
    \ && dot_char != 'o' && dot_char != 'p' && dot_char != 'q' && dot_char != 'r'\
    \ && dot_char != 's' && dot_char != 't' && dot_char != 'u' && dot_char != 'v'\
    \ && dot_char != 'w' && dot_char != 'x' && dot_char != 'y' && dot_char != 'z'\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos\
    \ + 1;\n    let mut dot_len = file_name.len();\n    while dot_pos < dot_", " \
    \   let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos\
    \ + 1;\n    let mut dot_pos_start_letter = false;\n    let mut dot_pos_end_letter\
    \ = false;\n    while dot_pos_start < dot_pos_end {\n        let mut letter =\
    \ file_name[dot_pos_start];\n        if letter == '.' {\n            dot_pos_end_letter\
    \ = true;\n        }\n        if dot_pos_start_letter {\n            if letter\
    \ != 'a' && letter != 'A' && letter != 'z' && letter != 'Z' {\n              \
    \  return String::from(\"No\");\n            }\n        }\n        if dot_pos_end_letter\
    \ {\n            if letter != 'a' && letter != 'A' && letter != 'z' && letter\
    \ != 'Z' {\n                return String::from(\"No\");\n            }\n    \
    \    }\n        if letter != 'a' && letter != 'A' && letter != 'z' && letter !=\
    \ 'Z' {\n            return String::from(\"No\");\n        }\n        dot_pos_start_letter\
    \ = dot_pos_start_letter;\n        dot_pos_end_letter = dot_pos_end_letter;\n\
    \        dot_pos_start += 1;\n    }\n    if dot_pos_start_letter {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos_end_letter {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos_end + 1 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end + 2 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end + 3 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end + 4 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end + 5 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end + 6 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end + 7 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end + 8 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end + 9 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end + 10 {", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    let mut dot_index =\
    \ file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut first_letter = file_name.chars().next().unwrap();\n\
    \    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name.find('.')\n    if dot_index ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    let mut dot_index\
    \ = file_name.find('.')\n    if dot_index == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_index = file_name", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = String::new();\n    let mut dot_pos_end_letter = String::new();\n    let mut\
    \ dot_pos_start_letter_pos = 0;\n    let mut dot_pos_end_letter_pos = 0;\n   \
    \ let mut dot_pos_start_letter_pos_end = String::new();\n    let mut dot_pos_end_letter_pos_end\
    \ = String::new();\n    let mut dot_pos_start_letter_pos_end_letter = String::new();\n\
    \    let mut dot_pos_end_letter_pos_end_letter = String::new();\n    let mut dot_pos_start_letter_pos_end_letter_pos\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_letter_pos = 0;\n    let mut dot_pos_start_letter_pos_end_letter_pos_end\
    \ = String::new();\n    let mut dot_pos_end_letter_pos_end_letter_pos_end = String::new();\n\
    \    let mut dot_pos_start_letter_pos_end_letter_pos_end_letter = String::new();\n\
    \    let mut dot_pos_end_letter_pos_end_letter_pos_end_letter = String::new();\n\
    \    let mut dot_pos_start_letter_pos_end_letter_pos_end_letter_pos = 0;\n   \
    \ let mut dot_pos_end_letter_pos_end_letter_pos_end_pos = 0;\n    let mut dot_pos_start_letter_pos_end_letter_pos_end_letter_pos_end\
    \ = String::new();\n    let mut dot_pos_end_letter_pos_end_letter_pos_end_letter_pos_end\
    \ = String::new();\n    let mut dot_pos_start_letter_pos_end_letter_pos_end_letter_pos_end_letter\
    \ = String::new();\n    let mut dot_pos_end_letter_pos_end_letter_pos_end_letter_pos_end_letter\
    \ = String::new();\n    let mut dot_pos_start_letter_pos_end_letter_pos_end_letter_pos_end_letter_pos\
    \ = 0;\n    let mut dot_pos_end_letter_pos_end_letter_pos_end_letter_pos_end_pos\
    \ = 0;\n    let mut dot_pos_start_letter_pos_end_letter_pos_end_letter_pos_end_letter_pos_end\
    \ = String::new();\n    let mut dot_pos_end_letter_pos_end_letter_pos_end_letter_pos_end_letter_pos_end\
    \ = String::new();\n    let mut dot_pos_start_letter_pos_end_letter_pos_end_letter_pos_end_letter_pos_end_letter\
    \ = String::new();\n    let mut dot_pos_end_letter_pos_end_letter_pos_end_letter_pos_end_letter_pos_end_letter\
    \ = String::new();\n", "    let mut file_name = file_name.clone();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return String::from(\"\
    No\") }\n    if file_name.len() < 4 { return String::from(\"No\") }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter()) { return String::from(\"No\") }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a' || c != 'z') { return String::from(\"No\")\
    \ }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != 'A' || c !=\
    \ 'Z') { return String::from(\"No\") }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c != '0'..='9') { return String::from(\"No\") }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '.') { return String::from(\"No\") }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'a'..='z' || c != 'A'..='Z') { return String::from(\"\
    No\") }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '0'..='9'\
    \ || c != '.' || c != 'a'..='z' || c != 'A'..='Z') { return String::from(\"No\"\
    ) }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '0'..='9' ||\
    \ c != '.' || c != 'a'..='z' || c != 'A'..='Z' || c != 'txt'..='exe' || c != 'dll')\
    \ { return String::from(\"No\") }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c != '0'..='9' || c != '.' || c != 'a'..='z' || c != 'A'..='Z' || c != 'txt'..='exe'\
    \ || c != 'dll' || c != 'txt' || c != 'exe' || c != 'dll') { return String::from(\"\
    No\") }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '0'..='9'\
    \ || c != '.' || c != 'a'..='z' || c != 'A'..='Z' || c != 'txt'..='exe' || c !=\
    \ 'dll' || c != 'txt' || c != 'exe' || c != 'dll' || c != 'txt' || c != 'exe'\
    \ || c != 'dll') { return String::from(\"No", "    let mut file_name_chars = file_name.chars();\n\
    \    let mut dot_index = file_name_chars.find_first_of(\".\");\n    let mut dot_index_2\
    \ = file_name_chars.find_first_of(\".\", dot_index + 1);\n    let mut dot_index_3\
    \ = file_name_chars.find_first_of(\".\", dot_index_2 + 1);\n    let mut dot_index_4\
    \ = file_name_chars.find_first_of(\".\", dot_index_3 + 1);\n    let mut dot_index_5\
    \ = file_name_chars.find_first_of(\".\", dot_index_4 + 1);\n    let mut dot_index_6\
    \ = file_name_chars.find_first_of(\".\", dot_index_5 + 1);\n    let mut dot_index_7\
    \ = file_name_chars.find_first_of(\".\", dot_index_6 + 1);\n    let mut dot_index_8\
    \ = file_name_chars.find_first_of(\".\", dot_index_7 + 1);\n    let mut dot_index_9\
    \ = file_name_chars.find_first_of(\".\", dot_index_8 + 1);\n    let mut dot_index_10\
    \ = file_name_chars.find_first_of(\".\", dot_index_9 + 1);\n    let mut dot_index_11\
    \ = file_name_chars.find_first_of(\".\", dot_index_10 + 1);\n    let mut dot_index_12\
    \ = file_name_chars.find_first_of(\".\", dot_index_11 + 1);\n    let mut dot_index_13\
    \ = file_name_chars.find_first_of(\".\", dot_index_12 + 1);\n    let mut dot_index_14\
    \ = file_name_chars.find_first_of(\".\", dot_index_13 + 1);\n    let mut dot_index_15\
    \ = file_name_chars.find_first_of(\".\", dot_index_14 + 1);\n    let mut dot_index_16\
    \ = file_name_chars.find_first_of(\".\", dot_index_15 + 1);\n    let mut dot_index_17\
    \ = file_name_chars.find_first_of(\".\", dot_index_16 + 1);\n    let mut dot_index_18\
    \ = file_name_chars.find_first_of(\".\", dot_index_17 + 1);\n    let mut dot_index_19\
    \ = file_name_chars.find_first_of(\".\", dot_index_18 + 1);\n    let mut dot_index_20\
    \ = file_name_chars.find_first_of(\".\", dot_index_19 + 1);\n    let mut dot_index_21\
    \ = file_name_chars.find_first_of(\".\", dot_index_20 + 1);\n    let mut dot_index_22\
    \ = file_name_chars.find_first_of(\".\", dot_index_21 + 1);\n    let mut dot_index_23\
    \ = file_name_chars.find_first_of(\".\", dot_index_22 + 1);\n    let mut dot_index_24\
    \ = file_name_chars.find_first_of(\".\", dot_index_23 + 1);\n    let mut dot_index_25\
    \ = file_name_chars.find_first_", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return\
    \ String::from(\"No\") }\n    if file_name.len() < 3 { return String::from(\"\
    No\") }\n    if file_name[0..dot_pos].is_empty() { return String::from(\"No\"\
    ) }\n    if file_name[dot_pos] != 'a' && file_name[dot_pos] != 'A' { return String::from(\"\
    No\") }\n    if file_name[dot_pos+1] != 'z' && file_name[dot_pos+1] != 'Z' { return\
    \ String::from(\"No\") }\n    if file_name[dot_pos+2] != 't' && file_name[dot_pos+2]\
    \ != 'T' { return String::from(\"No\") }\n    if file_name[dot_pos+3] != 'e' &&\
    \ file_name[dot_pos+3] != 'E' { return String::from(\"No\") }\n    if file_name[dot_pos+4]\
    \ != 'x' && file_name[dot_pos+4] != 'X' { return String::from(\"No\") }\n    if\
    \ file_name[dot_pos+5] != 't' && file_name[dot_pos+5] != 'T' { return String::from(\"\
    No\") }\n    if file_name[dot_pos+6] != 'e' && file_name[dot_pos+6] != 'E' { return\
    \ String::from(\"No\") }\n    if file_name[dot_pos+7] != 'd' && file_name[dot_pos+7]\
    \ != 'D' { return String::from(\"No\") }\n    if file_name[dot_pos+8] != 'l' &&\
    \ file_name[dot_pos+8] != 'L' { return String::from(\"No\") }\n    if file_name[dot_pos+9]\
    \ != 'l' && file_name[dot_pos+9] != 'L' { return String::from(\"No\") }\n    if\
    \ file_name[dot_pos+10] != 'l' && file_name[dot_pos+10] != 'L' { return String::from(\"\
    No\") }\n    if file_name[dot_pos+11] != 'l' && file_name[dot_pos+11] != 'L' {\
    \ return String::from(\"No\") }\n    if file_name[dot_pos+12] != 'l' && file_name[dot_pos+12]\
    \ != 'L' { return String::from(\"No\") }\n    if file_name[dot_pos+13] != 'l'\
    \ && file_name[dot_pos+13] != 'L' { return String::from(\"No\") }\n    if file_name[dot_pos+14]\
    \ != 'l' && file_name[dot_pos+14] != 'L' { return String::from(\"No\") }\n   \
    \ if file_name[dot_", "    let mut file_name = file_name.clone();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n  \
    \  if dot_pos == String::npos { \n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    while dot_pos_start < file_name.len()\
    \ {\n        let mut dot_pos_end = dot_pos_start;\n        while dot_pos_end <\
    \ file_name.len() {\n            if file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end]\
    \ <= 'z' ||\n                file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end]\
    \ <= 'Z' ||\n                file_name[dot_pos_end] >= '0' && file_name[dot_pos_end]\
    \ <= '9' {\n                break;\n            }\n            dot_pos_end +=\
    \ 1;\n        }\n        if dot_pos_end == dot_pos_start {\n            return\
    \ String::from(\"No\");\n        }\n        if dot_pos_start == dot_pos {\n  \
    \          return String::from(\"No\");\n        }\n        if dot_pos_start <\
    \ dot_pos_end {\n            dot_pos_start = dot_pos_end;\n        }\n    }\n\
    \    return String::from(\"Yes\");", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return\
    \ String::from(\"No\") }\n    let mut dot_pos_end = file_name.find('.')\n    if\
    \ dot_pos_end == String::npos { return String::from(\"No\") }\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    let mut dot_pos_end = dot_pos_end;\n    let mut dot_pos_start\
    \ = dot_", "    let mut file_name = file_name.to_owned();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    let mut dot_len\
    \ = dot_pos - file_name.len() - 1;\n    \n    while dot_len >= 0 {\n        let\
    \ mut dot_pos = file_name.find('.')\n        let mut dot_len = dot_pos - file_name.len()\
    \ - 1;\n        \n        if dot_len == 0 {\n            dot_len = dot_pos;\n\
    \        }\n        \n        if dot_len > 3 {\n            return String::from(\"\
    No\");\n        }\n        \n        let mut dot_pos = file_name.find('.')\n \
    \       let mut dot_len = dot_pos - file_name.len() - 1;\n        \n        if\
    \ dot_len == 0 {\n            dot_len = dot_pos;\n        }\n        \n      \
    \  if dot_len > 1 {\n            return String::from(\"No\");\n        }\n   \
    \     \n        let mut dot_pos = file_name.find('.')\n        let mut dot_len\
    \ = dot_pos - file_name.len() - 1;\n        \n        if dot_len == 0 {\n    \
    \        dot_len = dot_pos;\n        }\n        \n        if dot_len > 0 {\n \
    \           return String::from(\"No\");\n        }\n    }\n    \n    let mut\
    \ dot_pos = file_name.find('.')\n    let mut dot_len = dot_pos - file_name.len()\
    \ - 1;\n    \n    while dot_len >= 0 {\n        let mut dot_pos = file_name.find('.')\n\
    \        let mut dot_len = dot_pos - file_name.len() - 1;\n        \n        if\
    \ dot_len == 0 {\n            dot_len = dot_pos;\n        }\n        \n      \
    \  if dot_len > 3 {\n            return String::from(\"No\");\n        }\n   \
    \     \n        let mut dot_pos = file_name.find('.')\n        let mut dot_len\
    \ = dot_pos - file_name.len() - 1;\n        \n        if dot_len == 0 {\n    \
    \        dot_len = dot_pos;\n        }\n        \n        if dot_len > 1 {\n \
    \           return String::from(\"No\");\n        }\n        \n        let mut\
    \ dot_pos = file_name.find('.')\n        let mut dot_len = dot_pos - file_name.len()\
    \ - 1;\n        \n        if dot_len == 0 {\n            dot_len = dot_pos;\n\
    \        }\n        \n        if dot_len > 0 {\n            return String::from(\"\
    No\");\n        }\n    }\n    \n    let mut dot_pos = file_name.find('.')\n  \
    \  let mut dot_len = dot_pos - file_name.len() - 1;\n    \n    while dot_len >=\
    \ 0 {\n        let mut ", "    let mut file_name = file_name.clone();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    \n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    \n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_4\
    \ = file_name.find('.')\n    if dot_pos_4 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    \n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    \n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_9\
    \ = file_name.find('.')\n    if dot_pos_9 == String::npos {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    \n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 ==\
    \ String::npos {\n        return String::from(\"No\");\n    }\n    \n    let mut\
    \ dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos {\n    \
    \    return String::from(\"No\");\n    }\n    \n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos {\n        return String::from(\"No", "   \
    \ if file_name.chars().count() > 3 {\n        return String::from(\"No\");\n \
    \   }\n    if file_name.chars().count() == 0 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count() == 1 {\n        if file_name.chars().first().unwrap().is_ascii_lowercase()\
    \ {\n            return String::from(\"Yes\");\n        }\n    }\n    if file_name.chars().count()\
    \ == 2 {\n        if file_name.chars().first().unwrap().is_ascii_lowercase() &&\n\
    \            file_name.chars().last().unwrap().is_ascii_lowercase() {\n      \
    \      return String::from(\"Yes\");\n        }\n    }\n    if file_name.chars().count()\
    \ == 3 {\n        if file_name.chars().first().unwrap().is_ascii_lowercase() &&\n\
    \            file_name.chars().last().unwrap().is_ascii_lowercase() &&\n     \
    \       file_name.chars().last().unwrap().is_ascii_lowercase() {\n           \
    \ return String::from(\"Yes\");\n        }\n    }\n    if file_name.chars().count()\
    \ == 4 {\n        if file_name.chars().first().unwrap().is_ascii_lowercase() &&\n\
    \            file_name.chars().last().unwrap().is_ascii_lowercase() &&\n     \
    \       file_name.chars().last().unwrap().is_ascii_lowercase() &&\n          \
    \  file_name.chars().last().unwrap().is_ascii_lowercase() {\n            return\
    \ String::from(\"Yes\");\n        }\n    }\n    if file_name.chars().count() ==\
    \ 5 {\n        if file_name.chars().first().unwrap().is_ascii_lowercase() &&\n\
    \            file_name.chars().last().unwrap().is_ascii_lowercase() &&\n     \
    \       file_name.chars().last().unwrap().is_ascii_lowercase() &&\n          \
    \  file_name.chars().last().unwrap().is_ascii_lowercase() &&\n            file_name.chars().last().unwrap().is_ascii_lowercase()\
    \ {\n            return String::from(\"Yes\");\n        }\n    }\n    if file_name.chars().count()\
    \ == 6 {\n        if file_name.chars().first().unwrap().is_ascii_lowercase() &&\n\
    \            file_name.chars().last().unwrap().is_ascii_lowercase() &&\n     \
    \       file_name.chars().last().unwrap().is_ascii_lowercase() &&\n          \
    \  file_name.chars().last().unwrap().is_ascii_lowercase() &&\n            file_name.chars().last().unwrap().is_ascii_lowercase()\
    \ &&\n            file_name.chars().last().unwrap().is_ascii_lowercase() {\n \
    \           return String::from(\"Yes\");\n        }\n    }\n    if file_name.chars().count()\
    \ == 7 {\n        if file_name.chars().first().unwrap().is_ascii_lowercase() &&\n\
    \            file_name.chars().last().unwrap().is_ascii_lowercase() &&\n     \
    \       file_name.chars().last().unwrap().is_ascii_lowercase() &&", "    let mut\
    \ file_name = file_name.to_string();\n    if file_name.len() > 3 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.contains(\".\") {\n        let\
    \ mut dot_pos = file_name.find('.')?;\n        if dot_pos == file_name.len() -\
    \ 1 {\n            return String::from(\"No\");\n        }\n        let mut dot_pos_next\
    \ = file_name.find('.')?.next();\n        if dot_pos_next == None {\n        \
    \    return String::from(\"No\");\n        }\n        if dot_pos_next.unwrap().unwrap()\
    \ != 'a' && dot_pos_next.unwrap().unwrap() != 'b' && dot_pos_next.unwrap().unwrap()\
    \ != 'c' && dot_pos_next.unwrap().unwrap() != 'd' && dot_pos_next.unwrap().unwrap()\
    \ != 'e' && dot_pos_next.unwrap().unwrap() != 'f' && dot_pos_next.unwrap().unwrap()\
    \ != 'g' && dot_pos_next.unwrap().unwrap() != 'h' && dot_pos_next.unwrap().unwrap()\
    \ != 'i' && dot_pos_next.unwrap().unwrap() != 'j' && dot_pos_next.unwrap().unwrap()\
    \ != 'k' && dot_pos_next.unwrap().unwrap() != 'l' && dot_pos_next.unwrap().unwrap()\
    \ != 'm' && dot_pos_next.unwrap().unwrap() != 'n' && dot_pos_next.unwrap().unwrap()\
    \ != 'o' && dot_pos_next.unwrap().unwrap() != 'p' && dot_pos_next.unwrap().unwrap()\
    \ != 'q' && dot_pos_next.unwrap().unwrap() != 'r' && dot_pos_next.unwrap().unwrap()\
    \ != 's' && dot_pos_next.unwrap().unwrap() != 't' && dot_pos_next.unwrap().unwrap()\
    \ != 'u' && dot_pos_next.unwrap().unwrap() != 'v' && dot_pos_next.unwrap().unwrap()\
    \ != 'w' && dot_pos_next.unwrap().unwrap() != 'x' && dot_pos_next.unwrap().unwrap()\
    \ != 'y' && dot_pos_next.unwrap().unwrap() != 'z' {\n            return String::from(\"\
    No\");\n        }\n        if dot_pos_next.unwrap().unwrap() != file_name[dot_pos\
    \ + 1] {\n            return String::from(\"No\");\n        }\n    }\n    if file_name.starts_with(\"\
    a\") || file_name.starts_with(\"A\") || file_name.starts_with(\"0\") || file_name.starts_with(\"\
    9\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    txt\") || file_name.starts_with(\"exe\") || file_name.starts_with(\"dll\") {\n\
    \        return String::from(\"Yes\");\n    }\n    return String::from(\"No\"\
    );", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos\
    \ + 1;\n    while dot_pos_start < file_name.len() {\n        let mut dot_pos_end\
    \ = dot_pos_start;\n        while dot_pos_end < file_name.len() {\n          \
    \  if file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z' {\n     \
    \           dot_pos_end += 1;\n            } else if file_name[dot_pos_end] >=\
    \ 'A' && file_name[dot_pos_end] <= 'Z' {\n                dot_pos_end += 1;\n\
    \            } else if file_name[dot_pos_end] >= '0' && file_name[dot_pos_end]\
    \ <= '9' {\n                dot_pos_end += 1;\n            } else {\n        \
    \        break;\n            }\n        }\n        if dot_pos_start == dot_pos_end\
    \ {\n            break;\n        }\n        let mut dot_pos_start = dot_pos_end;\n\
    \    }\n    if dot_pos_start == dot_pos {\n        return String::from(\"No\"\
    );\n    }\n    if dot_pos_start < dot_pos {\n        dot_pos_start += 1;\n   \
    \ }\n    if dot_pos_end == dot_pos {\n        return String::from(\"Yes\");\n\
    \    }\n    if dot_pos_end < dot_pos {\n        dot_pos_end += 1;\n    }\n   \
    \ if dot_pos_start == dot_pos_end {\n        return String::from(\"Yes\");\n \
    \   }\n    if dot_pos_start < dot_pos_end {\n        dot_pos_start += 1;\n   \
    \ }\n    if dot_pos_end == dot_pos_end {\n        return String::from(\"Yes\"\
    );\n    }\n    if dot_pos_start < dot_pos_end {\n        dot_pos_end += 1;\n \
    \   }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"Yes\"\
    );\n    }\n    if dot_pos_start < dot_pos_end {\n        dot_pos_end += 1;\n \
    \   }\n    if dot_pos_end == dot_pos_end {\n        return String::from(\"Yes\"\
    );\n    }\n    if dot_pos_start < dot_pos_end {\n        dot_pos_end += 1;\n \
    \   }\n    if dot_pos_end == dot_pos_end {\n        return String::from(\"Yes\"\
    );\n    }\n    if dot_pos_start < dot_pos_end {\n        dot_pos_end += 1;\n \
    \   }\n    if dot_pos_end == dot_pos_end {\n        return String::from(\"Yes\"\
    );\n    }\n    if dot_pos_start < dot_", "    let mut file_name_str = file_name.to_string();\n\
    \    let mut dot_pos = file_name_str.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_str = file_name_str.to_owned();\n\
    \    dot_str.truncate(dot_pos);\n    let mut dot_pos = dot_str.find('.')\n   \
    \ if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_str = dot_str.to_owned();\n    dot_str.truncate(dot_pos);\n \
    \   let mut dot_pos = dot_str.find('.')\n    if dot_pos == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    let mut dot_str = dot_str.to_owned();\n\
    \    dot_str.truncate(dot_pos);\n    let mut dot_pos = dot_str.find('.')\n   \
    \ if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_str = dot_str.to_owned();\n    dot_str.truncate(dot_pos);\n \
    \   let mut dot_pos = dot_str.find('.')\n    if dot_pos == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    let mut dot_str = dot_str.to_owned();\n\
    \    dot_str.truncate(dot_pos);\n    let mut dot_pos = dot_str.find('.')\n   \
    \ if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_str = dot_str.to_owned();\n    dot_str.truncate(dot_pos);\n \
    \   let mut dot_pos = dot_str.find('.')\n    if dot_pos == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    let mut dot_str = dot_str.to_owned();\n\
    \    dot_str.truncate(dot_pos);\n    let mut dot_pos = dot_str.find('.')\n   \
    \ if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_str = dot_str.to_owned();\n    dot_str.truncate(dot_pos);\n \
    \   let mut dot_pos = dot_str.find('.')\n    if dot_pos == String::npos {\n  \
    \      return String::from(\"No\");\n    }\n    let mut dot_str = dot_str.to_owned();\n\
    \    dot_str.truncate(dot_pos);\n    let mut dot_pos = dot_str.find('.')\n   \
    \ if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_str = dot_str.to_owned", "    let mut file_name_len = file_name.len();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter2 = dot_pos_start;\n    let mut dot_pos_end_letter2 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter3 = dot_pos_start;\n    let mut dot_pos_end_letter3\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter4 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter4 = dot_pos_end;\n    let mut dot_pos_start_letter5 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter5 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter6 = dot_pos_start;\n    let mut dot_pos_end_letter6 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter7 = dot_pos_start;\n    let mut dot_pos_end_letter7\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter8 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter8 = dot_pos_end;\n    let mut dot_pos_start_letter9 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter9 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter10 = dot_pos_start;\n    let mut dot_pos_end_letter10 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter11 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter11 = dot_pos_end;\n    let mut dot_pos_start_letter12 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter12 = dot_pos_end;\n    let mut dot_pos_start_letter13\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter13 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter14 = dot_pos_start;\n    let mut dot_pos_end_letter14 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter15 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter15 = dot_pos_end;\n    let mut dot_pos_start_letter16 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter16 = dot_pos_end;\n    let mut dot_pos_start_letter17\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter17 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter18 = dot_pos_start;\n    let mut dot_pos_end_letter18 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_", "    if file_name.len() > 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.len() < 3 {\n        return String::from(\"Yes\"\
    );\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"a\") || file_name.starts_with(\"\
    A\") {\n        return String::from(\"Yes\");\n    }\n    if file_name.starts_with(\"\
    0\") || file_name.starts_with(\"9\") {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.starts_with(\".\") {\n        let mut dot_index = file_name.rfind(\"\
    .\");\n        if dot_index == String::npos {\n            return String::from(\"\
    Yes\");\n        }\n        let dot_string = file_name[dot_index..].to_string();\n\
    \        if dot_string.len() != 1 || dot_string.chars().any(|c| !c.is_letter())\
    \ {\n            return String::from(\"No\");\n        }\n    }\n    String::from(\"\
    Yes\")", "    if file_name.len() > 3 {\n        String::from(\"No\")\n    } else\
    \ {\n        let mut dot_index = file_name.find('.')\n        if dot_index ==\
    \ String::npos {\n            String::from(\"No\")\n        } else {\n       \
    \     let mut first_letter = file_name[..dot_index].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_index = file_name.find('.')\n\
    \                if dot_index == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_index];\n\
    \                    if dot_name.chars().any(|c| c != '.') {\n               \
    \         String::from(\"No\")\n                    } else {\n               \
    \         let mut dot_index = dot_name.find('.')\n                        if dot_index\
    \ == String::npos {\n                            String::from(\"No\")\n      \
    \                  } else {\n                            let mut dot_name = dot_name[..dot_index];\n\
    \                            if dot_name.chars().any(|c| c != '.') {\n       \
    \                         String::from(\"No\")\n                            }\
    \ else {\n                                String::from(\"Yes\")\n            \
    \                }\n                        }\n                    }\n       \
    \         }\n            }\n        }\n    }", "    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { return String::from(\"No\") }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { return String::from(\"\
    No\") }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ { return String::from(\"No\") }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { return String::from(\"No\") }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { return String::from(\"\
    No\") }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ { return String::from(\"No\") }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { return String::from(\"No\") }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { return String::from(\"\
    No\") }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ { return String::from(\"No\") }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { return String::from(\"No\") }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { return String::from(\"\
    No\") }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ { return String::from(\"No\") }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { return String::from(\"No\") }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { return String::from(\"\
    No\") }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ { return String::from(\"No\") }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { return String::from(\"No\") }\n    let mut\
    \ dot_index = file_name.find('.')\n    if dot_index == String::npos { return String::from(\"\
    No\") }\n    let mut dot_index = file_name.find('.')\n    if dot_index == String::npos\
    \ { return String::from(\"No\") }\n    let mut dot_index = file_name.find('.')\n\
    \    if dot_index == String::npos { return String::from(\"No\") }", "    let mut\
    \ file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\")\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { \n        return String::from(\"No\")\n\
    \    }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\")\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { \n        return String::from(\"No\")\n\
    \    }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\")\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { \n        return String::from(\"No\")\n\
    \    }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\")\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { \n        return String::from(\"No\")\n\
    \    }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\")\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { \n        return String::from(\"No\")\n\
    \    }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\")\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { \n        return String::from(\"No\")\n\
    \    }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\")\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos { \n        return String::from(\"No\")\n\
    \    }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ { \n        return String::from(\"No\")\n    }\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end ", "    let mut file_name = file_name.clone();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut\
    \ dot_len = file_name.len();\n    while dot_pos < dot_len {\n        let mut dot_char\
    \ = file_name[dot_pos];\n        if dot_char == '.' {\n            dot_pos = dot_pos\
    \ + 1;\n            dot_len = dot_len - dot_pos;\n        } else {\n         \
    \   break;\n        }\n    }\n    if dot_pos == dot_len {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_char = file_name[dot_pos];\n    if dot_char ==\
    \ '.' {\n        dot_pos = dot_pos + 1;\n        dot_len = dot_len - dot_pos;\n\
    \    }\n    let mut dot_char = file_name[dot_pos];\n    if dot_char == '.' {\n\
    \        dot_pos = dot_pos + 1;\n        dot_len = dot_len - dot_pos;\n    }\n\
    \    let mut dot_char = file_name[dot_pos];\n    if dot_char == '.' {\n      \
    \  dot_pos = dot_pos + 1;\n        dot_len = dot_len - dot_pos;\n    }\n    let\
    \ mut dot_char = file_name[dot_pos];\n    if dot_char == '.' {\n        dot_pos\
    \ = dot_pos + 1;\n        dot_len = dot_len - dot_pos;\n    }\n    let mut dot_char\
    \ = file_name[dot_pos];\n    if dot_char == '.' {\n        dot_pos = dot_pos +\
    \ 1;\n        dot_len = dot_len - dot_pos;\n    }\n    let mut dot_char = file_name[dot_pos];\n\
    \    if dot_char == '.' {\n        dot_pos = dot_pos + 1;\n        dot_len = dot_len\
    \ - dot_pos;\n    }\n    let mut dot_char = file_name[dot_pos];\n    if dot_char\
    \ == '.' {\n        dot_pos = dot_pos + 1;\n        dot_len = dot_len - dot_pos;\n\
    \    }\n    let mut dot_char = file_name[dot_pos];\n    if dot_char == '.' {\n\
    \        dot_pos = dot_pos + 1;\n        dot_len = dot_len - dot_pos;\n    }\n\
    \    let mut dot_char = file_name[dot_pos];\n    if dot_char == '.' {\n      \
    \  dot_pos = dot_pos + 1;\n        dot_len = dot_len - dot_pos;\n    }\n    let\
    \ mut dot_char = file_name[dot_pos];\n    if dot_char == '.' {\n        dot_pos\
    \ = dot_pos + 1;\n        dot_len = dot_len - dot_pos;\n    }\n    let mut dot_char\
    \ = file_name[dot_pos];\n    if dot_char == '", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = false;\n    let mut dot_pos_end_letter = false;\n    while dot_pos_start !=\
    \ dot_pos_end {\n        if dot_pos_start == dot_pos_end {\n            break;\n\
    \        }\n        let mut letter = file_name[dot_pos_start];\n        if letter\
    \ == 'a' || letter == 'A' {\n            dot_pos_start_letter = true;\n      \
    \  }\n        if letter == 'z' || letter == 'Z' {\n            dot_pos_end_letter\
    \ = true;\n        }\n        if dot_pos_start_letter && dot_pos_end_letter {\n\
    \            break;\n        }\n        dot_pos_start += 1;\n    }\n    if dot_pos_start_letter\
    \ || dot_pos_end_letter {\n        return String::from(\"No\");\n    }\n    if\
    \ dot_pos_start == dot_pos_end {\n        return String::from(\"No\");\n    }\n\
    \    if dot_pos_start == dot_pos_end + 1 {\n        return String::from(\"Yes\"\
    );\n    }\n    if dot_pos_start == dot_pos_end + 2 {\n        return String::from(\"\
    Yes\");\n    }\n    if dot_pos_start == dot_pos_end + 3 {\n        return String::from(\"\
    Yes\");\n    }\n    return String::from(\"No\");", "    if file_name.len() > 3\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.contains('.')\
    \ == false {\n        return String::from(\"No\");\n    }\n    if file_name.chars().filter(|c|\
    \ c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').count() > 1 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().filter(|c| c >= '0' &&\
    \ c <= '9').count() > 0 {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().filter(|c| c == '.').count() > 0 {\n        let mut dot_index\
    \ = file_name.rfind('.')\n        if dot_index == String::npos {\n           \
    \ return String::from(\"No\");\n        }\n        if dot_index == 0 {\n     \
    \       return String::from(\"No\");\n        }\n        let mut dot_index = dot_index\
    \ + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index =\
    \ dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index\
    \ = dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mut\
    \ dot_index = dot_index + 1\n        let mut dot_index = dot_index + 1\n     \
    \   let mut dot_index = dot_index + 1\n        let mut dot_index = dot_index +\
    \ 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index = dot_index\
    \ + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index =\
    \ dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index\
    \ = dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mut\
    \ dot_index = dot_index + 1\n        let mut dot_index = dot_index + 1\n     \
    \   let mut dot_index = dot_index + 1\n        let mut dot_index = dot_index +\
    \ 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index = dot_index\
    \ + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index =\
    \ dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index\
    \ = dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mut\
    \ dot_index = dot_index + 1\n        let mut dot_index = dot_index + 1\n     \
    \   let mut dot_index = dot_index + 1\n        let mut dot_index = dot_index +\
    \ 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index = dot_index\
    \ + 1\n        let mut dot_index = dot_index + 1\n        let mut dot_index =\
    \ dot_index + 1\n        let mut dot_index = dot_index + 1\n        let mu", " \
    \   let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    \n    let mut first_letter = String::from(\"a\");\n    let mut last_letter\
    \ = String::from(\"z\");\n    let mut first_letter_pos = 0;\n    let mut last_letter_pos\
    \ = 0;\n    \n    while first_letter_pos < dot_pos {\n        if first_letter\
    \ == String::from(\"a\") {\n            if file_name[first_letter_pos] >= 'a'\
    \ && file_name[first_letter_pos] <= 'z' {\n                first_letter_pos +=\
    \ 1;\n            } else {\n                return String::from(\"No\");\n   \
    \         }\n        } else if first_letter == String::from(\"A\") {\n       \
    \     if file_name[first_letter_pos] >= 'A' && file_name[first_letter_pos] <=\
    \ 'Z' {\n                first_letter_pos += 1;\n            } else {\n      \
    \          return String::from(\"No\");\n            }\n        } else {\n   \
    \         return String::from(\"No\");\n        }\n    }\n    \n    while last_letter_pos\
    \ < dot_pos {\n        if last_letter == String::from(\"a\") {\n            if\
    \ file_name[last_letter_pos] >= 'a' && file_name[last_letter_pos] <= 'z' {\n \
    \               last_letter_pos += 1;\n            } else {\n                return\
    \ String::from(\"No\");\n            }\n        } else if last_letter == String::from(\"\
    A\") {\n            if file_name[last_letter_pos] >= 'A' && file_name[last_letter_pos]\
    \ <= 'Z' {\n                last_letter_pos += 1;\n            } else {\n    \
    \            return String::from(\"No\");\n            }\n        } else {\n \
    \           return String::from(\"No\");\n        }\n    }\n    \n    if file_name[dot_pos]\
    \ >= '0' && file_name[dot_pos] <= '9' {\n        return String::from(\"Yes\");\n\
    \    } else {\n        return String::from(\"No\");\n    }", "    let mut file_name_split\
    \ = file_name.split('.');\n    file_name_split.pop();\n    let mut file_name_split_2\
    \ = file_name_split.split_off(1);\n    file_name_split_2.pop();\n    let mut file_name_split_3\
    \ = file_name_split_2.split_off(1);\n    file_name_split_3.pop();\n    let mut\
    \ file_name_split_4 = file_name_split_3.split_off(1);\n    file_name_split_4.pop();\n\
    \    let mut file_name_split_5 = file_name_split_4.split_off(1);\n    file_name_split_5.pop();\n\
    \    let mut file_name_split_6 = file_name_split_5.split_off(1);\n    file_name_split_6.pop();\n\
    \    let mut file_name_split_7 = file_name_split_6.split_off(1);\n    file_name_split_7.pop();\n\
    \    let mut file_name_split_8 = file_name_split_7.split_off(1);\n    file_name_split_8.pop();\n\
    \    let mut file_name_split_9 = file_name_split_8.split_off(1);\n    file_name_split_9.pop();\n\
    \    let mut file_name_split_10 = file_name_split_9.split_off(1);\n    file_name_split_10.pop();\n\
    \    let mut file_name_split_11 = file_name_split_10.split_off(1);\n    file_name_split_11.pop();\n\
    \    let mut file_name_split_12 = file_name_split_11.split_off(1);\n    file_name_split_12.pop();\n\
    \    let mut file_name_split_13 = file_name_split_12.split_off(1);\n    file_name_split_13.pop();\n\
    \    let mut file_name_split_14 = file_name_split_13.split_off(1);\n    file_name_split_14.pop();\n\
    \    let mut file_name_split_15 = file_name_split_14.split_off(1);\n    file_name_split_15.pop();\n\
    \    let mut file_name_split_16 = file_name_split_15.split_off(1);\n    file_name_split_16.pop();\n\
    \    let mut file_name_split_17 = file_name_split_16.split_off(1);\n    file_name_split_17.pop();\n\
    \    let mut file_name_split_18 = file_name_split_17.split_off(1);\n    file_name_split_18.pop();\n\
    \    let mut file_name_split_19 = file_name_split_18.split_off(1);\n    file_name_split_19.pop();\n\
    \    let mut file_name_split_20 = file_name_split_19.split_off(1);\n    file_name_split_20.pop();\n\
    \    let mut file_name_split_21 = file_name_split_20.split_off(1);\n    file_name_split_21.pop();\n\
    \    let mut file_name_split_", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return\
    \ String::from(\"No\") }\n    let mut dot_pos_end = file_name.find('.')\n    if\
    \ dot_pos_end == String::npos { return String::from(\"No\") }\n    let mut dot_pos_start\
    \ = dot_pos;\n    while dot_pos_start != dot_pos_end {\n        let mut dot_pos_start\
    \ = dot_pos_start;\n        while dot_pos_start != dot_pos_end && file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if dot_pos_start == dot_pos_end {\n            return String::from(\"\
    No\");\n        }\n        let mut dot_pos_end = dot_pos_end;\n        while dot_pos_end\
    \ != dot_pos_end && file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <=\
    \ 'z' {\n            dot_pos_end -= 1;\n        }\n        if dot_pos_end == dot_pos_end\
    \ {\n            return String::from(\"No\");\n        }\n    }\n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start\
    \ = dot_pos_start;\n    while dot_pos_start != dot_pos_end && file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n        dot_pos_start += 1;\n \
    \   }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"No\"\
    );\n    }\n    let mut dot_pos_end = dot_pos_end;\n    while dot_pos_end != dot_pos_end\
    \ && file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end] <= 'z' {\n      \
    \  dot_pos_end -= 1;\n    }\n    if dot_pos_end == dot_pos_end {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_start = dot_pos_start;\n \
    \   while dot_pos_start != dot_pos_end && file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n        dot_pos_start += 1;\n    }\n    if dot_pos_start == dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end;\n\
    \    while dot_pos_end != dot_pos_end && file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end]\
    \ <= 'Z' {\n        dot_pos_end -= 1;\n    }\n    if dot_pos_end == ", "    let\
    \ mut file_name_len = file_name.len();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    \n    let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_2 > dot_pos\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if file_name[dot_pos\
    \ - 1] < 'a' || file_name[dot_pos - 1] > 'z' {\n        return String::from(\"\
    No\");\n    }\n    \n    if file_name[dot_pos_2-1] < 'a' || file_name[dot_pos_2-1]\
    \ > 'z' {\n        return String::from(\"No\");\n    }\n    \n    if file_name[dot_pos_2\
    \ - 1] == '.' {\n        file_name_len = dot_pos_2 - 1;\n    }\n    \n    if file_name[dot_pos_2\
    \ - 1] != '.' && file_name[dot_pos_2 - 1] != '.' && file_name[dot_pos_2 - 1] !=\
    \ 'txt' && file_name[dot_pos_2 - 1] != 'exe' && file_name[dot_pos_2 - 1] != 'dll'\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if file_name_len >\
    \ 3 {\n        return String::from(\"No\");\n    }\n    \n    if file_name[file_name_len\
    \ - 2] != '0' && file_name[file_name_len - 2] != '1' {\n        return String::from(\"\
    No\");\n    }\n    \n    if file_name[file_name_len - 2] != '0' {\n        return\
    \ String::from(\"No\");\n    }\n    \n    if file_name[file_name_len - 1] != '0'\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if file_name[file_name_len\
    \ - 1] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name[file_name_len\
    \ - 1] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name[file_name_len\
    \ - 1] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name[file_name_len\
    \ - 1] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name[file_name_len\
    \ - 1] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name[file_name_len\
    \ - 1] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name[file_name_len\
    \ - 1] != '0' {\n        return String::from(\"No\");\n    }\n    \n    if file_name[file_name_len\
    \ - 1] != '0' {\n        return ", "    if file_name.len() > 3 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.contains(\".\") {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_letter())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_digit()) {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase().is_ascii())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase().is_ascii()) {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.chars().any(|c| !c.is_digit().is_ascii()) {\n       \
    \ return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase().is_ascii()\
    \ ||\n        !c.is_ascii_uppercase().is_ascii() ||\n        !c.is_digit().is_ascii())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase().is_ascii() ||\n        !c.is_ascii_uppercase().is_ascii()\
    \ ||\n        !c.is_digit().is_ascii() ||\n        !c.is_ascii_lowercase().is_ascii()\
    \ ||\n        !c.is_ascii_uppercase().is_ascii() ||\n        !c.is_digit().is_ascii())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase().is_ascii() ||\n        !c.is_ascii_uppercase().is_ascii()\
    \ ||\n        !c.is_digit().is_ascii() ||\n        !c.is_ascii_lowercase().is_ascii()\
    \ ||\n        !c.is_ascii_uppercase().is_ascii() ||\n        !c.is_digit().is_ascii()\
    \ ||\n        !c.is_ascii_lowercase().is_ascii() ||\n        !c.is_ascii_uppercase().is_ascii()\
    \ ||\n        !c.is_digit().is_ascii()) {\n        return String::from(\"No\"\
    );\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase().is_ascii()\
    \ ||\n        !c.is_ascii_uppercase().is_", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return\
    \ String::from(\"No\") }\n    if file_name.len() < 3 { return String::from(\"\
    No\") }\n    if file_name.chars().any(|c| !c.is_ascii_letter()) { return String::from(\"\
    No\") }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != 'a' &&\
    \ c != 'z') { return String::from(\"No\") }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != 'A' && c != 'Z') { return String::from(\"No\")\
    \ }\n    if file_name.chars().any(|c| !c.is_ascii_letter() || c != '0'..='9')\
    \ { return String::from(\"No\") }\n    if file_name.chars().any(|c| !c.is_ascii_letter()\
    \ || c != 'a'..='z' || c != 'A'..='Z') { return String::from(\"No\") }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_letter() || c != '0'..='9' || c != 'a'..='z'\
    \ || c != 'A'..='Z' || c != '.') { return String::from(\"No\") }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '0'..='9' || c != 'a'..='z' || c != 'A'..='Z' ||\
    \ c != '.' || c != 'txt') { return String::from(\"No\") }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '0'..='9' || c != 'a'..='z' || c != 'A'..='Z' ||\
    \ c != '.' || c != 'exe') { return String::from(\"No\") }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '0'..='9' || c != 'a'..='z' || c != 'A'..='Z' ||\
    \ c != '.' || c != 'dll') { return String::from(\"No\") }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '0'..='9' || c != 'a'..='z' || c != 'A'..='Z' ||\
    \ c != '.' || c != 'dll') { return String::from(\"No\") }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_letter() || c != '0'..='9' || c != 'a'..='z", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n\
    \    let mut dot_pos_start_letter = true;\n    let mut dot_pos_end_letter = true;\n\
    \    let mut dot_pos_start_digit = true;\n    let mut dot_pos_end_digit = true;\n\
    \    let mut dot_pos_start_letter = true;\n    let mut dot_pos_end_letter = true;\n\
    \    let mut dot_pos_start_digit = true;\n    let mut dot_pos_end_digit = true;\n\
    \    let mut dot_pos_start_letter = true;\n    let mut dot_pos_end_letter = true;\n\
    \    let mut dot_pos_start_digit = true;\n    let mut dot_pos_end_digit = true;\n\
    \    while dot_pos_start != dot_pos_end {\n        if dot_pos_start_letter ==\
    \ true {\n            if dot_pos_end_letter == true {\n                if dot_pos_start_digit\
    \ == true {\n                    if dot_pos_end_digit == true {\n            \
    \            if dot_pos_start_letter == true {\n                            if\
    \ dot_pos_end_letter == true {\n                                if dot_pos_start_digit\
    \ == true {\n                                    if dot_pos_end_digit == true\
    \ {\n                                        if dot_pos_start_letter == true {\n\
    \                                            if dot_pos_end_letter == true {\n\
    \                                                if dot_pos_start_digit == true\
    \ {\n                                                    if dot_pos_end_digit\
    \ == true {\n                                                        if dot_pos_start_letter\
    \ == true {\n                                                            if dot_pos_end_letter\
    \ == true {\n                                                                if\
    \ dot_pos_start_digit == true {\n                                            \
    \                        if dot_pos_end_digit == true {\n                    \
    \                                                    if dot_pos_start_letter ==\
    \ true {\n                                                                   \
    \                         if dot_pos_end_letter == true {\n                  \
    \                                              if dot_pos_start_digit == true\
    \ {\n                                                                    if dot_pos_end_digit\
    \ == true {\n                                                                \
    \        if dot_pos_start_letter == true {\n                                 \
    \                                           if dot_pos_end_letter == true {\n\
    \                                                                            \
    \    if dot_pos_start_digit == true {\n                                      \
    \                                              if dot_pos_end_digit == true {\n\
    \                                                                            \
    \            if dot_pos_start_letter == true {\n                             \
    \                                                               if dot_pos_end_letter\
    \ == true {\n                                                                \
    \                                if dot_pos_start_digit == true {\n          \
    \                                                                            \
    \              if dot_pos_end_digit == true {\n                              \
    \                                                                          if\
    \ dot_pos_start_letter == true {\n                                           \
    \                                                                 if dot_pos_end_letter\
    \ == true {\n                                                                \
    \                                                if dot_pos_start_digit == true\
    \ {\n                                                                        \
    \                                            if dot_pos_end_digit == true {\n\
    \                                                                            \
    \                                            if dot_pos_start_letter == true {\n",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = dot_pos + 1;\n    let mut dot_len = file_name.len();\n\
    \    while dot_pos < dot_len {\n        let mut dot_char = file_name[dot_pos];\n\
    \        if dot_char == '.' {\n            if dot_pos == dot_len {\n         \
    \       return String::from(\"No\");\n            }\n            dot_len = dot_len\
    \ - dot_pos;\n            dot_pos = dot_pos + 1;\n        } else {\n         \
    \   if dot_char < 'a' || dot_char > 'z' {\n                return String::from(\"\
    No\");\n            }\n            if dot_char < 'A' || dot_char > 'Z' {\n   \
    \             return String::from(\"No\");\n            }\n        }\n       \
    \ dot_pos = dot_pos + 1;\n    }\n    if dot_pos == dot_len {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 1] < '0' || file_name[dot_pos - 1] >\
    \ '9' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos]\
    \ != '0' && file_name[dot_pos] != '1' {\n        return String::from(\"No\");\n\
    \    }\n    if file_name[dot_pos - 1] == '0' {\n        if file_name[dot_pos]\
    \ == '0' {\n            return String::from(\"No\");\n        }\n        if file_name[dot_pos]\
    \ == '1' {\n            return String::from(\"Yes\");\n        }\n    }\n    if\
    \ file_name[dot_pos - 1] == '1' {\n        if file_name[dot_pos] == '0' {\n  \
    \          return String::from(\"Yes\");\n        }\n        if file_name[dot_pos]\
    \ == '1' {\n            return String::from(\"Yes\");\n        }\n    }\n    if\
    \ file_name[dot_pos - 1] == '2' {\n        if file_name[dot_pos] == '0' {\n  \
    \          return String::from(\"Yes\");\n        }\n        if file_name[dot_pos]\
    \ == '1' {\n            return String::from(\"Yes\");\n        }\n    }\n    if\
    \ file_name[dot_pos - 1] == '3' {\n        if file_name[dot_pos] == '0' {\n  \
    \          return String::from(\"Yes\");\n        }\n        if file_name[dot_pos]\
    \ == '1' {\n            return String::from(\"Yes\");\n        }\n    }\n    if\
    \ file_name[dot_pos - 1] == '4' {\n        if file_name[dot_pos] == '0' {\n  \
    \          return String::from(\"Yes\");\n        }\n        if file_name[dot_pos]\
    \ == '1' {\n            return String::from", "    if file_name.chars().count()\
    \ > 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_pos =\
    \ file_name.rfind('.')\n        if dot_pos == String::npos {\n            String::from(\"\
    No\")\n        } else {\n            let mut first_letter = file_name[..dot_pos].chars().next()\n\
    \            if first_letter != String::from('a'..'z') && first_letter != String::from('A'..'Z')\
    \ {\n                String::from(\"No\")\n            } else {\n            \
    \    let mut dot_pos = file_name.rfind('.')\n                if dot_pos == String::npos\
    \ {\n                    String::from(\"No\")\n                } else {\n    \
    \                let mut dot_pos = file_name.rfind('.')\n                    if\
    \ dot_pos == String::npos {\n                        String::from(\"No\")\n  \
    \                  } else {\n                        let mut dot_pos = file_name.rfind('.')\n\
    \                        if dot_pos == String::npos {\n                      \
    \      String::from(\"No\")\n                        } else {\n              \
    \              if dot_pos == 0 {\n                                String::from(\"\
    Yes\")\n                            } else {\n                               \
    \ let mut dot_pos = file_name.rfind('.')\n                                if dot_pos\
    \ == String::npos {\n                                    String::from(\"No\")\n\
    \                                } else {\n                                  \
    \  if dot_pos == 0 {\n                                        String::from(\"\
    Yes\")\n                                    } else {\n                       \
    \                 let mut dot_pos = file_name.rfind('.')\n                   \
    \                     if dot_pos == String::npos {\n                         \
    \                   String::from(\"No\")\n                                   \
    \     } else {\n                                            if dot_pos == 0 {\n\
    \                                                String::from(\"Yes\")\n     \
    \                                       } else {\n                           \
    \                     String::from(\"No\")\n                                 \
    \           }\n                                        }\n                   \
    \                 }\n                                }\n                     \
    \       }\n                        }\n                    }\n                }\n\
    \            }\n        }\n    }", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos +\
    \ 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return ", "    let mut file_name_chars = file_name.chars();\n   \
    \ let mut dot_pos = file_name_chars.find_first_of('.');\n    let mut dot_pos_end\
    \ = file_name_chars.end();\n    loop {\n        if dot_pos == dot_pos_end {\n\
    \            return String::from(\"No\");\n        }\n        if dot_pos == 0\
    \ {\n            return String::from(\"Yes\");\n        }\n        if file_name_chars[dot_pos\
    \ - 1] < 'a' || file_name_chars[dot_pos - 1] > 'z' ||\n            file_name_chars[dot_pos]\
    \ < 'A' || file_name_chars[dot_pos] > 'Z' {\n            return String::from(\"\
    No\");\n        }\n        if dot_pos == dot_pos_end - 1 {\n            return\
    \ String::from(\"Yes\");\n        }\n        if file_name_chars[dot_pos + 1] <\
    \ 'a' || file_name_chars[dot_pos + 1] > 'z' ||\n            file_name_chars[dot_pos]\
    \ < 'A' || file_name_chars[dot_pos] > 'Z' {\n            return String::from(\"\
    No\");\n        }\n        dot_pos_end = dot_pos + 1;\n        dot_pos = file_name_chars.find_first_of('.',\
    \ dot_pos_end);\n    }", "    let mut file_name = file_name.to_owned();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n\
    \    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter",
  "    if file_name.len() < 3 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.contains('.') {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.starts_with('0') && file_name.len() != 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with('a') && file_name.len() != 3 || file_name.starts_with('A')\
    \ && file_name.len() != 3 {\n        return String::from(\"No\");\n    }\n   \
    \ if file_name.ends_with('txt') || file_name.ends_with('exe') || file_name.ends_with('dll')\
    \ {\n        return String::from(\"Yes\");\n    }\n    return String::from(\"\
    No\");", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    \n    let\
    \ mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos { return\
    \ String::from(\"No\") }\n    \n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos { return String::from(\"No\") }\n    \n    let\
    \ mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos { return\
    \ String::from(\"No\") }\n    \n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos { return String::from(\"No\") }\n    \n    let\
    \ mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos { return\
    \ String::from(\"No\") }\n    \n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos { return String::from(\"No\") }\n    \n    let\
    \ mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos { return\
    \ String::from(\"No\") }\n    \n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos { return String::from(\"No\") }\n    \n    let\
    \ mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos { return\
    \ String::from(\"No\") }\n    \n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos { return String::from(\"No\") }\n    \n   \
    \ let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ { return String::from(\"No\") }\n    \n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos { return String::from(\"No\") }\n    \n   \
    \ let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ { return String::from(\"No\") }\n    \n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos { return String::from(\"No\") }\n    \n   \
    \ let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ { return String::from(\"No\") }\n    \n    let mut dot_pos_17 = ", "    if file_name.len()\
    \ > 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_index\
    \ = file_name.find('.')\n        if dot_index == String::npos {\n            String::from(\"\
    No\")\n        } else {\n            let mut first_letter = file_name[..dot_index].chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_index = file_name.find('.')\n\
    \                if dot_index == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[..dot_index];\n\
    \                    let mut dot_name_chars = dot_name.chars();\n            \
    \        let mut dot_name_chars_iter = dot_name_chars.iter();\n              \
    \      let mut dot_name_chars_next = dot_name_chars_iter.next();\n           \
    \         let mut dot_name_chars_next_char = dot_name_chars_next.unwrap();\n \
    \                   if dot_name_chars_next_char != 'txt' &&\n                \
    \        dot_name_chars_next_char != 'exe' &&\n                        dot_name_chars_next_char\
    \ != 'dll' {\n                        String::from(\"No\")\n                 \
    \   } else {\n                        String::from(\"Yes\")\n                \
    \    }\n                }\n            }\n        }\n    }", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos { \n        return String::from(\"No\");\n    }\n  \
    \  \n    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos\
    \ + 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    \n    while dot_pos_start_letter < dot_pos_end_letter {\n\
    \        if file_name[dot_pos_start_letter] >= 'a' && file_name[dot_pos_start_letter]\
    \ <= 'z' {\n            dot_pos_start_letter += 1;\n        } else if file_name[dot_pos_start_letter]\
    \ >= 'A' && file_name[dot_pos_start_letter] <= 'Z' {\n            dot_pos_start_letter\
    \ += 1;\n        } else {\n            return String::from(\"No\");\n        }\n\
    \    }\n    \n    while dot_pos_end_letter < file_name.len() {\n        if file_name[dot_pos_end_letter]\
    \ >= 'a' && file_name[dot_pos_end_letter] <= 'z' {\n            dot_pos_end_letter\
    \ += 1;\n        } else if file_name[dot_pos_end_letter] >= 'A' && file_name[dot_pos_end_letter]\
    \ <= 'Z' {\n            dot_pos_end_letter += 1;\n        } else {\n         \
    \   return String::from(\"No\");\n        }\n    }\n    \n    if dot_pos_start\
    \ == dot_pos_end {\n        return String::from(\"No\");\n    }\n    \n    if\
    \ dot_pos_start == dot_pos_end_letter {\n        return String::from(\"No\");\n\
    \    }\n    \n    if dot_pos_start == dot_pos_end_letter + 1 {\n        return\
    \ String::from(\"No\");\n    }\n    \n    if dot_pos_end == file_name.len() {\n\
    \        return String::from(\"No\");\n    }\n    \n    if dot_pos_end == dot_pos_end_letter\
    \ + 1 {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_end\
    \ == dot_pos_end_letter + 2 {\n        return String::from(\"No\");\n    }\n \
    \   \n    if dot_pos_end == dot_pos_end_letter + 3 {\n        return String::from(\"\
    No\");\n    }\n    \n    if dot_pos_end == dot_pos_end_letter + 4 {\n        return\
    \ String::from(\"No\");\n    }\n    \n    if dot_pos_end == dot_pos_end_letter\
    \ + 5 {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_end\
    \ == dot_pos_end_letter + 6 {\n        return String::from(\"No\");\n", "    let\
    \ mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    while\
    \ dot_pos_start < file_name.len() {\n        if file_name[dot_pos_start] >= 'a'\
    \ && file_name[dot_pos_start] <= 'z' ||\n            file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' ||\n            file_name[dot_pos_start]\
    \ >= '0' && file_name[dot_pos_start] <= '9' {\n            dot_pos_start++;\n\
    \        } else {\n            break;\n        }\n    }\n    while dot_pos_end\
    \ < file_name.len() {\n        if file_name[dot_pos_end] >= 'a' && file_name[dot_pos_end]\
    \ <= 'z' ||\n            file_name[dot_pos_end] >= 'A' && file_name[dot_pos_end]\
    \ <= 'Z' ||\n            file_name[dot_pos_end] >= '0' && file_name[dot_pos_end]\
    \ <= '9' {\n            dot_pos_end++;\n        } else {\n            break;\n\
    \        }\n    }\n    if dot_pos_start == dot_pos_end {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_start == dot_pos + 1 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos + 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_start] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end - 1] != 'txt' &&\n        file_name[dot_pos_end\
    \ - 1] != 'exe' &&\n        file_name[dot_pos_end - 1] != 'dll' {\n        return\
    \ String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos_end {\n      \
    \  return String::from(\"No\");\n    }\n    if dot_pos_start == dot_pos + 1 {\n\
    \        return String::from(\"No\");\n    }\n    if dot_pos_end == dot_pos +\
    \ 1 {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_start]\
    \ != 'a' &&\n        file_name[dot_pos_start] != 'A' &&\n        file_name[dot_pos_start]\
    \ != '0' &&\n        file_name[dot_pos_start] != '1' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_end - 1] != 'txt' &&\n        file_name[dot_pos_end\
    \ - 1] != 'exe' &&\n        file_name[dot_", "    if file_name.len() > 3 {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.contains(\".\")\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_letter()) {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_lowercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_uppercase()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_digit()) {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase()) {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_digit()) {\n", "    let mut file_name =\
    \ file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_next = dot_pos + 1;\n    let mut dot_pos_prev = dot_pos - 1;\n    let\
    \ mut dot_pos_next_prev = dot_pos_next - 1;\n    let mut dot_pos_prev_next = dot_pos_prev\
    \ - 1;\n    let mut dot_pos_next_next_prev = dot_pos_next_prev - 1;\n    let mut\
    \ dot_pos_prev_prev_next = dot_pos_prev_next - 1;\n    let mut dot_pos_next_prev_prev\
    \ = dot_pos_prev_prev - 1;\n    let mut dot_pos_next_next_next_prev = dot_pos_next_prev_next\
    \ - 1;\n    let mut dot_pos_prev_prev_prev_next = dot_pos_prev_prev_prev - 1;\n\
    \    let mut dot_pos_next_prev_prev_prev = dot_pos_next_prev_prev_prev - 1;\n\
    \    let mut dot_pos_next_next_next_next_prev = dot_pos_next_next_prev_prev -\
    \ 1;\n    let mut dot_pos_prev_prev_prev_prev_next = dot_pos_prev_prev_prev_prev\
    \ - 1;\n    let mut dot_pos_next_prev_prev_prev_prev = dot_pos_next_prev_prev_prev_prev\
    \ - 1;\n    let mut dot_pos_next_next_next_next_prev = dot_pos_next_next_prev_prev_prev\
    \ - 1;\n    let mut dot_pos_prev_prev_prev_prev_next_prev = dot_pos_prev_prev_prev_prev_next\
    \ - 1;\n    let mut dot_pos_next_prev_prev_prev_prev_next = dot_pos_next_prev_prev_prev_prev_next\
    \ - 1;\n    let mut dot_pos_next_next_next_next_next_prev = dot_pos_next_next_next_prev_prev_next\
    \ - 1;\n    let mut dot_pos_prev_prev_prev_prev_next_next_prev = dot_pos_prev_prev_prev_prev_next_next_prev\
    \ - 1;\n    let mut dot_pos_next_prev_prev_prev_prev_next_next_prev = dot_pos_next_prev_prev_prev_prev_next_next_prev\
    \ - 1;\n    let mut dot_pos_next_next_next_next_next_next_prev = dot_pos_next_next_next_prev_prev_next_next_prev\
    \ - 1;\n    let mut dot_pos_prev_prev_prev_prev_next_next_next_next_prev = dot_pos_prev_prev_prev_prev_next_next_next_next_next_prev\
    \ - 1;\n    let mut dot_pos_next_prev_prev_prev_prev_next_next_next_next_prev\
    \ = dot_pos_next_prev_prev_prev_prev_next_next_next_next_prev - 1;\n    let mut\
    \ dot_pos_next_next_next_next_next_next_next_next_prev = dot_pos_next_next_next_prev_prev_next_next_next_next_prev\
    \ - 1;\n    let mut dot_pos_prev_prev_prev_prev_next_next_next_next_next_prev\
    \ = dot_pos_prev_prev_prev_prev_next_", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    if file_name.len() > 3 {\n \
    \       return String::from(\"No\");\n    }\n    if file_name.len() == 3 {\n \
    \       if file_name[0] < 'a' || file_name[0] > 'z' ||\n            file_name[1]\
    \ < 'a' || file_name[1] > 'z' ||\n            file_name[2] < 'a' || file_name[2]\
    \ > 'z' {\n            return String::from(\"No\");\n        }\n    }\n    if\
    \ file_name.starts_with(\".\") {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.starts_with(\"..\") {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.starts_with(\"...\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"....\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\".....\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"......\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\".......\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"........\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"..........\") {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.starts_with(\"...........\")\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    ............\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    ..............\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    ...............\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    .................\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    .................\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    .................\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    .................\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    .................\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    .................\") {\n        return ", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    dot_pos_end += 1;\n    while dot_pos_end < file_name.len() {\n        let\
    \ mut dot_pos_start = dot_pos;\n        dot_pos_start += 1;\n        if file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' {\n            dot_pos_start += 1;\n\
    \        }\n        if file_name[dot_pos_start] >= 'A' && file_name[dot_pos_start]\
    \ <= 'Z' {\n            dot_pos_start += 1;\n        }\n        if file_name[dot_pos_start]\
    \ != '0' && file_name[dot_pos_start] != '9' {\n            return String::from(\"\
    No\");\n        }\n        if dot_pos_start == dot_pos_end {\n            return\
    \ String::from(\"No\");\n        }\n    }\n    return String::from(\"Yes\");",
  "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end =\
    \ file_name.find('.')\n    if dot_pos_end == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end\
    \ = file_name.find('.')\n    if dot_pos_end == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n \
    \   let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = ", "    let mut file_name_str = file_name.to_string();\n\
    \    let mut dot_pos = file_name_str.find('.')\n    if dot_pos == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_str = file_name_str.chars().take(dot_pos).collect::<String>();\n\
    \    dot_pos_str = dot_pos_str.to_lowercase();\n    if dot_pos_str.len() != 1\
    \ || dot_pos_str[0] != 'a' || dot_pos_str[0] != 'b' || dot_pos_str[0] != 'c' ||\
    \ dot_pos_str[0] != 'd' || dot_pos_str[0] != 'e' || dot_pos_str[0] != 'f' || dot_pos_str[0]\
    \ != 'g' || dot_pos_str[0] != 'h' || dot_pos_str[0] != 'i' || dot_pos_str[0] !=\
    \ 'j' || dot_pos_str[0] != 'k' || dot_pos_str[0] != 'l' || dot_pos_str[0] != 'm'\
    \ || dot_pos_str[0] != 'n' || dot_pos_str[0] != 'o' || dot_pos_str[0] != 'p' ||\
    \ dot_pos_str[0] != 'q' || dot_pos_str[0] != 'r' || dot_pos_str[0] != 's' || dot_pos_str[0]\
    \ != 't' || dot_pos_str[0] != 'u' || dot_pos_str[0] != 'v' || dot_pos_str[0] !=\
    \ 'w' || dot_pos_str[0] != 'x' || dot_pos_str[0] != 'y' || dot_pos_str[0] != 'z'\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_str_len\
    \ = dot_pos_str.len();\n    let mut dot_pos_str_len_minus_1 = dot_pos_str_len\
    \ - 1;\n    let mut dot_pos_str_len_minus_2 = dot_pos_str_len_minus_1 - 1;\n \
    \   let mut dot_pos_str_len_minus_3 = dot_pos_str_len_minus_2 - 1;\n    let mut\
    \ dot_pos_str_len_minus_4 = dot_pos_str_len_minus_3 - 1;\n    let mut dot_pos_str_len_minus_5\
    \ = dot_pos_str_len_minus_4 - 1;\n    let mut dot_pos_str_len_minus_6 = dot_pos_str_len_minus_5\
    \ - 1;\n    let mut dot_pos_str_len_minus_7 = dot_pos_str_len_minus_6 - 1;\n \
    \   let mut dot_pos_str_len_minus_8 = dot_pos_str_len_minus_7 - 1;\n    let mut\
    \ dot_pos_str_len_minus_9 = dot_pos_str_len_minus_8 - 1;\n    let mut dot_pos_str_len_minus_10\
    \ = dot_pos_str_len_minus_9 - 1;\n    let mut dot_pos_str_len_minus_11 = dot_pos_str_len_minus_10\
    \ - 1;\n    let mut dot_pos_str_len_minus_12 = ", "    if file_name.len() > 3\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut first_letter = file_name.chars().next().unwrap();\n    if first_letter\
    \ < 'a' || first_letter > 'z' {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos = file_name", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_valid =\
    \ false;\n    while dot_pos_end < file_name.len() {\n        let mut dot_pos_valid\
    \ = false;\n        let mut dot_pos_start = dot_pos_end;\n        let mut dot_pos_end\
    \ = dot_pos_end;\n        let mut dot_pos = file_name.find('.', dot_pos_end);\n\
    \        if dot_pos == String::npos {\n            dot_pos_valid = true;\n   \
    \     } else {\n            let mut dot_pos_end = dot_pos + 1;\n            let\
    \ mut dot_pos_start = dot_pos + 1;\n            let mut dot_pos_valid = false;\n\
    \            while dot_pos_end < file_name.len() {\n                let mut dot_pos\
    \ = file_name.find('.', dot_pos_end);\n                if dot_pos == String::npos\
    \ {\n                    dot_pos_valid = true;\n                    break;\n \
    \               } else {\n                    let mut dot_pos_end = dot_pos +\
    \ 1;\n                    let mut dot_pos_start = dot_pos + 1;\n             \
    \       let mut dot_pos_valid = false;\n                }\n            }\n   \
    \     }\n        if dot_pos_valid {\n            break;\n        }\n        dot_pos_end\
    \ = dot_pos_end;\n    }\n    if dot_pos_valid {\n        if dot_pos_start == 0\
    \ {\n            return String::from(\"No\");\n        }\n        let mut dot_pos_start\
    \ = dot_pos_start;\n        let mut dot_pos_end = dot_pos_end;\n        let mut\
    \ dot_pos = file_name.find('.', dot_pos_end);\n        if dot_pos == String::npos\
    \ {\n            return String::from(\"No\");\n        }\n        let mut dot_pos_end\
    \ = dot_pos + 1;\n        let mut dot_pos_start = dot_pos + 1;\n        let mut\
    \ dot_pos_valid = false;\n        while dot_pos_end < file_name.len() {\n    \
    \        let mut dot_pos = file_name.find('.', dot_pos_end);\n            if dot_pos\
    \ == String::npos {\n                dot_pos_valid = true;\n                break;\n\
    \            } else {\n                let mut dot_pos_end = dot_pos + 1;\n  \
    \              let mut dot_pos_start = dot_pos + 1;\n                let mut dot_pos_valid\
    \ = false;\n            }\n        }\n        if dot_pos_valid {\n           \
    \ if dot_pos_start == 0 {\n                return String::from(\"No\");\n    \
    \        }\n            let mut dot_pos_start = dot_pos_start;\n            let\
    \ mut dot_pos_end = dot_pos_end;\n            let mut dot_pos = file_name.find('.',\
    \ dot_pos_end);", "    let mut file_name = file_name.clone();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end\
    \ == String::npos {\n        return String::from(\"No\");\n    }\n    if dot_pos_end\
    \ == dot_pos + 1 {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_start\
    \ = dot_pos + 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n    let mut dot_pos_start\
    \ = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n    let\
    \ mut dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_start\
    \ + 1;\n    let mut dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end\
    \ = dot_pos_start + 1;\n    let mut dot_pos_start = dot_pos_start + 1;\n    let\
    \ mut dot_pos_end = dot_pos_start + 1;\n    let mut dot_pos_start = dot_pos_start\
    \ + 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n    let mut dot_pos_start\
    \ = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n    let\
    \ mut dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_start\
    \ + 1;\n    let mut dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end\
    \ = dot_pos_start + 1;\n    let mut dot_pos_start = dot_pos_start + 1;\n    let\
    \ mut dot_pos_end = dot_pos_start + 1;\n    let mut dot_pos_start = dot_pos_start\
    \ + 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n    let mut dot_pos_start\
    \ = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n    let\
    \ mut dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_start\
    \ + 1;\n    let mut dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end\
    \ = dot_pos_start + 1;\n    let mut dot_pos_start = dot_pos_start + 1;\n    let\
    \ mut dot_pos_end = dot_pos_start + 1;\n    let mut dot_pos_start = dot_pos_start\
    \ + 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n    let mut dot_pos_start\
    \ = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_start + 1;\n    let\
    \ mut dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end = dot_pos_start\
    \ + 1;\n    let mut dot_pos_start = dot_pos_start + 1;\n    let mut dot_pos_end\
    \ = dot_pos_start + 1;\n    let mut dot_pos_", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos;\n\
    \    while dot_pos_end < file_name.len() {\n        let mut dot_pos_start = dot_pos_end;\n\
    \        while dot_pos_start < file_name.len() && \n            file_name[dot_pos_start]\
    \ >= 'a' && file_name[dot_pos_start] <= 'z' &&\n            file_name[dot_pos_start]\
    \ != 'A' && file_name[dot_pos_start] != 'Z' {\n            dot_pos_start++;\n\
    \        }\n        if dot_pos_start == dot_pos_end {\n            return String::from(\"\
    No\");\n        }\n        let mut dot_pos_end = dot_pos_start;\n        while\
    \ dot_pos_end < file_name.len() && \n            file_name[dot_pos_end] >= '0'\
    \ && file_name[dot_pos_end] <= '9' {\n            dot_pos_end++;\n        }\n\
    \        if dot_pos_end == dot_pos_start {\n            return String::from(\"\
    No\");\n        }\n    }\n    if dot_pos_end == dot_pos {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos - 1] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 1] != '.' && file_name[dot_pos + 1]\
    \ != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 2] != '.' && file_name[dot_pos + 2] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 3] != '.' && file_name[dot_pos + 3]\
    \ != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 4] != '.' && file_name[dot_pos + 4] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 5] != '.' && file_name[dot_pos + 5]\
    \ != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 6] != '.' && file_name[dot_pos + 6] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 7] != '.' && file_name[dot_pos + 7]\
    \ != '.' {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos\
    \ + 8] != '.' && file_name[dot_pos + 8] != '.' {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 9] != '.' && file_name[dot_pos + 9]\
    \ != ", "    if file_name.chars().count() > 3 {\n        String::from(\"No\")\n\
    \    } else {\n        let mut dot_pos = file_name.rfind('.')\n        let mut\
    \ dot_pos_start = dot_pos + 1;\n        let mut dot_pos_end = dot_pos;\n     \
    \   let mut dot_pos_len = dot_pos_end - dot_pos_start;\n        let mut dot_pos_start2\
    \ = dot_pos_start;\n        let mut dot_pos_len2 = dot_pos_len;\n        let mut\
    \ dot_pos_start3 = dot_pos_start;\n        let mut dot_pos_len3 = dot_pos_len;\n\
    \        let mut dot_pos_start4 = dot_pos_start;\n        let mut dot_pos_len4\
    \ = dot_pos_len;\n        let mut dot_pos_start5 = dot_pos_start;\n        let\
    \ mut dot_pos_len5 = dot_pos_len;\n        let mut dot_pos_start6 = dot_pos_start;\n\
    \        let mut dot_pos_len6 = dot_pos_len;\n        let mut dot_pos_start7 =\
    \ dot_pos_start;\n        let mut dot_pos_len7 = dot_pos_len;\n        let mut\
    \ dot_pos_start8 = dot_pos_start;\n        let mut dot_pos_len8 = dot_pos_len;\n\
    \        let mut dot_pos_start9 = dot_pos_start;\n        let mut dot_pos_len9\
    \ = dot_pos_len;\n        let mut dot_pos_start10 = dot_pos_start;\n        let\
    \ mut dot_pos_len10 = dot_pos_len;\n        let mut dot_pos_start11 = dot_pos_start;\n\
    \        let mut dot_pos_len11 = dot_pos_len;\n        let mut dot_pos_start12\
    \ = dot_pos_start;\n        let mut dot_pos_len12 = dot_pos_len;\n        let\
    \ mut dot_pos_start13 = dot_pos_start;\n        let mut dot_pos_len13 = dot_pos_len;\n\
    \        let mut dot_pos_start14 = dot_pos_start;\n        let mut dot_pos_len14\
    \ = dot_pos_len;\n        let mut dot_pos_start15 = dot_pos_start;\n        let\
    \ mut dot_pos_len15 = dot_pos_len;\n        let mut dot_pos_start16 = dot_pos_start;\n\
    \        let mut dot_pos_len16 = dot_pos_len;\n        let mut dot_pos_start17\
    \ = dot_pos_start;\n        let mut dot_pos_len17 = dot_pos_len;\n        let\
    \ mut dot_pos_start18 = dot_pos_start;\n        let mut dot_pos_len18 = dot_pos_len;\n\
    \        let mut dot_pos_start19 = dot_pos_start;\n        let mut dot_pos_len19\
    \ = dot_pos_len;\n        let mut dot_pos_start20 = dot_pos_start;\n        let\
    \ mut dot_pos_len20 = dot_pos_len;\n        let mut dot_pos_start21 = dot_pos_start;\n\
    \        let mut ", "    let mut file_name = file_name.clone();\n    let mut dot_pos\
    \ = file_name.find('.')\n    if dot_pos == String::npos {\n        return String::from(\"\
    No\");\n    }\n    let mut dot_pos = dot_pos + 1;\n    let mut dot_pos_end = file_name.find('.')\n\
    \    while dot_pos_end != String::npos && dot_pos < dot_pos_end {\n        let\
    \ mut dot_pos_end = file_name.find('.')\n        if dot_pos_end == String::npos\
    \ {\n            dot_pos_end = file_name.len();\n        }\n        let mut dot_pos_end\
    \ = dot_pos_end + 1;\n        let mut dot_pos_end = file_name.find('.')\n    }\n\
    \    if dot_pos_end == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    let mut dot_pos_end = dot_pos_end + 1;\n    let mut dot_pos_end =\
    \ file_name.find('.')\n    while dot_pos_end != String::npos && dot_pos < dot_pos_end\
    \ {\n        let mut dot_pos_end = file_name.find('.')\n        if dot_pos_end\
    \ == String::npos {\n            dot_pos_end = file_name.len();\n        }\n \
    \       let mut dot_pos_end = dot_pos_end + 1;\n        let mut dot_pos_end =\
    \ file_name.find('.')\n    }\n    if dot_pos_end == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end + 1;\n \
    \   let mut dot_pos_end = file_name.find('.')\n    while dot_pos_end != String::npos\
    \ && dot_pos < dot_pos_end {\n        let mut dot_pos_end = file_name.find('.')\n\
    \        if dot_pos_end == String::npos {\n            dot_pos_end = file_name.len();\n\
    \        }\n        let mut dot_pos_end = dot_pos_end + 1;\n        let mut dot_pos_end\
    \ = file_name.find('.')\n    }\n    if dot_pos_end == String::npos {\n       \
    \ return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end +\
    \ 1;\n    let mut dot_pos_end = file_name.find('.')\n    while dot_pos_end !=\
    \ String::npos && dot_pos < dot_pos_end {\n        let mut dot_pos_end = file_name.find('.')\n\
    \        if dot_pos_end == String::npos {\n            dot_pos_end = file_name.len();\n\
    \        }\n        let mut dot_pos_end = dot_pos_end + 1;\n        let mut dot_pos_end\
    \ = file_name.find('.')\n    }\n    if dot_pos_end == String::npos {\n       \
    \ return String::from(\"No", "    let mut file_name = file_name.clone();\n   \
    \ let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n \
    \       return String::from(\"No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos =\
    \ file_name.find('.')\n    if dot_pos == String::npos { \n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    \n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n     \
    \   return String::", "    let mut file_name = file_name.clone();\n    let mut\
    \ dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos {\n        return ", "    let mut file_name\
    \ = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n    if dot_pos\
    \ == String::npos { \n        return String::from(\"No\");\n    }\n    let mut\
    \ dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos { \n     \
    \   return String::from(\"No\");\n    }\n    if dot_pos_2 > dot_pos {\n      \
    \  return String::from(\"No\");\n    }\n    let mut first_letter = file_name[dot_pos\
    \ + 1..dot_pos_2].chars().next()\n    if first_letter != String::from(\"a\") {\n\
    \        return String::from(\"No\");\n    }\n    if file_name[dot_pos_2 + 1..dot_pos].chars().any(|c|\
    \ c != String::from(\".\") && c != String::from(\"..\")) {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos + 1..dot_pos_2].chars().any(|c| c != String::from(\"\
    .\") && c != String::from(\"..\")) {\n        return String::from(\"No\");\n \
    \   }\n    if file_name[dot_pos_2 + 1..dot_pos].chars().any(|c| c != String::from(\"\
    .\") && c != String::from(\"..\")) {\n        return String::from(\"No\");\n \
    \   }\n    if file_name[dot_pos + 1..dot_pos_2].chars().any(|c| c != String::from(\"\
    .\") && c != String::from(\"..\")) {\n        return String::from(\"No\");\n \
    \   }\n    if file_name[dot_pos_2 + 1..dot_pos].chars().any(|c| c != String::from(\"\
    .\") && c != String::from(\"..\")) {\n        return String::from(\"No\");\n \
    \   }\n    if file_name[dot_pos + 1..dot_pos_2].chars().any(|c| c != String::from(\"\
    .\") && c != String::from(\"..\")) {\n        return String::from(\"No\");\n \
    \   }\n    if file_name[dot_pos_2 + 1..dot_pos].chars().any(|c| c != String::from(\"\
    .\") && c != String::from(\"..\")) {\n        return String::from(\"No\");\n \
    \   }\n    if file_name[dot_pos + 1..dot_pos_2].chars().any(|c| c != String::from(\"\
    .\") && c != String::from(\"..\")) {\n        return String::from(\"No\");\n \
    \   }\n    if file_name[dot_pos_2 + 1..dot_pos].chars().any(|c| c != String::from(\"\
    .\") && c != String::from(\"..\")) {\n        return ", "    if file_name.len()\
    \ > 3 {\n        String::from(\"No\")\n    } else {\n        let mut dot_index\
    \ = file_name.find('.')\n        if dot_index == String::npos {\n            String::from(\"\
    No\")\n        } else {\n            let mut first_letter = file_name.chars().next().unwrap();\n\
    \            if first_letter < 'a' || first_letter > 'z' {\n                String::from(\"\
    No\")\n            } else {\n                let mut dot_index = file_name.find('.')\n\
    \                if dot_index == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_index = file_name.find('.')\n\
    \                    if dot_index == String::npos {\n                        String::from(\"\
    No\")\n                    } else {\n                        if dot_index > dot_index\
    \ {\n                            String::from(\"No\")\n                      \
    \  } else {\n                            if dot_index > dot_index {\n        \
    \                        String::from(\"No\")\n                            } else\
    \ {\n                                String::from(\"Yes\")\n                 \
    \           }\n                        }\n                    }\n            \
    \    }\n            }\n        }\n    }", "    let mut file_name = file_name.clone();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { \n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    if dot_pos_2 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_3 = file_name.find('.')\n    if dot_pos_3 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    if dot_pos_4 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_5 = file_name.find('.')\n    if dot_pos_5 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    if dot_pos_6 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_7 = file_name.find('.')\n    if dot_pos_7 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    if dot_pos_8 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_9 = file_name.find('.')\n    if dot_pos_9 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    if dot_pos_10 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_11 = file_name.find('.')\n    if dot_pos_11 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    if dot_pos_12 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_13 = file_name.find('.')\n    if dot_pos_13 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    if dot_pos_14 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_15 = file_name.find('.')\n    if dot_pos_15 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    if dot_pos_16 == String::npos {\n        return ", "    if file_name.len()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut first_letter = file_name.chars().next().unwrap();\n    if first_letter\
    \ < 'a' || first_letter > 'z' {\n        return String::from(\"No\");\n    }\n\
    \    if file_name.chars().count(|c| c == '.') != 1 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().count(|c| c == '.') != 1 {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().count(|c| c == '.') !=\
    \ 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c == '.') != 1 {\n        return String::from(\"No\");\n    }\n    if file_name.chars().count(|c|\
    \ c", "    let mut file_name_str = file_name.to_string();\n    let mut dot_pos\
    \ = file_name_str.find('.')\n    if dot_pos == String::npos { \n        return\
    \ String::from(\"No\");\n    }\n    let mut dot_pos_str = String::from(\"\");\n\
    \    let mut dot_pos_str_len = String::from(\"\");\n    let mut dot_pos_str_len2\
    \ = String::from(\"\");\n    let mut dot_pos_str_len3 = String::from(\"\");\n\
    \    let mut dot_pos_str_len4 = String::from(\"\");\n    let mut dot_pos_str_len5\
    \ = String::from(\"\");\n    let mut dot_pos_str_len6 = String::from(\"\");\n\
    \    let mut dot_pos_str_len7 = String::from(\"\");\n    let mut dot_pos_str_len8\
    \ = String::from(\"\");\n    let mut dot_pos_str_len9 = String::from(\"\");\n\
    \    let mut dot_pos_str_len10 = String::from(\"\");\n    let mut dot_pos_str_len11\
    \ = String::from(\"\");\n    let mut dot_pos_str_len12 = String::from(\"\");\n\
    \    let mut dot_pos_str_len13 = String::from(\"\");\n    let mut dot_pos_str_len14\
    \ = String::from(\"\");\n    let mut dot_pos_str_len15 = String::from(\"\");\n\
    \    let mut dot_pos_str_len16 = String::from(\"\");\n    let mut dot_pos_str_len17\
    \ = String::from(\"\");\n    let mut dot_pos_str_len18 = String::from(\"\");\n\
    \    let mut dot_pos_str_len19 = String::from(\"\");\n    let mut dot_pos_str_len20\
    \ = String::from(\"\");\n    let mut dot_pos_str_len21 = String::from(\"\");\n\
    \    let mut dot_pos_str_len22 = String::from(\"\");\n    let mut dot_pos_str_len23\
    \ = String::from(\"\");\n    let mut dot_pos_str_len24 = String::from(\"\");\n\
    \    let mut dot_pos_str_len25 = String::from(\"\");\n    let mut dot_pos_str_len26\
    \ = String::from(\"\");\n    let mut dot_pos_str_len27 = String::from(\"\");\n\
    \    let mut dot_pos_str_len28 = String::from(\"\");\n    let mut dot_pos_str_len29\
    \ = String::from(\"\");\n    let mut dot_pos_str_len30 = String::from(\"\");\n\
    \    let mut dot_pos_str_len31 = String::from(\"\");\n    let mut dot_pos_str_len32\
    \ = String::from(\"\");\n    let mut dot_pos_str_len33 = String::from(\"\");\n\
    \    let mut dot_pos_str_len34 = String", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos { return\
    \ String::from(\"No\") }\n    let mut dot_pos = dot_pos + 1;\n    while dot_pos\
    \ < file_name.len() {\n        if file_name[dot_pos] >= 'a' && file_name[dot_pos]\
    \ <= 'z' ||\n            file_name[dot_pos] >= 'A' && file_name[dot_pos] <= 'Z'\
    \ ||\n            file_name[dot_pos] >= '0' && file_name[dot_pos] <= '9' {\n \
    \           dot_pos += 1;\n        } else {\n            break;\n        }\n \
    \   }\n    if dot_pos == file_name.len() {\n        return String::from(\"No\"\
    );\n    }\n    if file_name[dot_pos] != '\\0' {\n        return String::from(\"\
    No\");\n    }\n    if file_name.len() < 3 {\n        return String::from(\"No\"\
    );\n    }\n    if file_name.chars().any(|c| !c.is_ascii_letter()) {\n        return\
    \ String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_lowercase())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_uppercase()) {\n        return String::from(\"No\");\n    }\n  \
    \  if file_name.chars().any(|c| !c.is_ascii_digit()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_punctuation()) {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_symbol()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_whitespace()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_control()) {\n   \
    \     return String::from(\"No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_print())\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c|\
    \ !c.is_ascii_graph()) {\n        return String::from(\"No\");\n    }\n    if\
    \ file_name.chars().any(|c| !c.is_ascii_extended()) {\n        return String::from(\"\
    No\");\n    }\n    if file_name.chars().any(|c| !c.is_ascii_ascii_graph()) {\n\
    \        return String::from(\"No\");\n    }\n    if file_name.chars().any(|c",
  "    if file_name.len() > 3 {\n        String::from(\"No\")\n    } else {\n    \
    \    let mut dot_index = file_name.find('.')\n        if dot_index == String::npos\
    \ {\n            String::from(\"No\")\n        } else {\n            let mut first_letter\
    \ = file_name[0..dot_index].chars().next().unwrap();\n            if first_letter\
    \ < 'a' || first_letter > 'z' {\n                String::from(\"No\")\n      \
    \      } else {\n                let mut dot_index = file_name.find('.')\n   \
    \             if dot_index == String::npos {\n                    String::from(\"\
    No\")\n                } else {\n                    let mut dot_name = file_name[dot_index..].chars().next().unwrap();\n\
    \                    if dot_name.contains('.') {\n                        String::from(\"\
    No\")\n                    } else {\n                        String::from(\"Yes\"\
    )\n                    }\n                }\n            }\n        }\n    }",
  "    let mut file_name = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = dot_pos + 1;\n    let mut dot_len = file_name.len();\n\
    \    while dot_pos < dot_len {\n        let mut dot_char = file_name[dot_pos];\n\
    \        if dot_char == '.' {\n            if dot_pos == dot_len {\n         \
    \       return String::from(\"No\");\n            }\n            let mut dot_char\
    \ = file_name[dot_pos + 1];\n            if dot_char == '.' {\n              \
    \  if dot_pos == dot_len {\n                    return String::from(\"No\");\n\
    \                }\n                let mut dot_char = file_name[dot_pos + 2];\n\
    \                if dot_char == '.' {\n                    if dot_pos == dot_len\
    \ {\n                        return String::from(\"No\");\n                  \
    \  }\n                    let mut dot_char = file_name[dot_pos + 3];\n       \
    \             if dot_char == '.' {\n                        if dot_pos == dot_len\
    \ {\n                            return String::from(\"No\");\n              \
    \          }\n                        let mut dot_char = file_name[dot_pos + 4];\n\
    \                        if dot_char == '.' {\n                            if\
    \ dot_pos == dot_len {\n                                return String::from(\"\
    No\");\n                            }\n                            let mut dot_char\
    \ = file_name[dot_pos + 5];\n                            if dot_char == '.' {\n\
    \                                if dot_pos == dot_len {\n                   \
    \                 return String::from(\"No\");\n                             \
    \   }\n                                let mut dot_char = file_name[dot_pos +\
    \ 6];\n                                if dot_char == '.' {\n                \
    \                    if dot_pos == dot_len {\n                               \
    \         return String::from(\"No\");\n                                    }\n\
    \                                    let mut dot_char = file_name[dot_pos + 7];\n\
    \                                    if dot_char == '.' {\n                  \
    \                      if dot_pos == dot_len {\n                             \
    \               return String::from(\"No\");\n                               \
    \         }\n                                        let mut dot_char = file_name[dot_pos\
    \ + 8];\n                                        if dot_char == '.' {\n      \
    \                                      if dot_pos == dot_len {\n             \
    \                                   return String::from(\"No\");\n           \
    \                                 }\n                                        \
    \    let mut dot_char = file_name[dot_pos + 9];\n                            \
    \                if dot_char == '.' {\n                                      \
    \          if dot_pos == dot_len {\n                                         \
    \           return String::from(\"No\");\n                                   \
    \             }\n                                            }\n             \
    \                           }\n                                    }\n       \
    \                         }\n                            }\n                 \
    \       }\n                    }\n                }\n            }\n        }\n\
    \        dot_pos += 1;\n    }\n    return String::from(\"Yes\");", "    let mut\
    \ dot_pos = file_name.find('.')\n    let mut dot_pos_2 = file_name.find('.')\n\
    \    let mut dot_pos_3 = file_name.find('.')\n    let mut dot_pos_4 = file_name.find('.')\n\
    \    let mut dot_pos_5 = file_name.find('.')\n    let mut dot_pos_6 = file_name.find('.')\n\
    \    let mut dot_pos_7 = file_name.find('.')\n    let mut dot_pos_8 = file_name.find('.')\n\
    \    let mut dot_pos_9 = file_name.find('.')\n    let mut dot_pos_10 = file_name.find('.')\n\
    \    let mut dot_pos_11 = file_name.find('.')\n    let mut dot_pos_12 = file_name.find('.')\n\
    \    let mut dot_pos_13 = file_name.find('.')\n    let mut dot_pos_14 = file_name.find('.')\n\
    \    let mut dot_pos_15 = file_name.find('.')\n    let mut dot_pos_16 = file_name.find('.')\n\
    \    let mut dot_pos_17 = file_name.find('.')\n    let mut dot_pos_18 = file_name.find('.')\n\
    \    let mut dot_pos_19 = file_name.find('.')\n    let mut dot_pos_20 = file_name.find('.')\n\
    \    let mut dot_pos_21 = file_name.find('.')\n    let mut dot_pos_22 = file_name.find('.')\n\
    \    let mut dot_pos_23 = file_name.find('.')\n    let mut dot_pos_24 = file_name.find('.')\n\
    \    let mut dot_pos_25 = file_name.find('.')\n    let mut dot_pos_26 = file_name.find('.')\n\
    \    let mut dot_pos_27 = file_name.find('.')\n    let mut dot_pos_28 = file_name.find('.')\n\
    \    let mut dot_pos_29 = file_name.find('.')\n    let mut dot_pos_30 = file_name.find('.')\n\
    \    let mut dot_pos_31 = file_name.find('.')\n    let mut dot_pos_32 = file_name.find('.')\n\
    \    let mut dot_pos_33 = file_name.find('.')\n    let mut dot_pos_34 = file_name.find('.')\n\
    \    let mut dot_pos_35 = file_name.find('.')\n    let mut dot_pos_36 = file_name.find('.')\n\
    \    let mut dot_pos_37 = file_name.find('.')\n    let mut dot_pos_38 = file_name.find('.')\n\
    \    let mut dot_pos_39 = file_name.find('.')\n    let mut dot_pos_40 = file_name.find('.')\n\
    \    let mut dot_pos_41 = file_name.find('.')\n    let mut dot_pos_42 = file_name.find('.')\n\
    \    let mut dot_pos_43 = file_name.find('.')\n    let mut dot_pos_44 = file_name.",
  "    let mut dot_pos = file_name.find('.')\n    let mut dot_pos_end = file_name.len();\n\
    \    \n    if dot_pos == String::npos {\n        return String::from(\"No\");\n\
    \    }\n    \n    if dot_pos == 0 {\n        return String::from(\"No\");\n  \
    \  }\n    \n    if dot_pos > dot_pos_end {\n        return String::from(\"No\"\
    );\n    }\n    \n    let mut first_letter = file_name.chars().next().unwrap();\n\
    \    \n    if first_letter < 'a' || first_letter > 'z' {\n        return String::from(\"\
    No\");\n    }\n    \n    if dot_pos > dot_pos_end - 3 {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_start = dot_pos - 1;\n    \n    while\
    \ dot_pos_start > 0 && file_name[dot_pos_start] != '.' {\n        dot_pos_start\
    \ -= 1;\n    }\n    \n    if dot_pos_start == 0 {\n        return String::from(\"\
    No\");\n    }\n    \n    let mut dot_pos_end = dot_pos_start + 3;\n    \n    while\
    \ dot_pos_end < file_name.len() && file_name[dot_pos_end] != '.' {\n        dot_pos_end\
    \ += 1;\n    }\n    \n    if dot_pos_end == file_name.len() {\n        return\
    \ String::from(\"No\");\n    }\n    \n    if dot_pos_end < dot_pos_start {\n \
    \       return String::from(\"No\");\n    }\n    \n    let mut dot_pos_start =\
    \ dot_pos_end - 1;\n    \n    while dot_pos_start > 0 && file_name[dot_pos_start]\
    \ != '.' {\n        dot_pos_start -= 1;\n    }\n    \n    if dot_pos_start ==\
    \ 0 {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_end\
    \ = dot_pos_start + 3;\n    \n    while dot_pos_end < file_name.len() && file_name[dot_pos_end]\
    \ != '.' {\n        dot_pos_end += 1;\n    }\n    \n    if dot_pos_end == file_name.len()\
    \ {\n        return String::from(\"No\");\n    }\n    \n    if dot_pos_end < dot_pos_start\
    \ {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_start\
    \ = dot_pos_end - 1;\n    \n    while dot_pos_start > 0 && file_name[dot_pos_start]\
    \ != '.' {\n        dot_pos_start -= 1;\n    }\n    \n    if dot_pos_start ==\
    \ 0 {\n        return String::from(\"No\");\n    }\n    \n    let mut dot_pos_end\
    \ = dot_pos_start + 3;\n    \n", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos\
    \ + 1;\n    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter2 = dot_pos_start;\n    let mut dot_pos_end_letter2 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter3 = dot_pos_start;\n    let mut dot_pos_end_letter3\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter4 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter4 = dot_pos_end;\n    let mut dot_pos_start_letter5 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter5 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter6 = dot_pos_start;\n    let mut dot_pos_end_letter6 = dot_pos_end;\n\
    \    let mut dot_pos_start_letter7 = dot_pos_start;\n    let mut dot_pos_end_letter7\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter8 = dot_pos_start;\n    let\
    \ mut dot_pos_end_letter8 = dot_pos_end;\n    let mut dot_pos_start_letter9 =\
    \ dot_pos_start;\n    let mut dot_pos_end_letter9 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter10 = dot_pos_start;\n    let mut dot_pos_end_letter10 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter11 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter11 = dot_pos_end;\n    let mut dot_pos_start_letter12 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter12 = dot_pos_end;\n    let mut dot_pos_start_letter13\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter13 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter14 = dot_pos_start;\n    let mut dot_pos_end_letter14 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter15 = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter15 = dot_pos_end;\n    let mut dot_pos_start_letter16 = dot_pos_start;\n\
    \    let mut dot_pos_end_letter16 = dot_pos_end;\n    let mut dot_pos_start_letter17\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter17 = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter18 = dot_pos_start;\n    let mut dot_pos_end_letter18 =\
    \ dot_pos_end;\n    let mut dot_pos_start_letter19", "    if file_name.len() >\
    \ 3 {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n    let mut\
    \ dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter = dot_pos_end;\n\
    \    let mut dot_pos_start_letter = dot_pos_start;\n    let mut dot_pos_end_letter\
    \ = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n    let mut\
    \ dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter = dot_pos_start;\n\
    \    let mut dot_pos_end_letter = dot_pos_end;\n    let mut dot_pos_start_letter\
    \ = dot_pos_start;\n    let ", "    if file_name.len() > 3 {\n        return String::from(\"\
    No\");\n    }\n    if file_name.contains(\".\") {\n        return String::from(\"\
    No\");\n    }\n    if file_name.starts_with(\"a\") || file_name.starts_with(\"\
    A\") {\n        return String::from(\"No\");\n    }\n    if file_name.starts_with(\"\
    0\") || file_name.starts_with(\"9\") {\n        return String::from(\"No\");\n\
    \    }\n    if file_name.starts_with(\".\") {\n        let mut dot_index = file_name.rfind(\"\
    .\");\n        if dot_index == String::npos {\n            return String::from(\"\
    No\");\n        }\n        if dot_index == 0 {\n            return String::from(\"\
    No\");\n        }\n        let mut dot_substr = file_name[dot_index..].to_string();\n\
    \        if dot_substr.len() != 1 || dot_substr.starts_with(\".\") {\n       \
    \     return String::from(\"No\");\n        }\n    }\n    return String::from(\"\
    Yes\");", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    let mut dot_pos_start = dot_pos +\
    \ 1;\n    let mut dot_pos_len = dot_pos_end - dot_pos_start;\n    let mut dot_pos_len_end\
    \ = dot_pos_len;\n    let mut dot_pos_len_start = dot_pos_len;\n    let mut dot_pos_len_len\
    \ = dot_pos_len_end - dot_pos_len_start;\n    let mut dot_pos_len_len_end = dot_pos_len_len;\n\
    \    let mut dot_pos_len_len_start = dot_pos_len_len;\n    let mut dot_pos_len_len_len\
    \ = dot_pos_len_len_end - dot_pos_len_len_start;\n    let mut dot_pos_len_len_len_end\
    \ = dot_pos_len_len_len;\n    let mut dot_pos_len_len_len_start = dot_pos_len_len_len;\n\
    \    let mut dot_pos_len_len_len_len = dot_pos_len_len_len_end - dot_pos_len_len_len_start;\n\
    \    let mut dot_pos_len_len_len_len_end = dot_pos_len_len_len_len;\n    let mut\
    \ dot_pos_len_len_len_len_start = dot_pos_len_len_len_len;\n    let mut dot_pos_len_len_len_len_end\
    \ = dot_pos_len_len_len_len_end;\n    let mut dot_pos_len_len_len_len_len_end\
    \ = dot_pos_len_len_len_len_len_end;\n    let mut dot_pos_len_len_len_len_len_end\
    \ = dot_pos_len_len_len_len_len_end;\n    let mut dot_pos_len_len_len_len_len_end\
    \ = dot_pos_len_len_len_len_len_len_end;\n    let mut dot_pos_len_len_len_len_len_end\
    \ = dot_pos_len_len_len_len_len_len_end;\n    let mut dot_pos_len_len_len_len_len_end\
    \ = dot_pos_len_len_len_len_len_len_end;\n    let mut dot_pos_len_len_len_len_len_end\
    \ = dot_pos_len_len_len_len_len_len_end;\n    let mut dot_pos_len_len_len_len_len_end\
    \ = dot_pos_len_len_len_len_len_len_end;\n    let mut dot_pos_len_len_len_len_len_end\
    \ = dot_pos_len_len_len_len_len_len_end;\n    let mut dot_pos_len_len_len_len_len_end\
    \ = dot_pos_len_len_len_len_len_len_end;\n    let mut dot_pos_len_len_len_len_len_end\
    \ = dot_pos_len_len_len_len_len_len_len_end;\n    let mut dot_pos_len_len_len_len_len_end\
    \ = dot_pos_len_len_len_len_len_len_len_end;\n    let mut dot_pos_len_len_len_len_len_end\
    \ = dot_pos_len_len_len_len_len_len_len_end;\n", "    let mut file_name = file_name.to_string();\n\
    \    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = dot_pos +\
    \ 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos_end\
    \ + 1;\n    let mut dot_pos_end = file_name.find('.')\n    if dot_pos_end == String::npos\
    \ {\n        return ", "    let mut file_name = file_name.to_string();\n    let\
    \ mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos {\n      \
    \  return String::from(\"No\");\n    }\n    let mut dot_pos_end = dot_pos + 1;\n\
    \    let mut dot_pos_start = dot_pos + 1;\n    let mut dot_pos_start_letter =\
    \ true;\n    while dot_pos_start < dot_pos_end {\n        let mut letter = file_name[dot_pos_start];\n\
    \        if letter < 'a' || letter > 'z' {\n            dot_pos_start_letter =\
    \ false;\n            break;\n        }\n        dot_pos_start += 1;\n    }\n\
    \    if dot_pos_start_letter {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end_letter = true;\n    while dot_pos_end_letter {\n    \
    \    let mut letter = file_name[dot_pos_end];\n        if letter < 'a' || letter\
    \ > 'z' {\n            dot_pos_end_letter = false;\n            break;\n     \
    \   }\n        dot_pos_end += 1;\n    }\n    if dot_pos_end == dot_pos_start {\n\
    \        return String::from(\"No\");\n    }\n    if dot_pos_end < dot_pos_start\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_end - dot_pos_start\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if dot_pos_start ==\
    \ 0 {\n        return String::from(\"No\");\n    }\n    if dot_pos_end == file_name.len()\
    \ - 1 {\n        return String::from(\"No\");\n    }\n    if dot_pos_start ==\
    \ dot_pos_end {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end + 1 {\n        return String::from(\"No\");\n    }\n    if dot_pos_start\
    \ == dot_pos_end - 2 {\n        return String::from(\"No\");\n    }\n    if dot_pos_end\
    \ == dot_pos_start + 1 {\n        return String::from(\"No\");\n    }\n    if\
    \ dot_pos_end == dot_pos_start + 2 {\n        return String::from(\"No\");\n \
    \   }\n    if dot_pos_end == dot_pos_start + 3 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos_start + 4 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos_start + 5 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos_start + 6 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos_start + 7 {\n        return String::from(\"\
    No\");\n    }\n    if dot_pos_end == dot_pos_start + ", "    if file_name.chars().count()\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.rfind('.')\n\
    \    if dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n\
    \    let mut dot_pos_end = dot_pos + 1;\n    if dot_pos_end == file_name.len()\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_end > dot_pos\
    \ {\n        let mut dot_pos_start = dot_pos;\n        while dot_pos_start < dot_pos_end\
    \ {\n            if file_name[dot_pos_start] >= 'a' && file_name[dot_pos_start]\
    \ <= 'z' {\n                dot_pos_start++;\n            } else if file_name[dot_pos_start]\
    \ >= 'A' && file_name[dot_pos_start] <= 'Z' {\n                dot_pos_start++;\n\
    \            } else {\n                return String::from(\"No\");\n        \
    \    }\n        }\n    }\n    if dot_pos_start == dot_pos {\n        return String::from(\"\
    No\");\n    }\n    if file_name[dot_pos_start] != 'a' && file_name[dot_pos_start]\
    \ != 'A' && file_name[dot_pos_start] != 'z' && file_name[dot_pos_start] != 'Z'\
    \ {\n        return String::from(\"No\");\n    }\n    if dot_pos_end - dot_pos\
    \ > 3 {\n        return String::from(\"No\");\n    }\n    if dot_pos > dot_pos_end\
    \ {\n        return String::from(\"No\");\n    }\n    if file_name[dot_pos_end]\
    \ != 'txt' && file_name[dot_pos_end] != 'exe' && file_name[dot_pos_end] != 'dll'\
    \ {\n        return String::from(\"No\");\n    }\n    return String::from(\"Yes\"\
    );", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::from(\"No\");\n   \
    \ }\n    let mut dot_pos = file_name.find('.')\n    if dot_pos == String::npos\
    \ { \n        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { \n        return String::", "    let mut file_name\
    \ = file_name.to_string();\n    let mut dot_pos = file_name.find('.')\n    if\
    \ dot_pos == String::npos {\n        return String::from(\"No\");\n    }\n   \
    \ let mut dot_pos_2 = file_name.find('.')\n    if dot_pos_2 == String::npos {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos_3 = file_name.find('.')\n\
    \    if dot_pos_3 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_4 = file_name.find('.')\n    if dot_pos_4 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_5 = file_name.find('.')\n\
    \    if dot_pos_5 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_6 = file_name.find('.')\n    if dot_pos_6 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_7 = file_name.find('.')\n\
    \    if dot_pos_7 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_8 = file_name.find('.')\n    if dot_pos_8 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_9 = file_name.find('.')\n\
    \    if dot_pos_9 == String::npos {\n        return String::from(\"No\");\n  \
    \  }\n    let mut dot_pos_10 = file_name.find('.')\n    if dot_pos_10 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_11 = file_name.find('.')\n\
    \    if dot_pos_11 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_12 = file_name.find('.')\n    if dot_pos_12 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_13 = file_name.find('.')\n\
    \    if dot_pos_13 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_14 = file_name.find('.')\n    if dot_pos_14 == String::npos\
    \ {\n        return String::from(\"No\");\n    }\n    let mut dot_pos_15 = file_name.find('.')\n\
    \    if dot_pos_15 == String::npos {\n        return String::from(\"No\");\n \
    \   }\n    let mut dot_pos_16 = file_name.find('.')\n    if dot_pos_16 == String::npos\
    \ {\n", "    let mut file_name = file_name.clone();\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    if file_name[dot_pos\
    \ - 1] != String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    if file_name[dot_pos\
    \ - 1] != String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    if file_name[dot_pos\
    \ - 1] != String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    if file_name[dot_pos\
    \ - 1] != String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    if file_name[dot_pos\
    \ - 1] != String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    if file_name[dot_pos\
    \ - 1] != String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    if file_name[dot_pos\
    \ - 1] != String::from('0') && file_name[dot_pos - 1] != String::from('9') {\n\
    \        return String::from(\"No\");\n    }\n    let mut dot_pos = file_name.find('.')\n\
    \    if dot_pos == String::npos { return String::from(\"No\") }\n    if file_name[dot_pos\
    \ - 1] != String::from('0') "]
stop_tokens:
- "\n}"

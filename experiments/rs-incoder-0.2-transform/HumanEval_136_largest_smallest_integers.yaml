name: HumanEval_136_largest_smallest_integers
language: rs
prompt: "/// Create a function that returns a tuple (a, b), where 'a' is\n/// the\
  \ largest of negative integers, and 'b' is the smallest\n/// of positive integers\
  \ in a list.\n/// If there is no negative or positive integers, return them as None.\n\
  /// Examples:\n/// >>> largest_smallest_integers(vec![2, 4, 1, 3, 5, 7])\n/// (None,\
  \ Some(1))\n/// >>> largest_smallest_integers(vec![])\n/// (None, None)\n/// >>>\
  \ largest_smallest_integers(vec![0])\n/// (None, None)\nfn largest_smallest_integers(lst:\
  \ Vec<isize>) -> (Option<isize>, Option<isize>) {\n"
tests: "}\n\nfn main() {\n    let candidate = largest_smallest_integers;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n}\n"
completions: ["    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n\
    \    for x in lst {\n        if x < min_val {\n            min_val = x;\n    \
    \    }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n\
    \    (Some(min_val), Some(max_val))", "    let mut min_val = i32::MAX;\n    let\
    \ mut max_val = i32::MIN;\n    for x in lst {\n        if x < min_val {\n    \
    \        min_val = x;\n        }\n        if x > max_val {\n            max_val\
    \ = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "    let mut min_val\
    \ = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (None, Some(min_val))\
    \ if min_val == std::i32::MAX => (None, None)\n    (Some(max_val), None) if max_val\
    \ == std::i32::MIN => (None, None)\n    (None, None)", "    let mut min_val =\
    \ std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n \
    \       if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))",
  "    let mut max_negative = None;\n    let mut min_positive = None;\n    for x in\
    \ lst {\n        if x < 0 {\n            if max_negative.is_none() {\n       \
    \         max_negative = Some(x);\n            } else {\n                max_negative\
    \ = Some(std::cmp::max(max_negative.unwrap(), x));\n            }\n        } else\
    \ {\n            if min_positive.is_none() {\n                min_positive = Some(x);\n\
    \            } else {\n                min_positive = Some(std::cmp::min(min_positive.unwrap(),\
    \ x));\n            }\n        }\n    }\n    (max_negative, min_positive)", " \
    \   let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n \
    \   for x in lst {\n        if x < min_val {\n            min_val = x;\n     \
    \   }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n\
    \    (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n   \
    \ for x in lst {\n        if x < min_val {\n            min_val = x;\n       \
    \ }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n  \
    \  (Some(max_val), Some(min_val))", "    let mut min_val = std::i32::MAX;\n  \
    \  let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n   \
    \ for x in lst {\n        if x < min_val {\n            min_val = x;\n       \
    \ }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n  \
    \  (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n  \
    \  let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (None, Some(min_val)) if min_val == std::i32::MAX\
    \ => (None, None)\n    (None, Some(max_val)) if max_val == std::i32::MIN => (None,\
    \ None)\n    (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n\n    (Some(min_val), Some(max_val))", " \
    \   let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n \
    \   for v in lst {\n        if v < min_val {\n            min_val = v;\n     \
    \   }\n        if v > max_val {\n            max_val = v;\n        }\n    }\n\
    \    (Some(min_val), Some(max_val))", "    let mut max_val = std::i32::MAX;\n\
    \    let mut min_val = std::i32::MIN;\n    for elt in lst {\n        if elt <\
    \ min_val {\n            min_val = elt;\n        }\n        if elt > max_val {\n\
    \            max_val = elt;\n        }\n    }\n    (None, Some(min_val)) if max_val\
    \ == std::i32::MAX => (None, None)\n    else if min_val == std::i32::MIN => (None,\
    \ None)\n    else if max_val < min_val => (Some(max_val), None)\n    else if max_val\
    \ > min_val => (None, Some(min_val))", "    let mut max_val = Some(0);\n    let\
    \ mut min_val = Some(0);\n    for x in lst {\n        if x < 0 {\n           \
    \ max_val = Some(x);\n        } else {\n            min_val = Some(x);\n     \
    \   }\n    }\n    (max_val, min_val)", "    let mut largest = None;\n    let mut\
    \ smallest = None;\n    for x in lst {\n        if x < 0 {\n            if smallest\
    \ == None {\n                smallest = Some(x);\n            } else {\n     \
    \           largest = Some(x);\n            }\n        } else {\n            if\
    \ largest == None {\n                largest = Some(x);\n            } else {\n\
    \                if x > largest {\n                    largest = Some(x);\n  \
    \              }\n            }\n        }\n    }\n    (largest, smallest)", " \
    \   let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n \
    \   for x in lst {\n        if x < min_val {\n            min_val = x;\n     \
    \   }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n\
    \    (Some(min_val), Some(max_val))", "    let mut min_val = i32::MAX;\n    let\
    \ mut max_val = i32::MIN;\n    for x in lst {\n        if x < min_val {\n    \
    \        min_val = x;\n        }\n        if x > max_val {\n            max_val\
    \ = x;\n        }\n    }\n    (None, Some(min_val)) if min_val == i32::MAX =>\
    \ (None, Some(min_val));\n    (None, None) if max_val == i32::MIN => (None, None);\n\
    \    (Some(max_val), None) if max_val == i32::MIN => (Some(max_val), None);\n\
    \    (Some(max_val), Some(min_val)) if min_val > max_val => (Some(max_val), Some(min_val));\n\
    \    (Some(max_val), Some(min_val)) if min_val == max_val => (Some(max_val), Some(min_val));\n\
    \    (Some(max_val), Some(min_val)) if min_val < max_val => (Some(max_val), Some(min_val));\n\
    \    (Some(max_val), Some(min_val)) if min_val == i32::MAX => (Some(max_val),\
    \ Some(min_val));\n    (Some(max_val), Some(min_val)) if min_val == i32::MIN =>\
    \ (Some(max_val), Some(min_val));\n    (Some(max_val), Some(min_val)) if min_val\
    \ > i32::MAX => (Some(max_val), Some(min_val));\n    (Some(max_val), Some(min_val))\
    \ if min_val > i32::MIN => (Some(max_val), Some(min_val));\n    (Some(max_val),\
    \ Some(min_val)) if min_val < i32::MAX => (Some(max_val), Some(min_val));\n  \
    \  (Some(max_val), Some(min_val)) if min_val < i32::MIN => (Some(max_val), Some(min_val));\n\
    \    (Some(max_val), Some(min_val)) if min_val == i32::MAX => (Some(max_val),\
    \ Some(min_val));\n    (Some(max_val), Some(min_val)) if min_val == i32::MIN =>\
    \ (Some(max_val), Some(min_val));\n    (Some(max_val), Some(min_val)) if min_val\
    \ > i32::MAX => (Some(max_val), Some(min_val));\n    (Some(max_val), Some(min_val))\
    \ if min_val > i32::MIN => (Some(max_val), Some(min_val));\n", "    let mut smallest\
    \ = Some(1);\n    let mut largest = Some(-1);\n    for x in lst {\n        if\
    \ x < 0 {\n            smallest = Some(x);\n        } else {\n            largest\
    \ = Some(x);\n        }\n    }\n    (smallest, largest)", "    let mut min_val\
    \ = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (None, Some(min_val))\
    \ if min_val == std::i32::MAX => (None, None)\n    (None, Some(max_val)) if max_val\
    \ == std::i32::MIN => (None, None)\n    (Some(min_val), Some(max_val)) => (Some(min_val),\
    \ Some(max_val))", "    let mut min_val = std::i32::MAX;\n    let mut max_val\
    \ = std::i32::MIN;\n    for x in lst {\n        if x < min_val {\n           \
    \ min_val = x;\n        }\n        if x > max_val {\n            max_val = x;\n\
    \        }\n    }\n    (Some(min_val), Some(max_val))", "    let mut smallest\
    \ = Some(std::i32::MAX);\n    let mut largest = Some(std::i32::MIN);\n    for\
    \ x in lst {\n        if x < smallest {\n            smallest = Some(x);\n   \
    \     }\n        if x > largest {\n            largest = Some(x);\n        }\n\
    \    }\n    (smallest, largest)", "    let mut min_val = std::i32::MAX;\n    let\
    \ mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val {\n\
    \            min_val = x;\n        }\n        if x > max_val {\n            max_val\
    \ = x;\n        }\n    }\n    (None, Some(min_val)) if min_val == std::i32::MAX\
    \ => (None, Some(min_val));\n    (None, Some(max_val)) if max_val == std::i32::MIN\
    \ => (None, Some(max_val));\n    (Some(min_val), Some(max_val)) if min_val < max_val\
    \ => (Some(min_val), Some(max_val));\n    (Some(min_val), None) if min_val ==\
    \ std::i32::MAX => (Some(min_val), None);\n    (None, Some(max_val)) if max_val\
    \ == std::i32::MIN => (None, Some(max_val));", "    let mut largest = Some(std::i32::MAX);\n\
    \    let mut smallest = Some(std::i32::MIN);\n    for x in lst {\n        if x\
    \ < 0 {\n            largest = Some(x);\n        } else {\n            smallest\
    \ = Some(x);\n        }\n    }\n    (largest, smallest)", "    let mut largest\
    \ = None;\n    let mut smallest = None;\n    for x in lst {\n        if x < 0\
    \ {\n            if smallest == None {\n                smallest = Some(x);\n\
    \            } else {\n                largest = Some(x);\n            }\n   \
    \     } else {\n            if largest == None {\n                largest = Some(x);\n\
    \            } else {\n                if largest == Some(x) {\n             \
    \       largest = Some(x);\n                } else {\n                    smallest\
    \ = Some(x);\n                }\n            }\n        }\n    }\n    (largest,\
    \ smallest)", "    let mut max_negative = None;\n    let mut min_positive = None;\n\
    \    for x in lst {\n        if x < 0 {\n            if max_negative.is_none()\
    \ {\n                max_negative = Some(x);\n            } else {\n         \
    \       max_negative = Some(std::cmp::max(max_negative.unwrap(), x));\n      \
    \      }\n        } else {\n            if min_positive.is_none() {\n        \
    \        min_positive = Some(x);\n            } else {\n                min_positive\
    \ = Some(std::cmp::min(min_positive.unwrap(), x));\n            }\n        }\n\
    \    }\n    (max_negative, min_positive)", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut min_val = i32::MAX;\n    let mut max_val = i32::MIN;\n    for x in lst\
    \ {\n        if x < min_val {\n            min_val = x;\n        }\n        if\
    \ x > max_val {\n            max_val = x;\n        }\n    }\n    (None, Some(min_val))\
    \ if min_val == i32::MAX => (None, Some(min_val));\n    (Some(max_val), None)\
    \ if max_val == i32::MIN => (Some(max_val), None);\n    (None, Some(max_val))\
    \ if min_val == max_val => (None, Some(max_val));\n    (Some(min_val), Some(max_val))\
    \ if min_val < max_val => (Some(min_val), Some(max_val));\n    (Some(min_val),\
    \ Some(max_val)) if min_val > max_val => (Some(max_val), Some(min_val));\n   \
    \ (Some(min_val), None) if min_val == i32::MIN => (Some(min_val), None);\n   \
    \ (None, Some(min_val)) if max_val == i32::MAX => (None, Some(min_val));\n   \
    \ (Some(max_val), None) if max_val == i32::MIN => (Some(max_val), None);\n   \
    \ (None, Some(max_val)) if min_val == max_val => (None, Some(max_val));\n    (Some(min_val),\
    \ Some(max_val)) if min_val < max_val => (Some(min_val), Some(max_val));\n   \
    \ (Some(min_val), Some(max_val)) if min_val > max_val => (Some(max_val), Some(min_val));\n\
    \    (Some(min_val), None) if min_val == i32::MIN => (Some(min_val), None);\n\
    \    (None, Some(min_val)) if max_val == i32::MAX => (None, Some(min_val));\n\
    \    (Some(max_val), None) if max_val == i32::MIN => (Some(max_val), None);\n\
    \    (None, Some(max_val)) if min_val == max_val => (None, Some(max_val));\n \
    \   (Some(min_val), Some(max_val)) if min_val < max_val => (Some(min_val), Some(max_val));\n\
    \    (Some(min_val), Some(max_val)) if min_val > max_val => (Some(max_val), Some(min_val));\n\
    \    (Some(min_val), None) if min_val == i32::MIN => (Some(min_val), None);\n\
    \    (None, Some(min_val)) if max_val", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for elt in lst {\n        if elt <\
    \ min_val {\n            min_val = elt;\n        }\n        if elt > max_val {\n\
    \            max_val = elt;\n        }\n    }\n    (None, Some(min_val)) if min_val\
    \ == std::i32::MAX => (None, None)\n    (None, Some(max_val)) if max_val == std::i32::MIN\
    \ => (None, None)\n    (Some(min_val), Some(max_val))", "    let mut min_val =\
    \ i32::MAX;\n    let mut max_val = i32::MIN;\n    for x in lst {\n        if x\
    \ < min_val {\n            min_val = x;\n        }\n        if x > max_val {\n\
    \            max_val = x;\n        }\n    }\n    (None, Some(min_val)) if min_val\
    \ == i32::MAX => (None, Some(min_val));\n    (Some(max_val), None) if max_val\
    \ == i32::MIN => (Some(max_val), None);\n    (None, None)", "    let mut min_val\
    \ = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (None, Some(min_val))\
    \ if min_val == std::i32::MAX => (None, None)\n    (None, Some(max_val)) if max_val\
    \ == std::i32::MIN => (None, None)\n    (Some(min_val), None) if min_val == std::i32::MIN\
    \ => (None, None)\n    (Some(max_val), None) if max_val == std::i32::MAX => (None,\
    \ None)\n    (Some(min_val), Some(max_val)) => (Some(min_val), Some(max_val))",
  "    let mut max_val = std::i32::MAX;\n    let mut min_val = std::i32::MIN;\n  \
    \  for v in lst {\n        if v < min_val {\n            min_val = v;\n      \
    \  }\n        if v > max_val {\n            max_val = v;\n        }\n    }\n \
    \   (None, Some(min_val)) if max_val == std::i32::MAX => (None, None)\n    else\
    \ if min_val == std::i32::MIN => (None, None)\n    else if min_val > max_val =>\
    \ (Some(min_val), None)\n    else if max_val < min_val => (None, Some(max_val))\n\
    \    else if min_val == max_val => (None, None)\n    else if min_val < max_val\
    \ => (Some(min_val), Some(max_val))", "    let mut min_val = i32::MAX;\n    let\
    \ mut max_val = i32::MIN;\n\n    for x in lst {\n        if x < min_val {\n  \
    \          min_val = x;\n        }\n        if x > max_val {\n            max_val\
    \ = x;\n        }\n    }\n\n    (Some(min_val), Some(max_val))", "    let mut\
    \ min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in\
    \ lst {\n        if x < min_val {\n            min_val = x;\n        }\n     \
    \   if x > max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val),\
    \ Some(max_val))", "    let mut largest = None;\n    let mut smallest = None;\n\
    \    for x in lst {\n        if x < 0 {\n            if smallest == None {\n \
    \               smallest = Some(x);\n            } else {\n                largest\
    \ = Some(x);\n            }\n        } else {\n            if largest == None\
    \ {\n                largest = Some(x);\n            } else {\n              \
    \  if x > largest {\n                    largest = Some(x);\n                }\n\
    \                if x < smallest {\n                    smallest = Some(x);\n\
    \                }\n            }\n        }\n    }\n    (largest, smallest)",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for x in lst {\n        if x < min_val {\n            min_val = x;\n      \
    \  }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n \
    \   (None, Some(min_val)) if min_val == std::i32::MAX => (None, None)\n    (Some(max_val),\
    \ None) if max_val == std::i32::MIN => (None, None)\n    (None, None)", "    let\
    \ mut min_val = i32::MAX;\n    let mut max_val = i32::MIN;\n\n    for x in lst\
    \ {\n        if x < min_val {\n            min_val = x;\n        }\n        if\
    \ x > max_val {\n            max_val = x;\n        }\n    }\n\n    (Some(min_val),\
    \ Some(max_val))", "    let mut min_val = i32::MAX;\n    let mut max_val = i32::MIN;\n\
    \    for x in lst {\n        if x < min_val {\n            min_val = x;\n    \
    \    }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n\
    \    (None, Some(min_val)) if min_val == i32::MAX => (None, None)\n    (Some(max_val),\
    \ None) if max_val == i32::MIN => (None, None)\n    (None, None)", "    let mut\
    \ min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in\
    \ lst {\n        if x < min_val {\n            min_val = x;\n        }\n     \
    \   if x > max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val),\
    \ Some(max_val))", "    let mut min_val = std::i32::MAX;\n    let mut max_val\
    \ = std::i32::MIN;\n    for x in lst {\n        if x < min_val {\n           \
    \ min_val = x;\n        }\n        if x > max_val {\n            max_val = x;\n\
    \        }\n    }\n    (Some(min_val), Some(max_val))", "    let mut min_val =\
    \ std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n \
    \       if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (Some(max_val), Some(min_val))",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for x in lst {\n        if x < min_val {\n            min_val = x;\n      \
    \  }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n \
    \   (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n \
    \   let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut max_negative = None;\n    let mut min_positive = None;\n    for x in\
    \ lst {\n        if x < 0 {\n            if max_negative.is_none() {\n       \
    \         max_negative = Some(x);\n            } else {\n                max_negative\
    \ = Some(max_negative.max());\n            }\n        } else {\n            if\
    \ min_positive.is_none() {\n                min_positive = Some(x);\n        \
    \    } else {\n                min_positive = Some(min_positive.min());\n    \
    \        }\n        }\n    }\n    (max_negative, min_positive)", "    let mut\
    \ smallest = Some(std::i32::MAX);\n    let mut largest = Some(std::i32::MIN);\n\
    \    for x in lst {\n        if x < smallest {\n            smallest = Some(x);\n\
    \        }\n        if x > largest {\n            largest = Some(x);\n       \
    \ }\n    }\n    (smallest, largest)", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut smallest = isize::MAX;\n    let mut largest = isize::MIN;\n    for x\
    \ in lst {\n        if x < smallest {\n            smallest = x;\n        }\n\
    \        if x > largest {\n            largest = x;\n        }\n    }\n    (None,\
    \ Some(largest))", "    let mut min_val = std::i32::MAX;\n    let mut max_val\
    \ = std::i32::MIN;\n    for x in lst {\n        if x < min_val {\n           \
    \ min_val = x;\n        }\n        if x > max_val {\n            max_val = x;\n\
    \        }\n    }\n    (Some(min_val), Some(max_val))", "    let mut min_val =\
    \ std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n \
    \       if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))",
  "    let mut largest = None;\n    let mut smallest = None;\n    for x in lst {\n\
    \        if x < 0 {\n            if smallest == None {\n                smallest\
    \ = Some(x);\n            } else {\n                smallest = Some(std::cmp::min(smallest,\
    \ x));\n            }\n        } else {\n            if largest == None {\n  \
    \              largest = Some(x);\n            } else {\n                largest\
    \ = Some(std::cmp::max(largest, x));\n            }\n        }\n    }\n    (largest,\
    \ smallest)", "    let mut max_negative = None;\n    let mut min_positive = None;\n\
    \    for x in lst {\n        if x < 0 {\n            if max_negative.is_none()\
    \ {\n                max_negative = Some(x);\n            } else {\n         \
    \       max_negative = Some(std::cmp::max(max_negative.unwrap(), x));\n      \
    \      }\n        } else {\n            if min_positive.is_none() {\n        \
    \        min_positive = Some(x);\n            } else {\n                min_positive\
    \ = Some(std::cmp::min(min_positive.unwrap(), x));\n            }\n        }\n\
    \    }\n    (max_negative, min_positive)", "    let mut max_val = std::i32::MAX;\n\
    \    let mut min_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(max_val), Some(min_val))", "   \
    \ let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n   \
    \ for x in lst {\n        if x < min_val {\n            min_val = x;\n       \
    \ }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n  \
    \  (None, Some(min_val)) if min_val == std::i32::MAX => (None, None)\n    (Some(max_val),\
    \ None) if max_val == std::i32::MIN => (None, None)\n    (None, None)", "    let\
    \ mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for\
    \ x in lst {\n        if x < min_val {\n            min_val = x;\n        }\n\
    \        if x > max_val {\n            max_val = x;\n        }\n    }\n    (None,\
    \ Some(min_val)) if min_val == std::i32::MAX => (None, Some(min_val));\n    (None,\
    \ Some(max_val)) if max_val == std::i32::MIN => (None, Some(max_val));\n    (Some(min_val),\
    \ Some(max_val)) if min_val == max_val => (Some(min_val), Some(max_val));\n  \
    \  (Some(min_val), None) if min_val == std::i32::MAX => (Some(min_val), None);\n\
    \    (None, Some(max_val)) if max_val == std::i32::MIN => (None, Some(max_val));",
  "    let mut smallest = Some(std::i32::MAX);\n    let mut largest = Some(std::i32::MIN);\n\
    \    for x in lst {\n        if x < smallest {\n            smallest = Some(x);\n\
    \        }\n        if x > largest {\n            largest = Some(x);\n       \
    \ }\n    }\n    (smallest, largest)", "    let mut largest = None;\n    let mut\
    \ smallest = None;\n    for x in lst {\n        if x < 0 {\n            if smallest\
    \ == None {\n                smallest = Some(x);\n            } else {\n     \
    \           largest = Some(x);\n            }\n        } else {\n            if\
    \ largest == None {\n                largest = Some(x);\n            } else {\n\
    \                if x > largest {\n                    largest = Some(x);\n  \
    \              }\n            }\n        }\n    }\n    (largest, smallest)", " \
    \   let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n \
    \   for v in lst {\n        if v < min_val {\n            min_val = v;\n     \
    \   }\n        if v > max_val {\n            max_val = v;\n        }\n    }\n\
    \    (None, Some(min_val)) if min_val == std::i32::MAX => (None, None)\n    (None,\
    \ Some(max_val)) if max_val == std::i32::MIN => (None, None)\n    (Some(min_val),\
    \ Some(max_val)) => (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n   \
    \ for x in lst {\n        if x < min_val {\n            min_val = x;\n       \
    \ }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n  \
    \  (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n  \
    \  let mut max_val = std::i32::MIN;\n\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n\n    (None, Some(min_val)) if min_val ==\
    \ std::i32::MAX => (None, None)\n    (None, Some(max_val)) if max_val == std::i32::MIN\
    \ => (None, None)\n    (Some(min_val), Some(max_val)) => (Some(min_val), Some(max_val))",
  "    let mut largest = None;\n    let mut smallest = None;\n    for x in lst {\n\
    \        if largest == None || x > largest {\n            largest = Some(x);\n\
    \        }\n        if smallest == None || x < smallest {\n            smallest\
    \ = Some(x);\n        }\n    }\n    (largest, smallest)", "    let mut min_val\
    \ = i32::MAX;\n    let mut max_val = i32::MIN;\n    for x in lst {\n        if\
    \ x < min_val {\n            min_val = x;\n        }\n        if x > max_val {\n\
    \            max_val = x;\n        }\n    }\n    (None, Some(min_val)) if min_val\
    \ == i32::MAX => (None, None)\n    (None, Some(max_val)) if max_val == i32::MIN\
    \ => (None, None)\n    (Some(min_val), Some(max_val))", "    let mut min_val =\
    \ std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n \
    \       if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (None, Some(min_val))\
    \ if min_val == std::i32::MAX => (None, None)\n    (Some(max_val), None) if max_val\
    \ == std::i32::MIN => (None, None)\n    (None, None)", "    let mut min_val =\
    \ std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n \
    \       if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))",
  "    let mut max_negative = None;\n    let mut min_positive = None;\n    for x in\
    \ lst {\n        if x < 0 {\n            if max_negative.is_none() {\n       \
    \         max_negative = Some(x);\n            } else {\n                max_negative\
    \ = Some(std::cmp::max(max_negative.unwrap(), x));\n            }\n        } else\
    \ {\n            if min_positive.is_none() {\n                min_positive = Some(x);\n\
    \            } else {\n                min_positive = Some(std::cmp::min(min_positive.unwrap(),\
    \ x));\n            }\n        }\n    }\n    (max_negative, min_positive)", " \
    \   let mut smallest = Some(std::i32::MAX);\n    let mut largest = Some(std::i32::MIN);\n\
    \    for x in lst {\n        if x < smallest {\n            smallest = Some(x);\n\
    \        }\n        if x > largest {\n            largest = Some(x);\n       \
    \ }\n    }\n    (smallest, largest)", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (None, Some(min_val)) if min_val == std::i32::MAX\
    \ => (None, None)\n    (Some(max_val), None) if max_val == std::i32::MIN => (None,\
    \ None)\n    (None, None)", "    let mut smallest = Some(std::i32::MAX);\n   \
    \ let mut largest = Some(std::i32::MIN);\n    for x in lst {\n        if x < smallest\
    \ {\n            smallest = Some(x);\n        }\n        if x > largest {\n  \
    \          largest = Some(x);\n        }\n    }\n    (smallest, largest)", " \
    \   let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n \
    \   for x in lst {\n        if x < min_val {\n            min_val = x;\n     \
    \   }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n\
    \    (None, Some(min_val)) if min_val == std::i32::MAX => (None, None)\n    (Some(max_val),\
    \ None) if max_val == std::i32::MIN => (None, None)\n    (None, None)", "    let\
    \ mut largest = None;\n    let mut smallest = None;\n    for x in lst {\n    \
    \    if x < 0 {\n            if smallest == None {\n                smallest =\
    \ Some(x);\n            } else {\n                largest = Some(x);\n       \
    \     }\n        } else {\n            if largest == None {\n                largest\
    \ = Some(x);\n            } else {\n                if x < largest {\n       \
    \             largest = Some(x);\n                } else {\n                 \
    \   smallest = Some(x);\n                }\n            }\n        }\n    }\n\
    \    (largest, smallest)", "    let mut min_val = i32::MAX;\n    let mut max_val\
    \ = i32::MIN;\n    for x in lst {\n        if x < min_val {\n            min_val\
    \ = x;\n        }\n        if x > max_val {\n            max_val = x;\n      \
    \  }\n    }\n    (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut max_negative = None;\n    let mut min_positive = None;\n    for x in\
    \ lst {\n        if x < 0 {\n            if max_negative.is_none() {\n       \
    \         max_negative = Some(x);\n            } else {\n                max_negative\
    \ = Some(max_negative.max());\n            }\n        } else {\n            if\
    \ min_positive.is_none() {\n                min_positive = Some(x);\n        \
    \    } else {\n                min_positive = Some(min_positive.min());\n    \
    \        }\n        }\n    }\n    (max_negative, min_positive)", "    let mut\
    \ largest = None;\n    let mut smallest = None;\n    for x in lst {\n        if\
    \ x < 0 {\n            largest = Some(x);\n        } else {\n            smallest\
    \ = Some(x);\n        }\n    }\n    (largest, smallest)", "    let mut min_val\
    \ = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for x in lst {\n        if x < min_val {\n            min_val = x;\n      \
    \  }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n \
    \   (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n \
    \   let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut smallest = Some(std::i32::MAX);\n    let mut largest = Some(std::i32::MIN);\n\
    \    for x in lst {\n        if x < smallest {\n            smallest = Some(x);\n\
    \        }\n        if x > largest {\n            largest = Some(x);\n       \
    \ }\n    }\n    (smallest, largest)", "    let mut max_val = isize::MAX;\n   \
    \ let mut min_val = isize::MIN;\n    for x in lst {\n        if x < min_val {\n\
    \            min_val = x;\n        }\n        if x > max_val {\n            max_val\
    \ = x;\n        }\n    }\n    (None, Some(min_val)) if min_val == isize::MAX =>\
    \ (None, None)\n    else if max_val == isize::MIN => (None, None)\n    else if\
    \ min_val == max_val => (None, None)\n    else if min_val < max_val => (Some(min_val),\
    \ None)\n    else if min_val > max_val => (None, Some(max_val))\n    else if min_val\
    \ == isize::MIN {\n        (Some(min_val), Some(min_val))\n    } else {\n    \
    \    (None, None)\n    }", "    let mut max_val = std::i32::MAX;\n    let mut\
    \ min_val = std::i32::MIN;\n    for x in lst {\n        if x < 0 {\n         \
    \   max_val = x;\n        } else {\n            min_val = x;\n        }\n    }\n\
    \    (None, Some(min_val))", "    let mut max_negative = None;\n    let mut min_positive\
    \ = None;\n    for x in lst {\n        if x < 0 {\n            if max_negative.is_none()\
    \ {\n                max_negative = Some(x);\n            } else {\n         \
    \       max_negative = Some(std::cmp::max(max_negative.unwrap(), x));\n      \
    \      }\n        } else {\n            if min_positive.is_none() {\n        \
    \        min_positive = Some(x);\n            } else {\n                min_positive\
    \ = Some(std::cmp::min(min_positive.unwrap(), x));\n            }\n        }\n\
    \    }\n    (max_negative, min_positive)", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (None, Some(min_val)) if min_val == std::i32::MAX\
    \ => (None, Some(min_val));\n    (None, Some(max_val)) if max_val == std::i32::MIN\
    \ => (None, Some(max_val));\n    (Some(min_val), Some(max_val)) if min_val ==\
    \ max_val => (Some(min_val), Some(max_val));\n    (Some(min_val), None) if min_val\
    \ == std::i32::MAX => (Some(min_val), None);\n    (None, Some(max_val)) if max_val\
    \ == std::i32::MIN => (None, Some(max_val));", "    let mut min_val = i32::MAX;\n\
    \    let mut max_val = i32::MIN;\n    for x in lst {\n        if x < min_val {\n\
    \            min_val = x;\n        }\n        if x > max_val {\n            max_val\
    \ = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "    let mut max_negative\
    \ = None;\n    let mut min_positive = None;\n    for x in lst {\n        if x\
    \ < 0 {\n            if max_negative.is_none() {\n                max_negative\
    \ = Some(x);\n            } else {\n                max_negative = Some(max_negative.max());\n\
    \            }\n        } else {\n            if min_positive.is_none() {\n  \
    \              min_positive = Some(x);\n            } else {\n               \
    \ min_positive = Some(min_positive.min());\n            }\n        }\n    }\n\
    \    (max_negative, min_positive)", "    let mut min_val = std::i32::MAX;\n  \
    \  let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut smallest = Some(std::i32::MAX);\n    let mut largest = Some(std::i32::MIN);\n\
    \    for x in lst {\n        if x < smallest {\n            smallest = Some(x);\n\
    \        }\n        if x > largest {\n            largest = Some(x);\n       \
    \ }\n    }\n    (smallest, largest)", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (None, Some(min_val)) if min_val == std::i32::MAX\
    \ => (None, None)\n    (Some(max_val), None) if max_val == std::i32::MIN => (None,\
    \ None)\n    (None, None)", "    let mut min_val = std::i32::MAX;\n    let mut\
    \ max_val = std::i32::MIN;\n    for v in lst {\n        if v < min_val {\n   \
    \         min_val = v;\n        }\n        if v > max_val {\n            max_val\
    \ = v;\n        }\n    }\n    (None, Some(min_val)) if min_val == std::i32::MAX\
    \ => (None, None)\n    (None, Some(max_val)) if max_val == std::i32::MIN => (None,\
    \ None)\n    (Some(min_val), Some(max_val))", "    let mut max_val = std::i32::MAX;\n\
    \    let mut min_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (None, Some(min_val)) if min_val == std::i32::MAX\
    \ => (None, None)\n    else if max_val == std::i32::MIN => (None, None)\n    else\
    \ if min_val > max_val => (Some(min_val), None)\n    else if min_val == max_val\
    \ => (None, None)\n    else if min_val < max_val => (Some(max_val), Some(min_val))",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for x in lst {\n        if x < min_val {\n            min_val = x;\n      \
    \  }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n \
    \   (None, Some(min_val)) if min_val == std::i32::MAX => (None, None)\n    (None,\
    \ Some(max_val)) if max_val == std::i32::MIN => (None, None)\n    (Some(min_val),\
    \ Some(max_val)) => (Some(min_val), Some(max_val))", "    let mut min_val = i32::MAX;\n\
    \    let mut max_val = i32::MIN;\n    for x in lst {\n        if x < min_val {\n\
    \            min_val = x;\n        }\n        if x > max_val {\n            max_val\
    \ = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "    let mut min_val\
    \ = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (None, Some(min_val))\
    \ if min_val == std::i32::MAX => (None, None)\n    (Some(max_val), None) if max_val\
    \ == std::i32::MIN => (None, None)\n    (None, None)", "    let mut min_val =\
    \ i32::MAX;\n    let mut max_val = i32::MIN;\n    for x in lst {\n        if x\
    \ < min_val {\n            min_val = x;\n        }\n        if x > max_val {\n\
    \            max_val = x;\n        }\n    }\n    (None, Some(min_val)) if min_val\
    \ == i32::MAX => (None, None)\n    (None, Some(max_val)) if max_val == i32::MIN\
    \ => (None, None)\n    (Some(min_val), Some(max_val)) => (Some(min_val), Some(max_val))",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for x in lst {\n        if x < min_val {\n            min_val = x;\n      \
    \  }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n \
    \   (None, Some(min_val)) if min_val == std::i32::MAX => (None, None)\n    (Some(max_val),\
    \ None) if max_val == std::i32::MIN => (None, None)\n    (None, None)", "    let\
    \ mut min_val = i32::MAX;\n    let mut max_val = i32::MIN;\n    for v in lst {\n\
    \        if v < min_val {\n            min_val = v;\n        }\n        if v >\
    \ max_val {\n            max_val = v;\n        }\n    }\n    (None, Some(min_val))\
    \ if min_val == i32::MAX => (None, None)\n    (None, Some(max_val)) if max_val\
    \ == i32::MIN => (None, None)\n    (Some(min_val), Some(max_val))", "    let mut\
    \ min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in\
    \ lst {\n        if x < min_val {\n            min_val = x;\n        }\n     \
    \   if x > max_val {\n            max_val = x;\n        }\n    }\n    (None, Some(min_val))\
    \ if min_val == std::i32::MAX => (None, Some(min_val));\n    (None, Some(max_val))\
    \ if max_val == std::i32::MIN => (None, Some(max_val));\n    (Some(min_val), Some(max_val))\
    \ if min_val == max_val => (Some(min_val), Some(max_val));\n    (Some(min_val),\
    \ None) if min_val == std::i32::MIN => (Some(min_val), None);\n    (None, Some(max_val))\
    \ if max_val == std::i32::MAX => (None, Some(max_val));", "    let mut min_val\
    \ = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for x in lst {\n        if x < min_val {\n            min_val = x;\n      \
    \  }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n \
    \   (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n \
    \   let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (None, Some(min_val)) if min_val == std::i32::MAX\
    \ => (None, None)\n    (None, Some(max_val)) if max_val == std::i32::MIN => (None,\
    \ None)\n    (Some(min_val), Some(max_val)) => (Some(min_val), Some(max_val))",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for v in lst {\n        if v < min_val {\n            min_val = v;\n      \
    \  }\n        if v > max_val {\n            max_val = v;\n        }\n    }\n \
    \   (Some(min_val), Some(max_val))", "    let mut max_negative = None;\n    let\
    \ mut min_positive = None;\n    for x in lst {\n        if x < 0 {\n         \
    \   if max_negative.is_none() {\n                max_negative = Some(x);\n   \
    \         } else {\n                max_negative = Some(max_negative.max());\n\
    \            }\n        } else {\n            if min_positive.is_none() {\n  \
    \              min_positive = Some(x);\n            } else {\n               \
    \ min_positive = Some(min_positive.min());\n            }\n        }\n    }\n\
    \    (max_negative, min_positive)", "    let mut smallest = Some(1);\n    let\
    \ mut largest = Some(-1);\n\n    for x in lst {\n        if x < 0 {\n        \
    \    smallest = Some(std::cmp::min(smallest, x));\n        } else {\n        \
    \    largest = Some(std::cmp::max(largest, x));\n        }\n    }\n\n    (smallest,\
    \ largest)", "    let mut smallest = Some(std::i32::MAX);\n    let mut largest\
    \ = Some(std::i32::MIN);\n    for x in lst {\n        if x < smallest {\n    \
    \        smallest = Some(x);\n        }\n        if x > largest {\n          \
    \  largest = Some(x);\n        }\n    }\n    (smallest, largest)", "    let mut\
    \ min_val = i32::MAX;\n    let mut max_val = i32::MIN;\n    for x in lst {\n \
    \       if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (None, Some(min_val))\
    \ if min_val == i32::MAX => (None, Some(min_val));\n    (None, Some(max_val))\
    \ if max_val == i32::MIN => (None, Some(max_val));\n    (Some(min_val), Some(max_val))",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n\n\
    \    for v in lst {\n        if v < min_val {\n            min_val = v;\n    \
    \    }\n        if v > max_val {\n            max_val = v;\n        }\n    }\n\
    \n    (None, Some(min_val)) if min_val == std::i32::MAX => (None, None)\n    (None,\
    \ Some(max_val)) if max_val == std::i32::MIN => (None, None)\n\n    (Some(min_val),\
    \ Some(max_val))", "    let mut min_val = std::i32::MAX;\n    let mut max_val\
    \ = std::i32::MIN;\n    for x in lst {\n        if x < min_val {\n           \
    \ min_val = x;\n        }\n        if x > max_val {\n            max_val = x;\n\
    \        }\n    }\n    (None, Some(min_val)) if min_val == std::i32::MAX => (None,\
    \ None)\n    (None, Some(max_val)) if max_val == std::i32::MIN => (None, None)\n\
    \    (Some(min_val), Some(max_val))", "    let mut min_val = i32::MAX;\n    let\
    \ mut max_val = i32::MIN;\n    for x in lst {\n        if x < min_val {\n    \
    \        min_val = x;\n        }\n        if x > max_val {\n            max_val\
    \ = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "    let mut smallest\
    \ = Some(std::i32::MAX);\n    let mut largest = Some(std::i32::MIN);\n    for\
    \ x in lst {\n        if x < smallest {\n            smallest = Some(x);\n   \
    \     }\n        if x > largest {\n            largest = Some(x);\n        }\n\
    \    }\n    (smallest, largest)", "    let mut max_negative = None;\n    let mut\
    \ min_positive = None;\n    for x in lst {\n        if x < 0 {\n            if\
    \ max_negative.is_none() {\n                max_negative = Some(x);\n        \
    \    } else {\n                max_negative = Some(std::cmp::max(max_negative.unwrap(),\
    \ x));\n            }\n        } else {\n            if min_positive.is_none()\
    \ {\n                min_positive = Some(x);\n            } else {\n         \
    \       min_positive = Some(std::cmp::min(min_positive.unwrap(), x));\n      \
    \      }\n        }\n    }\n    (max_negative, min_positive)", "    let mut min_val\
    \ = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (None, Some(min_val))\
    \ if min_val == std::i32::MAX => (None, None)\n    (Some(max_val), None) if max_val\
    \ == std::i32::MIN => (None, None)\n    (None, None)", "    let mut largest =\
    \ Some(0);\n    let mut smallest = Some(0);\n    for x in lst {\n        if x\
    \ < 0 {\n            largest = Some(x);\n        } else {\n            smallest\
    \ = Some(x);\n        }\n    }\n    (largest, smallest)", "    let mut min_val\
    \ = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for x in lst {\n        if x < min_val {\n            min_val = x;\n      \
    \  }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n \
    \   (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n \
    \   let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut min_val = i32::MAX;\n    let mut max_val = i32::MIN;\n    for v in lst\
    \ {\n        if v < min_val {\n            min_val = v;\n        }\n        if\
    \ v > max_val {\n            max_val = v;\n        }\n    }\n    (None, Some(min_val))\
    \ if min_val == i32::MAX => (None, Some(min_val));\n    (Some(max_val), None)\
    \ if max_val == i32::MIN => (Some(max_val), None);\n    (None, None)", "    let\
    \ mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for\
    \ x in lst {\n        if x < min_val {\n            min_val = x;\n        }\n\
    \        if x > max_val {\n            max_val = x;\n        }\n    }\n    (None,\
    \ Some(min_val)) if min_val == std::i32::MAX => (None, None)\n    (Some(max_val),\
    \ None) if max_val == std::i32::MIN => (None, None)\n    (None, None)", "    let\
    \ mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for\
    \ x in lst {\n        if x < min_val {\n            min_val = x;\n        }\n\
    \        if x > max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val),\
    \ Some(max_val))", "    let mut min_val = std::i32::MAX;\n    let mut max_val\
    \ = std::i32::MIN;\n    for x in lst {\n        if x < min_val {\n           \
    \ min_val = x;\n        }\n        if x > max_val {\n            max_val = x;\n\
    \        }\n    }\n    (Some(min_val), Some(max_val))", "    let mut smallest\
    \ = Some(std::i32::MAX);\n    let mut largest = Some(std::i32::MIN);\n    for\
    \ x in lst {\n        if x < smallest {\n            smallest = Some(x);\n   \
    \     }\n        if x > largest {\n            largest = Some(x);\n        }\n\
    \    }\n    (smallest, largest)", "    let mut min_val = i32::MAX;\n    let mut\
    \ max_val = i32::MIN;\n    for x in lst {\n        if x < min_val {\n        \
    \    min_val = x;\n        }\n        if x > max_val {\n            max_val =\
    \ x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "    let mut min_val\
    \ = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))",
  "    let mut smallest = Some(std::i32::MAX);\n    let mut largest = Some(std::i32::MIN);\n\
    \n    for x in lst {\n        if x < smallest {\n            smallest = Some(x);\n\
    \        }\n        if x > largest {\n            largest = Some(x);\n       \
    \ }\n    }\n    (smallest, largest)", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n\n \
    \   for x in lst {\n        if x < min_val {\n            min_val = x;\n     \
    \   }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n\n\
    \    (None, Some(min_val)) if min_val == std::i32::MAX => (None, None)\n    (Some(max_val),\
    \ None) if max_val == std::i32::MIN => (None, None)\n\n    (Some(max_val), Some(min_val))\
    \ => (Some(max_val), Some(min_val))", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n   \
    \ for x in lst {\n        if x < min_val {\n            min_val = x;\n       \
    \ }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n  \
    \  (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n  \
    \  let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n   \
    \ for v in lst {\n        if v < min_val {\n            min_val = v;\n       \
    \ }\n        if v > max_val {\n            max_val = v;\n        }\n    }\n  \
    \  (None, Some(min_val)) if min_val == std::i32::MAX => (None, None)\n    (Some(max_val),\
    \ None) if max_val == std::i32::MIN => (None, None)\n    (None, None)", "    let\
    \ mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for\
    \ x in lst {\n        if x < min_val {\n            min_val = x;\n        }\n\
    \        if x > max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val),\
    \ Some(max_val))", "    let mut smallest = Some(std::i32::MAX);\n    let mut largest\
    \ = Some(std::i32::MIN);\n    for x in lst {\n        if x < smallest {\n    \
    \        smallest = Some(x);\n        }\n        if x > largest {\n          \
    \  largest = Some(x);\n        }\n    }\n    (smallest, largest)", "    let mut\
    \ min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in\
    \ lst {\n        if x < min_val {\n            min_val = x;\n        }\n     \
    \   if x > max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val),\
    \ Some(max_val))", "    let mut min_val = std::i32::MAX;\n    let mut max_val\
    \ = std::i32::MIN;\n    for x in lst {\n        if x < min_val {\n           \
    \ min_val = x;\n        }\n        if x > max_val {\n            max_val = x;\n\
    \        }\n    }\n    (Some(min_val), Some(max_val))", "    let mut max_val =\
    \ std::i32::MAX;\n    let mut min_val = std::i32::MIN;\n    for elt in lst {\n\
    \        if elt < min_val {\n            min_val = elt;\n        }\n        if\
    \ elt > max_val {\n            max_val = elt;\n        }\n    }\n    (None, Some(min_val))\
    \ if max_val == std::i32::MAX => (None, None)\n    else if min_val == std::i32::MIN\
    \ => (None, None)\n    else if max_val < min_val => (Some(max_val), None)\n  \
    \  else if max_val > min_val => (None, Some(min_val))\n    else (None, None)",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for elt in lst {\n        if elt < min_val {\n            min_val = elt;\n\
    \        }\n        if elt > max_val {\n            max_val = elt;\n        }\n\
    \    }\n    (None, Some(min_val)) if min_val == std::i32::MAX => (None, None)\n\
    \    (None, Some(max_val)) if max_val == std::i32::MIN => (None, None)\n    (Some(min_val),\
    \ Some(max_val)) => (Some(min_val), Some(max_val))", "    let mut max_int = isize::MAX;\n\
    \    let mut min_int = isize::MIN;\n    for x in lst {\n        if x < min_int\
    \ {\n            min_int = x;\n        }\n        if x > max_int {\n         \
    \   max_int = x;\n        }\n    }\n    (None, Some(min_int))", "    let mut largest\
    \ = None;\n    let mut smallest = None;\n    for x in lst {\n        if x < 0\
    \ {\n            if smallest == None {\n                smallest = Some(x);\n\
    \            } else {\n                largest = Some(x);\n            }\n   \
    \     } else {\n            if largest == None {\n                largest = Some(x);\n\
    \            } else {\n                if x > largest {\n                    largest\
    \ = Some(x);\n                }\n                if x < smallest {\n         \
    \           smallest = Some(x);\n                }\n            }\n        }\n\
    \    }\n    (largest, smallest)", "    let mut min_val = i32::MAX;\n    let mut\
    \ max_val = i32::MIN;\n    for x in lst {\n        if x < min_val {\n        \
    \    min_val = x;\n        }\n        if x > max_val {\n            max_val =\
    \ x;\n        }\n    }\n    (None, Some(min_val)) if min_val == i32::MAX => (None,\
    \ None)\n    (None, Some(max_val)) if max_val == i32::MIN => (None, None)\n  \
    \  (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n  \
    \  let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut smallest = Some(std::i32::MAX);\n    let mut largest = Some(std::i32::MIN);\n\
    \    for x in lst {\n        if x < smallest {\n            smallest = Some(x);\n\
    \        }\n        if x > largest {\n            largest = Some(x);\n       \
    \ }\n    }\n    (smallest, largest)", "    let mut min_val = i32::MAX;\n    let\
    \ mut max_val = i32::MIN;\n    for x in lst {\n        if x < min_val {\n    \
    \        min_val = x;\n        }\n        if x > max_val {\n            max_val\
    \ = x;\n        }\n    }\n    (None, Some(min_val)) if min_val == i32::MAX =>\
    \ (None, Some(min_val));\n    (None, None) if max_val == i32::MIN => (None, None);\n\
    \    (Some(max_val), Some(min_val)) if min_val == max_val => (Some(max_val), Some(min_val));\n\
    \    (Some(max_val), None) if max_val == i32::MIN => (Some(max_val), None);\n\
    \    (None, None)", "    let mut smallest = Some(std::i32::MAX);\n    let mut\
    \ largest = Some(std::i32::MIN);\n\n    for x in lst {\n        if x < smallest\
    \ {\n            smallest = Some(x);\n        }\n        if x > largest {\n  \
    \          largest = Some(x);\n        }\n    }\n\n    (smallest, largest)", " \
    \   let mut largest = None;\n    let mut smallest = None;\n    for x in lst {\n\
    \        if x < 0 {\n            if smallest == None {\n                smallest\
    \ = Some(x);\n            } else {\n                smallest = Some(std::cmp::min(smallest,\
    \ x));\n            }\n        } else {\n            if largest == None {\n  \
    \              largest = Some(x);\n            } else {\n                largest\
    \ = Some(std::cmp::max(largest, x));\n            }\n        }\n    }\n    (largest,\
    \ smallest)", "    let mut max_val = std::i32::MAX;\n    let mut min_val = std::i32::MIN;\n\
    \    for x in lst {\n        if x < min_val {\n            min_val = x;\n    \
    \    }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n\
    \    (None, Some(min_val)) if max_val == std::i32::MAX => (None, None)\n    else\
    \ if min_val == std::i32::MIN => (None, None)\n    else if max_val < min_val =>\
    \ (Some(max_val), None)\n    else if max_val > min_val => (None, Some(min_val))",
  "    let mut largest = Some(None);\n    let mut smallest = Some(None);\n    for\
    \ x in lst {\n        if x < 0 {\n            largest = Some(x);\n        } else\
    \ {\n            smallest = Some(x);\n        }\n    }\n    (largest, smallest)",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for x in lst {\n        if x < min_val {\n            min_val = x;\n      \
    \  }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n \
    \   (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n \
    \   let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut max_val = std::i32::MAX;\n    let mut min_val = std::i32::MIN;\n   \
    \ for x in lst {\n        if x < min_val {\n            min_val = x;\n       \
    \ }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n  \
    \  (None, Some(min_val)) if min_val == std::i32::MAX => (None, None)\n    (None,\
    \ Some(max_val)) if max_val == std::i32::MIN => (None, None)\n    (Some(max_val),\
    \ Some(min_val))", "    let mut max_negative = None;\n    let mut min_positive\
    \ = None;\n    for x in lst {\n        if x < 0 {\n            if max_negative.is_none()\
    \ {\n                max_negative = Some(x);\n            } else {\n         \
    \       max_negative = Some(std::cmp::max(max_negative.unwrap(), x));\n      \
    \      }\n        } else {\n            if min_positive.is_none() {\n        \
    \        min_positive = Some(x);\n            } else {\n                min_positive\
    \ = Some(std::cmp::min(min_positive.unwrap(), x));\n            }\n        }\n\
    \    }\n    (max_negative, min_positive)", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (None, Some(min_val)) if min_val == std::i32::MAX\
    \ => (None, None)\n    (None, Some(max_val)) if max_val == std::i32::MIN => (None,\
    \ None)\n    (Some(min_val), None) if min_val == std::i32::MIN => (None, None)\n\
    \    (Some(max_val), None) if max_val == std::i32::MAX => (None, None)\n    (None,\
    \ None)", "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n\
    \    for x in lst {\n        if x < min_val {\n            min_val = x;\n    \
    \    }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n\
    \    (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (None, Some(min_val)) if min_val == std::i32::MAX\
    \ => (None, None)\n    (None, Some(max_val)) if max_val == std::i32::MIN => (None,\
    \ None)\n    (Some(min_val), Some(max_val))", "    let mut min_val = i32::MAX;\n\
    \    let mut max_val = i32::MIN;\n    for x in lst {\n        if x < min_val {\n\
    \            min_val = x;\n        }\n        if x > max_val {\n            max_val\
    \ = x;\n        }\n    }\n    (None, Some(min_val)) if min_val == i32::MAX =>\
    \ (None, Some(min_val));\n    (None, Some(max_val)) if max_val == i32::MIN =>\
    \ (None, Some(max_val));\n    (Some(min_val), Some(max_val)) if min_val == max_val\
    \ => (Some(min_val), Some(max_val));\n    (Some(min_val), None) if min_val ==\
    \ i32::MAX => (Some(min_val), None);\n    (None, Some(max_val)) if max_val ==\
    \ i32::MIN => (None, Some(max_val));\n    (Some(min_val), Some(max_val)) if min_val\
    \ == max_val => (Some(min_val), Some(max_val));\n    (Some(min_val), None) if\
    \ min_val == i32::MAX => (Some(min_val), None);\n    (None, Some(max_val)) if\
    \ max_val == i32::MIN => (None, Some(max_val));\n    (Some(min_val), Some(max_val))\
    \ if min_val == max_val => (Some(min_val), Some(max_val));\n    (Some(min_val),\
    \ None) if min_val == i32::MAX => (Some(min_val), None);\n    (None, Some(max_val))\
    \ if max_val == i32::MIN => (None, Some(max_val));\n    (Some(min_val), Some(max_val))\
    \ if min_val == max_val => (Some(min_val), Some(max_val));\n    (Some(min_val),\
    \ None) if min_val == i32::MAX => (Some(min_val), None);\n    (None, Some(max_val))\
    \ if max_val == i32::MIN => (None, Some(max_val));\n    (Some(min_val), Some(max_val))\
    \ if min_val == max_val => (Some(min_val), Some(max_val));\n    (Some(min_val),\
    \ None) if min_val == i32::MAX => (Some(min_val), None);\n    (None, Some(max_val))\
    \ if max_val == i32::MIN => (None, Some(max_val));\n    (Some(min_val), Some(max_val))\
    \ if min_val == max_val => (Some(min_val), Some(max_val));\n    (Some(min_val",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for x in lst {\n        if x < min_val {\n            min_val = x;\n      \
    \  }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n \
    \   (Some(min_val), Some(max_val))", "    let mut smallest = Some(1);\n    let\
    \ mut largest = Some(1);\n    for x in lst {\n        if x < 0 {\n           \
    \ smallest = Some(None);\n        }\n        if x > 0 {\n            largest =\
    \ Some(None);\n        }\n        if smallest == Some(None) {\n            smallest\
    \ = Some(x);\n        }\n        if largest == Some(None) {\n            largest\
    \ = Some(x);\n        }\n    }\n    (smallest, largest)", "    let mut min_val\
    \ = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (None, Some(min_val))\
    \ if min_val == std::i32::MAX => (None, Some(min_val));\n    (Some(max_val), None)\
    \ if max_val == std::i32::MIN => (Some(max_val), None);\n    (None, None)", " \
    \   let mut smallest = Some(std::i32::MAX);\n    let mut largest = Some(std::i32::MIN);\n\
    \    for x in lst {\n        if x < smallest {\n            smallest = Some(x);\n\
    \        }\n        if x > largest {\n            largest = Some(x);\n       \
    \ }\n    }\n    (smallest, largest)", "    let mut largest = None;\n    let mut\
    \ smallest = None;\n    for x in lst {\n        if x < 0 {\n            if smallest\
    \ == None || x < smallest.unwrap() {\n                smallest = Some(x);\n  \
    \          }\n        } else {\n            if largest == None || x > largest.unwrap()\
    \ {\n                largest = Some(x);\n            }\n        }\n    }\n   \
    \ (largest, smallest)", "    let mut min_val = std::i32::MAX;\n    let mut max_val\
    \ = std::i32::MIN;\n    for x in lst {\n        if x < min_val {\n           \
    \ min_val = x;\n        }\n        if x > max_val {\n            max_val = x;\n\
    \        }\n    }\n    (None, Some(min_val)) if min_val == std::i32::MAX => (None,\
    \ None)\n    (None, Some(max_val)) if max_val == std::i32::MIN => (None, None)\n\
    \    (Some(min_val), Some(max_val)) => (Some(min_val), Some(max_val))", "    let\
    \ mut min_val = i32::MAX;\n    let mut max_val = i32::MIN;\n    for elt in lst\
    \ {\n        if elt < min_val {\n            min_val = elt;\n        }\n     \
    \   if elt > max_val {\n            max_val = elt;\n        }\n    }\n    (None,\
    \ Some(min_val)) if min_val == i32::MAX => (None, Some(min_val));\n    (Some(max_val),\
    \ None) if max_val == i32::MIN => (Some(max_val), None);\n    (Some(max_val),\
    \ Some(min_val)) if min_val == max_val => (Some(max_val), Some(min_val));\n  \
    \  (None, None)", "    let mut min_val = std::i32::MAX;\n    let mut max_val =\
    \ std::i32::MIN;\n    for x in lst {\n        if x < min_val {\n            min_val\
    \ = x;\n        }\n        if x > max_val {\n            max_val = x;\n      \
    \  }\n    }\n    (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (None, Some(min_val)) if min_val == std::i32::MAX\
    \ => (None, None)\n    (None, Some(max_val)) if max_val == std::i32::MIN => (None,\
    \ None)\n    (Some(min_val), Some(max_val))", "    let mut smallest = Some(std::i32::MAX);\n\
    \    let mut largest = Some(std::i32::MIN);\n    for x in lst {\n        if x\
    \ < smallest {\n            smallest = Some(x);\n        }\n        if x > largest\
    \ {\n            largest = Some(x);\n        }\n    }\n    (largest, smallest)",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for v in lst {\n        if v < min_val {\n            min_val = v;\n      \
    \  }\n        if v > max_val {\n            max_val = v;\n        }\n    }\n \
    \   (None, Some(min_val)) if min_val == std::i32::MAX => (None, None)\n    (Some(max_val),\
    \ None) if max_val == std::i32::MIN => (None, None)\n    (None, None)", "    let\
    \ mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for\
    \ x in lst {\n        if x < min_val {\n            min_val = x;\n        }\n\
    \        if x > max_val {\n            max_val = x;\n        }\n    }\n    (None,\
    \ Some(min_val)) if min_val == std::i32::MAX => (None, None)\n    (Some(max_val),\
    \ None) if max_val == std::i32::MIN => (None, None)\n    (None, None)", "    let\
    \ mut max_val = std::i32::MAX;\n    let mut min_val = std::i32::MIN;\n    for\
    \ x in lst {\n        if x < min_val {\n            min_val = x;\n        }\n\
    \        if x > max_val {\n            max_val = x;\n        }\n    }\n    (Some(max_val),\
    \ Some(min_val))", "    let mut min_val = std::i32::MAX;\n    let mut max_val\
    \ = std::i32::MIN;\n    for x in lst {\n        if x < min_val {\n           \
    \ min_val = x;\n        }\n        if x > max_val {\n            max_val = x;\n\
    \        }\n    }\n    (Some(min_val), Some(max_val))", "    let mut min_val =\
    \ std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n \
    \       if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))",
  "    let mut smallest = Some(std::i32::MAX);\n    let mut largest = Some(std::i32::MIN);\n\
    \    for x in lst {\n        if x < smallest {\n            smallest = Some(x);\n\
    \        }\n        if x > largest {\n            largest = Some(x);\n       \
    \ }\n    }\n    (smallest, largest)", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for elt in lst {\n        if elt <\
    \ min_val {\n            min_val = elt;\n        }\n        if elt > max_val {\n\
    \            max_val = elt;\n        }\n    }\n    (None, Some(min_val)) if min_val\
    \ == std::i32::MAX => (None, None)\n    (Some(max_val), None) if max_val == std::i32::MIN\
    \ => (None, None)\n    (None, None)", "    let mut min_val = i32::MAX;\n    let\
    \ mut max_val = i32::MIN;\n    for x in lst {\n        if x < min_val {\n    \
    \        min_val = x;\n        }\n        if x > max_val {\n            max_val\
    \ = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "    let mut min_val\
    \ = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for x in lst {\n        if x < min_val {\n            min_val = x;\n      \
    \  }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n \
    \   (None, Some(min_val)) if min_val == std::i32::MAX => (None, None)\n    (Some(max_val),\
    \ None) if max_val == std::i32::MIN => (None, None)\n    (None, None)", "    let\
    \ mut min_val = i32::MAX;\n    let mut max_val = i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for x in lst {\n        if x < min_val {\n            min_val = x;\n      \
    \  }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n \
    \   (Some(min_val), Some(max_val))", "    let mut smallest = Some(std::i32::MAX);\n\
    \    let mut largest = Some(std::i32::MIN);\n    for x in lst {\n        if x\
    \ < smallest {\n            smallest = Some(x);\n        }\n        if x > largest\
    \ {\n            largest = Some(x);\n        }\n    }\n    (smallest, largest)",
  "    let mut max_val = std::i32::MAX;\n    let mut min_val = std::i32::MIN;\n  \
    \  for elt in lst {\n        if elt > max_val {\n            max_val = elt;\n\
    \        }\n        if elt < min_val {\n            min_val = elt;\n        }\n\
    \    }\n    (None, Some(min_val)) if max_val == std::i32::MAX => (None, None)\n\
    \    else if min_val == std::i32::MIN => (None, None)\n    else if max_val < min_val\
    \ => (Some(max_val), None)\n    else if max_val > min_val => (None, Some(min_val))",
  "    let mut max_negative = None;\n    let mut min_positive = None;\n    for x in\
    \ lst {\n        if x < 0 {\n            if max_negative.is_none() {\n       \
    \         max_negative = Some(x);\n            } else {\n                max_negative\
    \ = Some(max_negative.max());\n            }\n        } else {\n            if\
    \ min_positive.is_none() {\n                min_positive = Some(x);\n        \
    \    } else {\n                min_positive = Some(min_positive.min());\n    \
    \        }\n        }\n    }\n    (max_negative, min_positive)", "    let mut\
    \ smallest = isize::MAX;\n    let mut largest = isize::MIN;\n    for x in lst\
    \ {\n        if x < smallest {\n            smallest = x;\n        }\n       \
    \ if x > largest {\n            largest = x;\n        }\n    }\n    (Some(largest),\
    \ Some(smallest))", "    let mut min_val = std::i32::MAX;\n    let mut max_val\
    \ = std::i32::MIN;\n    for x in lst {\n        if x < min_val {\n           \
    \ min_val = x;\n        }\n        if x > max_val {\n            max_val = x;\n\
    \        }\n    }\n    (Some(min_val), Some(max_val))", "    let mut max_negative\
    \ = None;\n    let mut min_positive = None;\n    for x in lst {\n        if x\
    \ < 0 {\n            if max_negative.is_none() {\n                max_negative\
    \ = Some(x);\n            } else {\n                max_negative = Some(std::cmp::max(max_negative.unwrap(),\
    \ x));\n            }\n        } else {\n            if min_positive.is_none()\
    \ {\n                min_positive = Some(x);\n            } else {\n         \
    \       min_positive = Some(std::cmp::min(min_positive.unwrap(), x));\n      \
    \      }\n        }\n    }\n    (max_negative, min_positive)", "    let mut min_val\
    \ = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for x in lst {\n        if x < min_val {\n            min_val = x;\n      \
    \  }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n \
    \   (None, Some(min_val)) if min_val == std::i32::MAX => (None, None)\n    (None,\
    \ Some(max_val)) if max_val == std::i32::MIN => (None, None)\n    (Some(min_val),\
    \ Some(max_val))", "    let mut min_val = std::i32::MAX;\n    let mut max_val\
    \ = std::i32::MIN;\n    for x in lst {\n        if x < min_val {\n           \
    \ min_val = x;\n        }\n        if x > max_val {\n            max_val = x;\n\
    \        }\n    }\n    (None, Some(min_val)) if min_val == std::i32::MAX => (None,\
    \ None)\n    (Some(max_val), None) if max_val == std::i32::MIN => (None, None)\n\
    \    (None, None)", "    let mut smallest = Some(std::i32::MAX);\n    let mut\
    \ largest = Some(std::i32::MIN);\n    for x in lst {\n        if x < smallest\
    \ {\n            smallest = Some(x);\n        }\n        if x > largest {\n  \
    \          largest = Some(x);\n        }\n    }\n    (smallest, largest)", " \
    \   let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n \
    \   for x in lst {\n        if x < min_val {\n            min_val = x;\n     \
    \   }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n\
    \    (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut min_val = i32::MAX;\n    let mut max_val = i32::MIN;\n    for x in lst\
    \ {\n        if x < min_val {\n            min_val = x;\n        }\n        if\
    \ x > max_val {\n            max_val = x;\n        }\n    }\n    (None, Some(min_val))\
    \ if min_val == i32::MAX => (None, Some(min_val));\n    (None, Some(max_val))\
    \ if max_val == i32::MIN => (None, Some(max_val));\n    (Some(min_val), Some(max_val))\
    \ if min_val == max_val => (Some(min_val), Some(max_val));\n    (None, None)",
  "    let mut max_val = std::i32::MAX;\n    let mut min_val = std::i32::MIN;\n  \
    \  for x in lst {\n        if x < 0 {\n            max_val = x;\n        } else\
    \ {\n            min_val = x;\n        }\n    }\n    (None, Some(min_val)) if\
    \ min_val == std::i32::MAX => (None, Some(min_val));\n    (Some(max_val), None)\
    \ if max_val == std::i32::MIN => (Some(max_val), None);\n    (None, None)", " \
    \   let mut max_negative = None;\n    let mut min_positive = None;\n    for x\
    \ in lst {\n        if x < 0 {\n            if max_negative.is_none() {\n    \
    \            max_negative = Some(x);\n            } else {\n                max_negative\
    \ = Some(std::cmp::max(max_negative.unwrap(), x));\n            }\n        } else\
    \ {\n            if min_positive.is_none() {\n                min_positive = Some(x);\n\
    \            } else {\n                min_positive = Some(std::cmp::min(min_positive.unwrap(),\
    \ x));\n            }\n        }\n    }\n    (max_negative, min_positive)", " \
    \   let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n \
    \   for x in lst {\n        if x < min_val {\n            min_val = x;\n     \
    \   }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n\
    \    (Some(min_val), Some(max_val))", "    let mut max_negative = None;\n    let\
    \ mut min_positive = None;\n    for x in lst {\n        if x < 0 {\n         \
    \   if max_negative.is_none() {\n                max_negative = Some(x);\n   \
    \         } else {\n                max_negative = Some(std::cmp::max(max_negative.unwrap(),\
    \ x));\n            }\n        } else {\n            if min_positive.is_none()\
    \ {\n                min_positive = Some(x);\n            } else {\n         \
    \       min_positive = Some(std::cmp::min(min_positive.unwrap(), x));\n      \
    \      }\n        }\n    }\n    (max_negative, min_positive)", "    let mut min_val\
    \ = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))",
  "    let mut min_val = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n  \
    \  for x in lst {\n        if x < min_val {\n            min_val = x;\n      \
    \  }\n        if x > max_val {\n            max_val = x;\n        }\n    }\n \
    \   (None, Some(min_val)) if min_val == std::i32::MAX => (None, Some(min_val));\n\
    \    (None, Some(max_val)) if max_val == std::i32::MIN => (None, Some(max_val));\n\
    \    (Some(min_val), Some(max_val))", "    let mut min_val = std::i32::MAX;\n\
    \    let mut max_val = std::i32::MIN;\n    for x in lst {\n        if x < min_val\
    \ {\n            min_val = x;\n        }\n        if x > max_val {\n         \
    \   max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "   \
    \ let mut min_val = i32::MAX;\n    let mut max_val = i32::MIN;\n    for x in lst\
    \ {\n        if x < min_val {\n            min_val = x;\n        }\n        if\
    \ x > max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val),\
    \ Some(max_val))", "    let mut min_val = std::i32::MAX;\n    let mut max_val\
    \ = std::i32::MIN;\n    for v in lst {\n        if v < min_val {\n           \
    \ min_val = v;\n        }\n        if v > max_val {\n            max_val = v;\n\
    \        }\n    }\n    (None, Some(min_val)) if min_val == std::i32::MAX => (None,\
    \ None)\n    else if max_val == std::i32::MIN => (None, None)\n    else if min_val\
    \ == max_val => (Some(min_val), None)\n    else if min_val > max_val => (Some(min_val),\
    \ Some(max_val))\n    else if min_val < max_val => (None, Some(max_val))\n   \
    \ else if min_val == std::i32::MIN - 1 => (Some(min_val), None)\n    else if max_val\
    \ == std::i32::MAX + 1 => (None, Some(max_val))\n    else if min_val == max_val\
    \ - 1 => (Some(min_val), Some(max_val))\n    else if min_val == max_val + 1 =>\
    \ (Some(min_val), Some(max_val))\n    else if min_val < max_val - 1 => (Some(min_val),\
    \ Some(max_val))\n    else if min_val > max_val + 1 => (Some(min_val), Some(max_val))\n\
    \    else if min_val == std::i32::MIN - 2 => (Some(min_val), Some(max_val))\n\
    \    else if max_val == std::i32::MAX + 2 => (Some(min_val), Some(max_val))\n\
    \    else if min_val == max_val - 2 => (Some(min_val), Some(max_val))\n    else\
    \ if min_val == max_val + 2 => (Some(min_val), Some(max_val))\n    else if min_val\
    \ < max_val - 2 => (Some(min_val), Some(max_val))\n    else if min_val > max_val\
    \ + 2 => (Some(min_val), Some(max_val))\n    else if min_val == std::i32::MIN\
    \ - 3 => (Some(min_val), Some(max_val))\n    else if max_val == std::i32::MAX\
    \ + 3 => (Some(min_val), Some(max_val))\n    else if min_val == max_val - 3 =>\
    \ (Some(min_val), Some(max_val))\n    else if min_val == max_val + 3 => (Some(min_val),\
    \ Some(max_val))\n    else if min_val < max_val - 3 => (Some(min_val), Some(max_val))\n\
    \    else if min_val > max_val + 3 => (", "    let mut min_val = i32::MAX;\n \
    \   let mut max_val = i32::MIN;\n    for x in lst {\n        if x < min_val {\n\
    \            min_val = x;\n        }\n        if x > max_val {\n            max_val\
    \ = x;\n        }\n    }\n    (Some(min_val), Some(max_val))", "    let mut min_val\
    \ = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (None, Some(min_val))\
    \ if min_val == std::i32::MAX => (None, Some(min_val));\n    (None, Some(max_val))\
    \ if max_val == std::i32::MIN => (None, Some(max_val));\n    (Some(min_val), Some(max_val))\
    \ if min_val == max_val => (Some(min_val), Some(max_val));\n    (Some(min_val),\
    \ None) if min_val == std::i32::MIN => (Some(min_val), None);\n    (None, Some(max_val))\
    \ if max_val == std::i32::MAX => (None, Some(max_val));", "    let mut min_val\
    \ = std::i32::MAX;\n    let mut max_val = std::i32::MIN;\n    for x in lst {\n\
    \        if x < min_val {\n            min_val = x;\n        }\n        if x >\
    \ max_val {\n            max_val = x;\n        }\n    }\n    (Some(min_val), Some(max_val))",
  "    let mut smallest = Some(std::i32::MAX);\n    let mut largest = Some(std::i32::MIN);\n\
    \    for x in lst {\n        if x < smallest {\n            smallest = Some(x);\n\
    \        }\n        if x > largest {\n            largest = Some(x);\n       \
    \ }\n    }\n    (smallest, largest)"]
stop_tokens:
- "\n}"
